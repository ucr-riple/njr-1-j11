Compiled from "Arrow.java"
class AGraphics.Arrow {
  int dx;
  int dy;
  int[] xy;
  public AGraphics.Arrow();
  public AGraphics.Arrow(int[], int, int);
  public int getDX();
  public int getDY();
  public int[] getXY();
  public int side(int[]);
  public double slope();
  public double hypotenuse();
  public double acosine();
  public double asine();
  public double cosine();
  public double sine();
}
Compiled from "Bezier.java"
public class AGraphics.Bezier extends AGraphics.Kata {
  public AGraphics.Bezier(int[][], int);
  public AGraphics.Bezier(int[], double, int[], double, int);
  public AGraphics.Bezier(AGraphics.Arrow, AGraphics.Arrow, double, int);
  public void map();
  public int numPoints();
  public double[] closestPoint(int, int);
  public void setPoints(int[][]);
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int[][] getPoints();
  public int[] getPoint(int);
  public int[] startPoint();
  public int[] endPoint();
  public AGraphics.Arrow startArrow();
  public AGraphics.Arrow endArrow();
  public int[] center();
  public void fractalize(double[], double);
  public void fractalize(double[], double, int, int);
  public static java.awt.Polygon BCombo(AGraphics.Bezier[]);
}
Compiled from "Imagery.java"
public class AGraphics.Imagery {
  public AGraphics.Imagery();
  public static void drawArc(java.awt.Graphics, int, int, int, int, int);
  public static void drawArc(java.awt.Graphics, int, int, int, int, int, boolean, boolean);
  public static void drawSTree(java.awt.Graphics, int, int, int, java.awt.Color);
  public static void drawCTree(java.awt.Graphics, int, int, int, boolean);
  public static void drawCTreeFromTopRight(java.awt.Graphics, int, int, int);
  public static void drawBush(java.awt.Graphics, int, int, int);
  public static void drawEye(java.awt.Graphics, int, int, int);
  public static void drawStar(java.awt.Graphics, int, int, int);
  public static void drawMemSign(java.awt.Graphics, int, int, int);
  public static void drawInfoSign(java.awt.Graphics, int, int, int);
  public static void drawFlag(java.awt.Graphics, int, int, int);
  public static void drawStickFigure(java.awt.Graphics, int, int, int);
  public static void drawMilletSign(java.awt.Graphics, int, int, int);
  public static void drawPyramid(java.awt.Graphics, int, int, int);
  static {};
}
Compiled from "Kata.java"
public class AGraphics.Kata {
  int[][] XY;
  public AGraphics.Kata();
  public int[][] getXY();
  public int[] getX();
  public int[] getY();
  public int getX(int);
  public int getY(int);
  public int[] getStart();
  public int[] getEnd();
  public int[] startPoint();
  public int[] endPoint();
  public int[][] getPoints();
  public int[] getPoint(int);
  public AGraphics.Arrow startArrow();
  public AGraphics.Arrow endArrow();
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int numPoints();
  public int length();
  public void offset(int, int);
  public void squeezeXY(double, int);
  public void flipXY(int);
  public int[] center();
  public double[] closestPoint(int, int);
}
Compiled from "ArrayUtils.java"
public class AMath.ArrayUtils {
  public AMath.ArrayUtils();
  public static <T> T randomIndexOf(T[]);
  public static <T> T[] orderByComparator(java.lang.Class<T>, T[], java.util.Comparator<T>);
  public static <T> T[] shuffle(java.lang.Class<T>, T[]);
  public static final <T> int indexOf(T[], java.lang.Object);
  public static final <T> int lastIndexOf(T[], java.lang.Object);
  public static final <T> T[] createArray(java.lang.Class<T>, int);
  public static final <T> T[] cat(T...);
  public static final <T> T[] append(T[], T);
  public static final <T> T[] appendItem(java.lang.Class<T>, T[], T);
  public static final <T> T[] append(java.lang.Class<T>, T[], T...);
  public static final <T> T[] prepend(T[], T);
  public static final <T> T[] prepend(java.lang.Class<T>, T[], T);
  public static final <T> T[] remove(T[], int);
  public static final <T> T[] remove(java.lang.Class<T>, T[], int);
  public static final <T> T[] removeFirst(T[], T, boolean);
  public static final <T> int findAll(T[], java.util.Collection<?>, boolean[]);
  public static final boolean cyclicEqual(int[], int[]);
  public static final int[] reverseInPlace(int[]);
  public static final boolean equal(int[], int[]);
  public static final <T> boolean shallowEqual(T[], T[]);
  public static final <T> boolean deepEqual(T[], T[]);
  public static final int[] ordinals(int);
  public static final int median(int[]);
  public static int findNth(int[], int);
  public static <T> T first(T[]);
  public static <T> T last(T[]);
  public static long first(long[], long);
  public static long last(long[], long);
  public static <T> boolean isEmpty(T[]);
  public static <T> T[] insertAt(T[], int, T);
  public static <T> boolean equalShallow(T[], T[]);
  public static <T> boolean equalDeep(T[], T[]);
}
Compiled from "Calc.java"
public class AMath.Calc {
  public AMath.Calc();
  public static void p(java.lang.String);
  public static void p(java.lang.Object);
  public static short bitPart(short, int, int);
  public static short setBitPart(short, int, int, int);
  public static double roundy(double, int);
  public static int roundy(double);
  public static int AtoBbyRatio(int, int, int, int);
  public static int AtoBbyRatio(double, double, int, int);
  public static java.awt.Color AtoBColor(java.awt.Color, java.awt.Color, double);
  public static int sum(byte[]);
  public static int sum(int[]);
  public static double max(double[]);
  public static int max(int[]);
  public static double min(double[]);
  public static int min(int[]);
  public static int oneorzero(int, int);
  public static int bound(int, int, int);
  public static double bound(double, double, double);
  public static int[] bubbleSort(int[]);
  public static int[] cropArray(int[], int, int);
  public static int[][] cropArray(int[][], int, int);
  public static byte[] booleize(byte[]);
  public static double distance(int[], int[]);
  public static boolean skillcalc(int, int);
  public static int skillpct(int, int);
  public static boolean pPercent(int);
  public static boolean pMem(int);
  public static int iPercent(int);
  public static byte pFraction(byte, byte);
  public static boolean pFraction(int, int);
  public static boolean discover(int);
  public static byte squeezeByte(byte, byte, byte);
  public static int squeezeByte(byte, int, int);
  public static int intBound(double);
  public static int randBetween(int, int);
  public static byte[] allto(byte, int);
  public static int[] allto(int, int);
  public static int roundSign(double);
  public static int sgn(int);
  public static byte byteUp(byte, byte);
  public static byte byteDown(byte, byte);
  public static byte byteDown1(byte, byte);
  public static int findLessThan(int, int[]);
  public static int wheelOfFortune(int[]);
  public static byte wheelOfFortune(byte[]);
  public static byte[] wheelOfFortune(byte[], byte);
  public static void printArray(byte[]);
  public static void printArrayH(byte[]);
  public static void printArray(int[]);
  public static void printArrayH(int[]);
  public static void printArray(byte[][]);
  public static void printArray(java.lang.String[][]);
  public static void printArray(int[][]);
  public static byte[][] transpose(byte[][]);
  public static int[][] transpose(int[][]);
  public static java.lang.String[][] transpose(java.lang.String[][]);
  public static int[] normalOrder(int);
  public static int[] randomOrder(int);
  public static void shuffle(int[]);
  public static void shuffle(int[], int);
  public static <T> T oneOf(T[]);
  public static int[] combineArrays(int[], int[]);
  public static boolean[] appendToArray(boolean, boolean[]);
  public static int[] between(int[], int[], int, int);
  public static int[] offsetArray(int[], int);
  public static double[] fractal(double, int);
  public static int[] copyArray(int[]);
  public static java.awt.Color toGrayscale(java.awt.Color);
  public static final boolean equal(java.lang.Object, java.lang.Object);
  public static <K, V> V putGet(java.util.Map<K, V>, K, V);
}
Compiled from "Calc.java"
public interface AMath.Calc$BooleanCheck {
  public abstract boolean check();
}
Compiled from "Calc.java"
public interface AMath.Calc$Conditional<T, U> {
  public abstract boolean isTrue(T, U);
}
Compiled from "Calc.java"
public class AMath.Calc$DoubleWrapper {
  public AMath.Calc$DoubleWrapper();
  public void setValue(double);
  public double getValue();
  public void alterValue(double);
}
Compiled from "Calc.java"
public interface AMath.Calc$Function<X, Y> {
  public abstract Y apply(X);
}
Compiled from "Calc.java"
public interface AMath.Calc$Listener {
  public abstract void call(java.lang.Object);
}
Compiled from "Calc.java"
public abstract class AMath.Calc$MousePanel extends javax.swing.JPanel implements java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  public AMath.Calc$MousePanel();
  protected void addMouseListeners();
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
}
Compiled from "Calc.java"
public class AMath.Calc$ThreeObjects<K, J, L> extends AMath.Calc$TwoObjects<K, J> {
  final L l;
  public AMath.Calc$ThreeObjects(K, J, L);
  public L get3rd();
}
Compiled from "Calc.java"
public interface AMath.Calc$Transformer<T, U> {
  public abstract U transform(T);
}
Compiled from "Calc.java"
public class AMath.Calc$TwoObjects<K, J> {
  final K k;
  final J j;
  public AMath.Calc$TwoObjects(K, J);
  public K get1st();
  public J get2nd();
}
Compiled from "TestCombat.java"
public class AMath.TestCombat extends AMath.Testing {
  public AMath.TestCombat();
  public static void doAllCombatTests();
  static {};
}
Compiled from "TestContracts.java"
public class AMath.TestContracts extends AMath.Testing {
  public AMath.TestContracts();
  public static void doAllContractTests();
}
Compiled from "TestKnowledge.java"
public class AMath.TestKnowledge extends AMath.Testing {
  public AMath.TestKnowledge();
  public static void testWealthKnowledge();
}
Compiled from "TestMarkets.java"
public class AMath.TestMarkets extends AMath.Testing {
  public AMath.TestMarkets();
  public static void workInputManagement();
  public static void normalMarketFunctions();
  public static void normalMarketFunctions(Shirage.Shire, Sentiens.Clan, Sentiens.Clan);
  public static void testSellG();
  public static void testPlaceBidForInputChangeQuestGetFilled(Sentiens.Clan, Sentiens.Clan);
  public static void produceOne(Sentiens.Clan, int, int, int, int);
  public static void testLogics();
}
Compiled from "TestMarkets.java"
final class AMath.TestMarkets$1 implements AMath.Calc$BooleanCheck {
  final Sentiens.Clan val$clan;
  AMath.TestMarkets$1(Sentiens.Clan);
  public boolean check();
}
Compiled from "TestMarkets.java"
final class AMath.TestMarkets$2 implements AMath.Calc$BooleanCheck {
  final Sentiens.Clan val$clan;
  AMath.TestMarkets$2(Sentiens.Clan);
  public boolean check();
}
Compiled from "TestMarkets.java"
final class AMath.TestMarkets$3 implements AMath.Calc$BooleanCheck {
  final Sentiens.Clan val$clan;
  AMath.TestMarkets$3(Sentiens.Clan);
  public boolean check();
}
Compiled from "TestRealm.java"
public class AMath.TestRealm extends Game.Realm {
  public AMath.TestRealm(int, int, int);
  protected void generateShires(int, int);
  Shirage.Shire getSomeNeighborOf(Shirage.Shire);
}
Compiled from "TestRomance.java"
public class AMath.TestRomance extends AMath.Testing {
  public AMath.TestRomance();
  public static void doAllRomanceTests();
}
Compiled from "TestShire.java"
public class AMath.TestShire extends Shirage.Shire {
  public AMath.TestShire(int, int, AMath.TestRealm);
  public Shirage.Shire getSomeNeighbor();
}
Compiled from "TestTrading.java"
public class AMath.TestTrading extends AMath.Testing {
  public AMath.TestTrading();
  public static void doTradingTests();
}
Compiled from "TestTrading.java"
final class AMath.TestTrading$1 implements AMath.Calc$BooleanCheck {
  final Shirage.Shire val$s1;
  AMath.TestTrading$1(Shirage.Shire);
  public boolean check();
}
Compiled from "Testing.java"
public class AMath.Testing {
  protected static Game.Realm testRealm;
  protected static boolean softFailed;
  protected static int softFails;
  protected static int maxSoftFails;
  public AMath.Testing();
  public static void main(java.lang.String[]);
  public static void reset();
  public static void doAllTests();
  protected static Sentiens.Clan setClanMemMax(Sentiens.Clan, Defs.M_);
  protected static Sentiens.Clan setClanMemMin(Sentiens.Clan, Defs.M_);
  protected static Sentiens.Clan setClanMemMax(Sentiens.Clan, Defs.P_);
  protected static Sentiens.Clan setClanMemMin(Sentiens.Clan, Defs.P_);
  protected static void affirmSoft(boolean);
  protected static void affirm(boolean);
  protected static void affirm(boolean, java.lang.String);
  protected static void filterCensus(Shirage.Shire, Sentiens.Clan...);
  protected static void restoreFilteredCensuses();
  protected static void pursueUntilDone(Sentiens.Clan);
  protected static void pursueUntilDoneOLD(Sentiens.Clan);
  protected static void doNPursue(Sentiens.Clan, int, boolean);
  protected static void doPursueUntil(Sentiens.Clan, boolean, AMath.Calc$BooleanCheck);
  public static void breeding();
  public static void ideologyBasicFunctions();
  public static void ideologyInteractions();
  protected static void makePuritan(Sentiens.Clan, Ideology.Value, Ideology.Value);
  public static void naming();
  static {};
}
Compiled from "NewGame.java"
public class AutonomousGoblinParadise.NewGame {
  public AutonomousGoblinParadise.NewGame();
  public static void main(java.lang.String[]);
}
Compiled from "AbstractInputConsole.java"
public abstract class Avatar.AbstractInputConsole extends javax.swing.JTextField {
  public Avatar.AbstractInputConsole();
  public Avatar.AbstractInputConsole(java.lang.String);
  public boolean isFocusable();
  public abstract void doCommand(java.lang.String);
}
Compiled from "AbstractInputConsole.java"
class Avatar.AbstractInputConsole$1 implements java.awt.event.KeyListener {
  final Avatar.AbstractInputConsole this$0;
  Avatar.AbstractInputConsole$1(Avatar.AbstractInputConsole);
  public void keyTyped(java.awt.event.KeyEvent);
  public void keyReleased(java.awt.event.KeyEvent);
  public void keyPressed(java.awt.event.KeyEvent);
}
Compiled from "AvatarConsole.java"
public class Avatar.AvatarConsole extends GUI.APanel implements java.awt.event.ActionListener {
  public final java.util.TreeSet choices;
  public static Avatar.AvatarConsole create(GUI.GUImain);
  public void setAvatar(Sentiens.Clan);
  public Sentiens.Clan getAvatar();
  public int getDesWid();
  public int getDesHgt();
  public void showChoices(java.lang.String, Sentiens.Clan, java.lang.Object[], Avatar.SubjectiveType, AMath.Calc$Listener, AMath.Calc$Transformer);
  public void showChoices(java.lang.String, Sentiens.Clan, java.lang.Object[], Avatar.SubjectiveType, AMath.Calc$Listener);
  public void showChoices(java.lang.String, Sentiens.Clan, java.util.Collection, Avatar.SubjectiveType, AMath.Calc$Listener, AMath.Calc$Transformer);
  public void showQuery(java.lang.String, java.lang.String, AMath.Calc$Listener);
  public Avatar.SubjectiveComparator getComparator();
  public void avatarPursue();
  public void actionPerformed(java.awt.event.ActionEvent);
  public void showPlayButton();
  public void showPauseButton();
  static Sentiens.Clan access$000(Avatar.AvatarConsole);
}
Compiled from "AvatarConsole.java"
class Avatar.AvatarConsole$1 implements AMath.Calc$Listener {
  final Avatar.AvatarConsole this$0;
  Avatar.AvatarConsole$1(Avatar.AvatarConsole);
  public void call(java.lang.Object);
}
Compiled from "AvatarConsole.java"
class Avatar.AvatarConsole$2 implements AMath.Calc$Transformer<Ideology.Value, java.lang.String> {
  final Avatar.AvatarConsole this$0;
  Avatar.AvatarConsole$2(Avatar.AvatarConsole);
  public java.lang.String transform(Ideology.Value);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "AvatarConsole.java"
class Avatar.AvatarConsole$3 {
  static final int[] $SwitchMap$Avatar$SubjectiveType;
  static {};
}
Compiled from "InputConsole.java"
public class Avatar.InputConsole extends Avatar.AbstractInputConsole {
  public Avatar.InputConsole();
  public void doCommand(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$1 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$1(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$2 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$2(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$3 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$3(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$4 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$4(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$5 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$5(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$6 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$6(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
class Avatar.InputConsole$7 implements Avatar.InputConsole$InputThing {
  final Avatar.InputConsole this$0;
  Avatar.InputConsole$7(Avatar.InputConsole);
  public void doit(java.lang.String);
}
Compiled from "InputConsole.java"
interface Avatar.InputConsole$InputThing {
  public abstract void doit(java.lang.String);
}
Compiled from "ShireStatsCalcer.java"
public class Avatar.ShireStatsCalcer {
  public static final java.lang.String PRODUCTIVITY;
  public static final java.lang.String POPULATION;
  public static final java.lang.String LAST_PX;
  public static final java.lang.String NUM_ASSETS;
  public Avatar.ShireStatsCalcer();
  public static void calcProductivity();
  public static void calcPopulation();
  public static void calcMarket(java.lang.String);
  public static void calcWealth(java.lang.String);
  protected static Sentiens.Clan avatar();
}
Compiled from "SubjectiveComparator.java"
public class Avatar.SubjectiveComparator implements java.util.Comparator {
  public final java.util.Comparator<Game.Act> ACT_PROFIT_ORDER;
  public final java.util.Comparator<Sentiens.Clan> RESPECT_ORDER;
  public final java.util.Comparator<Ideology.Value> VALUE_ORDER;
  public final java.util.Comparator<Questing.Quest$GradedQuest> QUEST_ORDER;
  public final java.util.Comparator<java.lang.Object> NO_ORDER;
  public Avatar.SubjectiveComparator();
  public void setPOV(Sentiens.Clan);
  public void setComparator(java.util.Comparator);
  public int compare(java.lang.Object, java.lang.Object);
  static Sentiens.Clan access$000(Avatar.SubjectiveComparator);
}
Compiled from "SubjectiveComparator.java"
class Avatar.SubjectiveComparator$1 implements java.util.Comparator<Game.Act> {
  final Avatar.SubjectiveComparator this$0;
  Avatar.SubjectiveComparator$1(Avatar.SubjectiveComparator);
  public int compare(Game.Act, Game.Act);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SubjectiveComparator.java"
class Avatar.SubjectiveComparator$2 implements java.util.Comparator<Sentiens.Clan> {
  final Avatar.SubjectiveComparator this$0;
  Avatar.SubjectiveComparator$2(Avatar.SubjectiveComparator);
  public int compare(Sentiens.Clan, Sentiens.Clan);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SubjectiveComparator.java"
class Avatar.SubjectiveComparator$3 implements java.util.Comparator<Ideology.Value> {
  final Avatar.SubjectiveComparator this$0;
  Avatar.SubjectiveComparator$3(Avatar.SubjectiveComparator);
  public int compare(Ideology.Value, Ideology.Value);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SubjectiveComparator.java"
class Avatar.SubjectiveComparator$4 implements java.util.Comparator<Questing.Quest$GradedQuest> {
  final Avatar.SubjectiveComparator this$0;
  Avatar.SubjectiveComparator$4(Avatar.SubjectiveComparator);
  public int compare(Questing.Quest$GradedQuest, Questing.Quest$GradedQuest);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SubjectiveComparator.java"
class Avatar.SubjectiveComparator$5 implements java.util.Comparator<java.lang.Object> {
  final Avatar.SubjectiveComparator this$0;
  Avatar.SubjectiveComparator$5(Avatar.SubjectiveComparator);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SubjectiveType.java"
public final class Avatar.SubjectiveType extends java.lang.Enum<Avatar.SubjectiveType> {
  public static final Avatar.SubjectiveType ACT_PROFIT_ORDER;
  public static final Avatar.SubjectiveType RESPECT_ORDER;
  public static final Avatar.SubjectiveType VALUE_ORDER;
  public static final Avatar.SubjectiveType QUEST_ORDER;
  public static final Avatar.SubjectiveType NO_ORDER;
  public static Avatar.SubjectiveType[] values();
  public static Avatar.SubjectiveType valueOf(java.lang.String);
  static {};
}
Compiled from "F_.java"
public final class Defs.F_ extends java.lang.Enum<Defs.F_> {
  public static final Defs.F_ NOSERX;
  public static final Defs.F_ NOSERY;
  public static final Defs.F_ NOSELX;
  public static final Defs.F_ NOSELY;
  public static final Defs.F_ NOSELW;
  public static final Defs.F_ NOSEMW;
  public static final Defs.F_ NOSERW;
  public static final Defs.F_ MOUTHBX;
  public static final Defs.F_ MOUTHBY;
  public static final Defs.F_ MOUTHP;
  public static final Defs.F_ MOUTHC;
  public static final Defs.F_ MOUTHLH;
  public static final Defs.F_ MOUTHLW;
  public static final Defs.F_ MOUTHJH;
  public static final Defs.F_ MOUTHJW;
  public static final Defs.F_ EYERP;
  public static final Defs.F_ EYELP;
  public static final Defs.F_ EYERW;
  public static final Defs.F_ EYELW;
  public static final Defs.F_ EYEHGT;
  public static final Defs.F_ EYESPRD;
  public static final Defs.F_ EARH;
  public static final Defs.F_ EARW;
  public static final Defs.F_ EART;
  public static final Defs.F_ EARD;
  public static final Defs.F_ SKINR;
  public static final Defs.F_ SKING;
  public static final Defs.F_ SKINB;
  public static final Defs.F_ HAIRL;
  public static final Defs.F_ HAIRC;
  public static final Defs.F_ HAIRW;
  public static final Defs.F_ HAIRR;
  public static final Defs.F_ HAIRG;
  public static final Defs.F_ HAIRB;
  public static final Defs.F_ HAIRX;
  public static final Defs.F_ HAIRS;
  public static Defs.F_[] values();
  public static Defs.F_ valueOf(java.lang.String);
  static {};
}
Compiled from "G_.java"
public final class Defs.G_ extends java.lang.Enum<Defs.G_> {
  public static final Defs.G_ NOTHING;
  public static final Defs.G_ MILLET;
  public static final Defs.G_ MEAT;
  public static final Defs.G_ LAND;
  public static final Defs.G_ BOVAD;
  public static final Defs.G_ DONKEY;
  public static final Defs.G_ LOBODONKEY;
  public static final Defs.G_ JEWELRY;
  public static final Defs.G_ ARMOR;
  public static final Defs.G_ SWORD;
  public static final Defs.G_ MACE;
  public static final Defs.G_ BOW;
  public static final Defs.G_ GUN;
  public static final Defs.G_ XWEAPON;
  public static final Defs.G_ CAPTIVE;
  public static final Defs.G_ RENTLAND;
  public static final Defs.G_ RENTANIMAL;
  public static final Defs.G_ TIMBER;
  public static final Defs.G_ STONE;
  public static final Defs.G_ IRON;
  public static final Defs.G_ SILVER;
  public static final Defs.G_ POOP;
  public static final Defs.G_ CONSTR;
  public static final Defs.G_ WCONSTR;
  public static final Defs.G_ SCONSTR;
  public static Defs.G_[] values();
  public static Defs.G_ valueOf(java.lang.String);
  static {};
}
Compiled from "GlobalParameters.java"
public class Defs.GlobalParameters {
  public static final boolean SHOW_WEAPONS;
  public static final boolean SHOW_CREED;
  public static final boolean DRAW_EARING;
  public Defs.GlobalParameters();
}
Compiled from "K_.java"
public final class Defs.K_ extends java.lang.Enum<Defs.K_> implements Questing.Knowledge.KnowledgeType {
  public static final Defs.K_ JOBS;
  public static final Defs.K_ TRADEMEMS;
  public static final Defs.K_ POPVALS;
  public static final Defs.K_ STRATEGYMEMS;
  public static final Defs.K_ TACTICSMEMS;
  public static final Defs.K_ WEAPONMEMS;
  public static final Defs.K_ NADA;
  public static Defs.K_[] values();
  public static Defs.K_ valueOf(java.lang.String);
  static {};
}
Compiled from "M_.java"
public final class Defs.M_ extends java.lang.Enum<Defs.M_> {
  public static final Defs.M_ NULL;
  public static final Defs.M_ PRAYSTYLE;
  public static final Defs.M_ BIDASKSPRD;
  public static final Defs.M_ STMOMENTUM;
  public static final Defs.M_ LTMOMENTUM;
  public static final Defs.M_ RISKPREMIUM;
  public static final Defs.M_ INVORTRD;
  public static final Defs.M_ TECHNICAL;
  public static final Defs.M_ FLOW;
  public static final Defs.M_ CONST1;
  public static final Defs.M_ CONST2;
  public static final Defs.M_ CONST3;
  public static final Defs.M_ CONST4;
  public static final Defs.M_ CONST5;
  public static final Defs.M_ CONST6;
  public static final Defs.M_ ARM;
  public static final Defs.M_ MIS;
  public static final Defs.M_ PRC;
  public static final Defs.M_ CAV;
  public static final Defs.M_ PYRAMIDALITY;
  public static final Defs.M_ LEADERSHIP;
  public static final Defs.M_ MERITOCRACITY;
  public static final Defs.M_ INDIVIDUALITY;
  public static final Defs.M_ EMPIRICISM;
  public static final Defs.M_ JOVIALITY;
  public static final Defs.M_ TEMPER;
  public static final Defs.M_ ROMANTICNESS;
  public static final Defs.M_ PROFANITY;
  public static final Defs.M_ RESPENV;
  public static final Defs.M_ BLOODLUST;
  public static final Defs.M_ WANDERLUST;
  public static final Defs.M_ MADNESS;
  public static final Defs.M_ HUMILITY;
  public static final Defs.M_ GREED;
  public static final Defs.M_ VANITY;
  public static final Defs.M_ EXTROVERSION;
  public static final Defs.M_ PATIENCE;
  public static final Defs.M_ PARANOIA;
  public static final Defs.M_ STRICTNESS;
  public static final Defs.M_ DOGMA;
  public static final Defs.M_ SUPERST;
  public static final Defs.M_ CONFIDENCE;
  public static final Defs.M_ MIERTE;
  public static final Defs.M_ NOTHING_IMPORTANT;
  public static final Defs.M_ OCD;
  public static final Defs.M_ PROMISCUITY;
  public static Defs.M_[] values();
  public static Defs.M_ valueOf(java.lang.String);
  public static int length();
  static {};
}
Compiled from "Misc.java"
public interface Defs.Misc {
  public static final java.lang.String RET;
  public static final int E;
  public static final boolean FEMALE;
  public static final boolean MALE;
  public static final int DE;
  public static final int RX;
  public static final int HL;
  public static final int NS;
  public static final int AG;
  public static final int SZ;
  public static final int WL;
  public static final int SH;
  public static final int SA;
  public static final int WP;
  public static final int MP;
  public static final int HS;
  public static final int FH;
  public static final int BM;
  public static final int RT;
  public static final int JB;
  public static final int SC;
  public static final int LH;
  public static final int EY;
  public static final int SS;
  public static final int TY;
  public static final int POWER;
  public static final int PLEASURE;
  public static final int HONOR;
  public static final int WISDOM;
  public static final int BREED;
  public static final int FINDMATE;
  public static final int BUILDWEALTH;
  public static final int COMPETE4MATE;
  public static final int IDLE;
  public static final int HUMANSAC;
  public static final int ANIMALSAC;
  public static final int HEALSICK;
  public static final int FEEDPOOR;
  public static final int CONQUER;
  public static final int RAISEARMY;
  public static final int ATTACK;
  public static final int RECRUIT;
  public static final int FINDALLY;
  public static final int FINDMINION;
  public static final int PREACH;
  public static final int WORK;
  public static final int DREAMJOB;
  public static final int PDJOB;
  public static final int FINDWEAKLING;
  public static final int TERRORIZE;
  public static final int TRADE;
  public static final int FINDNEWJOB;
  public static final int BUILDPOPULARITY;
  public static final int TARGET;
  public static final int JOB;
  public static final int TIMELEFT;
  public static final int STAGE;
  public static final int PREST;
  public static final int COURTSLEFT;
  public static final int POV;
  public static final int PATRON;
  public static final int numAssets;
  public static final int numGoods;
  public static final int millet;
  public static final int meat;
  public static final int land;
  public static final int bovad;
  public static final int donkey;
  public static final int lobodonkey;
  public static final int jewelry;
  public static final int armor;
  public static final int sword;
  public static final int mace;
  public static final int bow;
  public static final int gun;
  public static final int xweapon;
  public static final int captive;
  public static final int rentland;
  public static final int rentanimal;
  public static final int timber;
  public static final int stone;
  public static final int iron;
  public static final int silver;
  public static final int poop;
  public static final int constr;
  public static final int wconstr;
  public static final int sconstr;
  static {};
}
Compiled from "P_.java"
public final class Defs.P_ extends java.lang.Enum<Defs.P_> {
  public static final Defs.P_ SANCP;
  public static final Defs.P_ STRENGTH;
  public static final Defs.P_ MARKSMANSHIP;
  public static final Defs.P_ MASONRY;
  public static final Defs.P_ ARTISTRY;
  public static final Defs.P_ PROSE;
  public static final Defs.P_ CARPENTRY;
  public static final Defs.P_ SMITHING;
  public static final Defs.P_ LOBOTOMY;
  public static final Defs.P_ TRADEP;
  public static final Defs.P_ INVESTP;
  public static final Defs.P_ ARITHMETIC;
  public static final Defs.P_ STRATEGYP;
  public static final Defs.P_ TACTICSP;
  public static final Defs.P_ COMBAT;
  public static final Defs.P_ DANCE;
  public static final Defs.P_ ARMORYP;
  public static final Defs.P_ WPREDICTION;
  public static final Defs.P_ MPREDICTION;
  public static final Defs.P_ PREACHP;
  public static final Defs.P_ RSPCP;
  public static final Defs.P_ TYRRP;
  public static final Defs.P_ BATTLEP;
  public static final Defs.P_ CONFP;
  public static final Defs.P_ SEXP;
  public static final Defs.P_ HEALP;
  public static Defs.P_[] values();
  public static Defs.P_ valueOf(java.lang.String);
  public static int length();
  static {};
}
Compiled from "Q_.java"
public final class Defs.Q_ extends java.lang.Enum<Defs.Q_> {
  public static final Defs.Q_ NOTHING;
  public static final Defs.Q_ BREED;
  public static final Defs.Q_ FINDMATE;
  public static final Defs.Q_ BUILDWEALTH;
  public static final Defs.Q_ COMPETE4MATE;
  public static final Defs.Q_ IDLE;
  public static final Defs.Q_ HUMANSAC;
  public static final Defs.Q_ ANIMALSAC;
  public static final Defs.Q_ HEALSICK;
  public static final Defs.Q_ FEEDPOOR;
  public static final Defs.Q_ CONQUER;
  public static final Defs.Q_ RAISEARMY;
  public static final Defs.Q_ ATTACK;
  public static final Defs.Q_ RECRUIT;
  public static final Defs.Q_ FINDALLY;
  public static final Defs.Q_ FINDMINION;
  public static final Defs.Q_ PREACH;
  public static final Defs.Q_ WORK;
  public static final Defs.Q_ TRAIN;
  public static final Defs.Q_ PDJOB;
  public static final Defs.Q_ FINDWEAKLING;
  public static final Defs.Q_ TERRORIZE;
  public static final Defs.Q_ FINDSOMEONEWITH;
  public static final Defs.Q_ LOYALTYQUEST;
  public static final Defs.Q_ SPLENDORQUEST;
  public static final Defs.Q_ FAITHQUEST;
  public static final Defs.Q_ LEGACYQUEST;
  public static final Defs.Q_ KNOWLEDGEQUEST;
  public static final Defs.Q_ PICKFIGHT;
  public static final Defs.Q_ PERSECUTEADULTERER;
  public static final Defs.Q_ PERSECUTEHERETIC;
  public static final Defs.Q_ PERSECUTEINFIDEL;
  public static final Defs.Q_ PERSECUTEFOREIGNER;
  public static final Defs.Q_ CREEDQUEST;
  public static final Defs.Q_ TRADE;
  public static final Defs.Q_ FINDNEWJOB;
  public static final Defs.Q_ BUILDPOPULARITY;
  public static Defs.Q_[] values();
  public static Defs.Q_ valueOf(java.lang.String);
  static {};
}
Compiled from "SK_.java"
public final class Defs.SK_ extends java.lang.Enum<Defs.SK_> implements Questing.Knowledge.KnowledgeType {
  public static final Defs.SK_ WEALTHYSHIRES;
  public static final Defs.SK_ POPULOUSSHIRES;
  public static final Defs.SK_ GRANDIOSESHIRES;
  public static final Defs.SK_ SEXYSHIRES;
  public static final Defs.SK_ THREATENINGSHIRES;
  public static final Defs.SK_ LEARNEDSHIRES;
  public static final Defs.SK_ SKILLYSHIRES;
  public static final Defs.SK_ HOLYSHIRES;
  public static final Defs.SK_ RIGHTEOUSSHIRES;
  public static final Defs.SK_ FRIENDLYSHIRES;
  public static final Defs.SK_ FAMOUSSHIRES;
  public static java.util.Map<Ideology.Value, Defs.SK_> valToSK;
  public static java.util.Map<Defs.SK_, Ideology.Value> skToVal;
  public static Defs.SK_[] values();
  public static Defs.SK_ valueOf(java.lang.String);
  static {};
}
Compiled from "BehName.java"
public class Descriptions.BehName {
  public Descriptions.BehName();
  public static java.lang.String describeMem(Sentiens.Clan, Defs.M_);
}
Compiled from "BehName.java"
class Descriptions.BehName$1 {
  static final int[] $SwitchMap$Defs$M_;
  static {};
}
Compiled from "Comparative.java"
public class Descriptions.Comparative {
  public Descriptions.Comparative();
  public static java.lang.String superior(Ideology.Value);
}
Compiled from "Depiction.java"
public class Descriptions.Depiction {
  public static final byte CONQUER;
  public static final byte DEFEAT;
  public static final byte RESTING;
  public static final byte SEXING;
  public static final byte ADDRESSING;
  public static final byte FEMALE;
  public static final byte MALE;
  public static final byte ORDERFEMALE;
  public static final byte ORDERMALE;
  public static final byte SHIRE;
  byte subject1;
  byte subject2;
  byte subjectType;
  byte object1;
  byte object2;
  byte objectType;
  byte type;
  public Descriptions.Depiction(byte, byte, byte, byte, byte);
  public java.lang.String depict();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
public class Descriptions.GobLog {
  public Descriptions.GobLog();
  public static Descriptions.GobLog$Reportable idle();
  public static Descriptions.GobLog$Reportable beginQuest(Questing.Quest);
  public static Descriptions.GobLog$Reportable endQuest(Questing.Quest);
  public static Descriptions.GobLog$Reportable limitOrder(int, int, boolean);
  public static Descriptions.GobLog$Reportable transaction(int, int, boolean, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable consume(int);
  public static Descriptions.GobLog$Reportable produce(int);
  public static Descriptions.GobLog$Reportable produce(short);
  public static Descriptions.GobLog$Reportable accumulated(int);
  public static Descriptions.GobLog$Reportable hungry();
  public static Descriptions.GobLog$Reportable lostChild();
  public static Descriptions.GobLog$Reportable died();
  public static Descriptions.GobLog$Reportable dealTermTribute(Sentiens.Clan, Sentiens.Clan, int);
  public static Descriptions.GobLog$Reportable dealTermReward(Sentiens.Clan, Sentiens.Clan, int);
  public static Descriptions.GobLog$Reportable dealTermPatronage(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable dealTermAllegiance(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable dealTermRepentance(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable dealTermSuitor(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable dealTermService(Sentiens.Clan, Sentiens.Clan, Ideology.Value);
  public static Descriptions.GobLog$Reportable dealTermThreat(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable contractOutcome(Sentiens.Clan, Sentiens.Clan, boolean, double, double);
  public static Descriptions.GobLog$Reportable successfulCourt(Sentiens.Clan);
  public static Descriptions.GobLog$Reportable findSomeone(Sentiens.Clan, java.lang.String);
  public static Descriptions.GobLog$Reportable createOrder(boolean);
  public static Descriptions.GobLog$Reportable assignMinistry(Game.Ministry, Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable decidedMoral(Sentiens.Law$PersonalCommandment, boolean);
  public static Descriptions.GobLog$Reportable converted(Sentiens.Clan, boolean);
  public static Descriptions.GobLog$Reportable wasConverted(Sentiens.Clan, boolean);
  public static Descriptions.GobLog$Reportable handToHand(Sentiens.Clan, boolean);
  public static Descriptions.GobLog$Reportable compete4Mate(Sentiens.Clan, Sentiens.Clan, double);
  public static Descriptions.GobLog$Reportable preach(Sentiens.Clan, boolean);
  public static Descriptions.GobLog$Reportable contributeKnowledge(Questing.Knowledge.KnowledgeBlock);
  public static Descriptions.GobLog$Reportable observe(java.lang.Object);
  public static Descriptions.GobLog$Reportable pray(Sentiens.Clan, Sentiens.Clan, int, Questing.FaithQuests$ActOfFaith);
  public static Descriptions.GobLog$Reportable build(Sentiens.Clan, int, boolean);
  public static Descriptions.GobLog$Reportable discovery(Game.Job);
  public static Descriptions.GobLog$Reportable practice(Defs.P_, boolean);
  public static Descriptions.GobLog$Reportable demandRespect(Sentiens.Clan, boolean);
  public static Descriptions.GobLog$Reportable nowhereToAttack();
  public static Descriptions.GobLog$Reportable backedDown(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable recruitForWar(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable battleResult(Sentiens.Clan, Sentiens.Clan, int, int, boolean);
  public static Descriptions.GobLog$Reportable moveCurrentShire(Shirage.Shire, Shirage.Shire);
  public static Descriptions.GobLog$Reportable disbanded();
  public static Descriptions.GobLog$Reportable warStarted(Sentiens.Clan, java.util.Collection<Sentiens.Clan>);
  public static Descriptions.GobLog$Reportable warEnded(Sentiens.Clan, java.util.Collection<Sentiens.Clan>);
  public static Descriptions.GobLog$Reportable tookFromTreasury(int);
  public static Descriptions.GobLog$Reportable paidTax(Sentiens.Clan, int);
  public static Descriptions.GobLog$Reportable enoughTaxes(Sentiens.Clan, Sentiens.Clan);
  public static Descriptions.GobLog$Reportable beginBloodVengeance(Sentiens.Clan);
  public static Descriptions.GobLog$Reportable questExplosion();
  static Descriptions.GobLog$Reportable access$000();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$1 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$1(boolean);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$10 extends Descriptions.GobLog$Reportable {
  final int val$amt;
  Descriptions.GobLog$10(int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$11 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$11();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$12 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$12();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$13 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$13();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$14 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final int val$millet;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$14(Sentiens.Clan, int, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$15 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final int val$millet;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$15(Sentiens.Clan, int, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$16 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$16(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$17 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$17(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$18 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$18(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$19 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$19(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$2 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$2();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$20 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Ideology.Value val$val;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$20(Sentiens.Clan, Ideology.Value, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$21 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prop;
  final Sentiens.Clan val$eval;
  Descriptions.GobLog$21(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$22 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$eval;
  final boolean val$accepted;
  final double val$demandValue;
  final double val$offerValue;
  Descriptions.GobLog$22(Sentiens.Clan, boolean, double, double);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$23 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$mate;
  Descriptions.GobLog$23(Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$24 extends Descriptions.GobLog$Reportable {
  final java.lang.String val$what;
  final Sentiens.Clan val$target;
  Descriptions.GobLog$24(java.lang.String, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$25 extends Descriptions.GobLog$Reportable {
  final boolean val$preexisting;
  Descriptions.GobLog$25(boolean);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$26 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$c;
  final Game.Ministry val$m;
  final Sentiens.Clan val$replaced;
  Descriptions.GobLog$26(Sentiens.Clan, Game.Ministry, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$27 extends Descriptions.GobLog$Reportable {
  final Sentiens.Law$PersonalCommandment val$c;
  final boolean val$enabled;
  Descriptions.GobLog$27(Sentiens.Law$PersonalCommandment, boolean);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$28 extends Descriptions.GobLog$Reportable {
  final boolean val$success;
  final Sentiens.Clan val$target;
  Descriptions.GobLog$28(boolean, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$29 extends Descriptions.GobLog$Reportable {
  final boolean val$success;
  final Sentiens.Clan val$converter;
  Descriptions.GobLog$29(boolean, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$3 extends Descriptions.GobLog$Reportable {
  final Questing.Quest val$q;
  Descriptions.GobLog$3(Questing.Quest);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$30 extends Descriptions.GobLog$Reportable {
  final boolean val$winorlose;
  final Sentiens.Clan val$opponent;
  Descriptions.GobLog$30(boolean, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$31 extends Descriptions.GobLog$Reportable {
  final double val$result;
  final Sentiens.Clan val$mate;
  final Sentiens.Clan val$rival;
  Descriptions.GobLog$31(double, Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$32 extends Descriptions.GobLog$Reportable {
  final boolean val$success;
  final Sentiens.Clan val$target;
  Descriptions.GobLog$32(boolean, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$33 extends Descriptions.GobLog$Reportable {
  final Questing.Knowledge.KnowledgeBlock val$kb;
  Descriptions.GobLog$33(Questing.Knowledge.KnowledgeBlock);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$34 extends Descriptions.GobLog$Reportable {
  final java.lang.Object val$observee;
  Descriptions.GobLog$34(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$35 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$prayer;
  final int val$mana;
  final Sentiens.Clan val$prayee;
  final Questing.FaithQuests$ActOfFaith val$aof;
  Descriptions.GobLog$35(Sentiens.Clan, int, Sentiens.Clan, Questing.FaithQuests$ActOfFaith);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$36 extends Descriptions.GobLog$Reportable {
  final boolean val$transitive;
  final int val$amt;
  final Sentiens.Clan val$subject;
  Descriptions.GobLog$36(boolean, int, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$37 extends Descriptions.GobLog$Reportable {
  final Game.Job val$job;
  Descriptions.GobLog$37(Game.Job);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$38 extends Descriptions.GobLog$Reportable {
  final Defs.P_ val$skill;
  final boolean val$success;
  Descriptions.GobLog$38(Defs.P_, boolean);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$39 extends Descriptions.GobLog$Reportable {
  final boolean val$success;
  final Sentiens.Clan val$target;
  Descriptions.GobLog$39(boolean, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$4 extends Descriptions.GobLog$Reportable {
  final Questing.Quest val$q;
  Descriptions.GobLog$4(Questing.Quest);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$40 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$40();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$41 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$me;
  final Sentiens.Clan val$target;
  Descriptions.GobLog$41(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$42 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$recruiter;
  final Sentiens.Clan val$recruit;
  Descriptions.GobLog$42(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$43 extends Descriptions.GobLog$Reportable {
  final boolean val$attackerWins;
  final Sentiens.Clan val$attacker;
  final int val$numA;
  final Sentiens.Clan val$defender;
  final int val$numD;
  Descriptions.GobLog$43(boolean, Sentiens.Clan, int, Sentiens.Clan, int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$44 extends Descriptions.GobLog$Reportable {
  final Shirage.Shire val$origin;
  final Shirage.Shire val$destination;
  Descriptions.GobLog$44(Shirage.Shire, Shirage.Shire);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$45 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$45();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$46 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$newEnemy;
  final java.util.Collection val$allEnemies;
  Descriptions.GobLog$46(Sentiens.Clan, java.util.Collection);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$47 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$oldEnemy;
  final java.util.Collection val$remainingEnemies;
  Descriptions.GobLog$47(Sentiens.Clan, java.util.Collection);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$48 extends Descriptions.GobLog$Reportable {
  final int val$amount;
  Descriptions.GobLog$48(int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$49 extends Descriptions.GobLog$Reportable {
  final int val$amount;
  final Sentiens.Clan val$collector;
  Descriptions.GobLog$49(int, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$5 extends Descriptions.GobLog$Reportable {
  final boolean val$buyNotSell;
  final int val$g;
  final int val$px;
  Descriptions.GobLog$5(boolean, int, int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$50 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$taxee;
  final Sentiens.Clan val$taxer;
  Descriptions.GobLog$50(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$51 extends Descriptions.GobLog$Reportable {
  final Sentiens.Clan val$blamee;
  Descriptions.GobLog$51(Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$52 extends Descriptions.GobLog$Reportable {
  Descriptions.GobLog$52();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$6 extends Descriptions.GobLog$Reportable {
  final boolean val$buyNotSell;
  final int val$g;
  final int val$px;
  final Sentiens.Clan val$other;
  Descriptions.GobLog$6(boolean, int, int, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$7 extends Descriptions.GobLog$Reportable {
  final int val$g;
  Descriptions.GobLog$7(int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$8 extends Descriptions.GobLog$Reportable {
  final int val$g;
  Descriptions.GobLog$8(int);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
final class Descriptions.GobLog$9 extends Descriptions.GobLog$Reportable {
  final short val$W;
  Descriptions.GobLog$9(short);
  public java.lang.String toString();
}
Compiled from "GobLog.java"
public class Descriptions.GobLog$Book {
  public Descriptions.GobLog$Book();
  public void addReport(Descriptions.GobLog$Reportable);
  public Descriptions.GobLog$Reportable[] getBook();
  public java.lang.String toString();
}
Compiled from "GobLog.java"
public abstract class Descriptions.GobLog$Reportable {
  public abstract java.lang.String toString();
  public int getDate();
  Descriptions.GobLog$Reportable(boolean, Descriptions.GobLog$1);
  Descriptions.GobLog$Reportable(Descriptions.GobLog$1);
}
Compiled from "GobName.java"
public class Descriptions.GobName {
  public Descriptions.GobName();
  public static java.lang.String firstName(byte, byte, boolean);
  public static java.lang.String fullName(Sentiens.Clan);
  static {};
}
Compiled from "GobName.java"
class Descriptions.GobName$1 {
  static final int[] $SwitchMap$Defs$P_;
  static {};
}
Compiled from "GobName.java"
class Descriptions.GobName$BiName {
  Descriptions.GobName$BiName(java.lang.String);
  Descriptions.GobName$BiName(java.lang.String, java.lang.String);
  protected java.lang.String get(boolean);
}
Compiled from "MinisterNames.java"
public class Descriptions.MinisterNames {
  public Descriptions.MinisterNames();
  public static final java.lang.String getMinistryName(Game.Ministry, Sentiens.Clan);
}
Compiled from "MinisterNames.java"
public interface Descriptions.MinisterNames$MinistryNamer {
  public abstract java.lang.String nameFor(Sentiens.Clan);
}
Compiled from "NameVars.java"
public class Descriptions.NameVars {
  public static final Descriptions.NameVars$NameVar MINISTER_MILITARY;
  public static final Descriptions.NameVars$NameVar MINISTER_RELIGION;
  public static final Descriptions.NameVars$NameVar MINISTER_ECONOMY;
  public static final Descriptions.NameVars$NameVar MINISTER_INTERIOR;
  public Descriptions.NameVars();
  static {};
}
Compiled from "NameVars.java"
final class Descriptions.NameVars$1 implements Descriptions.NameVars$NameVar {
  Descriptions.NameVars$1();
  public java.lang.String of(Sentiens.Clan);
}
Compiled from "NameVars.java"
final class Descriptions.NameVars$2 implements Descriptions.NameVars$NameVar {
  Descriptions.NameVars$2();
  public java.lang.String of(Sentiens.Clan);
}
Compiled from "NameVars.java"
final class Descriptions.NameVars$3 implements Descriptions.NameVars$NameVar {
  Descriptions.NameVars$3();
  public java.lang.String of(Sentiens.Clan);
}
Compiled from "NameVars.java"
final class Descriptions.NameVars$4 implements Descriptions.NameVars$NameVar {
  Descriptions.NameVars$4();
  public java.lang.String of(Sentiens.Clan);
}
Compiled from "NameVars.java"
public interface Descriptions.NameVars$NameVar {
  public abstract java.lang.String of(Sentiens.Clan);
}
Compiled from "Naming.java"
public class Descriptions.Naming implements Defs.Misc {
  public Descriptions.Naming();
  public static java.lang.String randShireName(int);
  public static java.lang.String randGoblinName();
  public static java.lang.String randGoblinSanctityName(int[]);
  public static int[] sanctColor(int);
  public static java.lang.String prestName(Defs.P_);
  public static java.lang.String goodName(int);
  public static java.lang.String goodName(int, boolean, boolean);
  public static java.lang.String possessive(Sentiens.Clan);
}
Compiled from "Naming.java"
class Descriptions.Naming$1 {
  static final int[] $SwitchMap$Defs$P_;
  static {};
}
Compiled from "XWeapon.java"
public class Descriptions.XWeapon {
  public static final short NULL;
  public Descriptions.XWeapon();
  public static short craftNewWeapon(int, int);
  public static java.lang.String weaponName(short);
}
Compiled from "XWeapon.java"
public final class Descriptions.XWeapon$weaponType extends java.lang.Enum<Descriptions.XWeapon$weaponType> {
  public static final Descriptions.XWeapon$weaponType MACHETE;
  public static final Descriptions.XWeapon$weaponType BROADSWORD;
  public static final Descriptions.XWeapon$weaponType RAPIER;
  public static final Descriptions.XWeapon$weaponType AXE;
  public static final Descriptions.XWeapon$weaponType MACE;
  public static final Descriptions.XWeapon$weaponType HAMMER;
  public static final Descriptions.XWeapon$weaponType FLAIL;
  public static final Descriptions.XWeapon$weaponType CLUB;
  public static Descriptions.XWeapon$weaponType[] values();
  public static Descriptions.XWeapon$weaponType valueOf(java.lang.String);
  static {};
}
Compiled from "APopupMenu.java"
class GUI.AMenuItem extends javax.swing.JRadioButton {
  public GUI.AMenuItem(java.lang.String);
  public static GUI.AMenuItem createNew(GUI.APopupMenu, java.lang.Object, AMath.Calc$Listener, AMath.Calc$Transformer);
}
Compiled from "APopupMenu.java"
final class GUI.AMenuItem$1 implements java.awt.event.ActionListener {
  final GUI.APopupMenu val$parent;
  final AMath.Calc$Listener val$listener;
  final java.lang.Object val$obj;
  GUI.AMenuItem$1(GUI.APopupMenu, AMath.Calc$Listener, java.lang.Object);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "APopupMenu.java"
class GUI.AMenuItem$1$1 implements AMath.Calc$Function<java.lang.Object, java.lang.Object> {
  final GUI.AMenuItem$1 this$0;
  GUI.AMenuItem$1$1(GUI.AMenuItem$1);
  public java.lang.Object apply(java.lang.Object);
}
Compiled from "APanel.java"
public class GUI.APanel extends AMath.Calc$MousePanel {
  protected GUI.GUImain parent;
  protected int tmpX;
  protected int tmpY;
  public GUI.APanel(GUI.GUImain);
  protected void dragged(java.awt.event.MouseEvent);
  protected void pressed(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
}
Compiled from "APopupMenu.java"
public class GUI.APopupMenu {
  public GUI.APopupMenu();
  public static void set(java.awt.Component, java.lang.String, java.util.Collection<? extends java.lang.Object>, AMath.Calc$Listener, AMath.Calc$Transformer);
  void setFunction(AMath.Calc$Function<java.lang.Object, java.lang.Object>);
  javax.swing.JFrame getFrame();
  static AMath.Calc$Function access$000();
  static {};
}
Compiled from "APopupMenu.java"
final class GUI.APopupMenu$1 implements AMath.Calc$Function<java.lang.Object, java.lang.Object> {
  GUI.APopupMenu$1();
  public java.lang.Object apply(java.lang.Object);
}
Compiled from "APopupMenu.java"
final class GUI.APopupMenu$2 implements java.awt.event.ActionListener {
  GUI.APopupMenu$2();
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "APopupQuery.java"
public class GUI.APopupQuery {
  public GUI.APopupQuery();
  public static void set(java.awt.Component, java.lang.String, java.lang.String, AMath.Calc$Listener);
  javax.swing.JFrame getFrame();
  static javax.swing.JFrame access$000();
  static {};
}
Compiled from "APopupQuery.java"
final class GUI.APopupQuery$1 extends Avatar.AbstractInputConsole {
  final AMath.Calc$Listener val$listener;
  GUI.APopupQuery$1(java.lang.String, AMath.Calc$Listener);
  public void doCommand(java.lang.String);
}
Compiled from "APopupQuery.java"
final class GUI.APopupQuery$2 implements java.awt.event.ActionListener {
  final Avatar.AbstractInputConsole val$field;
  GUI.APopupQuery$2(Avatar.AbstractInputConsole);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "ASlidePanel.java"
public class GUI.ASlidePanel extends javax.swing.JPanel implements java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  protected java.awt.Point VPos;
  protected int tmpX;
  protected int tmpY;
  protected int maxH;
  protected int maxW;
  protected GUI.PopupAbstract parent;
  protected GUI.TextDisplay.Papyrus[] scroll;
  public GUI.ASlidePanel(GUI.PopupAbstract);
  public void setScrolls();
  public int maxWidth();
  public int maxHeight();
  protected GUI.PopupAbstract parent();
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "FaceEditor.java"
class GUI.ASlider extends javax.swing.JSlider {
  public int id;
  public GUI.ASlider(int, int);
  public void setID(int);
  public int getID();
}
Compiled from "AconSelector.java"
public class GUI.AconSelector extends javax.swing.JPanel implements java.awt.event.MouseListener {
  public GUI.AconSelector(GUI.PopupAbstract);
  public void addCon(java.lang.String);
  public void paint(java.awt.Graphics);
  public void refresh();
  public void mouseExited(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "EditableFace.java"
public class GUI.EditableFace extends GUI.Face implements java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  public GUI.EditableFace();
  public void setMsplc(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "Face.java"
public class GUI.Face extends javax.swing.JPanel {
  protected java.awt.image.BufferedImage offscreen;
  protected int[] msplc;
  protected int[] oldmsplc;
  protected static final int NASO;
  protected static final int BESO;
  protected static final int MIRO;
  protected static final int JITA;
  protected static final int CARA;
  java.awt.BasicStroke NBS1;
  java.awt.BasicStroke NBS2;
  java.awt.BasicStroke NBS3;
  java.awt.BasicStroke LBS1;
  java.awt.BasicStroke LBS2;
  protected boolean loaded;
  protected byte[] rands;
  protected int r;
  protected GUI.Face$Hairstyle headhair;
  protected GUI.Face$Hairstyle chinhair;
  protected Sentiens.Clan gobCache;
  protected Sentiens.Ideology fbCache;
  protected double resize;
  protected double blursize;
  protected boolean female;
  protected GUI.Face$Parte[] partez;
  protected GUI.Face$Nariz naso;
  protected GUI.Face$Boca beso;
  protected GUI.Face$Ojo mirador;
  protected GUI.Face$Oreja jitas;
  protected GUI.Face$GKata[] allkatas;
  protected int sharpN;
  protected java.awt.Color scol;
  protected java.awt.Color dcol;
  protected java.awt.Color hcol;
  protected java.awt.Color hcol2;
  protected java.awt.Color eyecol;
  protected int ringlen;
  protected int ringwid;
  protected int x;
  protected int y;
  protected int w;
  protected int h;
  public GUI.Face$FRelation NOSERX;
  public GUI.Face$FRelation NOSERY;
  public GUI.Face$FRelation NOSELX;
  public GUI.Face$FRelation NOSELY;
  public GUI.Face$FRelation NOSELW;
  public GUI.Face$FRelation NOSEMW;
  public GUI.Face$FRelation NOSERW;
  public GUI.Face$FRelation MOUTHBX;
  public GUI.Face$FRelation MOUTHBY;
  public GUI.Face$FRelation MOUTHP;
  public GUI.Face$FRelation MOUTHC;
  public GUI.Face$FRelation MOUTHLH;
  public GUI.Face$FRelation MOUTHLW;
  public GUI.Face$FRelation MOUTHJH;
  public GUI.Face$FRelation MOUTHJW;
  public GUI.Face$FRelation EYERP;
  public GUI.Face$FRelation EYELP;
  public GUI.Face$FRelation EYERW;
  public GUI.Face$FRelation EYELW;
  public GUI.Face$FRelation EYEHGT;
  public GUI.Face$FRelation EYESPRD;
  public GUI.Face$FRelation EARH;
  public GUI.Face$FRelation EARW;
  public GUI.Face$FRelation EART;
  public GUI.Face$FRelation EARD;
  public GUI.Face$FRelation SKINR;
  public GUI.Face$FRelation SKING;
  public GUI.Face$FRelation SKINB;
  public GUI.Face$FRelation HAIRL;
  public GUI.Face$FRelation HAIRC;
  public GUI.Face$FRelation HAIRW;
  public GUI.Face$FRelation HAIRR;
  public GUI.Face$FRelation HAIRG;
  public GUI.Face$FRelation HAIRB;
  public GUI.Face$FRelation HAIRX;
  public GUI.Face$FRelation HAIRS;
  protected int EARMINWID;
  protected int NOSEMINWID;
  protected int NOSEMAXSLANT;
  protected int MAXMOUTHOPEN;
  protected double EARMINT;
  public GUI.Face();
  public void paintComponent(java.awt.Graphics);
  public void paintFace();
  public java.awt.image.BufferedImage getFace();
  public void resize(double);
  public int fix(int, int, int);
  public void loadAttributes(Sentiens.Ideology);
  protected double[] closestPoint(int[], int[][]);
  public int func(int, double, int, int);
  public double distance(int[], int[]);
  public GUI.Face$GKata[] intertwineGB(GUI.Face$GKata[], GUI.Face$GKata[]);
  public void pRing(java.awt.Graphics, int, int, boolean, int, int);
  public void pHair(java.awt.Graphics, int, int, int, int, int, int, boolean);
  public void pArc(java.awt.Graphics, int, int, int, int, int);
  public void paintNotches(java.awt.Graphics, GUI.Face$GKata);
  public void paintNotchesL(java.awt.Graphics, GUI.Face$GKata, boolean);
  public void sortByCol(int[][], int, int);
  public int randInt(int);
  public double dSin(int);
  public double dCos(int);
  public void setSkinColor();
  public void setHairColor();
  public void repaintA();
  public void redefine(Sentiens.Clan);
  public void redefine(Sentiens.Ideology);
  public void redefine(Sentiens.Clan, double, double);
  public void redefine(Sentiens.Ideology, double, double);
  public void redefine();
  public void setFemale(boolean);
  public int getR();
  public int getG();
  public int getB();
}
Compiled from "Face.java"
class GUI.Face$Arrow {
  int dx;
  int dy;
  int[] xy;
  final GUI.Face this$0;
  public GUI.Face$Arrow(GUI.Face);
  public GUI.Face$Arrow(GUI.Face, int[], int, int);
  public int getDX();
  public int getDY();
  public int[] getXY();
  public int side(int[]);
  public double slope();
  public double hypotenuse();
  public double acosine();
  public double asine();
  public double cosine();
  public double sine();
}
Compiled from "Face.java"
class GUI.Face$Boca extends GUI.Face$Parte {
  public static final int BRIDGE;
  public static final int UPPER;
  public static final int MIDDLE;
  public static final int LOWERL;
  public static final int LOWERR;
  public static final int JAW;
  public static final int WRINKLE;
  protected int[] LbaseXY;
  protected int width;
  protected int height;
  protected int jawwidth;
  protected int jawheight;
  protected double pointiness;
  protected int cavity;
  protected int openness;
  GUI.Face$GKata BL;
  final GUI.Face this$0;
  public GUI.Face$Boca(GUI.Face, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[][] latchPoints();
  public double[] nearestPoint(int[]);
  public void dragged();
  public int[] getLeftEdge();
  public int[] getRightEdge();
  public GUI.Face$Arrow getJawArrow();
}
Compiled from "Face.java"
class GUI.Face$Cabeza extends GUI.Face$Parte {
  public static final int FSIDE;
  public static final int CRANIUM;
  GUI.Face$GKata HL;
  protected GUI.Face$Arrow lowArrow;
  final GUI.Face this$0;
  public GUI.Face$Cabeza(GUI.Face, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
}
Compiled from "Face.java"
public class GUI.Face$FRelation {
  final GUI.Face this$0;
  public GUI.Face$FRelation(GUI.Face, Sentiens.Ideology, Defs.F_, int, int);
  public void set(int);
  public void setPctInRange(int);
  public void mult(double);
  public int val();
  static int access$000(GUI.Face$FRelation);
  static int access$100(GUI.Face$FRelation);
}
Compiled from "Face.java"
class GUI.Face$GArc extends GUI.Face$GKata {
  int start;
  int radius;
  final GUI.Face this$0;
  public GUI.Face$GArc(GUI.Face, double);
  public GUI.Face$GArc(GUI.Face, int, int, int, int, int, int, int);
  public int getXHWID();
  public int getRadius();
}
Compiled from "Face.java"
class GUI.Face$GBezier extends GUI.Face$GKata {
  final GUI.Face this$0;
  public GUI.Face$GBezier(GUI.Face, int[][], int);
  public GUI.Face$GBezier(GUI.Face, int[], double, int[], double, int);
  public GUI.Face$GBezier(GUI.Face, GUI.Face$Arrow, GUI.Face$Arrow, double, int);
  public void map();
  public int numPoints();
  public double[] closestPoint(int, int);
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int[][] getPoints();
  public int[] getPoint(int);
  public int[] startPoint();
  public int[] endPoint();
  public GUI.Face$Arrow startArrow();
  public GUI.Face$Arrow endArrow();
  public int[] center();
}
Compiled from "Face.java"
class GUI.Face$GCombo extends GUI.Face$GKata {
  final GUI.Face this$0;
  public GUI.Face$GCombo(GUI.Face, GUI.Face$GKata, GUI.Face$GKata);
  public GUI.Face$GCombo(GUI.Face, GUI.Face$GKata[]);
  public void printDets();
}
Compiled from "Face.java"
class GUI.Face$GKata {
  int[][] XY;
  final GUI.Face this$0;
  GUI.Face$GKata(GUI.Face);
  public int[][] getXY();
  public int[] getX();
  public int[] getY();
  public int getX(int);
  public int getY(int);
  public int[] getStart();
  public int[] getEnd();
  public int[] startPoint();
  public int[] endPoint();
  public int[][] getPoints();
  public int[] getPoint(int);
  public GUI.Face$Arrow startArrow();
  public GUI.Face$Arrow endArrow();
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int numPoints();
  public int length();
  public void offset(int, int);
  public void squeezeXY(double, int);
  public void flipXY(int);
  public int[] center();
  public double[] closestPoint(int, int);
  public void drawEdge(java.awt.Graphics, int, int[], boolean);
}
Compiled from "Face.java"
class GUI.Face$GPow extends GUI.Face$GKata {
  double slope;
  int power;
  int XHWID;
  final GUI.Face this$0;
  public GUI.Face$GPow(GUI.Face, double, int, int);
  public void setSlope(double);
  public double getSlope();
  public void setPower(int);
  public int getPower();
  public void setXHWID(int);
  public int getXHWID();
}
Compiled from "Face.java"
class GUI.Face$Hairstyle {
  int length;
  int thickness;
  int curl;
  int chaos;
  int ccwn;
  int[][] hairses;
  final GUI.Face this$0;
  public GUI.Face$Hairstyle(GUI.Face);
  public GUI.Face$Hairstyle(GUI.Face, int, int, int, int);
  public void plantone(java.awt.Graphics, int, int, int);
  public void plantlash(java.awt.Graphics, int, int, int, boolean);
  public void setHairs(int[][]);
  public void setLength(int);
  public void setCurl(int);
  public void setThickness(int);
  public void setChaos(int);
  public void setCCWN(int);
  public int getLength();
  public int getCurl();
  public int getThickness();
  public int getChaos();
  public int getCCWN();
  public int getR();
  public int getG();
  public int getB();
  public void setHairs(GUI.Face$GKata, int);
  public void paintHairs(java.awt.Graphics, int[]);
  public void incR();
  public int randR();
}
Compiled from "Face.java"
class GUI.Face$Nariz extends GUI.Face$Parte {
  public static final int NUPPER;
  public static final int POINT;
  public static final int NLOWER;
  public static final int TRIL;
  protected int[][] tops;
  protected int[][] bottoms;
  protected int[] nasoness;
  final GUI.Face this$0;
  public GUI.Face$Nariz(GUI.Face, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[][] latchPoints();
  public double[] nearestPoint(int[]);
  public void dragged();
  public void megafix();
  public int[] getLeftEdge();
}
Compiled from "Face.java"
class GUI.Face$Ojo extends GUI.Face$Parte {
  public static final int RCIRCTOP;
  public static final int RCIRCBOTTOM;
  public static final int RLIDTOP;
  public static final int RLIDBOTTOM;
  public static final int LCIRCTOP;
  public static final int LCIRCBOTTOM;
  public static final int LLIDTOP;
  public static final int LLIDBOTTOM;
  public static final int BROW;
  protected int rpoint;
  protected int lpoint;
  protected int rwid;
  protected int lwid;
  protected int lidheight;
  protected int spread;
  protected int rhgt;
  protected int lhgt;
  final GUI.Face this$0;
  public GUI.Face$Ojo(GUI.Face, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[][] latchPoints();
  public double[] nearestPoint(int[]);
  public void clicked();
  public void dragged();
  public int[] getLeftEdge();
  public int[] getRightEdge();
}
Compiled from "Face.java"
class GUI.Face$Oreja extends GUI.Face$Parte {
  public static final int EUPPER;
  public static final int EPOINT;
  public static final int EOUTER;
  public static final int RIDGE;
  public static final int LOBE;
  protected static final int sidehgt;
  protected static final int Epointiness;
  protected int Eheight;
  protected int Ewidth;
  protected double thickness;
  protected int droop;
  final GUI.Face this$0;
  public GUI.Face$Oreja(GUI.Face, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[][] latchPoints();
  public double[] nearestPoint(int[]);
  public void dragged();
  public int[] getRightEdge();
}
Compiled from "Face.java"
class GUI.Face$Parte {
  protected GUI.Face$GKata[] K;
  protected int[] baseXY;
  protected int selected;
  public int[] temp;
  protected static final double Npointiness;
  final GUI.Face this$0;
  GUI.Face$Parte(GUI.Face);
  public GUI.Face$GCombo Whole();
  public GUI.Face$GKata getGK(int);
  public int[] getBaseXY();
  public void setBaseXY(int[]);
  public void refix();
  public void printSpecs();
  public int[][] getPoints();
  public void paintPart(java.awt.Graphics);
  public void paintPart(java.awt.Graphics, java.awt.Color);
  public void paintHair(java.awt.Graphics);
  public double[] nearestPoint(int[]);
  public int[][] latchPoints();
  public void clicked();
  public void dragged();
  public int[] getLeftEdge();
  public int[] getRightEdge();
  public GUI.Face$Arrow getJawArrow();
  public int[] getCenter();
  public void megafix();
}
Compiled from "FaceAnimated.java"
public class GUI.FaceAnimated extends GUI.Face implements java.awt.event.ActionListener,java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  public GUI.FaceAnimated();
  public void animate(int);
  public void redefine(Sentiens.Clan);
  public void actionPerformed(java.awt.event.ActionEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
}
Compiled from "FaceCrapper.java"
public class GUI.FaceCrapper {
  static final int CSIZE;
  static final int WIDTH;
  static final int HEIGHT;
  final javax.swing.JFrame MainPane;
  final GUI.FaceCrapper$CPanel parentPanel;
  final java.util.Map<GUI.Face, java.awt.Point> faces;
  final AMath.Calc$MousePanel panel;
  public static void main(java.lang.String[]);
  public GUI.FaceCrapper();
  public void load();
}
Compiled from "FaceCrapper.java"
class GUI.FaceCrapper$1 extends AMath.Calc$MousePanel {
  final GUI.FaceCrapper this$0;
  GUI.FaceCrapper$1(GUI.FaceCrapper);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "FaceCrapper.java"
class GUI.FaceCrapper$CPanel extends javax.swing.JPanel {
  final GUI.FaceCrapper this$0;
  public void paintComponent(java.awt.Graphics);
  GUI.FaceCrapper$CPanel(GUI.FaceCrapper, GUI.FaceCrapper$1);
}
Compiled from "FaceEditor.java"
public class GUI.FaceEditor implements javax.swing.event.ChangeListener,java.awt.event.ActionListener {
  static final int WIDTH;
  static final int HEIGHT;
  static final int CSIZE;
  static final java.awt.Color BGColor;
  static final java.awt.Color FGColor;
  javax.swing.JFrame MainPane;
  GUI.EditableFace chart1;
  javax.swing.JPanel panel1;
  javax.swing.JPanel panel2;
  javax.swing.JPanel panel3;
  javax.swing.JPanel panel4;
  javax.swing.JLabel skinRL;
  javax.swing.JLabel skinGL;
  javax.swing.JLabel skinBL;
  javax.swing.JLabel hairlenL;
  javax.swing.JLabel haircurL;
  javax.swing.JLabel hairthiL;
  javax.swing.JLabel hairRL;
  javax.swing.JLabel hairGL;
  javax.swing.JLabel hairBL;
  javax.swing.JLabel hairchaoL;
  javax.swing.JLabel hairCCWL;
  javax.swing.JSlider skinRS;
  javax.swing.JSlider skinGS;
  javax.swing.JSlider skinBS;
  javax.swing.JSlider hairlenS;
  javax.swing.JSlider haircurS;
  javax.swing.JSlider hairthiS;
  javax.swing.JSlider hairRS;
  javax.swing.JSlider hairGS;
  javax.swing.JSlider hairBS;
  javax.swing.JSlider hairchaoS;
  javax.swing.JSlider hairCCWS;
  javax.swing.JButton maleB;
  javax.swing.JButton femaleB;
  javax.swing.JButton reshuffleB;
  javax.swing.JButton recombB;
  public static final int skinR;
  public static final int skinG;
  public static final int skinB;
  public static final int hairlen;
  public static final int haircur;
  public static final int hairthi;
  public static final int hairR;
  public static final int hairG;
  public static final int hairB;
  public static final int hairchao;
  public static final int hairCCW;
  javax.swing.JLabel[] labels;
  GUI.ASlider[] sliders;
  boolean resettingSliders;
  public GUI.FaceEditor();
  public void resetSliders();
  public void stateChanged(javax.swing.event.ChangeEvent);
  public void actionPerformed(java.awt.event.ActionEvent);
  public java.awt.Color setColor(java.awt.Color, int, int, int);
  static {};
}
Compiled from "FaceMini.java"
class GUI.FaceMini extends javax.swing.JPanel {
  protected static final int NASO;
  protected static final int BESO;
  protected static final int MIRO;
  protected static final int JITA;
  protected static final int CARA;
  java.awt.BasicStroke NBS1;
  java.awt.BasicStroke NBS2;
  java.awt.BasicStroke NBS3;
  java.awt.BasicStroke LBS1;
  java.awt.BasicStroke LBS2;
  protected boolean loaded;
  protected byte[] rands;
  protected int r;
  protected GUI.FaceMini$Hairstyle headhair;
  protected GUI.FaceMini$Hairstyle chinhair;
  protected boolean female;
  protected GUI.FaceMini$Parte[] partez;
  protected GUI.FaceMini$Nariz naso;
  protected GUI.FaceMini$Boca beso;
  protected GUI.FaceMini$Ojo mirador;
  protected GUI.FaceMini$Oreja jitas;
  protected GUI.FaceMini$GKata[] allkatas;
  protected int sharpN;
  protected java.awt.Color scol;
  protected java.awt.Color dcol;
  protected java.awt.Color hcol;
  protected java.awt.Color hcol2;
  protected java.awt.Color ecol;
  protected int ringlen;
  protected int ringwid;
  protected int x;
  protected int y;
  protected int w;
  protected int h;
  protected int NOSERX;
  protected int NOSERY;
  protected int NOSELX;
  protected int NOSELY;
  protected int NOSELW;
  protected int NOSEMW;
  protected int NOSERW;
  protected int MOUTHBX;
  protected int MOUTHBY;
  protected int MOUTHP;
  protected int MOUTHC;
  protected int MOUTHLH;
  protected int MOUTHLW;
  protected int MOUTHJH;
  protected int MOUTHJW;
  protected int EYERP;
  protected int EYELP;
  protected int EYERW;
  protected int EYELW;
  protected int EYEHGT;
  protected int EYESPRD;
  protected int EARH;
  protected int EARW;
  protected int EART;
  protected int EARD;
  protected int SKINR;
  protected int SKING;
  protected int SKINB;
  protected int HAIRL;
  protected int HAIRC;
  protected int HAIRW;
  protected int HAIRR;
  protected int HAIRG;
  protected int HAIRB;
  protected int HAIRX;
  protected int HAIRS;
  public GUI.FaceMini();
  public void paintComponent(java.awt.Graphics);
  public void drawFace(java.awt.Graphics, int, int, int, int, javax.swing.JPanel);
  public int fix(int, int, int);
  public void loadAttributes(Sentiens.Ideology);
  public int func(int, double, int, int);
  public double distance(int[], int[]);
  public GUI.FaceMini$GKata[] intertwineGB(GUI.FaceMini$GKata[], GUI.FaceMini$GKata[]);
  public void pRing(java.awt.Graphics, int, int, boolean, int, int);
  public void pHair(java.awt.Graphics, int, int, int, int, int, int, boolean);
  public void pArc(java.awt.Graphics, int, int, int, int, int);
  public void paintNotches(java.awt.Graphics, GUI.FaceMini$GKata);
  public void paintNotchesL(java.awt.Graphics, GUI.FaceMini$GKata, boolean);
  public void sortByCol(int[][], int, int);
  public int randInt(int);
  public double dSin(int);
  public double dCos(int);
  public void repaintA();
  public void redefine(Sentiens.Clan);
  public void setFemale(boolean);
  public int getR();
  public int getG();
  public int getB();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Arrow {
  int dx;
  int dy;
  int[] xy;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Arrow(GUI.FaceMini);
  public GUI.FaceMini$Arrow(GUI.FaceMini, int[], int, int);
  public int getDX();
  public int getDY();
  public int[] getXY();
  public int side(int[]);
  public double slope();
  public double hypotenuse();
  public double acosine();
  public double asine();
  public double cosine();
  public double sine();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Boca extends GUI.FaceMini$Parte {
  public static final int BRIDGE;
  public static final int UPPER;
  public static final int MIDDLE;
  public static final int LOWERL;
  public static final int LOWERR;
  public static final int JAW;
  public static final int WRINKLE;
  protected int[] LbaseXY;
  protected int width;
  protected int height;
  protected int jawwidth;
  protected int jawheight;
  protected double pointiness;
  protected int cavity;
  protected int openness;
  GUI.FaceMini$GKata BL;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Boca(GUI.FaceMini, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[] getLeftEdge();
  public int[] getRightEdge();
  public GUI.FaceMini$Arrow getJawArrow();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Cabeza extends GUI.FaceMini$Parte {
  public static final int FSIDE;
  public static final int CRANIUM;
  GUI.FaceMini$GKata HL;
  protected GUI.FaceMini$Arrow lowArrow;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Cabeza(GUI.FaceMini, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
}
Compiled from "FaceMini.java"
class GUI.FaceMini$GArc extends GUI.FaceMini$GKata {
  int start;
  int radius;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$GArc(GUI.FaceMini, double);
  public GUI.FaceMini$GArc(GUI.FaceMini, int, int, int, int, int, int, int);
  public int getXHWID();
  public int getRadius();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$GBezier extends GUI.FaceMini$GKata {
  final GUI.FaceMini this$0;
  public GUI.FaceMini$GBezier(GUI.FaceMini, int[][], int);
  public GUI.FaceMini$GBezier(GUI.FaceMini, int[], double, int[], double, int);
  public GUI.FaceMini$GBezier(GUI.FaceMini, GUI.FaceMini$Arrow, GUI.FaceMini$Arrow, double, int);
  public void map();
  public int numPoints();
  public double[] closestPoint(int, int);
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int[][] getPoints();
  public int[] getPoint(int);
  public int[] startPoint();
  public int[] endPoint();
  public GUI.FaceMini$Arrow startArrow();
  public GUI.FaceMini$Arrow endArrow();
  public int[] center();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$GCombo extends GUI.FaceMini$GKata {
  final GUI.FaceMini this$0;
  public GUI.FaceMini$GCombo(GUI.FaceMini, GUI.FaceMini$GKata, GUI.FaceMini$GKata);
  public GUI.FaceMini$GCombo(GUI.FaceMini, GUI.FaceMini$GKata[]);
  public void printDets();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$GKata {
  int[][] XY;
  final GUI.FaceMini this$0;
  GUI.FaceMini$GKata(GUI.FaceMini);
  public int[][] getXY();
  public int[] getX();
  public int[] getY();
  public int getX(int);
  public int getY(int);
  public int[] getStart();
  public int[] getEnd();
  public int[] startPoint();
  public int[] endPoint();
  public int[][] getPoints();
  public int[] getPoint(int);
  public GUI.FaceMini$Arrow startArrow();
  public GUI.FaceMini$Arrow endArrow();
  public void setPoint(int[], int);
  public void setPointX(int, int);
  public void setPointY(int, int);
  public int numPoints();
  public int length();
  public void offset(int, int);
  public void squeezeXY(double, int);
  public void flipXY(int);
  public int[] center();
  public double[] closestPoint(int, int);
  public void drawEdge(java.awt.Graphics, int, int[], boolean);
}
Compiled from "FaceMini.java"
class GUI.FaceMini$GPow extends GUI.FaceMini$GKata {
  double slope;
  int power;
  int XHWID;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$GPow(GUI.FaceMini, double, int, int);
  public void setSlope(double);
  public double getSlope();
  public void setPower(int);
  public int getPower();
  public void setXHWID(int);
  public int getXHWID();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Hairstyle {
  int length;
  int thickness;
  int curl;
  int chaos;
  int ccwn;
  int[][] hairses;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Hairstyle(GUI.FaceMini);
  public GUI.FaceMini$Hairstyle(GUI.FaceMini, int, int, int, int);
  public void plantone(java.awt.Graphics, int, int, int);
  public void plantlash(java.awt.Graphics, int, int, int, boolean);
  public void setHairs(int[][]);
  public void setLength(int);
  public void setCurl(int);
  public void setThickness(int);
  public void setChaos(int);
  public void setCCWN(int);
  public int getLength();
  public int getCurl();
  public int getThickness();
  public int getChaos();
  public int getCCWN();
  public int getR();
  public int getG();
  public int getB();
  public void setHairs(GUI.FaceMini$GKata, int);
  public void paintHairs(java.awt.Graphics, int[]);
  public void incR();
  public int randR();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Nariz extends GUI.FaceMini$Parte {
  public static final int NUPPER;
  public static final int POINT;
  public static final int NLOWER;
  public static final int TRIL;
  protected static final int minwid;
  protected int[][] tops;
  protected int[][] bottoms;
  protected int[] nasoness;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Nariz(GUI.FaceMini, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public void megafix();
  public int[] getLeftEdge();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Ojo extends GUI.FaceMini$Parte {
  public static final int RCIRCTOP;
  public static final int RCIRCBOTTOM;
  public static final int RLIDTOP;
  public static final int RLIDBOTTOM;
  public static final int LCIRCTOP;
  public static final int LCIRCBOTTOM;
  public static final int LLIDTOP;
  public static final int LLIDBOTTOM;
  public static final int BROW;
  protected int rpoint;
  protected int lpoint;
  protected int rwid;
  protected int lwid;
  protected int lidheight;
  protected int spread;
  protected int rhgt;
  protected int lhgt;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Ojo(GUI.FaceMini, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[] getLeftEdge();
  public int[] getRightEdge();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Oreja extends GUI.FaceMini$Parte {
  public static final int EUPPER;
  public static final int EPOINT;
  public static final int EOUTER;
  public static final int RIDGE;
  public static final int LOBE;
  protected static final int sidehgt;
  protected static final int Epointiness;
  protected int Eheight;
  protected int Ewidth;
  protected double thickness;
  protected int droop;
  final GUI.FaceMini this$0;
  public GUI.FaceMini$Oreja(GUI.FaceMini, int[]);
  public void refix();
  public void paintPart(java.awt.Graphics);
  public int[] getRightEdge();
}
Compiled from "FaceMini.java"
class GUI.FaceMini$Parte {
  protected GUI.FaceMini$GKata[] K;
  protected int[] baseXY;
  protected int selected;
  protected int[] temp;
  protected static final double Npointiness;
  final GUI.FaceMini this$0;
  GUI.FaceMini$Parte(GUI.FaceMini);
  public GUI.FaceMini$GCombo Whole();
  public GUI.FaceMini$GKata getGK(int);
  public int[] getBaseXY();
  public void setBaseXY(int[]);
  public void refix();
  public void printSpecs();
  public int[][] getPoints();
  public void paintPart(java.awt.Graphics);
  public void paintPart(java.awt.Graphics, java.awt.Color);
  public void paintHair(java.awt.Graphics);
  public int[] getLeftEdge();
  public int[] getRightEdge();
  public GUI.FaceMini$Arrow getJawArrow();
  public int[] getCenter();
  public void megafix();
}
Compiled from "GUImain.java"
public class GUI.GUImain extends javax.swing.JFrame {
  public GUI.MapDisplay MD;
  public GUI.PopupFace GM;
  public GUI.PopupShire SM;
  public Avatar.AvatarConsole AC;
  public GUI.FaceEditor Editor;
  public GUI.SexDisplay sexDisplay;
  public GUI.GUImain(java.lang.String);
  public void repaintEverything();
  public void initializeMD();
  public void initializeGM();
  public void initializeSM();
  public void initializeAC(Sentiens.Clan);
  public void initializeFaceEditor();
  public void initializeSexDisplay();
  public void movePopup(GUI.APanel, int, int);
}
Compiled from "ImageReader.java"
public class GUI.ImageReader {
  java.awt.image.BufferedImage img;
  int[] xcolors;
  int cellW;
  int cellH;
  static final int type;
  public GUI.ImageReader(java.lang.String);
  public void setWnH(int, int);
  public int getCellW();
  public int getCellH();
  public int[] getXColors();
  public void addXYColor(int);
  public void addXYColor(int[]);
  public java.awt.image.BufferedImage Cell(int, int);
  public java.awt.image.BufferedImage convert(java.awt.image.BufferedImage, int[]);
  public static java.awt.image.BufferedImage resizeImageWithHint(java.awt.image.BufferedImage, int, int);
  public static java.awt.image.BufferedImage blurImage(java.awt.image.BufferedImage, int, int);
  public static java.awt.image.BufferedImage toBufferedImage(java.awt.Image);
}
Compiled from "MapDisplay.java"
public class GUI.MapDisplay extends javax.swing.JPanel implements java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  public Shirage.Shire highlightedShire;
  public java.lang.String highlightedStat;
  public final boolean SIMPLEDRAW;
  public GUI.MapDisplay();
  public void paintComponent(java.awt.Graphics);
  public void createMap(int, int);
  public void grayEverything();
  public void paint(java.awt.Graphics);
  public void validate();
  public void introduce();
  public int W();
  public int H();
  public int getTRows();
  public int getTCols();
  public int TotW();
  public int TotH();
  public Shirage.Plot getPlotXY(int, int);
  public int getTmpX();
  public int getTmpY();
  public void setHighlightStat(java.lang.String);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  static {};
}
Compiled from "PopupAbstract.java"
public abstract class GUI.PopupAbstract extends GUI.APanel {
  protected GUI.TextDisplay.NameScroll namebox;
  protected int curTab;
  protected GUI.AconSelector slider;
  protected javax.swing.JPanel info;
  protected javax.swing.JScrollPane sp;
  protected boolean initialized;
  protected boolean vizible;
  public java.lang.String[] INFO;
  public GUI.PopupAbstract(GUI.GUImain);
  protected void addMouseListeners();
  public void setBounds(int, int, int, int);
  public void scrollToPoint(java.awt.Point);
  public java.awt.Dimension getViewportSize();
  public void refreshAll();
  public void setState(java.lang.String, int);
  public boolean initialized();
  protected boolean hideUnhide(int);
  protected void hideUnhideStuff();
  protected void dragged(java.awt.event.MouseEvent);
  protected void pressed(java.awt.event.MouseEvent);
  public abstract void load();
  public void setState();
}
Compiled from "PopupFace.java"
public class GUI.PopupFace extends GUI.PopupAbstract {
  public static final int BASIC;
  public static final int VALUES;
  public static final int PRESTS;
  public static final int BEHS;
  public static final int QUESTS;
  public static final int ORDER;
  public GUI.PopupFace(GUI.GUImain);
  public void setBounds(int, int, int, int);
  public Sentiens.Clan getClan();
  public void load();
  public void loadClan(Sentiens.Clan);
  protected void hideUnhideStuff();
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "PopupShire.java"
public class GUI.PopupShire extends GUI.PopupAbstract {
  public static final int ENVIRONMENT;
  public static final int POPULATION;
  public static final int BUILDINGS;
  public static final int MARKETS;
  public static final int HISTORY;
  public GUI.PopupShire(GUI.GUImain);
  public void setBounds(int, int, int, int);
  public Shirage.Shire getShire();
  public void load();
  public void loadShire(Shirage.Shire);
  public void selectVG(int, int);
  public int selectedVGLength(int);
  public int getVG(int, int);
  protected void hideUnhideStuff();
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "ScrollSlidePanel.java"
public class GUI.ScrollSlidePanel extends GUI.ASlidePanel {
  public GUI.ScrollSlidePanel(GUI.PopupAbstract, GUI.TextDisplay.Papyrus[]);
  public void redefineClan();
}
Compiled from "SexDisplay.java"
public class GUI.SexDisplay {
  static final int CSIZE;
  static final int WIDTH;
  static final int HEIGHT;
  final javax.swing.JFrame MainPane;
  final javax.swing.JPanel parentPanel;
  final javax.swing.JPanel childPanel;
  final GUI.Face father;
  final GUI.Face mother;
  final GUI.Face spawn;
  final AMath.Calc$MousePanel panel;
  public GUI.SexDisplay();
  public void load();
  public void load(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "SexDisplay.java"
class GUI.SexDisplay$1 extends AMath.Calc$MousePanel {
  final GUI.SexDisplay this$0;
  GUI.SexDisplay$1(GUI.SexDisplay);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "TableSlidePanel.java"
public class GUI.TableSlidePanel extends GUI.ASlidePanel {
  Game.VarGetter[] baseVG;
  int type;
  public GUI.TableSlidePanel(GUI.PopupAbstract, int);
  public void redefineShire();
}
Compiled from "ClanRowScroll.java"
public class GUI.TextDisplay.ClanRowScroll extends GUI.TextDisplay.TableRowScroll {
  public GUI.TextDisplay.ClanRowScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
  public void calcRealizedSize();
  protected static Game.VarGetter var(int);
  protected static Game.VarGetter[] vars();
}
Compiled from "ClanString.java"
public class GUI.TextDisplay.ClanString extends GUI.TextDisplay.ClickableString {
  public GUI.TextDisplay.ClanString(Sentiens.Clan, GUI.TextDisplay.Papyrus);
  public void mousePressed(java.awt.event.MouseEvent);
}
Compiled from "ClickableString.java"
public class GUI.TextDisplay.ClickableString extends javax.swing.JComponent implements java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  protected java.lang.String content;
  protected GUI.TextDisplay.Papyrus parent;
  public GUI.TextDisplay.ClickableString(java.lang.String, GUI.TextDisplay.Papyrus);
  public void paint(java.awt.Graphics);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "DiscScroll.java"
public class GUI.TextDisplay.DiscScroll extends GUI.TextDisplay.Papyrus {
  public GUI.TextDisplay.DiscScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
}
Compiled from "MarketRowScroll.java"
public class GUI.TextDisplay.MarketRowScroll extends GUI.TextDisplay.TableRowScroll {
  public GUI.TextDisplay.MarketRowScroll(GUI.PopupAbstract);
  public void calcRealizedSize();
  protected static Game.VarGetter var(int);
  protected static Game.VarGetter[] vars();
}
Compiled from "MemScroll.java"
public class GUI.TextDisplay.MemScroll extends GUI.TextDisplay.Papyrus {
  public GUI.TextDisplay.MemScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
}
Compiled from "NameScroll.java"
public class GUI.TextDisplay.NameScroll extends GUI.TextDisplay.Papyrus {
  java.lang.String name;
  int sizo;
  public GUI.TextDisplay.NameScroll(GUI.PopupAbstract, int);
  public GUI.TextDisplay.NameScroll(GUI.PopupAbstract, java.lang.String, int);
  public void setNomen(java.lang.String);
  public void paint(java.awt.Graphics);
  public void calcRealizedSize();
}
Compiled from "OrderRowScroll.java"
public class GUI.TextDisplay.OrderRowScroll extends GUI.TextDisplay.TableRowScroll {
  public GUI.TextDisplay.OrderRowScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
  public void calcRealizedSize();
  protected static Game.VarGetter var(int);
  protected static Game.VarGetter[] vars();
  static {};
}
Compiled from "OrderRowScroll.java"
final class GUI.TextDisplay.OrderRowScroll$1 implements java.util.Comparator<Sentiens.Clan> {
  GUI.TextDisplay.OrderRowScroll$1();
  public int compare(Sentiens.Clan, Sentiens.Clan);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "Papyrus.java"
public class GUI.TextDisplay.Papyrus extends javax.swing.JPanel {
  protected int reference;
  protected int wid;
  protected int hgt;
  protected int numCS;
  protected GUI.PopupAbstract parent;
  protected GUI.TextDisplay.ClickableString[] clickstrings;
  public static final int BHGT;
  public static final java.awt.Color FGCOL;
  public static final java.awt.Color BGCOL;
  public static final java.awt.Font NORMFONT;
  public GUI.TextDisplay.Papyrus(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] basicS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] sancS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] prestS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] behS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] questS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] orderS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] shiredescS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] shirepopS(GUI.PopupAbstract);
  public static GUI.TextDisplay.Papyrus[] shiremktS(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
  protected Sentiens.Clan clan();
  protected Shirage.Shire shire();
  public void setRef(int);
  public void calcRealizedSize();
  public int getRealizedWidth();
  public int getRealizedHeight();
  protected void refreshWid(java.awt.Graphics, java.lang.String);
  public void resetCS();
  protected boolean haveCSAlready(int, int);
  protected boolean haveCSAlreadyOLD(int, int);
  protected void addToClickStrings(Sentiens.Clan, int, int, java.awt.Graphics);
  protected void addToClickStrings(Shirage.Shire, int, int, java.awt.Graphics);
  protected void writeP(java.awt.Graphics, java.lang.String, int, int);
  static {};
}
Compiled from "PrestScroll.java"
public class GUI.TextDisplay.PrestScroll extends GUI.TextDisplay.Papyrus {
  public GUI.TextDisplay.PrestScroll(GUI.PopupAbstract, int);
  public void paint(java.awt.Graphics);
  public void calcRealizedSize();
  static {};
}
Compiled from "QuestScroll.java"
public class GUI.TextDisplay.QuestScroll extends GUI.TextDisplay.Papyrus {
  public GUI.TextDisplay.QuestScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
  public void calcRealizedSize();
}
Compiled from "SancScroll.java"
public class GUI.TextDisplay.SancScroll extends GUI.TextDisplay.Papyrus {
  Ideology.Value[] sncs;
  double[] pcts;
  int c;
  public GUI.TextDisplay.SancScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
}
Compiled from "ShireDescScroll.java"
public class GUI.TextDisplay.ShireDescScroll extends GUI.TextDisplay.Papyrus {
  public GUI.TextDisplay.ShireDescScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
}
Compiled from "ShireString.java"
public class GUI.TextDisplay.ShireString extends GUI.TextDisplay.ClickableString {
  public GUI.TextDisplay.ShireString(Shirage.Shire, GUI.TextDisplay.Papyrus);
  public void mousePressed(java.awt.event.MouseEvent);
}
Compiled from "TableRowScroll.java"
public class GUI.TextDisplay.TableRowScroll extends GUI.TextDisplay.Papyrus {
  protected java.lang.String[][] contents;
  protected int[] widths;
  protected int numCols;
  public GUI.TextDisplay.TableRowScroll(GUI.PopupAbstract);
  public void paint(java.awt.Graphics);
  protected static Game.VarGetter var(int);
  protected void setupTableLabels(int, int, Game.VarGetter[]);
  protected void setupTableLabels(int, int, java.lang.String[]);
  protected void adjustWidth(int, java.lang.String);
  protected void calcSize();
}
Compiled from "AGPmain.java"
public class Game.AGPmain {
  public static java.util.Random rand;
  public static GUI.GUImain mainGUI;
  public static Game.Realm TheRealm;
  public static final int shireFPLen;
  public static final int shireLPLen;
  public static final int[] SR;
  public static boolean isGoing;
  public static boolean AUTOPILOT;
  public Game.AGPmain();
  public static void turnOffAutopilot();
  public static void turnOnAutopilot();
  public void init();
  public static void setRealm(Game.Realm);
  public static void setLastRealm();
  public void start();
  public static void pause();
  public static void play();
  public static int getShiresX();
  public static int getShiresY();
  public static Sentiens.Clan getAvatar();
  static {};
}
Compiled from "AGPmain.java"
final class Game.AGPmain$1 extends java.lang.Thread {
  Game.AGPmain$1();
  public void run();
}
Compiled from "Act.java"
public interface Game.Act {
  public abstract void doit(Sentiens.Clan);
  public abstract double estimateProfit(Sentiens.Clan);
  public abstract java.lang.String getDesc();
  public abstract int getSkill(Sentiens.Clan);
}
Compiled from "Logic.java"
class Game.And extends Game.Logic {
  public Game.And(Game.Logic...);
  public Game.And(int...);
  protected boolean sufficient(Sentiens.Clan);
  protected int[] getBest(Sentiens.Clan, int);
  public Game.Logic replica();
}
Compiled from "Assets.java"
public class Game.Assets implements Defs.Misc {
  public Game.Assets();
  public static int getRentGood(int);
  public static void gainXWeapon(Sentiens.Clan, short);
  public static void loseXWeapon(Sentiens.Clan, short);
  public static void gain(Sentiens.Clan, int);
  public static void lose(Sentiens.Clan, int);
  public static void gain(Sentiens.Clan, int, int);
  public static void lose(Sentiens.Clan, int, int);
  public static int FVmin(Sentiens.Clan, int);
  public static int FVmax(Sentiens.Clan, int);
  public static double estimateNAV(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Const.java"
public class Game.Const implements Defs.Misc {
  public Game.Const(Sentiens.Clan);
  static {};
}
Compiled from "Contract.java"
public class Game.Contract {
  public Game.Contract();
  public static Game.Contract getNewContract(Sentiens.Clan, Sentiens.Clan);
  public static Game.Contract getInstance();
  public boolean acceptable();
  public double getPreCalcedDemandValue();
  public double getPreCalcedOfferValue();
  public double getDemandValue();
  public double getOfferValue();
  public void enact();
  public void demandTribute(int);
  public void demandAllegiance();
  public void demandSuitor();
  public void demandRepentance();
  public void demandService(Ideology.Value);
  public void offerReward(int);
  public void offerPatronage();
  public void threatenMight();
  public void threatenProperty();
  public void threatenLife();
  public void threatenLifeAndProperty();
  public void threatenLineage();
  static boolean access$002(Game.Contract, boolean);
  static Sentiens.Clan access$100(Game.Contract);
  static Sentiens.Clan access$200(Game.Contract);
  static double access$300(Game.Contract, int);
  static {};
}
Compiled from "Contract.java"
class Game.Contract$1 implements AMath.Calc$Listener {
  final Game.Contract this$0;
  Game.Contract$1(Game.Contract);
  public void call(java.lang.Object);
}
Compiled from "Contract.java"
class Game.Contract$2 implements AMath.Calc$Transformer<java.lang.Boolean, java.lang.String> {
  final Game.Contract this$0;
  Game.Contract$2(Game.Contract);
  public java.lang.String transform(java.lang.Boolean);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "Contract.java"
public abstract class Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$DealTerm(Game.Contract);
  public double getEvaluation();
  protected abstract double evaluate();
  protected abstract boolean doit();
  protected abstract Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$DemandAllegianceTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$DemandAllegianceTerm(Game.Contract);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$DemandRepentanceTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$DemandRepentanceTerm(Game.Contract);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$DemandServiceTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  public Game.Contract$DemandServiceTerm(Game.Contract, Ideology.Value);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$DemandSuitorTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$DemandSuitorTerm(Game.Contract);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$DemandTributeTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  public Game.Contract$DemandTributeTerm(Game.Contract, int);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$OfferPatronageTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$OfferPatronageTerm(Game.Contract);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$OfferRewardTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  public Game.Contract$OfferRewardTerm(Game.Contract, int);
  protected double evaluate();
  protected boolean doit();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public abstract class Game.Contract$ThreatTerm extends Game.Contract$DealTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatTerm(Game.Contract);
  protected abstract int wgtOfValsToLose();
  protected double evaluate();
  protected boolean doit();
  protected int newBattlePifAvoid();
  protected int chgInBattlePifAvoid();
  protected Descriptions.GobLog$Reportable loggy();
}
Compiled from "Contract.java"
public class Game.Contract$ThreatenLifeTerm extends Game.Contract$ThreatTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatenLifeTerm(Game.Contract);
  protected int wgtOfValsToLose();
}
Compiled from "Contract.java"
public class Game.Contract$ThreatenMightTerm extends Game.Contract$ThreatTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatenMightTerm(Game.Contract);
  protected int wgtOfValsToLose();
}
Compiled from "Contract.java"
public class Game.Contract$ThreatenPropertyTerm extends Game.Contract$ThreatTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatenPropertyTerm(Game.Contract);
  protected int wgtOfValsToLose();
}
Compiled from "Contract.java"
public class Game.Contract$ThreatenTotalAnnihilationTerm extends Game.Contract$ThreatTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatenTotalAnnihilationTerm(Game.Contract);
  protected int wgtOfValsToLose();
}
Compiled from "Contract.java"
public class Game.Contract$ThreatenTotalSubversionTerm extends Game.Contract$ThreatTerm {
  final Game.Contract this$0;
  protected Game.Contract$ThreatenTotalSubversionTerm(Game.Contract);
  protected int wgtOfValsToLose();
}
Compiled from "DefFile.java"
public class Game.DefFile {
  public static int maxfilelength;
  public Game.DefFile();
  public static java.lang.String[] readFile(java.lang.String);
  static {};
}
Compiled from "Discoveries.java"
public class Game.Discoveries {
  public Game.Discoveries();
  public void discover(int);
}
Compiled from "Goods.java"
public class Game.Goods {
  public static int numGoods;
  public static int[] NGOODS;
  public static final int millet;
  public static final int land;
  public static final int meat;
  public static final int workers;
  public static final int chisel;
  public static final int scythe;
  public static final int pick;
  public static final int axe;
  public static final int machete;
  public static final int hammer;
  public static final int singmiel1;
  public static final int jewelry;
  public static final int encrustedskulls;
  public static final int stone;
  public static final int iron;
  public static final int silver;
  public static final int lumber;
  public static final int blood;
  public static final int excrement;
  public static final int skulls;
  public static final int gunpowder;
  public static final int yakhair;
  public static final int beasthide;
  public static final int leather;
  public static final int constructSt;
  public static final int constructW;
  public static final int constructI;
  public static final int constructSi;
  public static final int brains;
  public static final int bovads;
  public static final int donkeys;
  public static final int lobodonkeys;
  public static final int horses;
  public static final int stonecuirass;
  public static final int stonetophelm;
  public static final int ironchestplate;
  public static final int irontophelm;
  public static final int ironsurroundhelm;
  public static final int ironleggings;
  public static final int ironsleaves;
  public static final int ironboots;
  public static final int irongloves;
  public static final int beasthideshirt;
  public static final int beasthidecap;
  public static final int beasthidepants;
  public static final int beasthideboots;
  public static final int beasthidegloves;
  public static final int triangleshield;
  public static final int hoplonshield;
  public static final int dagger;
  public static final int staff;
  public static final int pike;
  public static final int dory;
  public static final int broadsword;
  public static final int mace;
  public static final int arquebus;
  public static final int culverin;
  public static final int crossbow;
  public static final int thugs;
  public static final int swordsmen;
  public static final int macemen;
  public static final int hammerers;
  public static final int hoplites;
  public static final int crossbowmen;
  public static final int arquebusiers;
  public static final int mtedcrossbowmen;
  public static final int mtedculveriners;
  public static final int donkeyknights;
  public Game.Goods();
  public static java.lang.String gName(int);
  static {};
}
Compiled from "History.java"
public class Game.History {
  protected byte actID;
  protected int objectID;
  protected int magnitude;
  public static final int DISCOVERED;
  public static final int CONQUERED;
  public static final int PROPHETIZED;
  public static final int HEALED;
  public static final int UNITED;
  public static final int FED;
  public static final int OVERTHREW;
  public static final int SLAYED;
  public static final int PROSELYTIZED;
  public static final int HADBUILT;
  public static final int MASTERED;
  public static final int DEFENDED;
  public static final int GONEMAD;
  public static final int PORTRAYED;
  public Game.History();
  public byte getAct();
  public int getObject();
  public int getMagnitude();
  public void addMagnitude();
  public java.lang.String desc();
  public java.lang.String guyName(int);
  public java.lang.String jobName();
  public java.lang.String skillName();
}
Compiled from "Job.java"
public class Game.Job implements Defs.Misc,Sentiens.Stress.Blameable {
  protected Game.Act[] acts;
  protected java.lang.String desc;
  public static final Game.Act NullAct;
  public static final Game.Labor Lobotomize;
  public static final Game.Job LOBOTOMIST;
  public static final Game.Labor ConstructS;
  public static final Game.Labor Build;
  public static final Game.Job MASON;
  public static final Game.Trade TradeA;
  public static final Game.Trade TradeW;
  public static final Game.Trade TradeC;
  public static final Game.Job TRADER;
  public static final Game.Labor MakeJewel;
  public static final Game.Labor ForgeArmor;
  public static final Game.Labor ForgeWeapon;
  public static final Game.Labor ForgeGun;
  public static final Game.Job SMITHY;
  public static final Game.Labor MakeBow;
  public static final Game.Labor ConstructW;
  public static final Game.Job CARPENTER;
  public static final Game.Labor Quarry;
  public static final Game.Labor MineIron;
  public static final Game.Labor MineSilver;
  public static final Game.Act Lumberjacking;
  public static final Game.Job MINER;
  public static final Game.Labor Settle;
  public static final Game.Labor Farm;
  public static final Game.Labor FarmF;
  public static final Game.Labor FarmA;
  public static final Game.Labor FarmAF;
  public static final Game.Job FARMER;
  public static final Game.Labor HerdB;
  public static final Game.Labor HerdD;
  public static final Game.Labor Butcher;
  public static final Game.Labor DungCollecting;
  public static final Game.Job HERDER;
  public static final Game.Labor GatherMillet;
  public static final Game.Labor HuntSloth;
  public static final Game.Job HUNTERGATHERER;
  public static final Game.Ministry JUDGE;
  public static final Game.Ministry NOBLE;
  public static final Game.Ministry HISTORIAN;
  public static final Game.Ministry PHILOSOPHER;
  public static final Game.Ministry TUTOR;
  public static final Game.Ministry SORCEROR;
  public static final Game.Ministry VIZIER;
  public static final Game.Ministry GENERAL;
  public static final Game.Ministry TREASURER;
  public static final Game.Ministry COURTESAN;
  public static final Game.Ministry APOTHECARY;
  public static final Game.Ministry ARCHITECT;
  public static final Game.Ministry[] ALL_MINISTRIES;
  public Game.Job(java.lang.String, Game.Act...);
  public Game.Act[] getActs();
  public static Questing.Quest$PatronedQuestFactory getPatronQuestFactoryForValue(Ideology.Value);
  public java.lang.String getDesc();
  public java.lang.String getDesc(Sentiens.Clan);
  public java.lang.String toString();
  static {};
}
Compiled from "Labor.java"
public class Game.Labor implements Game.Act,Defs.Misc {
  protected Game.Logic input;
  protected Game.Logic output;
  public Game.Labor(java.lang.String, Game.Logic, Game.Logic, Defs.P_, Game.Job, int);
  public Game.Labor(java.lang.String, Game.Logic, Game.Logic, Defs.P_, int, int, Game.Job, int);
  public Game.Labor(java.lang.String, Game.Logic, Defs.P_, Game.Job, int);
  public int[] expOut(Sentiens.Clan);
  public int[] expIn(Sentiens.Clan);
  public double estimateProfit(Sentiens.Clan);
  public void storeAllInputsInWM(Questing.Wealth.LaborQuest);
  public void addToAll(int);
  public static void socializeOrIntrospect(Sentiens.Clan);
  public void doit(Sentiens.Clan);
  public Defs.P_ skill();
  public int getSkill(Sentiens.Clan);
  public java.lang.String getDesc();
  public java.lang.String toString();
  public static Game.Labor newCraft(java.lang.String, Game.Logic, Game.Logic, Defs.P_, Game.Job, int);
  public static Game.Labor newReapC(java.lang.String, Game.Logic, Game.Logic, Defs.P_, int, Game.Job, int);
  public static Game.Labor newReapR(java.lang.String, Game.Logic, Game.Logic, Defs.P_, int, Game.Job, int);
  public static Game.Labor newTrade(java.lang.String, Game.Logic, Game.Job, int);
  static {};
}
Compiled from "Library.java"
public class Game.Library {
  public Game.Library();
  public void incCapacity();
  public int getCapacity();
  public Questing.Knowledge.KnowledgeBlock findKnowledge(Questing.Knowledge.KnowledgeType);
  public void putKnowledge(Questing.Knowledge.KnowledgeBlock);
  public void actuallyPutKnowledge(Questing.Knowledge.KnowledgeBlock);
  public Questing.Knowledge.KnowledgeBlock getKnowledge(int);
  public int getAmountOfKnowledge();
  public java.lang.String toString();
}
Compiled from "Logic.java"
public abstract class Game.Logic {
  protected static final int BUY;
  protected static final int SELL;
  protected static final int E;
  protected static final int[] tmpInventory;
  protected Game.Logic[] subLogics;
  protected int[] X;
  public Game.Logic();
  public abstract Game.Logic replica();
  public static Game.Logic[] replicate(Game.Logic[]);
  protected boolean sufficient(Sentiens.Clan);
  public int[] getBestGs(Sentiens.Clan, int);
  public int[] getTheBest(Sentiens.Clan, int);
  protected abstract int[] getBest(Sentiens.Clan, int);
  protected void setupTempInventory(Sentiens.Clan);
  public void addNodesToAll(Game.Labor);
  protected boolean better(int, int);
  public static Game.Logic[] L(int...);
  protected boolean searchTmp(int);
  protected void deleteFromX(int);
  public Game.Logic[] getSubLogics();
  static {};
}
Compiled from "Ministry.java"
public class Game.Ministry extends Game.Job {
  public Game.Ministry(Questing.Quest$PatronedQuestFactory);
  public java.lang.String getDesc(Sentiens.Clan);
  public Game.Service getService();
}
Compiled from "Logic.java"
class Game.Mult extends Game.Logic {
  int mult;
  public Game.Mult(int, Game.Logic);
  public Game.Mult(int, int);
  protected int[] getBest(Sentiens.Clan, int);
  public Game.Logic replica();
}
Compiled from "Logic.java"
class Game.Nada extends Game.Logic {
  Game.Nada();
  protected int[] getBest(Sentiens.Clan, int);
  public Game.Logic replica();
}
Compiled from "Logic.java"
class Game.Node extends Game.Logic {
  int node;
  public Game.Node(int);
  protected int[] getBest(Sentiens.Clan, int);
  public void addNodesToAll(Game.Labor);
  public Game.Logic replica();
}
Compiled from "ObjLedger.java"
public class Game.ObjLedger {
  public Game.ObjLedger();
  public static void newObjLedger();
}
Compiled from "Logic.java"
class Game.Or extends Game.Logic {
  public Game.Or(Game.Logic...);
  public Game.Or(int...);
  protected boolean sufficient(Sentiens.Clan);
  protected int[] getBest(Sentiens.Clan, int);
  public Game.Logic replica();
}
Compiled from "Realm.java"
public class Game.Realm {
  protected int shiresX;
  protected int shiresY;
  protected int startPop;
  protected Shirage.Shire[] shires;
  public Game.Realm(int, int, int);
  public static Game.Realm makeRealm(int, int, int);
  public static Game.Realm makeTestRealm(int, int, int);
  public void setupDefs();
  public void goOnce();
  public void run();
  protected void generateShires(int, int);
  public void doCensus();
  public void addToWaitingForImmigration(Sentiens.Clan);
  public void setNewImmigrations();
  public int getNumShires();
  public Shirage.Shire getShire(int, int);
  public Shirage.Shire getShire(int);
  public Shirage.Shire getShire(java.lang.String);
  public Shirage.Shire[] getShires();
  public Sentiens.Clan getClan(int);
  public Sentiens.Clan getClan(java.lang.String);
  public Sentiens.Clan getRandClan();
  public Sentiens.Clan[] getPopulation();
  public int popSize();
  public int getDay();
  public Sentiens.Mem getMem(int);
  public Game.VarGetter[] getPopVarGetters();
  public Game.VarGetter getPopVarGetter(int);
  public Game.VarGetter[] getMktVarGetters();
  public Game.VarGetter getMktVarGetter(int);
}
Compiled from "Service.java"
public class Game.Service implements Game.Act {
  Questing.Quest$PatronedQuestFactory questFactory;
  public Game.Service(Questing.Quest$PatronedQuestFactory);
  public void doit(Sentiens.Clan);
  public double estimateProfit(Sentiens.Clan);
  public java.lang.String getDesc();
  public int getSkill(Sentiens.Clan);
}
Compiled from "Trade.java"
public class Game.Trade implements Game.Act {
  public Game.Trade(java.lang.String, int[]);
  public static Game.Trade newTrade(java.lang.String, int...);
  public void doit(Sentiens.Clan);
  public double estimateProfit(Sentiens.Clan, Shirage.Shire);
  public double estimateProfit(Sentiens.Clan);
  public java.lang.String getDesc();
  public int getSkill(Sentiens.Clan);
  public int[] getGoods();
}
Compiled from "VarGetter.java"
public class Game.VarGetter implements Defs.Misc {
  public static final int SHIREVARS;
  public static final int MARKETVARS;
  public static final int CLANBASIC;
  public static final int CLANDISCS;
  public static final int CLANRANKSANCS;
  public static final int CLANSANCPCTS;
  public static final int CLANPRESTS;
  public static final int CLANBEHS;
  public static final int LONGITUDE;
  public static final int LATITUDE;
  public static final int ALTITUDE;
  public static final int FERTILITY;
  public static final int GOODNAME;
  public static final int BID;
  public static final int ASK;
  public static final int BIDSZ;
  public static final int ASKSZ;
  public static final int LAST;
  public static final int STAVG;
  public static final int LTAVG;
  public static final int CLANNAME;
  public static final int CLANJOB;
  public static final int CLANQUEST;
  public static final int SHIRENAME;
  public static final int CLANORDER;
  public static final int CLANASPIRATION;
  public static final int CLANBOSS;
  public static final int CLANCREED;
  public static Game.VarGetter[] popVGs();
  public static Game.VarGetter[] mktVGs();
  public java.lang.String getVGName();
  public int getType();
  public int getVar();
  public int getVarInt();
  public int getVarInt(Sentiens.Clan);
  public int getVarInt(Shirage.Shire);
  public int getVarInt(int);
  public int getVarInt(Sentiens.Clan, Shirage.Shire, int);
  public java.lang.String getVarString();
  public java.lang.String getVarString(Sentiens.Clan);
  public java.lang.String getVarString(Shirage.Shire);
  public java.lang.String getVarString(int);
  public java.lang.String getVarString(Sentiens.Clan, Shirage.Shire, int);
}
Compiled from "AIRewardSystem.java"
public class Government.AIRewardSystem extends Government.RewardSystem {
  public Government.AIRewardSystem();
}
Compiled from "Bureaus.java"
public class Government.Bureaus {
  public static final Government.Bureaus$Bureau MILITARY;
  public static final Government.Bureaus$Bureau RELIGION;
  public static final Government.Bureaus$Bureau ECONOMY;
  public static final Government.Bureaus$Bureau INTERIOR;
  public Government.Bureaus();
  static {};
}
Compiled from "Bureaus.java"
final class Government.Bureaus$1 extends Government.Bureaus$Bureau {
  Government.Bureaus$1();
  public Descriptions.NameVars$NameVar topTitle();
}
Compiled from "Bureaus.java"
final class Government.Bureaus$2 extends Government.Bureaus$Bureau {
  Government.Bureaus$2();
  public Descriptions.NameVars$NameVar topTitle();
}
Compiled from "Bureaus.java"
final class Government.Bureaus$3 extends Government.Bureaus$Bureau {
  Government.Bureaus$3();
  public Descriptions.NameVars$NameVar topTitle();
}
Compiled from "Bureaus.java"
final class Government.Bureaus$4 extends Government.Bureaus$Bureau {
  Government.Bureaus$4();
  public Descriptions.NameVars$NameVar topTitle();
}
Compiled from "Bureaus.java"
public abstract class Government.Bureaus$Bureau {
  public Government.Bureaus$Bureau();
  public abstract Descriptions.NameVars$NameVar topTitle();
}
Compiled from "CustomRewardSystem.java"
public class Government.CustomRewardSystem extends Government.RewardSystem {
  public Government.CustomRewardSystem();
}
Compiled from "Order.java"
public class Government.Order implements Sentiens.Stress.Blameable {
  public static Government.Order createBy(Sentiens.Clan);
  public java.util.Set<Sentiens.Clan> getMembers();
  public void addMember(Sentiens.Clan);
  public void removeMember(Sentiens.Clan);
  public void selfDestruct();
  public void moveTo(Sentiens.Clan, Government.Order);
  public Sentiens.Clan getRuler();
  public int size();
  public int numShiresControlled();
  public java.util.Set<Sentiens.Clan> getFollowers(Sentiens.Clan, boolean, boolean);
  public java.util.Set<Sentiens.Clan> getFollowers(Sentiens.Clan, Shirage.Shire, boolean, boolean);
  public static java.lang.String getName(byte, byte, boolean);
  public java.lang.String getFollowerName();
  public java.lang.String getNationName();
  public java.lang.String getTitle(Sentiens.Clan);
  public Government.Treasury getTreasury();
  public boolean requestMillet(Sentiens.Clan, int);
  public boolean requestFeed(Sentiens.Clan);
  public boolean preferableOver(Sentiens.Clan);
  public boolean preferableOver(Government.Order, Sentiens.Clan);
  public Government.Order[] getRivalOrders();
  public Government.Order[] getNeighboringOrders();
  public void acquireShire(Shirage.Shire, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "Order.java"
class Government.Order$Ledger {
  public static java.util.Set<Sentiens.Clan> getFollowers(Sentiens.Clan, boolean, boolean);
  public static java.util.Set<Sentiens.Clan> getFollowers(Sentiens.Clan, Shirage.Shire, boolean, boolean);
  static java.util.Set access$000();
  static {};
}
Compiled from "RewardSystem.java"
public abstract class Government.RewardSystem {
  public Government.RewardSystem();
}
Compiled from "Treasury.java"
public class Government.Treasury {
  public Government.Treasury(java.util.Collection<Sentiens.Clan>);
  public void takePercent(Sentiens.Clan, double);
  public void collectPProfitFromAll(double, Sentiens.Clan);
  public void collectPWealthFromAll(double, Sentiens.Clan);
}
Compiled from "AbstractValue.java"
public abstract class Ideology.AbstractValue implements Ideology.Value {
  protected final java.lang.String desc;
  protected final Defs.Q_ quest;
  protected final Game.Ministry ministry;
  protected final Defs.P_[] relSkills;
  public Ideology.AbstractValue(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public java.lang.String description(Sentiens.Clan);
  public java.lang.String toString();
  public Defs.Q_ pursuit();
  public Game.Ministry getMinistry();
  public Defs.P_[] getRelevantSkills();
  public int ordinal();
}
Compiled from "Assessable.java"
public interface Ideology.Assessable {
  public abstract double evaluate(Sentiens.Clan, Sentiens.Clan, int);
}
Compiled from "ToDoValue.java"
public class Ideology.ToDoValue implements Ideology.Value {
  public Ideology.ToDoValue();
  public double compare(Sentiens.Clan, Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description(Sentiens.Clan);
  public Defs.Q_ pursuit();
  public Game.Ministry getMinistry();
  public Defs.P_[] getRelevantSkills();
  public int ordinal();
}
Compiled from "ValuatableValue.java"
public abstract class Ideology.ValuatableValue extends Ideology.AbstractValue implements Ideology.Assessable {
  public Ideology.ValuatableValue(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public double compare(Sentiens.Clan, Sentiens.Clan, Sentiens.Clan);
  public double compare(double, double);
  protected double evaluateContent(Sentiens.Clan, Sentiens.Clan, int, double);
  public final double evaluate(Sentiens.Clan, Sentiens.Clan, int);
  public abstract int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Value.java"
public interface Ideology.Value extends Sentiens.Stress.Blameable {
  public abstract double compare(Sentiens.Clan, Sentiens.Clan, Sentiens.Clan);
  public abstract java.lang.String description(Sentiens.Clan);
  public abstract Defs.Q_ pursuit();
  public abstract Game.Ministry getMinistry();
  public abstract Defs.P_[] getRelevantSkills();
  public abstract int ordinal();
}
Compiled from "Values.java"
public class Ideology.Values {
  static int ord;
  public static final Ideology.Value MIGHT;
  public static final Ideology.Value WEALTH;
  public static final Ideology.Value INFLUENCE;
  public static final Ideology.Value RIGHTEOUSNESS;
  public static final Ideology.Value ALLEGIANCE;
  public static final Ideology.Value LEGACY;
  public static final Ideology.Value BEAUTY;
  public static final Ideology.Value COPULATION;
  public static final Ideology.Value HARMONY;
  public static final Ideology.Value EXPERTISE;
  public static final Ideology.Value KNOWLEDGE;
  public static final Ideology.Value SPIRITUALITY;
  public static Ideology.Value[] All;
  public static final int MAXVAL;
  public static final int MINVAL;
  public Ideology.Values();
  public static double logComp(int, int);
  public static double logComp(double, double);
  public static double logCompNeg(double, double);
  public static double fourbitComp(int, int);
  static {};
}
Compiled from "Values.java"
final class Ideology.Values$1 extends Ideology.ValuatableValue {
  Ideology.Values$1(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$10 extends Ideology.ValuatableValue {
  Ideology.Values$10(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$11 extends Ideology.ValuatableValue {
  Ideology.Values$11(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$12 extends Ideology.ValuatableValue {
  Ideology.Values$12(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$2 extends Ideology.ValuatableValue {
  Ideology.Values$2(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$3 extends Ideology.ValuatableValue {
  Ideology.Values$3(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$4 extends Ideology.ValuatableValue {
  Ideology.Values$4(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public double compare(double, double);
  public int value(Sentiens.Clan, Sentiens.Clan);
  protected double evaluateContent(Sentiens.Clan, Sentiens.Clan, int, double);
}
Compiled from "Values.java"
final class Ideology.Values$5 extends Ideology.ValuatableValue {
  Ideology.Values$5(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public java.lang.String description(Sentiens.Clan);
  public double compare(double, double);
  public int value(Sentiens.Clan, Sentiens.Clan);
  protected double evaluateContent(Sentiens.Clan, Sentiens.Clan, int, double);
}
Compiled from "Values.java"
final class Ideology.Values$6 extends Ideology.ValuatableValue {
  Ideology.Values$6(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$7 extends Ideology.ValuatableValue {
  Ideology.Values$7(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$8 extends Ideology.ValuatableValue {
  Ideology.Values$8(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Values.java"
final class Ideology.Values$9 extends Ideology.ValuatableValue {
  Ideology.Values$9(java.lang.String, Defs.Q_, Game.Ministry, Defs.P_[]);
  public double compare(double, double);
  public int value(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Memo.java"
public class Ledger.Memo {
  public Ledger.Memo();
  public static int[] get();
  public static int take(int);
  public static void copy(int[]);
  public static void add(int, int);
  static {};
}
Compiled from "Entry.java"
public class Markets.Entry {
  public static final int BIDDIR;
  public static final int OFFERDIR;
  public static final int AUCTION;
  public int px;
  public Sentiens.Clan trader;
  public Markets.Entry();
  public void set(int, Sentiens.Clan);
  public void set(Markets.Entry);
  public void setTrader(Sentiens.Clan);
  public int getPX();
  public void makeRented();
  public void makeUnrented();
  public boolean isRented();
  public java.lang.String toString();
}
Compiled from "EntryB.java"
public class Markets.EntryB extends Markets.Entry {
  public short des;
  public Markets.EntryB();
  public void set(int, Sentiens.Clan, short);
  public void set(Markets.Entry);
  public void setDes(byte);
}
Compiled from "FoodMarket.java"
public class Markets.FoodMarket extends Markets.MktAbstract {
  public static final int MILLETVAL;
  public static final int MEATVAL;
  public Markets.FoodMarket(int, Shirage.Shire);
  public void gainAsset(Sentiens.Clan);
  public void sellFair(Sentiens.Clan);
  public int sellablePX(Sentiens.Clan);
  public void hitBid(Sentiens.Clan);
  protected void hitBid(Sentiens.Clan, int);
  public int lastPrice();
  public int stAvg();
  public int ltAvg();
  public int getBidSz();
  public int getAskSz();
  public int bestOffer();
  public int bestBid();
  public int buyablePX(Sentiens.Clan);
  public void buyFair(Sentiens.Clan);
  public void liftOffer(Sentiens.Clan);
  public void removeBid(int);
  public void removeOffer(int);
  public void removeOffer(Sentiens.Clan);
  public void chgOffer(int, int);
  public void chgBid(int, int);
  protected void auction();
  public void clearMarket();
  public void loseAsset(Sentiens.Clan);
}
Compiled from "GoodsAcquirable.java"
public interface Markets.GoodsAcquirable {
  public abstract boolean alterG(Markets.MktO, int);
}
Compiled from "MktAbstract.java"
public abstract class Markets.MktAbstract implements Defs.Misc {
  protected static final int VOL_DISPLAY_PERIOD;
  protected int g;
  protected int periodVol;
  boolean hasTradedEver;
  protected Shirage.Shire home;
  protected final java.util.logging.Logger Log;
  public Markets.MktAbstract();
  public int getGood();
  public abstract int lastPrice();
  public abstract int stAvg();
  public abstract int ltAvg();
  public abstract int getBidSz();
  public abstract int getAskSz();
  public abstract int bestOffer();
  public abstract int bestBid();
  public abstract int sellablePX(Sentiens.Clan);
  public abstract int buyablePX(Sentiens.Clan);
  public abstract void buyFair(Sentiens.Clan);
  public abstract void sellFair(Sentiens.Clan);
  public abstract void liftOffer(Sentiens.Clan);
  public abstract void hitBid(Sentiens.Clan);
  public abstract void removeBid(int);
  public abstract void removeOffer(int);
  public abstract void chgOffer(int, int);
  public abstract void chgBid(int, int);
  protected abstract void auction();
  protected abstract void clearMarket();
  public java.lang.String getReport();
  public void newDay();
  public abstract void loseAsset(Sentiens.Clan);
  public abstract void gainAsset(Sentiens.Clan);
  public int getPeriodVol();
}
Compiled from "MktO.java"
public class Markets.MktO extends Markets.MktAbstract {
  protected static double expandSZ;
  protected static double contractSZ;
  protected static final int DEFAULTPX;
  protected static final int STARTSZ;
  public static final double[] RATES;
  public static final int NOASK;
  public static final int NOBID;
  public static final int NOBIDDERCANPAY;
  protected java.lang.String report;
  protected int LTAvg;
  protected int STAvg;
  protected int LastPX;
  protected int MaxPX;
  protected int MinPX;
  protected int offerlen;
  protected int bidlen;
  protected int bb;
  protected Markets.Entry[] Bids;
  protected Markets.Entry[] Offers;
  public Markets.MktO();
  public Markets.MktO(int, Shirage.Shire);
  public static int annuity(int, Sentiens.Clan);
  public static int interest(int, Sentiens.Clan);
  public int lastPrice();
  public int stAvg();
  public int ltAvg();
  public int getBidSz();
  public int getAskSz();
  public int bestOffer();
  public int bestBid();
  public static java.lang.String bidString(int);
  public static java.lang.String offerString(int);
  public int bestBidPlc();
  protected void updateAvgs(int);
  public int buyablePX(Sentiens.Clan);
  public int sellablePX(Sentiens.Clan);
  public int riskySellPX(Sentiens.Clan);
  public void buyFair(Sentiens.Clan);
  public void sellFair(Sentiens.Clan);
  public void sellFairAndRemoveBid(Sentiens.Clan);
  public void liftOffer(Sentiens.Clan);
  protected void liftOffer(Sentiens.Clan, int);
  public void hitBid(Sentiens.Clan);
  protected void hitBid(Sentiens.Clan, int);
  protected void selfTransaction(Sentiens.Clan, int, int);
  protected boolean transaction(Sentiens.Clan, Sentiens.Clan, int);
  protected void sendToInventory(Sentiens.Clan);
  protected void alterWMG(Sentiens.Clan, int);
  protected int fairPX(Sentiens.Clan, double);
  protected void checkPriceLegality(Sentiens.Clan, int);
  protected int estFairOffer(Sentiens.Clan);
  protected int estFairBid(Sentiens.Clan);
  protected int bidFromNowhere(Sentiens.Clan);
  protected int offerFromNowhere(Sentiens.Clan);
  protected double imbalance();
  public void removeBids(Sentiens.Clan);
  public void removeBids(int);
  public void removeBid(int);
  public void removeBid(Sentiens.Clan);
  public void removeOffers(int);
  public void removeOffer(int);
  public void gainAsset(Sentiens.Clan);
  public void loseAsset(Sentiens.Clan);
  protected int findBid(Sentiens.Clan);
  protected int findOffer(Sentiens.Clan);
  public void placeBid(Sentiens.Clan, int);
  public int placeOffer(Sentiens.Clan, int);
  protected final void bidlenDown(int);
  protected final void bidlenUp();
  protected final void offerlenDown(int);
  protected final void offerlenUp();
  public Markets.Entry alterEntry(Markets.Entry, int, int);
  protected int vchg(int, int, Markets.Entry[], int);
  protected int chgEntry(int, int, Markets.Entry[], int);
  public void chgBid(int, int);
  public void chgOffer(int, int);
  protected void auction();
  public void clearMarket();
  protected int addSpread(int, double);
  public java.lang.String[][] getBaikai();
  public void printBaikai();
  protected static int findPlcInV(int, Markets.Entry[], int, int);
  public void finish();
  protected void addReport(java.lang.String);
  public java.lang.String getReport();
  public java.lang.String toString();
  public java.lang.String printOneLineStatus();
  public int findNumberOf(Sentiens.Clan, int);
  static {};
}
Compiled from "RentMarket.java"
public class Markets.RentMarket extends Markets.MktO {
  public Markets.RentMarket(int, Shirage.Shire);
  public int bestOffer();
  protected int estFairOffer(Sentiens.Clan);
  protected void hitBid(Sentiens.Clan, int);
  public int placeOffer(Sentiens.Clan, int);
  public void sellFairAndRemoveBid(Sentiens.Clan);
  public void chgOffer(int, int);
  public void removeOffers(int);
  public void removeOffer(int);
  public void removeRental(Sentiens.Clan);
  public void liftOffer(Sentiens.Clan);
  protected void selfTransaction(Sentiens.Clan, int, int);
  public void clearMarket();
  public java.lang.String toString();
  public java.lang.String printOneLineStatus();
  public int numberUnrentedRemaining();
  public boolean isBestPlaceCorrect();
}
Compiled from "XWeaponMarket.java"
public class Markets.XWeaponMarket extends Markets.MktO {
  public Markets.XWeaponMarket(Shirage.Shire);
  public void placeBid(Sentiens.Clan, int);
  public int placeOffer(Sentiens.Clan, int);
  protected int vchg(int, int, Markets.Entry[], int);
  public void gainAsset(Sentiens.Clan);
  public void loseAsset(Sentiens.Clan);
  public void setUpTmpXP(short);
  public void finish();
}
Compiled from "AllegianceQuests.java"
public class Questing.AllegianceQuests {
  public Questing.AllegianceQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  static Game.Ministry access$000(Sentiens.Clan);
}
Compiled from "AllegianceQuests.java"
final class Questing.AllegianceQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.AllegianceQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "AllegianceQuests.java"
public class Questing.AllegianceQuests$AllegianceQuest extends Questing.Quest$PatronedQuest {
  public Questing.AllegianceQuests$AllegianceQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "AllegianceQuests.java"
public class Questing.AllegianceQuests$FindNewMaster extends Questing.Quest {
  public Questing.AllegianceQuests$FindNewMaster(Sentiens.Clan);
  public java.lang.String description();
  public void avatarPursue();
  public void pursue();
}
Compiled from "AllegianceQuests.java"
class Questing.AllegianceQuests$FindNewMaster$1 implements AMath.Calc$Listener {
  final Questing.AllegianceQuests$FindNewMaster this$0;
  Questing.AllegianceQuests$FindNewMaster$1(Questing.AllegianceQuests$FindNewMaster);
  public void call(java.lang.Object);
}
Compiled from "CreedQuests.java"
public class Questing.CreedQuests {
  public Questing.CreedQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
}
Compiled from "CreedQuests.java"
final class Questing.CreedQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.CreedQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "CreedQuests.java"
public class Questing.CreedQuests$PriestQuest extends Questing.Quest$PatronedQuest {
  public Questing.CreedQuests$PriestQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
}
Compiled from "CreedQuests.java"
public class Questing.CreedQuests$TweakCommandments extends Questing.Quest$PatronedQuest {
  public Questing.CreedQuests$TweakCommandments(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
  public void avatarPursue();
}
Compiled from "CreedQuests.java"
class Questing.CreedQuests$TweakCommandments$1 implements AMath.Calc$Listener {
  final Questing.CreedQuests$TweakCommandments this$0;
  Questing.CreedQuests$TweakCommandments$1(Questing.CreedQuests$TweakCommandments);
  public void call(java.lang.Object);
}
Compiled from "DestroyQuest.java"
public class Questing.DestroyQuest extends Questing.Quest$TargetQuest implements Questing.Quest$Unquenchable {
  public Questing.DestroyQuest(Sentiens.Clan, Sentiens.Clan, Questing.Quest$RelationCondition);
  public void pursue();
  public java.lang.String description();
  public boolean isUnquenchable();
}
Compiled from "ExpertiseQuests.java"
public class Questing.ExpertiseQuests {
  public static final Defs.P_[] ALLSKILLS;
  public Questing.ExpertiseQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  public static boolean practiceSkill(Sentiens.Clan, Defs.P_);
  static Defs.P_ access$000(Sentiens.Clan);
  static boolean access$100(Sentiens.Clan, Sentiens.Clan, Defs.P_);
  static Sentiens.Clan access$200(Defs.P_, Sentiens.Clan);
  static {};
}
Compiled from "ExpertiseQuests.java"
final class Questing.ExpertiseQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.ExpertiseQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "ExpertiseQuests.java"
class Questing.ExpertiseQuests$2 {
  static final int[] $SwitchMap$Defs$P_;
  static {};
}
Compiled from "ExpertiseQuests.java"
public class Questing.ExpertiseQuests$LearnQuest extends Questing.Quest {
  public Questing.ExpertiseQuests$LearnQuest(Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
  public void avatarPursue();
  static void access$300(Questing.ExpertiseQuests$LearnQuest, Defs.P_, Sentiens.Clan);
}
Compiled from "ExpertiseQuests.java"
class Questing.ExpertiseQuests$LearnQuest$1 implements AMath.Calc$Listener {
  final Questing.ExpertiseQuests$LearnQuest this$0;
  Questing.ExpertiseQuests$LearnQuest$1(Questing.ExpertiseQuests$LearnQuest);
  public void call(java.lang.Object);
}
Compiled from "ExpertiseQuests.java"
public class Questing.ExpertiseQuests$TeachQuest extends Questing.Quest$PatronedQuest {
  public Questing.ExpertiseQuests$TeachQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
}
Compiled from "FaithQuests.java"
public class Questing.FaithQuests {
  public static Questing.FaithQuests$ActOfFaith INCANTATE;
  public static Questing.FaithQuests$ActOfFaith RITUAL;
  public static Questing.FaithQuests$ActOfFaith ONEWITHNATURE;
  public static Questing.FaithQuests$ActOfFaith ONEWITHGOD;
  public static Questing.FaithQuests$ActOfFaith SACRIFICE;
  public Questing.FaithQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  static Questing.FaithQuests$ActOfFaith[] access$000();
  static {};
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.FaithQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$2 extends Questing.FaithQuests$ActOfFaith {
  Questing.FaithQuests$2();
  public java.lang.String desc();
  public int conduct(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$3 extends Questing.FaithQuests$ActOfFaith {
  Questing.FaithQuests$3();
  public java.lang.String desc();
  public int conduct(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$4 extends Questing.FaithQuests$ActOfFaith {
  Questing.FaithQuests$4();
  public java.lang.String desc();
  public int conduct(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$5 extends Questing.FaithQuests$ActOfFaith {
  Questing.FaithQuests$5();
  public java.lang.String desc();
  public int conduct(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "FaithQuests.java"
final class Questing.FaithQuests$6 extends Questing.FaithQuests$GoodsAcquirableActOfFaith {
  Questing.FaithQuests$6();
  public java.lang.String desc();
  public int conduct(Sentiens.Clan, Sentiens.Clan);
  public void affect(java.lang.Object);
  public boolean alterG(Markets.MktO, int);
}
Compiled from "FaithQuests.java"
public abstract class Questing.FaithQuests$ActOfFaith {
  public Questing.FaithQuests$ActOfFaith();
  public void affect(java.lang.Object);
  public abstract java.lang.String desc();
  public abstract int conduct(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String toString();
}
Compiled from "FaithQuests.java"
public class Questing.FaithQuests$ContactQuest extends Questing.Quest$PatronedQuest {
  public Questing.FaithQuests$ContactQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
  public void avatarPursue();
  public Questing.FaithQuests$ActOfFaith getCurrAof();
  static Questing.FaithQuests$ActOfFaith access$102(Questing.FaithQuests$ContactQuest, Questing.FaithQuests$ActOfFaith);
}
Compiled from "FaithQuests.java"
class Questing.FaithQuests$ContactQuest$1 implements AMath.Calc$Listener {
  final Questing.FaithQuests$ContactQuest this$0;
  Questing.FaithQuests$ContactQuest$1(Questing.FaithQuests$ContactQuest);
  public void call(java.lang.Object);
}
Compiled from "FaithQuests.java"
public abstract class Questing.FaithQuests$GoodsAcquirableActOfFaith extends Questing.FaithQuests$ActOfFaith implements Markets.GoodsAcquirable {
  public Questing.FaithQuests$GoodsAcquirableActOfFaith();
}
Compiled from "HarmonyQuests.java"
public class Questing.HarmonyQuests {
  public Questing.HarmonyQuests();
}
Compiled from "HarmonyQuests.java"
public class Questing.HarmonyQuests$RelieveStressQuest extends Questing.Quest {
  public Questing.HarmonyQuests$RelieveStressQuest(Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "ImmigrationQuests.java"
public class Questing.ImmigrationQuests {
  public Questing.ImmigrationQuests();
}
Compiled from "ImmigrationQuests.java"
public class Questing.ImmigrationQuests$EmigrateQuest extends Questing.Quest {
  public Questing.ImmigrationQuests$EmigrateQuest(Sentiens.Clan, Shirage.Shire);
  public void pursue();
  public java.lang.String description();
}
Compiled from "ImmigrationQuests.java"
public class Questing.ImmigrationQuests$FleeQuest extends Questing.Quest {
  public Questing.ImmigrationQuests$FleeQuest(Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "InfluenceQuests.java"
public class Questing.InfluenceQuests {
  public Questing.InfluenceQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
}
Compiled from "InfluenceQuests.java"
final class Questing.InfluenceQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.InfluenceQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "InfluenceQuests.java"
public class Questing.InfluenceQuests$InfluenceQuest extends Questing.Quest$PatronedQuest {
  public Questing.InfluenceQuests$InfluenceQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void avatarPursue();
  public void pursue();
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$InfluenceQuest$1 implements AMath.Calc$Listener {
  final Questing.InfluenceQuests$InfluenceQuest this$0;
  Questing.InfluenceQuests$InfluenceQuest$1(Questing.InfluenceQuests$InfluenceQuest);
  public void call(java.lang.Object);
}
Compiled from "InfluenceQuests.java"
public class Questing.InfluenceQuests$OrganizeMinistries extends Questing.Quest {
  public Questing.InfluenceQuests$OrganizeMinistries(Sentiens.Clan);
  public java.lang.String description();
  public void avatarPursue();
  public void pursue();
  static java.util.ArrayList access$000(Questing.InfluenceQuests$OrganizeMinistries);
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$OrganizeMinistries$1 implements AMath.Calc$Transformer<Sentiens.Clan, java.lang.String> {
  final Questing.InfluenceQuests$OrganizeMinistries this$0;
  Questing.InfluenceQuests$OrganizeMinistries$1(Questing.InfluenceQuests$OrganizeMinistries);
  public java.lang.String transform(Sentiens.Clan);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$OrganizeMinistries$2 implements AMath.Calc$Listener {
  final Questing.InfluenceQuests$OrganizeMinistries this$0;
  Questing.InfluenceQuests$OrganizeMinistries$2(Questing.InfluenceQuests$OrganizeMinistries);
  public void call(java.lang.Object);
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$OrganizeMinistries$2$1 implements AMath.Calc$Listener {
  final Sentiens.Clan val$clan;
  final Questing.InfluenceQuests$OrganizeMinistries$2 this$1;
  Questing.InfluenceQuests$OrganizeMinistries$2$1(Questing.InfluenceQuests$OrganizeMinistries$2, Sentiens.Clan);
  public void call(java.lang.Object);
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$OrganizeMinistries$2$2 implements AMath.Calc$Transformer<Ideology.Value, java.lang.String> {
  final Sentiens.Clan val$clan;
  final Questing.InfluenceQuests$OrganizeMinistries$2 this$1;
  Questing.InfluenceQuests$OrganizeMinistries$2$2(Questing.InfluenceQuests$OrganizeMinistries$2, Sentiens.Clan);
  public java.lang.String transform(Ideology.Value);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "InfluenceQuests.java"
public class Questing.InfluenceQuests$PropagandaQuest extends Questing.Quest {
  public Questing.InfluenceQuests$PropagandaQuest(Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "InfluenceQuests.java"
public class Questing.InfluenceQuests$RecruitmentQuest extends Questing.Quest$TransactionQuest {
  public Questing.InfluenceQuests$RecruitmentQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  protected Questing.Quest$FindTargetAbstract findWhat();
  protected void setContractDemand();
  protected void setContractOffer();
  protected void successCase();
  protected void failCase();
  protected void report(boolean);
}
Compiled from "InfluenceQuests.java"
class Questing.InfluenceQuests$RecruitmentQuest$1 extends Questing.Quest$FindTargetAbstract {
  final Questing.InfluenceQuests$RecruitmentQuest this$0;
  Questing.InfluenceQuests$RecruitmentQuest$1(Questing.InfluenceQuests$RecruitmentQuest, Sentiens.Clan, Sentiens.Clan[], Sentiens.Stress.Blameable);
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
  protected void onFailure();
  protected java.lang.String searchDesc();
}
Compiled from "KnowledgeObserver.java"
class Questing.Knowledge.DataPoint<X> {
  X x;
  int y;
  public Questing.Knowledge.DataPoint(X, int);
  public java.lang.String toString();
}
Compiled from "ExplorationQuest.java"
public class Questing.Knowledge.ExplorationQuest extends Questing.Knowledge.ObservationQuest<Shirage.Shire, Shirage.Shire> {
  public Questing.Knowledge.ExplorationQuest(Sentiens.Clan, Sentiens.Clan, Questing.Knowledge.ShireExplorer, Shirage.Shire[], int);
  protected Shirage.Shire determineTarget();
  protected void doObservation(Shirage.Shire);
  protected void doObservation(java.lang.Object);
  protected java.lang.Object determineTarget();
}
Compiled from "JobObserver.java"
public class Questing.Knowledge.JobObserver extends Questing.Knowledge.MapKnowledgeObserver<Sentiens.Clan, Game.Job> {
  public Questing.Knowledge.JobObserver();
  public void observe(Sentiens.Clan);
  public Questing.Knowledge.KnowledgeBlock<Game.Job> createKnowledgeBlock(Sentiens.Clan);
  public void observe(java.lang.Object);
}
Compiled from "JobObserver.java"
class Questing.Knowledge.JobObserver$1 extends Questing.Knowledge.Top3Block<Game.Job> {
  final Questing.Knowledge.JobObserver this$0;
  Questing.Knowledge.JobObserver$1(Questing.Knowledge.JobObserver, Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.Map);
  protected void alterBrain(Sentiens.Clan);
}
Compiled from "KnowledgeBlock.java"
public abstract class Questing.Knowledge.KnowledgeBlock<T> {
  protected java.lang.Object[] x;
  protected int[] y;
  protected int obsUsed;
  protected int date;
  protected final Questing.Knowledge.KnowledgeType kType;
  public Questing.Knowledge.KnowledgeBlock(Sentiens.Clan, Questing.Knowledge.KnowledgeType);
  public java.lang.Object[] getXs();
  public int[] getYs();
  public int getNumObservationsUsed();
  public int getDateRecorded();
  public Sentiens.Clan getDiscoverer();
  public java.lang.String toString();
  protected java.lang.String descO(T);
  public void useKnowledge(Sentiens.Clan, boolean);
  public void useKnowledge(Sentiens.Clan);
  protected abstract void alterBrain(Sentiens.Clan);
  public boolean isApplicableFor(Questing.Knowledge.KnowledgeType);
  public abstract Questing.Knowledge.KnowledgeType relK();
}
Compiled from "KnowledgeObserver.java"
public abstract class Questing.Knowledge.KnowledgeObserver<O, T> {
  public Questing.Knowledge.KnowledgeObserver();
  public abstract void observe(O);
  public abstract Questing.Knowledge.KnowledgeBlock<T> createKnowledgeBlock(Sentiens.Clan);
}
Compiled from "KnowledgeQuests.java"
public class Questing.Knowledge.KnowledgeQuests {
  static Defs.G_[] equip;
  public Questing.Knowledge.KnowledgeQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  static AMath.Calc$ThreeObjects<Shirage.Shire, java.lang.Object, java.lang.Integer> bestInShires(Sentiens.Clan, Questing.Knowledge.KnowledgeType, double, boolean, boolean, boolean);
  static {};
}
Compiled from "KnowledgeQuests.java"
final class Questing.Knowledge.KnowledgeQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.Knowledge.KnowledgeQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "KnowledgeQuests.java"
class Questing.Knowledge.KnowledgeQuests$2 {
  static final int[] $SwitchMap$Defs$K_;
  static {};
}
Compiled from "KnowledgeQuests.java"
public class Questing.Knowledge.KnowledgeQuests$KnowledgeQuest extends Questing.Quest$PatronedQuest {
  public Questing.Knowledge.KnowledgeQuests$KnowledgeQuest(Sentiens.Clan, Sentiens.Clan);
  public Questing.Knowledge.KnowledgeQuests$KnowledgeQuest(Sentiens.Clan, Sentiens.Clan, Questing.Knowledge.KnowledgeType);
  public void pursue();
  public void avatarPursue();
  void useKnowledgeBlock(Questing.Knowledge.KnowledgeBlock);
  public void pursueKnowledge(Questing.Knowledge.KnowledgeType);
  public java.lang.String description();
}
Compiled from "KnowledgeQuests.java"
class Questing.Knowledge.KnowledgeQuests$KnowledgeQuest$1 implements AMath.Calc$Listener {
  final Questing.Knowledge.KnowledgeQuests$KnowledgeQuest this$0;
  Questing.Knowledge.KnowledgeQuests$KnowledgeQuest$1(Questing.Knowledge.KnowledgeQuests$KnowledgeQuest);
  public void call(java.lang.Object);
}
Compiled from "KnowledgeQuests.java"
class Questing.Knowledge.KnowledgeQuests$KnowledgeQuest$2 implements AMath.Calc$Transformer<Questing.Knowledge.KnowledgeType, java.lang.String> {
  final Questing.Knowledge.KnowledgeQuests$KnowledgeQuest this$0;
  Questing.Knowledge.KnowledgeQuests$KnowledgeQuest$2(Questing.Knowledge.KnowledgeQuests$KnowledgeQuest);
  public java.lang.String transform(Questing.Knowledge.KnowledgeType);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "KnowledgeType.java"
public interface Questing.Knowledge.KnowledgeType {
}
Compiled from "KnowledgeObserver.java"
abstract class Questing.Knowledge.ListKnowledgeObserver<O, T> extends Questing.Knowledge.KnowledgeObserver<O, T> {
  protected java.util.List<Questing.Knowledge.DataPoint<T>> plot;
  Questing.Knowledge.ListKnowledgeObserver();
}
Compiled from "KnowledgeObserver.java"
abstract class Questing.Knowledge.MapKnowledgeObserver<O, T> extends Questing.Knowledge.KnowledgeObserver<O, T> {
  protected java.util.Map<T, java.lang.Integer> map;
  Questing.Knowledge.MapKnowledgeObserver();
}
Compiled from "ObservationQuest.java"
public class Questing.Knowledge.ObservationQuest<O, T> extends Questing.Quest$PatronedQuest {
  protected final O[] observationPopulation;
  protected transient int place;
  public Questing.Knowledge.ObservationQuest(Sentiens.Clan, Sentiens.Clan, Questing.Knowledge.KnowledgeObserver<O, T>, O[], int);
  public void pursue();
  protected O determineTarget();
  protected void doObservation(O);
  public java.lang.String description();
}
Compiled from "ShireExplorer.java"
public class Questing.Knowledge.ShireExplorer extends Questing.Knowledge.MapKnowledgeObserver<Shirage.Shire, Shirage.Shire> {
  public Questing.Knowledge.ShireExplorer(Defs.SK_, Sentiens.Clan);
  public void observe(Shirage.Shire);
  public Questing.Knowledge.KnowledgeBlock<Shirage.Shire> createKnowledgeBlock(Sentiens.Clan);
  public void observe(java.lang.Object);
  static Defs.SK_ access$000(Questing.Knowledge.ShireExplorer);
}
Compiled from "ShireExplorer.java"
class Questing.Knowledge.ShireExplorer$1 extends Questing.Knowledge.Top3Block<Shirage.Shire> {
  final Questing.Knowledge.ShireExplorer this$0;
  Questing.Knowledge.ShireExplorer$1(Questing.Knowledge.ShireExplorer, Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.Map);
  protected void alterBrain(Sentiens.Clan);
  public java.lang.String toString();
  protected java.lang.String descO(Shirage.Shire);
  protected java.lang.String descO(java.lang.Object);
}
Compiled from "ShireExplorer.java"
class Questing.Knowledge.ShireExplorer$2 {
  static final int[] $SwitchMap$Defs$SK_;
  static {};
}
Compiled from "KnowledgeBlock.java"
abstract class Questing.Knowledge.Top3Block<T> extends Questing.Knowledge.KnowledgeBlock<T> {
  public Questing.Knowledge.Top3Block(Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.Map<T, java.lang.Integer>);
  public Questing.Knowledge.Top3Block(Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.List<Questing.Knowledge.DataPoint<T>>);
  public Questing.Knowledge.KnowledgeType relK();
}
Compiled from "ValueObserver.java"
public class Questing.Knowledge.ValueObserver extends Questing.Knowledge.MapKnowledgeObserver<Sentiens.Clan, Ideology.Value> {
  public Questing.Knowledge.ValueObserver();
  public void observe(Sentiens.Clan);
  public Questing.Knowledge.KnowledgeBlock<Ideology.Value> createKnowledgeBlock(Sentiens.Clan);
  public void observe(java.lang.Object);
}
Compiled from "ValueObserver.java"
class Questing.Knowledge.ValueObserver$1 extends Questing.Knowledge.Top3Block<Ideology.Value> {
  final Questing.Knowledge.ValueObserver this$0;
  Questing.Knowledge.ValueObserver$1(Questing.Knowledge.ValueObserver, Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.Map);
  protected void alterBrain(Sentiens.Clan);
}
Compiled from "WeaponObserver.java"
public class Questing.Knowledge.WeaponObserver extends Questing.Knowledge.ListKnowledgeObserver<Government.Order, Defs.G_> {
  int[] scores;
  public Questing.Knowledge.WeaponObserver();
  public void observe(Government.Order);
  public Questing.Knowledge.KnowledgeBlock<Defs.G_> createKnowledgeBlock(Sentiens.Clan);
  public void observe(java.lang.Object);
}
Compiled from "WeaponObserver.java"
class Questing.Knowledge.WeaponObserver$1 extends Questing.Knowledge.Top3Block<Defs.G_> {
  final Questing.Knowledge.WeaponObserver this$0;
  Questing.Knowledge.WeaponObserver$1(Questing.Knowledge.WeaponObserver, Sentiens.Clan, Questing.Knowledge.KnowledgeType, java.util.List);
  protected void alterBrain(Sentiens.Clan);
}
Compiled from "LegacyQuests.java"
public class Questing.LegacyQuests {
  public Questing.LegacyQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
}
Compiled from "LegacyQuests.java"
final class Questing.LegacyQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.LegacyQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "LegacyQuests.java"
public class Questing.LegacyQuests$LegacyQuest extends Questing.Quest$PatronedQuest {
  public Questing.LegacyQuests$LegacyQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
  public void avatarPursue();
  static void access$000(Questing.LegacyQuests$LegacyQuest, Ideology.Value);
  static double access$100(Questing.LegacyQuests$LegacyQuest);
}
Compiled from "LegacyQuests.java"
class Questing.LegacyQuests$LegacyQuest$1 implements AMath.Calc$Listener {
  final Questing.LegacyQuests$LegacyQuest this$0;
  Questing.LegacyQuests$LegacyQuest$1(Questing.LegacyQuests$LegacyQuest);
  public void call(java.lang.Object);
}
Compiled from "LegacyQuests.java"
class Questing.LegacyQuests$LegacyQuest$2 implements AMath.Calc$Transformer<Ideology.Value, java.lang.String> {
  final Questing.LegacyQuests$LegacyQuest this$0;
  Questing.LegacyQuests$LegacyQuest$2(Questing.LegacyQuests$LegacyQuest);
  public java.lang.String transform(Ideology.Value);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "ExpandOrderQuest.java"
public class Questing.Might.ExpandOrderQuest extends Questing.Quest {
  public Questing.Might.ExpandOrderQuest(Sentiens.Clan);
  public void pursue();
  public void considerOptions(java.lang.Object[], int[], int);
  public java.lang.String description();
}
Compiled from "FormArmyQuest.java"
public class Questing.Might.FormArmyQuest extends Questing.Quest$BranchQuest implements Questing.Might.InvolvesArmy {
  public Questing.Might.FormArmyQuest(Sentiens.Clan, Questing.Might.WarQuest);
  static boolean recruit(Sentiens.Clan, Questing.Might.WarQuest);
  protected Questing.Might.WarQuest getRoot();
  protected boolean checkArmyStatus();
  public void pursue();
  public java.util.Set<Questing.Might.FormArmyQuest> getArmy();
  public void setArmy(java.util.Set<Questing.Might.FormArmyQuest>);
  public java.lang.String description();
}
Compiled from "FormOwnArmyQuest.java"
public class Questing.Might.FormOwnArmyQuest extends Questing.Might.FormArmyQuest {
  public Questing.Might.FormOwnArmyQuest(Sentiens.Clan, Questing.Might.WarQuest);
  public void pursue();
  public java.util.Set<Questing.Might.FormArmyQuest> getArmy();
  public java.lang.String description();
}
Compiled from "InvolvesArmy.java"
public interface Questing.Might.InvolvesArmy {
  public abstract java.util.Set<Questing.Might.FormArmyQuest> getArmy();
  public abstract void setArmy(java.util.Set<Questing.Might.FormArmyQuest>);
  public abstract Sentiens.Clan getDoer();
}
Compiled from "ManeuverForBattle.java"
public class Questing.Might.ManeuverForBattle extends Questing.Quest {
  public Questing.Might.ManeuverForBattle(Sentiens.Clan, Questing.Might.WarQuest);
  public void pursue();
  public java.lang.String description();
}
Compiled from "MightQuests.java"
public class Questing.Might.MightQuests {
  public Questing.Might.MightQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  public static boolean desiresFight(Sentiens.Clan, Sentiens.Clan, boolean);
  public static double expPvictory(Sentiens.Clan, Sentiens.Clan, boolean);
  static void access$200(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "MightQuests.java"
final class Questing.Might.MightQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.Might.MightQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "MightQuests.java"
public class Questing.Might.MightQuests$BasicMightQuest extends Questing.Quest {
  public Questing.Might.MightQuests$BasicMightQuest(Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "MightQuests.java"
public class Questing.Might.MightQuests$ChallengeMightQuest extends Questing.Quest$TransactionQuest {
  public Questing.Might.MightQuests$ChallengeMightQuest(Sentiens.Clan);
  public Questing.Might.MightQuests$ChallengeMightQuest(Sentiens.Clan, Ideology.Value);
  protected Questing.Quest$FindTargetAbstract findWhat();
  protected void setContractDemand();
  protected void avatarSetContractDemand();
  protected void setContractOffer();
  protected void successCase();
  protected void failCase();
  protected void report(boolean);
  public java.lang.String description();
  static void access$000(Questing.Might.MightQuests$ChallengeMightQuest, Ideology.Value);
  static Sentiens.Clan access$100(Questing.Might.MightQuests$ChallengeMightQuest);
}
Compiled from "MightQuests.java"
class Questing.Might.MightQuests$ChallengeMightQuest$1 extends Questing.Quest$FindTargetAbstract {
  final Questing.Might.MightQuests$ChallengeMightQuest this$0;
  Questing.Might.MightQuests$ChallengeMightQuest$1(Questing.Might.MightQuests$ChallengeMightQuest, Sentiens.Clan, Sentiens.Clan[], Sentiens.Stress.Blameable);
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
  protected void onFailure();
  protected int triesPerTurn();
  protected java.lang.String searchDesc();
}
Compiled from "MightQuests.java"
class Questing.Might.MightQuests$ChallengeMightQuest$2 implements AMath.Calc$Listener {
  final Questing.Might.MightQuests$ChallengeMightQuest this$0;
  Questing.Might.MightQuests$ChallengeMightQuest$2(Questing.Might.MightQuests$ChallengeMightQuest);
  public void call(java.lang.Object);
}
Compiled from "MightQuests.java"
class Questing.Might.MightQuests$ChallengeMightQuest$3 implements AMath.Calc$Transformer<Ideology.Value, java.lang.String> {
  final Questing.Might.MightQuests$ChallengeMightQuest this$0;
  Questing.Might.MightQuests$ChallengeMightQuest$3(Questing.Might.MightQuests$ChallengeMightQuest);
  public java.lang.String transform(Ideology.Value);
  public java.lang.Object transform(java.lang.Object);
}
Compiled from "MightQuests.java"
public class Questing.Might.MightQuests$DefendPatron extends Questing.Quest$PatronedQuest {
  public Questing.Might.MightQuests$DefendPatron(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "WarQuest.java"
public class Questing.Might.WarQuest extends Questing.Quest$RootQuest implements Questing.Might.InvolvesArmy {
  Questing.Might.WarQuest$Status status;
  public static Questing.Quest start(Sentiens.Clan, Sentiens.Clan);
  public java.util.Set<Questing.Might.FormArmyQuest> getArmy();
  public void setArmy(java.util.Set<Questing.Might.FormArmyQuest>);
  public void winWar();
  public void loseWar();
  public static void onBattleEndStatus(Questing.Might.WarQuest, Questing.Might.WarQuest, War.BattleField);
  public void beReady();
  protected void cleanup();
  protected java.lang.String desc();
  public Sentiens.Clan getTarget();
  static {};
}
Compiled from "WarQuest.java"
class Questing.Might.WarQuest$1 {
  static final int[] $SwitchMap$War$BattleField$EndStatus;
  static final int[] $SwitchMap$Questing$Might$WarQuest$Status;
  static {};
}
Compiled from "WarQuest.java"
final class Questing.Might.WarQuest$Status extends java.lang.Enum<Questing.Might.WarQuest$Status> {
  public static final Questing.Might.WarQuest$Status FORMING;
  public static final Questing.Might.WarQuest$Status MANEUVERING;
  public static final Questing.Might.WarQuest$Status REGROUPING;
  public static final Questing.Might.WarQuest$Status VICTORIOUS;
  public static final Questing.Might.WarQuest$Status DEFEATED;
  public static Questing.Might.WarQuest$Status[] values();
  public static Questing.Might.WarQuest$Status valueOf(java.lang.String);
  static {};
}
Compiled from "MiscQuests.java"
public class Questing.MiscQuests {
  public Questing.MiscQuests();
}
Compiled from "MiscQuests.java"
public class Questing.MiscQuests$CatchUpQuest extends Questing.Quest$TargetQuest {
  public Questing.MiscQuests$CatchUpQuest(Sentiens.Clan, Sentiens.Clan, Ideology.Value);
  public void pursue();
  public java.lang.String description();
}
Compiled from "MiscQuests.java"
public class Questing.MiscQuests$PreachQuest extends Questing.Quest$TargetQuest {
  protected Sentiens.Clan patron;
  protected int tries;
  public Questing.MiscQuests$PreachQuest(Sentiens.Clan, Sentiens.Clan);
  public Questing.MiscQuests$PreachQuest(Sentiens.Clan, Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "PersecutionQuests.java"
public class Questing.PersecutionQuests {
  public Questing.PersecutionQuests();
  static {};
}
Compiled from "PersecutionQuests.java"
final class Questing.PersecutionQuests$1 implements Questing.Quest$RelationCondition {
  Questing.PersecutionQuests$1();
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "PersecutionQuests.java"
public class Questing.PersecutionQuests$FindHeretic extends Questing.Quest$FindTargetAbstract {
  public Questing.PersecutionQuests$FindHeretic(Sentiens.Clan);
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
  protected void onFailure();
  protected java.lang.String searchDesc();
  public java.lang.String description();
}
Compiled from "PersecutionQuests.java"
public class Questing.PersecutionQuests$FindInfidel extends Questing.Quest$FindTargetAbstract {
  public Questing.PersecutionQuests$FindInfidel(Sentiens.Clan);
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
  protected java.lang.String searchDesc();
  public java.lang.String description();
  protected void onFailure();
}
Compiled from "PersecutionQuests.java"
public abstract class Questing.PersecutionQuests$PersecuteAbstract extends Questing.Quest$TransactionQuest {
  public Questing.PersecutionQuests$PersecuteAbstract(Sentiens.Clan);
  public void failDestroy();
  public java.lang.String shortName();
  protected abstract Questing.Quest$FindTargetAbstract findWhat();
  protected abstract void setContractDemand();
  protected void setContractOffer();
  protected void successCase();
  protected void failCase();
  protected void report(boolean);
}
Compiled from "PersecutionQuests.java"
public class Questing.PersecutionQuests$PersecuteHeretic extends Questing.PersecutionQuests$PersecuteAbstract {
  public Questing.PersecutionQuests$PersecuteHeretic(Sentiens.Clan);
  protected void setContractDemand();
  public java.lang.String description();
  protected Questing.Quest$FindTargetAbstract findWhat();
}
Compiled from "PersecutionQuests.java"
public class Questing.PersecutionQuests$PersecuteInfidel extends Questing.PersecutionQuests$PersecuteAbstract {
  public Questing.PersecutionQuests$PersecuteInfidel(Sentiens.Clan);
  protected void setContractDemand();
  public java.lang.String description();
  protected Questing.Quest$FindTargetAbstract findWhat();
}
Compiled from "QStack.java"
public class Questing.QStack extends java.util.Stack<Questing.Quest> {
  public Questing.QStack(int);
  public Questing.Quest getOfType(java.lang.Class);
  public boolean prioritizeExistingMemberOfType(java.lang.Class<? extends Questing.Quest>);
  public Questing.Quest peek();
  public Questing.Quest push(Questing.Quest);
  public Questing.Quest peekUp();
  public void quenchQuests();
  public java.lang.Object peek();
  public java.lang.Object push(java.lang.Object);
}
Compiled from "Quest.java"
public abstract class Questing.Quest {
  protected Sentiens.Clan Me;
  public Questing.Quest(Sentiens.Clan);
  public void pursueQuest();
  public abstract void pursue();
  public void avatarPursue();
  protected void success();
  protected void success(Sentiens.Stress.Blameable);
  protected void success(Sentiens.Stress.Blameable...);
  protected void finish();
  public void specialDelete();
  protected void failure(Sentiens.Stress.Blameable);
  protected void failure(Sentiens.Stress.Blameable...);
  protected void failure(Sentiens.Stress.Stressor);
  protected Questing.Quest upQuest();
  public java.lang.String shortName();
  public abstract java.lang.String description();
  public java.lang.String toString();
  public Sentiens.Clan getDoer();
  protected static Avatar.AvatarConsole avatarConsole();
  public Sentiens.Clan avatar();
  protected static void replaceAndDoNewQuest(Sentiens.Clan, Questing.Quest);
  public static Questing.Quest QtoQuest(Sentiens.Clan, Defs.Q_);
}
Compiled from "Quest.java"
class Questing.Quest$1 {
  static final int[] $SwitchMap$Defs$Q_;
  static {};
}
Compiled from "Quest.java"
public abstract class Questing.Quest$BranchQuest extends Questing.Quest {
  protected final Questing.Quest$RootQuest root;
  public Questing.Quest$BranchQuest(Sentiens.Clan, Questing.Quest$RootQuest);
  protected void finish();
}
Compiled from "Quest.java"
public class Questing.Quest$DefaultQuest extends Questing.Quest$PatronedQuest {
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  public Questing.Quest$DefaultQuest(Sentiens.Clan);
  public Questing.Quest$DefaultQuest(Sentiens.Clan, boolean);
  public void pursue();
  public java.lang.String description();
}
Compiled from "Quest.java"
final class Questing.Quest$DefaultQuest$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.Quest$DefaultQuest$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Quest.java"
public abstract class Questing.Quest$FindTargetAbstract extends Questing.Quest implements Questing.Quest$RelationCondition {
  protected final Sentiens.Clan[] candidates;
  protected final Sentiens.Stress.Blameable blameSource;
  public Questing.Quest$FindTargetAbstract(Sentiens.Clan);
  public Questing.Quest$FindTargetAbstract(Sentiens.Clan, Sentiens.Clan[], Sentiens.Stress.Blameable);
  public java.lang.String description();
  public void setTarget(Sentiens.Clan);
  public void pursue();
  protected abstract java.lang.String searchDesc();
  protected abstract void onFailure();
  public void avatarPursue();
  protected int triesPerTurn();
}
Compiled from "Quest.java"
class Questing.Quest$FindTargetAbstract$1 implements AMath.Calc$Listener {
  final Questing.Quest$FindTargetAbstract this$0;
  Questing.Quest$FindTargetAbstract$1(Questing.Quest$FindTargetAbstract);
  public void call(java.lang.Object);
}
Compiled from "Quest.java"
public class Questing.Quest$GradedQuest {
  public Questing.Quest$GradedQuest(Questing.Quest, double);
  public Questing.Quest getQuest();
  public double getRating();
  public java.lang.String toString();
}
Compiled from "Quest.java"
public abstract class Questing.Quest$PatronedQuest extends Questing.Quest implements Questing.Quest$PatronedQuestInterface {
  protected Sentiens.Clan patron;
  public Questing.Quest$PatronedQuest(Sentiens.Clan);
  public Questing.Quest$PatronedQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursueQuest();
  public Sentiens.Clan getPatron();
  public java.lang.String toString();
}
Compiled from "Quest.java"
public abstract class Questing.Quest$PatronedQuestFactory {
  public Questing.Quest$PatronedQuestFactory(java.lang.Class<? extends Questing.Quest$PatronedQuest>);
  public abstract Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
  public java.lang.Class<? extends Questing.Quest$PatronedQuest> getQuestType();
}
Compiled from "Quest.java"
public interface Questing.Quest$PatronedQuestInterface {
  public abstract Sentiens.Clan getPatron();
}
Compiled from "Quest.java"
public class Questing.Quest$QuestRetrievalQuest extends Questing.Quest {
  public Questing.Quest$QuestRetrievalQuest(Sentiens.Clan, java.lang.Class<? extends Questing.Quest>[]);
  public void pursue();
  public java.lang.String description();
}
Compiled from "Quest.java"
public interface Questing.Quest$RelationCondition {
  public abstract boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "Quest.java"
public abstract class Questing.Quest$RootQuest extends Questing.Quest {
  protected Questing.Quest$BranchQuest branch;
  public Questing.Quest$RootQuest(Sentiens.Clan);
  public Questing.Quest$BranchQuest getBranch();
  public void pursue();
  public java.lang.String description();
  protected void setup();
  protected void cleanup();
  protected abstract java.lang.String desc();
}
Compiled from "Quest.java"
public abstract class Questing.Quest$TargetQuest extends Questing.Quest {
  protected Sentiens.Clan target;
  public Questing.Quest$TargetQuest(Sentiens.Clan);
  public Questing.Quest$TargetQuest(Sentiens.Clan, Sentiens.Clan);
  public void setTarget(Sentiens.Clan);
  public Sentiens.Clan getTarget();
  public static Sentiens.Clan[] getReasonableCandidates(Sentiens.Clan);
}
Compiled from "Quest.java"
public abstract class Questing.Quest$TransactionQuest extends Questing.Quest$TargetQuest {
  protected int timesLeft;
  public Questing.Quest$TransactionQuest(Sentiens.Clan);
  public void pursue();
  public void avatarPursue();
  protected abstract Questing.Quest$FindTargetAbstract findWhat();
  protected abstract void setContractDemand();
  protected abstract void setContractOffer();
  protected void avatarSetContractDemand();
  protected void avatarSetContractOffer();
  protected abstract void successCase();
  protected abstract void failCase();
  protected Game.Contract contract();
  protected abstract void report(boolean);
}
Compiled from "Quest.java"
public interface Questing.Quest$Unquenchable {
  public abstract boolean isUnquenchable();
}
Compiled from "RomanceQuests.java"
public class Questing.RomanceQuests {
  public Questing.RomanceQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
}
Compiled from "RomanceQuests.java"
final class Questing.RomanceQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.RomanceQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "RomanceQuests.java"
public class Questing.RomanceQuests$BreedQuest extends Questing.Quest$TargetQuest {
  public Questing.RomanceQuests$BreedQuest(Sentiens.Clan);
  public Questing.RomanceQuests$BreedQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public void courtSucceeded();
  public void courtFailed();
  public java.lang.String shortName();
  public java.lang.String description();
  static void access$000(Questing.RomanceQuests$BreedQuest);
}
Compiled from "RomanceQuests.java"
public class Questing.RomanceQuests$BreedWithPatronQuest extends Questing.Quest$PatronedQuest {
  public Questing.RomanceQuests$BreedWithPatronQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "RomanceQuests.java"
public class Questing.RomanceQuests$Compete4MateQuest extends Questing.Quest$TargetQuest {
  public Questing.RomanceQuests$Compete4MateQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public void success(Sentiens.Stress.Blameable);
  public void failure(Sentiens.Stress.Blameable);
  public java.lang.String shortName();
  public java.lang.String description();
}
Compiled from "RomanceQuests.java"
public class Questing.RomanceQuests$FindMate extends Questing.Quest$FindTargetAbstract implements Questing.Quest$RelationCondition {
  public Questing.RomanceQuests$FindMate(Sentiens.Clan);
  public boolean meetsReq(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String shortName();
  public java.lang.String description();
  protected void onFailure();
  protected java.lang.String searchDesc();
}
Compiled from "SplendorQuests.java"
public class Questing.SplendorQuests {
  public Questing.SplendorQuests();
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
}
Compiled from "SplendorQuests.java"
final class Questing.SplendorQuests$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.SplendorQuests$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "SplendorQuests.java"
public class Questing.SplendorQuests$UpgradeDomicileQuest extends Questing.Quest$PatronedQuest implements Markets.GoodsAcquirable {
  public Questing.SplendorQuests$UpgradeDomicileQuest(Sentiens.Clan, Sentiens.Clan);
  public java.lang.String description();
  public void pursue();
  public boolean alterG(Markets.MktO, int);
  static {};
}
Compiled from "BuildWealthQuest.java"
public class Questing.Wealth.BuildWealthQuest extends Questing.Quest$PatronedQuest {
  public static Questing.Quest$PatronedQuestFactory getMinistryFactory();
  public Questing.Wealth.BuildWealthQuest(Sentiens.Clan, Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
}
Compiled from "BuildWealthQuest.java"
final class Questing.Wealth.BuildWealthQuest$1 extends Questing.Quest$PatronedQuestFactory {
  Questing.Wealth.BuildWealthQuest$1(java.lang.Class);
  public Questing.Quest createFor(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "IntelligentLaborQuest.java"
public class Questing.Wealth.IntelligentLaborQuest extends Questing.Quest$PatronedQuest implements Markets.GoodsAcquirable {
  public Questing.Wealth.IntelligentLaborQuest(Sentiens.Clan, Sentiens.Clan);
  public Questing.Wealth.IntelligentLaborQuest(Sentiens.Clan, Game.Labor);
  public void pursue();
  public void avatarPursue();
  public boolean alterG(Markets.MktO, int);
  public java.lang.String description();
  static Sentiens.Clan access$000(Questing.Wealth.IntelligentLaborQuest);
  static Questing.Wealth.TradeMemory access$102(Questing.Wealth.IntelligentLaborQuest, Questing.Wealth.TradeMemory);
  static Sentiens.Clan access$200(Questing.Wealth.IntelligentLaborQuest);
  static void access$300(Questing.Wealth.IntelligentLaborQuest);
  static Sentiens.Clan access$400(Questing.Wealth.IntelligentLaborQuest);
  static void access$500(Questing.Wealth.IntelligentLaborQuest, int);
}
Compiled from "IntelligentLaborQuest.java"
class Questing.Wealth.IntelligentLaborQuest$1 implements AMath.Calc$Listener {
  final Questing.Wealth.IntelligentLaborQuest this$0;
  Questing.Wealth.IntelligentLaborQuest$1(Questing.Wealth.IntelligentLaborQuest);
  public void call(java.lang.Object);
}
Compiled from "IntelligentLaborQuest.java"
class Questing.Wealth.IntelligentLaborQuest$2 implements AMath.Calc$Listener {
  final Markets.MktO val$mkt;
  final int val$i;
  final Questing.Wealth.IntelligentLaborQuest this$0;
  Questing.Wealth.IntelligentLaborQuest$2(Questing.Wealth.IntelligentLaborQuest, Markets.MktO, int);
  public void call(java.lang.Object);
}
Compiled from "LaborQuest.java"
public class Questing.Wealth.LaborQuest extends Questing.Quest implements Markets.GoodsAcquirable {
  public static final int WORKMEMORY;
  public Questing.Wealth.LaborQuest(Sentiens.Clan, Game.Job);
  public Questing.Wealth.LaborQuest(Sentiens.Clan);
  public java.lang.String description();
  public void avatarPursue();
  public void pursue();
  public void resetWM();
  public void setWM(int, int);
  public boolean alterG(Markets.MktO, int);
  public void suspendG(int);
  public int[] getWM();
  public int[] getWMX();
  public int getAbsWM(int);
  public int getWMX(int);
  public Game.Labor getChosenAct();
  public int getStage();
  public void liquidateWM();
  public void setChosenAct(Game.Labor);
  static Sentiens.Clan access$000(Questing.Wealth.LaborQuest);
  static int access$108(Questing.Wealth.LaborQuest);
  static void access$200(Questing.Wealth.LaborQuest);
}
Compiled from "LaborQuest.java"
class Questing.Wealth.LaborQuest$1 implements AMath.Calc$Listener {
  final Questing.Wealth.LaborQuest this$0;
  Questing.Wealth.LaborQuest$1(Questing.Wealth.LaborQuest);
  public void call(java.lang.Object);
}
Compiled from "TradeMemory.java"
class Questing.Wealth.TradeInventorySlot {
  int haveNum;
  int needNum;
  Questing.Wealth.TradeInventorySlot();
  boolean get(int);
  void liftNecessaryOffer(int, Sentiens.Clan);
  void produceAndSellFair(int, Sentiens.Clan);
  boolean hasOutstanding();
}
Compiled from "TradeMemory.java"
public class Questing.Wealth.TradeMemory {
  public Questing.Wealth.TradeMemory(Game.Labor, Sentiens.Clan);
  public double estimateProfit(Sentiens.Clan);
  public void placeBuys(Sentiens.Clan);
  public void placeSells(Sentiens.Clan);
  public boolean addToInventory(int, int);
  public boolean noMoreInputsNeeded();
  public java.util.Map<Defs.G_, Questing.Wealth.TradeInventorySlot> getBuySlots();
  static {};
}
Compiled from "TradingQuest.java"
public class Questing.Wealth.TradingQuest extends Questing.Quest implements Markets.GoodsAcquirable {
  public Questing.Wealth.TradingQuest(Sentiens.Clan);
  public void pursue();
  public java.lang.String description();
  public boolean alterG(Markets.MktO, int);
}
Compiled from "TradingQuest.java"
class Questing.Wealth.TradingQuest$TradePlan {
  Questing.Wealth.TradingQuest$TradePlan(int, int, int);
  static java.util.List access$000();
  static int access$100(Questing.Wealth.TradingQuest$TradePlan);
  static int access$200(Questing.Wealth.TradingQuest$TradePlan);
  static int access$300(Questing.Wealth.TradingQuest$TradePlan);
  static {};
}
Compiled from "Beliefs.java"
public class Sentiens.Beliefs {
  public static final Sentiens.Beliefs$ReligionType ANIMISTIC;
  public static final Sentiens.Beliefs$ReligionType SACRIFICIAL;
  public static final Sentiens.Beliefs$ReligionType RITUALISTIC;
  public static final Sentiens.Beliefs$ReligionType SPIRITUAL;
  public Sentiens.Beliefs();
  public static Sentiens.Beliefs$Ritual Meditation();
  public static Sentiens.Beliefs$Ritual HumanSacrifice();
  public static Sentiens.Beliefs$Ritual Charity();
  public static Sentiens.Beliefs$Ritual Prophecy();
  static {};
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$1 implements Sentiens.Beliefs$ReligionType {
  Sentiens.Beliefs$1();
  public int summonPower(Sentiens.Clan);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$2 implements Sentiens.Beliefs$ReligionType {
  Sentiens.Beliefs$2();
  public int summonPower(Sentiens.Clan);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$3 implements Sentiens.Beliefs$ReligionType {
  Sentiens.Beliefs$3();
  public int summonPower(Sentiens.Clan);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$4 implements Sentiens.Beliefs$ReligionType {
  Sentiens.Beliefs$4();
  public int summonPower(Sentiens.Clan);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$5 extends Sentiens.Beliefs$Ritual {
  Sentiens.Beliefs$5(java.lang.String);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$6 extends Sentiens.Beliefs$Ritual {
  Sentiens.Beliefs$6(java.lang.String);
  public void sacrificeGoblin();
  public void sacrificeDonkey();
  public void sacrificeBovad();
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$7 extends Sentiens.Beliefs$Ritual {
  Sentiens.Beliefs$7(java.lang.String);
  public void donate(Sentiens.Clan, double);
}
Compiled from "Beliefs.java"
final class Sentiens.Beliefs$8 extends Sentiens.Beliefs$Ritual {
  Sentiens.Beliefs$8(java.lang.String);
  public void prophecize(double, boolean);
}
Compiled from "Beliefs.java"
public class Sentiens.Beliefs$BeliefSystem {
  public final Sentiens.Beliefs$Ritual Meditation;
  public Sentiens.Beliefs$BeliefSystem();
}
Compiled from "Beliefs.java"
public interface Sentiens.Beliefs$ReligionType {
  public abstract int summonPower(Sentiens.Clan);
}
Compiled from "Beliefs.java"
public abstract class Sentiens.Beliefs$Ritual {
  public Sentiens.Beliefs$Ritual(java.lang.String);
  public boolean isBelieved();
  public void setBelieved(boolean);
  public void fulfill(int);
  public void fulfill(double);
  public int getFulfullments();
  public void sacrificeGoblin();
  public void sacrificeDonkey();
  public void sacrificeBovad();
  public void donate(Sentiens.Clan, double);
  public void prophecize(double, boolean);
  public java.lang.String toString();
}
Compiled from "Clan.java"
public class Sentiens.Clan implements Defs.Misc,Sentiens.Stress.Blameable {
  public static int DMC;
  public static final int MIN_DMC_RESERVE;
  protected static final int MUTATION_PCT;
  protected byte[] name;
  protected java.lang.String nameOverride;
  protected boolean gender;
  protected Sentiens.Clan suitor;
  protected byte[] firstMateTraits;
  protected int numSpawns;
  protected int firstSpawnAgeDiff;
  protected int ID;
  protected Shirage.Shire homeShire;
  protected Shirage.Shire currentShire;
  protected Shirage.Shire governedShire;
  protected Game.Job job;
  protected Game.Job aspiration;
  protected Game.Job backupJob;
  protected int[] assets;
  protected int[] inventory;
  protected int expIncome;
  protected Sentiens.Clan boss;
  protected Government.Order order;
  protected int myB;
  protected int minionB;
  protected int subminionB;
  protected int minionN;
  protected int subminionN;
  protected int pointsBN;
  protected boolean lastSuccess;
  protected int cumIncome;
  public Sentiens.Ideology FB;
  public Sentiens.Stress.Amygdala AB;
  public Sentiens.Memory MB;
  public Sentiens.Legacy LB;
  protected int lastBeh;
  protected int lastBehN;
  protected Descriptions.GobLog$Book goblog;
  protected java.util.Collection<Sentiens.DeathListener> deathListeners;
  public Sentiens.Clan();
  public Sentiens.Clan(Shirage.Shire, int);
  public void pursue();
  public int getID();
  public int getShireID();
  public Shirage.Shire myShire();
  public void setHomeShire(Shirage.Shire);
  public Shirage.Shire currentShire();
  public void setCurrentShire(Shirage.Shire);
  public void moveTowards(Shirage.Shire);
  public Shirage.Shire getGovernedShire();
  public void setGovernedShire(Shirage.Shire);
  public Markets.MktAbstract myMkt(int);
  public Game.Library getRelevantLibrary();
  public int getAge();
  public int getHeritageLength();
  public void setHeritageLength(int);
  public boolean getGender();
  public void setGender(boolean);
  public int getNumGoods();
  public Sentiens.Clan getSuitor();
  public void setSuitor(Sentiens.Clan);
  public int getNumOffspring();
  public byte[] getNameBytes();
  public void overrideName(java.lang.String);
  public java.lang.String getFirstName();
  public java.lang.String getNomen();
  public java.lang.String getSancName();
  public Game.Job getJob();
  public void setJob(Game.Job);
  public Game.Job getAspiration();
  public void setAspiration(Game.Job);
  public Descriptions.GobLog$Book getGoblog();
  public void daily();
  public boolean isHungry();
  public void breed(Sentiens.Clan);
  public void die();
  public void createHeir(Sentiens.Ideology, byte[]);
  public int getFamilySize();
  public Sentiens.Clan getBoss();
  public Sentiens.Clan getTopBoss();
  public boolean isDirectBossOf(Sentiens.Clan);
  public boolean isSomeBossOf(Sentiens.Clan);
  public int distanceFromTopBoss();
  public int getMinionTotal();
  public int getMinionN();
  public int getSubminionN();
  public int getMinionPoints();
  public int getPointsBN();
  public Government.Order myOrder();
  public Government.Order myOrder(boolean);
  public void setOrder(Government.Order);
  public void joinOrder(Government.Order);
  public boolean join(Sentiens.Clan);
  public void chgMyB(int);
  public Game.Act[] getJobActs();
  public void setLastSuccess(boolean);
  public boolean getLastSuccess();
  public boolean isActive();
  public void setActive(boolean);
  public double getAvgIncome();
  public int getCumulativeIncome();
  public void alterCumIncome(int);
  public int getMillet();
  public void setMillet(int);
  public boolean alterMillet(int);
  public long getNetAssetValue(Sentiens.Clan);
  public int[] getAssets();
  public int getAssets(int);
  public void incAssets(int, int);
  public void decAssets(int, int);
  public short getXWeapon();
  public void setXWeapon(short);
  public int[] recalcInv();
  public int getSplendor();
  public void chgSplendor(int);
  public int getHoliness();
  public void chgHoliness(int);
  public int getTimesPrayed();
  public void incTimesPrayed();
  public int getKnowledgeAttribution();
  public void incKnowledgeAttribution();
  public int Buy(int, int);
  public int Sell(int, int);
  public void buyFail();
  public void sellFail();
  public int Buy1(int);
  public int Sell1(int);
  public boolean eat();
  public boolean eatMeat();
  public void displayProfile();
  public double confuse(double);
  public boolean iHigherMem(int, Sentiens.Clan);
  public boolean iHigherPrest(Defs.P_, Sentiens.Clan);
  public void prch(Sentiens.Clan, Sentiens.Clan);
  public void compSanc(boolean, Sentiens.Clan);
  public void discourse(Sentiens.Clan);
  public double conversation(Sentiens.Clan);
  public int useBeh(Defs.M_);
  public Sentiens.Mem mem(int);
  public void addReport(Descriptions.GobLog$Reportable);
  public Descriptions.GobLog$Reportable[] getLog();
  public java.lang.String toString();
  static {};
}
Compiled from "CognitiveDissonance.java"
public class Sentiens.CognitiveDissonance {
  public Sentiens.CognitiveDissonance();
  public static void doMorals(Sentiens.Clan);
  public static void doMorals(Sentiens.Clan, Sentiens.Clan);
  public static void doValues(Sentiens.Clan, Sentiens.Clan);
}
Compiled from "DeathListener.java"
public interface Sentiens.DeathListener {
  public abstract void onDeathOf(Sentiens.Clan);
}
Compiled from "Ideology.java"
public class Sentiens.Ideology implements Defs.Misc {
  public Sentiens.Law$PersonalCommandment[] commandments;
  public static final int[][] FSM;
  public static final int[][] WGTMAP;
  public Sentiens.Clan getEu();
  public Sentiens.Ideology(Sentiens.Clan);
  public Sentiens.Ideology();
  public void initialize(int[]);
  public int numVars();
  public void setVar(int, int);
  public void chgVar(int, int);
  public int getVar(int);
  public static int getVar(int, byte[]);
  public int[] getValueRanks();
  public int getFac(Defs.F_);
  public void setFac(Defs.F_, int);
  public int getBeh(Defs.M_);
  public int getBeh(int);
  public void setBeh(Defs.M_, int);
  public void setBeh(int, int);
  public int getPrs(Defs.P_);
  public int getPrs(int);
  public void setPrs(int, int);
  public void setPrs(Defs.P_, int);
  public void upPrest(Defs.P_);
  public void downPrest(Defs.P_);
  public static int P(int);
  public static int P(Defs.P_);
  public static int unB(int);
  public static int B(int);
  public static int B(Defs.M_);
  public static int unP(int);
  public static int F(int);
  public static int F(Defs.F_);
  public static int unF(int);
  public byte[] copyFs();
  public int[] defaultVars();
  public int[] facelessVars();
  public boolean upSanc(Ideology.Value);
  public boolean upSanc(int);
  public boolean downSanc(Ideology.Value);
  public boolean downSanc(int);
  public Ideology.Value randomValueInPriority();
  public Ideology.Value randomValueInPriorityOtherThan(Ideology.Value);
  public Ideology.Value getValue(int);
  public Ideology.Value[] getValues();
  public int sumWeightOfValues(Ideology.Value...);
  public int weightOfValue(Ideology.Value);
  public Ideology.Value[] valuesInPriority();
  public Ideology.Value valueInPriority(int);
  public Ideology.Value strongerOf(Ideology.Value, Ideology.Value);
  public int compareValues(Ideology.Value, Ideology.Value);
  public int compareRespect(Sentiens.Clan);
  public void reflect(Ideology.Value, Sentiens.Clan);
  public void reflect(Sentiens.Clan);
  public int getSancPct(Ideology.Value);
  public int getSancPcts(Ideology.Value[], double[]);
  public java.lang.String getDeusName();
  public int[] getDeusV();
  public int getDeusInt();
  public int getCreed();
  public void setCreed(int);
  public static boolean attemptPreach(Sentiens.Clan, Sentiens.Clan, Sentiens.Ideology);
  static {};
}
Compiled from "Law.java"
public class Sentiens.Law {
  public Sentiens.Law();
}
Compiled from "Law.java"
public class Sentiens.Law$Commandments {
  public static final Sentiens.Law$Commandments INSTANCE;
  public final java.util.List<Sentiens.Law$Commandments$Commandment> defs;
  public final Sentiens.Law$Commandments$Commandment Murder;
  public final Sentiens.Law$Commandments$Commandment Theft;
  public final Sentiens.Law$Commandments$Commandment Adultery;
  public final Sentiens.Law$Commandments$Commandment Heresy;
  public final Sentiens.Law$Commandments$Commandment Deception;
  public final Sentiens.Law$Commandments$Commandment Witchcraft;
  public final Sentiens.Law$Commandments$Commandment Carnivory;
  public final Sentiens.Law$Commandments$Commandment Xenophobia;
  public final Sentiens.Law$Commandments$Commandment Tyranny;
  public final Sentiens.Law$Commandments$Commandment Treason;
  public Sentiens.Law$Commandments();
  public Sentiens.Law$PersonalCommandment[] generatePersonalCommandments();
  public final Sentiens.Law$Commandments$Commandment Murder();
  public final Sentiens.Law$Commandments$Commandment Theft();
  public final Sentiens.Law$Commandments$Commandment Adultery();
  public final Sentiens.Law$Commandments$Commandment Heresy();
  public final Sentiens.Law$Commandments$Commandment Deception();
  public final Sentiens.Law$Commandments$Commandment Witchcraft();
  public final Sentiens.Law$Commandments$Commandment Carnivory();
  public final Sentiens.Law$Commandments$Commandment Xenophobia();
  public final Sentiens.Law$Commandments$Commandment Tyranny();
  public final Sentiens.Law$Commandments$Commandment Treason();
  static int access$108(Sentiens.Law$Commandments);
  static {};
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$1 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$1(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$10 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$10(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$2 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$2(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$3 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$3(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$4 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$4(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$5 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$5(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$6 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$6(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$7 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$7(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$8 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$8(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
class Sentiens.Law$Commandments$9 extends Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  Sentiens.Law$Commandments$9(Sentiens.Law$Commandments, java.lang.String);
}
Compiled from "Law.java"
public abstract class Sentiens.Law$Commandments$Commandment {
  final Sentiens.Law$Commandments this$0;
  public Sentiens.Law$Commandments$Commandment(Sentiens.Law$Commandments, java.lang.String);
  public Sentiens.Law$PersonalCommandment getFor(Sentiens.Clan);
  static java.lang.String access$000(Sentiens.Law$Commandments$Commandment);
}
Compiled from "Law.java"
public class Sentiens.Law$PersonalCommandment {
  public Sentiens.Law$PersonalCommandment(Sentiens.Law$Commandments$Commandment);
  public boolean isSinful();
  public void setSinful(boolean);
  public java.lang.String desc();
  public java.lang.String getVerb();
  public int getTransgressions();
  public void setTransgressions(int);
  public void commit();
  public java.lang.String toString();
}
Compiled from "Legacy.java"
public class Sentiens.Legacy {
  public Sentiens.Legacy(Sentiens.Clan);
  public void reenforce(Ideology.ValuatableValue, double);
  public boolean reenforceIfPositive(Ideology.ValuatableValue, double);
  public int getLegacyFor(Ideology.Value);
  public java.lang.String improveDesc(Ideology.Value, double);
}
Compiled from "Mem.java"
public class Sentiens.Mem implements Defs.Misc {
  public static final Sentiens.Mem[] Defs;
  protected Defs.P_ prestige;
  protected java.lang.String name;
  public Sentiens.Mem(java.lang.String, Defs.P_);
  public Defs.P_ getPrestige();
  public java.lang.String getName();
  public static Sentiens.Mem[] MemDefs();
  static {};
}
Compiled from "Memory.java"
public class Sentiens.Memory implements Defs.Misc {
  public Questing.QStack QuestStack;
  public Sentiens.Memory();
  public void newQ(Questing.Quest);
  public void finishQ();
  public java.lang.String toString();
}
Compiled from "Amygdala.java"
public class Sentiens.Stress.Amygdala {
  public Sentiens.Stress.Amygdala(Sentiens.Clan);
  public void add(Sentiens.Stress.Stressor);
  public double getStressLevel();
  public void enoughIsEnough(Sentiens.Stress.Stressor);
  public Sentiens.Stress.Stressor largestStressor();
  public void relieveFrom(Sentiens.Stress.Stressor);
  public void catharsis(int);
  public boolean containsStressor(Sentiens.Stress.Blameable);
  public java.lang.String toString();
}
Compiled from "Blameable.java"
public interface Sentiens.Stress.Blameable {
}
Compiled from "Stressor.java"
public class Sentiens.Stress.Stressor {
  public static final int FEAR;
  public static final int ANNOYANCE;
  public static final int INSULT;
  public static final int LIFE_THREAT;
  public static final int HATRED;
  public static final int EXTREME_TRAUMA;
  public static final int PROMISE_BROKEN;
  public static final int COMPETITION_LOSS;
  protected final int type;
  protected java.lang.Object blamee;
  public Sentiens.Stress.Stressor();
  public Sentiens.Stress.Stressor(int, Sentiens.Stress.Blameable);
  public java.lang.Object getTarget();
  public int getLevel(Sentiens.Clan);
  public boolean respond(Sentiens.Clan);
  public boolean sameAndLessThan(Sentiens.Clan, Sentiens.Stress.Stressor);
  public java.lang.String toString();
}
Compiled from "StressorFactory.java"
public class Sentiens.Stress.StressorFactory {
  public Sentiens.Stress.StressorFactory();
  public static Sentiens.Stress.Stressor createWealthStressor(Sentiens.Clan);
  public static Sentiens.Stress.Stressor createShireStressor(Shirage.Shire, Ideology.Value);
  public static Sentiens.Stress.Stressor createShireStressor(Shirage.Shire, Ideology.Value, Questing.Knowledge.KnowledgeBlock);
  public static Sentiens.Stress.Stressor createJobStressor(Game.Job);
  public static Sentiens.Stress.Stressor createJobStressor(Game.Job, Questing.Knowledge.KnowledgeBlock);
  public static Sentiens.Stress.Stressor createBloodVengeanceStressor(Sentiens.Clan);
  public static Sentiens.Stress.Stressor createPayTaxesStressor(Sentiens.Clan);
}
Compiled from "StressorFactory.java"
final class Sentiens.Stress.StressorFactory$1 extends Sentiens.Stress.Stressor {
  final Questing.Knowledge.KnowledgeBlock val$shireKb;
  final Ideology.Value val$whySucks;
  Sentiens.Stress.StressorFactory$1(int, Sentiens.Stress.Blameable, Questing.Knowledge.KnowledgeBlock, Ideology.Value);
  public boolean respond(Sentiens.Clan);
}
Compiled from "StressorFactory.java"
final class Sentiens.Stress.StressorFactory$2 extends Sentiens.Stress.Stressor {
  final Questing.Knowledge.KnowledgeBlock val$jobKb;
  Sentiens.Stress.StressorFactory$2(int, Sentiens.Stress.Blameable, Questing.Knowledge.KnowledgeBlock);
  public boolean respond(Sentiens.Clan);
}
Compiled from "StressorFactory.java"
final class Sentiens.Stress.StressorFactory$3 extends Sentiens.Stress.Stressor {
  Sentiens.Stress.StressorFactory$3(int, Sentiens.Stress.Blameable);
  public boolean respond(Sentiens.Clan);
}
Compiled from "StressorFactory.java"
final class Sentiens.Stress.StressorFactory$4 extends Sentiens.Stress.Stressor {
  Sentiens.Stress.StressorFactory$4(int, Sentiens.Stress.Blameable);
  public boolean respond(Sentiens.Clan);
}
Compiled from "AbstractPlot.java"
public class Shirage.AbstractPlot {
  protected int x;
  protected int y;
  public Shirage.AbstractPlot();
  public void setXY(int, int);
}
Compiled from "AbstractShire.java"
public class Shirage.AbstractShire {
  protected int xcoor;
  protected int ycoor;
  public Shirage.AbstractShire(int, int);
}
Compiled from "EmptyShire.java"
public class Shirage.EmptyShire extends Shirage.AbstractShire {
  public Shirage.EmptyShire(int, int);
}
Compiled from "Plot.java"
public class Shirage.Plot extends Shirage.AbstractPlot {
  protected static final Shirage.Plot[] HOOD;
  protected static final int CWGT;
  protected static final int BORDER;
  protected static final double rbm;
  protected static final double waterthresh;
  protected static final int adjFert;
  protected static java.awt.Color dColORIGINAL;
  protected static java.awt.Color fColORIGINAL;
  protected static java.awt.Color wColORIGINAL;
  protected static java.awt.Color oCol1ORIGINAL;
  protected static java.awt.Color oCol2ORIGINAL;
  protected static java.awt.Color dCol;
  protected static java.awt.Color fCol;
  protected static java.awt.Color wCol;
  protected static java.awt.Color oCol1;
  protected static java.awt.Color oCol2;
  protected Shirage.Shire linkedShire;
  protected double value;
  protected double wval;
  protected double hypw;
  protected double wflow;
  protected double myrbm;
  protected static final int BZLEN;
  protected AGraphics.Bezier GB;
  protected AGraphics.Bezier edgeN;
  protected AGraphics.Bezier edgeE;
  protected AGraphics.Bezier edgeS;
  protected AGraphics.Bezier edgeW;
  protected java.awt.GradientPaint GPW;
  protected java.awt.GradientPaint GPM;
  protected java.awt.GradientPaint GPF;
  protected java.awt.GradientPaint GPMo;
  protected java.awt.GradientPaint GPFo;
  protected double[] fractal;
  protected double[] fractal0;
  protected double[] fractal1;
  protected double[] fractal2;
  protected double[] fractal3;
  protected double[] fractal4;
  protected java.awt.Polygon hill;
  protected java.awt.geom.Ellipse2D ellipseOLD;
  protected boolean paintedOnce;
  protected static void resetColors();
  public static void grayscaleColors();
  protected static GUI.MapDisplay Map();
  public Shirage.Plot(double);
  public void setXY(int, int);
  public void setGradients();
  public void refreshHood();
  public void refreshHood2();
  public Shirage.Plot[] myHood();
  public double getHoodAvgVal();
  public void flow();
  public Shirage.Plot getNW();
  public Shirage.Plot getNE();
  public Shirage.Plot getSW();
  public Shirage.Plot getSE();
  public Shirage.Plot getW();
  public Shirage.Plot getE();
  public Shirage.Plot getNW2();
  public Shirage.Plot getNE2();
  public Shirage.Plot getSW2();
  public Shirage.Plot getSE2();
  public Shirage.Plot getW2();
  public Shirage.Plot getE2();
  public double getValue();
  public void setValue(double);
  public void chgValue(double);
  public double getWVal();
  public void chgW(double);
  public void chgHypW(double);
  public void emptyHyp();
  public double getEV();
  public double getWFlow();
  public double getRBM();
  public double evaporate(double);
  public void drawPlotSimple(java.awt.Graphics);
  public void drawPlot(java.awt.Graphics);
  public void drawVegetation(java.awt.Graphics);
  public boolean fertile();
  public boolean isWater();
  public boolean isEdge(int);
  public boolean isNull();
  public void printDetail();
  public void printDetail2();
  public void makeLand();
  public boolean isOcean();
  public void linkHoodToShire(Shirage.Shire);
  public void drawShireHighlighted(java.awt.Graphics, java.awt.Color);
  public void saveShireStat(double);
  public void drawShireSpotHighlight(java.awt.Graphics, double);
  public Shirage.Shire getLinkedShire();
  public java.lang.String toString();
  static {};
}
Compiled from "Shire.java"
public class Shirage.Shire extends Shirage.AbstractShire implements Sentiens.Stress.Blameable {
  public static byte varMin;
  public static byte varMax;
  public static byte numVars;
  public static byte numRecs;
  public static byte numConds;
  public static byte numF;
  public static byte numB;
  public static byte numD;
  public static byte numBf;
  public static byte numDf;
  public static byte numT;
  public static byte numMi;
  public static byte numMs;
  public static byte numQ;
  public static byte weatherVar;
  public static byte baseCapacityF;
  public static byte capacityF;
  public static byte capacityS1;
  public static byte productivityMi;
  public static byte productivityMs;
  public static byte productivityQ;
  public static byte growthB;
  public static byte growthD;
  public static byte growthT;
  public static byte productivityF;
  public static final int MAXANIMALS;
  public static final int MAXMINERALS;
  public static final int MAXTREES;
  public static final int MAXSPACE;
  public static final int WILDERNESS;
  public static final int FERTILITY;
  public static final int TREES;
  public static final int WBOVADS;
  public static final int WDONKEYS;
  public static final int WYAKS;
  public static final int WHORSES;
  public static final int STONES;
  public static final int IORE;
  public static final int SORE;
  public static final int WEATHERVOL;
  public Shirage.Shire(int, int);
  public void newDay();
  public void newMarketDay();
  public void newSeason();
  public int randWeather(int);
  public Markets.MktAbstract[] generateMkts();
  public void initializeVars();
  public void randomizeVars();
  public int getX();
  public int getY();
  public int getID();
  public int distanceFrom(Shirage.Shire);
  public void setLinkedPlot(Shirage.Plot);
  public void linkToPlot(Shirage.Plot);
  public boolean isPopulateable();
  public void addToCensus(Sentiens.Clan);
  public void removeFromCensus(Sentiens.Clan);
  public int getPopsize();
  public java.util.Collection<Sentiens.Clan> getCensus();
  public Sentiens.Clan getCensus(int);
  public Sentiens.Clan getRandOfCensus();
  public static java.lang.String getName(int, int);
  public java.lang.String getName();
  public Markets.MktAbstract getMarket(Defs.G_);
  public Markets.MktAbstract getMarket(int);
  public Government.Treasury getTreasury();
  public Game.Library getLibrary();
  public int getResource(int);
  public int getCondition(int);
  public boolean decResource(int);
  public void incVar(byte, byte);
  public void decVar(byte, byte);
  public void setVar(byte, byte);
  public int[] getBidOffer(int);
  public byte[] getVars();
  public byte[] getLastVars();
  public byte getLastVar(int);
  public byte getGrowthB();
  public byte getGrowthD();
  public byte getGrowthT();
  public Shirage.Shire getSomeNeighbor();
  public Shirage.Shire getSomeNeighbor(Shirage.Shire);
  public Shirage.Shire[] getNeighborRoute(boolean, int);
  public Shirage.Shire[] getNeighbors(boolean);
  public Shirage.Plot getLinkedPlot();
  public Sentiens.Clan getGovernor();
  public void setGovernor(Sentiens.Clan);
  public long getNetAssetValue(Sentiens.Clan, boolean);
  public int getMilletWealthOfPop();
  public AMath.Calc$DoubleWrapper getGraphingInfo(java.lang.String);
  public java.lang.String toString();
  static {};
}
Compiled from "XPlot.java"
public class Shirage.XPlot extends Shirage.Plot {
  public Shirage.XPlot(double);
  public boolean isNull();
  public void drawPlot(java.awt.Graphics);
  public double getHoodAvgVal();
  public double getEV();
  public void flow();
  public double getRBM();
  public double evaporate(double);
  public boolean isOcean();
  public Shirage.Shire getLinkedShire();
}
Compiled from "Army.java"
public class War.Army extends java.util.ArrayList<War.Warrior> {
  public War.Army();
}
Compiled from "BattleConsole.java"
public class War.BattleConsole extends javax.swing.JPanel {
  protected static final int ORIGWID;
  protected static final int ORIGHGT;
  protected static final int VIEWWID;
  protected static final int VIEWHGT;
  protected static final java.awt.Color CANVASCOLOR;
  protected java.awt.image.BufferedImage offscreen;
  protected java.awt.Graphics2D g;
  protected boolean loaded;
  protected java.awt.Rectangle view;
  protected java.util.Random rseed;
  protected int turn;
  protected java.util.Set<War.Warrior> dudes;
  public static java.util.Set<War.Warrior> toDudes(java.util.Set<Sentiens.Clan>);
  public void setupBattleConsole(long, java.util.Set<Sentiens.Clan>, java.util.Set<Sentiens.Clan>);
  public void paintComponent(java.awt.Graphics);
  protected void paintConsole();
  protected void paintBG(java.awt.Graphics);
  protected java.awt.Color getCanvasColor();
  protected double rand();
  protected int rand(int);
  static {};
}
Compiled from "BattleField.java"
public class War.BattleField {
  public static final War.BattleField INSTANCE;
  public War.BattleField();
  public static void setupNewBattleField(Sentiens.Clan, Sentiens.Clan, Shirage.Shire);
  public static void determineFormation(Sentiens.Clan, War.Army);
  public static boolean wasVictorious(Sentiens.Clan);
  public War.BattleField$EndStatus getEndStatus(Sentiens.Clan);
  public java.awt.Rectangle getField();
  public static Shirage.Shire getShire();
  static {};
}
Compiled from "BattleField.java"
class War.BattleField$1 {
}
Compiled from "BattleField.java"
class War.BattleField$BattleResult {
  int kills;
  int wins;
  int flights;
  War.BattleField$EndStatus endStatus;
  final War.BattleField this$0;
  War.BattleField$BattleResult(War.BattleField, War.BattleField$1);
}
Compiled from "BattleField.java"
public final class War.BattleField$EndStatus extends java.lang.Enum<War.BattleField$EndStatus> {
  public static final War.BattleField$EndStatus DEAD;
  public static final War.BattleField$EndStatus RETREATED;
  public static final War.BattleField$EndStatus CAPTURED;
  public static final War.BattleField$EndStatus VICTORIOUS;
  public static War.BattleField$EndStatus[] values();
  public static War.BattleField$EndStatus valueOf(java.lang.String);
  static {};
}
Compiled from "BattleOrders.java"
public class War.BattleOrders {
  public War.BattleOrders();
}
Compiled from "BattleOrders.java"
class War.BattleOrders$1 {
}
Compiled from "BattleOrders.java"
class War.BattleOrders$SimpleOrder {
  War.CombatDefs$FormationType$Part target;
}
Compiled from "BattleOrders.java"
class War.BattleOrders$SubOrder {
  War.BattleOrders$SubOrder(War.BattleOrders$1);
}
Compiled from "CombatDefs.java"
public class War.CombatDefs {
  public static War.CombatDefs$FormationType[] formationTypes;
  public static final War.CombatDefs$FormationType SCORPION;
  public static final War.CombatDefs$FormationType WEDGE;
  public static final War.CombatDefs$FormationType BOX;
  public static final War.CombatDefs$SoldierType DONKEY_KNIGHT;
  public static final War.CombatDefs$SoldierType CHARGERS;
  public static final War.CombatDefs$SoldierType MISSILE_CAVALRY;
  public static final War.CombatDefs$SoldierType CAVALRY;
  public static final War.CombatDefs$SoldierType MISSILE;
  public static final War.CombatDefs$SoldierType PHALANX;
  public static final War.CombatDefs$SoldierType FODDER;
  public static final War.CombatDefs$SoldierType FOOT;
  public static final War.CombatDefs$SoldierType ARCHERS;
  public static final War.CombatDefs$SoldierType GUNNERS;
  public War.CombatDefs();
  static {};
}
Compiled from "CombatDefs.java"
public final class War.CombatDefs$Armor extends java.lang.Enum<War.CombatDefs$Armor> {
  public static final War.CombatDefs$Armor LIGHT;
  public static final War.CombatDefs$Armor HEAVY;
  public static War.CombatDefs$Armor[] values();
  public static War.CombatDefs$Armor valueOf(java.lang.String);
  static {};
}
Compiled from "CombatDefs.java"
class War.CombatDefs$BattleStats {
  int archery;
  int charge;
  int armor;
  int piercing;
  int strength;
  War.CombatDefs$BattleStats();
  static boolean attackerWinsExchange(War.CombatDefs$BattleStats, War.CombatDefs$BattleStats);
  void computeFriendly(War.Warrior);
}
Compiled from "CombatDefs.java"
public final class War.CombatDefs$Edge extends java.lang.Enum<War.CombatDefs$Edge> {
  public static final War.CombatDefs$Edge BLUNT;
  public static final War.CombatDefs$Edge SHARP;
  public static War.CombatDefs$Edge[] values();
  public static War.CombatDefs$Edge valueOf(java.lang.String);
  static {};
}
Compiled from "CombatDefs.java"
class War.CombatDefs$FormationType {
  public War.CombatDefs$FormationType();
  public War.CombatDefs$FormationType$Part getSeatOfCommand();
  static War.CombatDefs$FormationType$Part access$000(War.CombatDefs$FormationType);
  static War.CombatDefs$FormationType$Part access$200(War.CombatDefs$FormationType);
  static War.CombatDefs$FormationType$Part access$300(War.CombatDefs$FormationType);
  static War.CombatDefs$FormationType$Part access$400(War.CombatDefs$FormationType);
  static War.CombatDefs$FormationType$Part access$500(War.CombatDefs$FormationType);
  static War.CombatDefs$FormationType$Part access$702(War.CombatDefs$FormationType, War.CombatDefs$FormationType$Part);
}
Compiled from "CombatDefs.java"
class War.CombatDefs$FormationType$Part {
  War.CombatDefs$FormationType$Part();
  static void access$100(War.CombatDefs$FormationType$Part, int, War.CombatDefs$SoldierType[]);
  static void access$600(War.CombatDefs$FormationType$Part, War.CombatDefs$FormationType);
}
Compiled from "CombatDefs.java"
public final class War.CombatDefs$Mount extends java.lang.Enum<War.CombatDefs$Mount> {
  public static final War.CombatDefs$Mount INFANTRY;
  public static final War.CombatDefs$Mount CAVALRY;
  public static War.CombatDefs$Mount[] values();
  public static War.CombatDefs$Mount valueOf(java.lang.String);
  static {};
}
Compiled from "CombatDefs.java"
public final class War.CombatDefs$Range extends java.lang.Enum<War.CombatDefs$Range> {
  public static final War.CombatDefs$Range MELEE;
  public static final War.CombatDefs$Range MISSILE;
  public static War.CombatDefs$Range[] values();
  public static War.CombatDefs$Range valueOf(java.lang.String);
  static {};
}
Compiled from "CombatDefs.java"
class War.CombatDefs$SoldierType {
  War.CombatDefs$Armor armor;
  War.CombatDefs$Edge edge;
  War.CombatDefs$Range range;
  War.CombatDefs$Mount mount;
  War.CombatDefs$SoldierType();
  public boolean canFulfill(Sentiens.Clan);
  static War.CombatDefs$SoldierType access$800();
  static War.CombatDefs$SoldierType access$900(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1000(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1100(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1200(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1300(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1400(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1500(War.CombatDefs$SoldierType);
  static War.CombatDefs$SoldierType access$1600(War.CombatDefs$SoldierType);
}
Compiled from "WarLogic.java"
public class War.WarLogic {
  public War.WarLogic();
  public static boolean decideMove(Sentiens.Clan, java.util.Set<Sentiens.Clan>, Sentiens.Clan);
}
Compiled from "Warrior.java"
public class War.Warrior extends War.CombatDefs$SoldierType {
  public War.Warrior();
  public void draw(java.awt.Graphics);
  public void goOnce();
  public void followOrders();
  public void flee();
  public int getProwess();
  public int getStrength();
  public int getMarksmanship();
  public Sentiens.Clan getRefClan();
  public void setRefClan(Sentiens.Clan);
  public boolean canFulfill(Sentiens.Clan);
}
