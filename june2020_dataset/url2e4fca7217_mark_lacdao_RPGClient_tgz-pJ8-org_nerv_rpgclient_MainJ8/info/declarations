Compiled from "EffectType.java"
public final class org.nerv.rpgclient.EffectType extends java.lang.Enum<org.nerv.rpgclient.EffectType> {
  public static final org.nerv.rpgclient.EffectType ATTACK;
  public static final org.nerv.rpgclient.EffectType RECOVERY;
  public static final org.nerv.rpgclient.EffectType SUPPORT;
  public static final org.nerv.rpgclient.EffectType NECROMANCY;
  public static org.nerv.rpgclient.EffectType[] values();
  public static org.nerv.rpgclient.EffectType valueOf(java.lang.String);
  static {};
}
Compiled from "Informable.java"
public class org.nerv.rpgclient.Informable {
  public org.nerv.rpgclient.Informable();
  protected void inform(java.lang.String);
}
Compiled from "Main.java"
public class org.nerv.rpgclient.Main {
  public org.nerv.rpgclient.Main();
  public static void main(java.lang.String[]);
  public static org.nerv.rpgclient.monster.Monster createMonster();
  public static org.nerv.rpgclient.player.Job createJob();
  public static org.nerv.rpgclient.Skill createSkill();
  public static org.nerv.rpgclient.Skill createHealSkill();
  public static org.nerv.rpgclient.Skill createReviveSkill();
  public static org.nerv.rpgclient.Stats createStats();
  public static void printHp(org.nerv.rpgclient.RpgObject, org.nerv.rpgclient.RpgObject);
}
Compiled from "RpgObject.java"
public class org.nerv.rpgclient.RpgObject extends org.nerv.rpgclient.Informable {
  public org.nerv.rpgclient.RpgObject();
  public org.nerv.rpgclient.Status getStatus();
  public void setStatus(org.nerv.rpgclient.Status);
  public org.nerv.rpgclient.Stats getStats();
  public void setStats(org.nerv.rpgclient.Stats);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.lang.Boolean isAlive();
  public void setAlive(java.lang.Boolean);
  public void die();
  public void heal(org.nerv.rpgclient.RpgObject, java.lang.Long);
  public void revive(org.nerv.rpgclient.RpgObject, java.lang.Long);
  public void damage(org.nerv.rpgclient.RpgObject, java.lang.Long);
  static {};
}
Compiled from "Skill.java"
public class org.nerv.rpgclient.Skill {
  public org.nerv.rpgclient.Skill(org.nerv.rpgclient.EffectType);
  public org.nerv.rpgclient.EffectType getType();
  public java.lang.String getName();
  public void setName(java.lang.String);
  public int getLevel();
  public void setLevel(int);
  public int getAttainableLevel();
  public void setAttainableLevel(int);
  public java.lang.Long getDamage();
  public void setDamage(java.lang.Long);
  public java.lang.Long getRecovery();
  public void setRecovery(java.lang.Long);
  public org.nerv.rpgclient.Status getStatusEffect();
  public void setStatusEffect(org.nerv.rpgclient.Status);
  public java.lang.Long getMpCost();
  public void setMpCost(java.lang.Long);
  static {};
}
Compiled from "Stats.java"
public class org.nerv.rpgclient.Stats {
  public org.nerv.rpgclient.Stats();
  public java.lang.Long getMaxMp();
  public void setMaxMp(java.lang.Long);
  public java.lang.Long getMp();
  public void setMp(java.lang.Long);
  public java.lang.Long getMaxHp();
  public void setMaxHp(java.lang.Long);
  public java.lang.Long getHp();
  public void setHp(java.lang.Long);
  public java.lang.Long getStr();
  public void setStr(java.lang.Long);
  public java.lang.Long getDef();
  public void setDef(java.lang.Long);
  public java.lang.Long getAtk();
  public void setAtk(java.lang.Long);
}
Compiled from "Status.java"
public final class org.nerv.rpgclient.Status extends java.lang.Enum<org.nerv.rpgclient.Status> {
  public static final org.nerv.rpgclient.Status NORMAL;
  public static final org.nerv.rpgclient.Status POISONED;
  public static final org.nerv.rpgclient.Status PARALYZED;
  public static org.nerv.rpgclient.Status[] values();
  public static org.nerv.rpgclient.Status valueOf(java.lang.String);
  static {};
}
Compiled from "Equipment.java"
public class org.nerv.rpgclient.item.Equipment extends org.nerv.rpgclient.item.Item {
  public org.nerv.rpgclient.item.Equipment(org.nerv.rpgclient.item.Equipment$Type);
  public boolean isEquipped();
  public void setEquipped(boolean);
  public org.nerv.rpgclient.item.Equipment$Type getType();
  public java.lang.Boolean isEquipable();
}
Compiled from "Equipment.java"
final class org.nerv.rpgclient.item.Equipment$Type extends java.lang.Enum<org.nerv.rpgclient.item.Equipment$Type> {
  public static final org.nerv.rpgclient.item.Equipment$Type HEAD;
  public static final org.nerv.rpgclient.item.Equipment$Type BODY;
  public static final org.nerv.rpgclient.item.Equipment$Type ACCESSORY;
  public static final org.nerv.rpgclient.item.Equipment$Type FOOT;
  public static final org.nerv.rpgclient.item.Equipment$Type WEAPON;
  public static org.nerv.rpgclient.item.Equipment$Type[] values();
  public static org.nerv.rpgclient.item.Equipment$Type valueOf(java.lang.String);
  static {};
}
Compiled from "Item.java"
public class org.nerv.rpgclient.item.Item {
  public java.lang.String rarity;
  public org.nerv.rpgclient.item.Item();
  public java.lang.String getName();
  public void setName(java.lang.String);
  public int getId();
  public void setId(int);
  public java.lang.String getRarity();
  public void setRarity(java.lang.String);
  public java.lang.Boolean isEquipable();
  public void setEquipable(java.lang.Boolean);
}
Compiled from "Coordinates.java"
public class org.nerv.rpgclient.map.Coordinates {
  public org.nerv.rpgclient.map.Coordinates();
  public int getX();
  public void setX(int);
  public int getY();
  public void setY(int);
}
Compiled from "Monster.java"
public class org.nerv.rpgclient.monster.Monster extends org.nerv.rpgclient.RpgObject {
  public org.nerv.rpgclient.monster.Monster();
  public java.lang.Long getId();
  public void setId(java.lang.Long);
  public java.util.List<org.nerv.rpgclient.Skill> getSkills();
  public void setSkills(java.util.List<org.nerv.rpgclient.Skill>);
  public void addSkill(org.nerv.rpgclient.Skill);
  public java.util.List<org.nerv.rpgclient.item.Item> getDrops();
  public void setDrops(java.util.List<org.nerv.rpgclient.item.Item>);
  public void addDrop(org.nerv.rpgclient.item.Item);
  public java.util.List<org.nerv.rpgclient.item.Item> drop();
}
Compiled from "Job.java"
public class org.nerv.rpgclient.player.Job {
  public org.nerv.rpgclient.player.Job(org.nerv.rpgclient.player.Job$Type);
  public java.lang.String getName();
  public org.nerv.rpgclient.player.Job$Type getType();
  public java.util.List<org.nerv.rpgclient.Skill> getSkills();
  public int getAttainableLevel();
  public void setAttainableLevel(int);
  public void setSkills(java.util.List<org.nerv.rpgclient.Skill>);
  public void addSkill(org.nerv.rpgclient.Skill);
  public org.nerv.rpgclient.Skill getSkill(java.lang.String);
}
Compiled from "Job.java"
public final class org.nerv.rpgclient.player.Job$Type extends java.lang.Enum<org.nerv.rpgclient.player.Job$Type> {
  public static final org.nerv.rpgclient.player.Job$Type SWORDSMAN;
  public static final org.nerv.rpgclient.player.Job$Type HEALER;
  public static org.nerv.rpgclient.player.Job$Type[] values();
  public static org.nerv.rpgclient.player.Job$Type valueOf(java.lang.String);
  static {};
}
Compiled from "Player.java"
public class org.nerv.rpgclient.player.Player extends org.nerv.rpgclient.RpgObject {
  public org.nerv.rpgclient.player.Player();
  public org.nerv.rpgclient.player.Job getJob();
  public void setJob(org.nerv.rpgclient.player.Job);
  public java.lang.Long getId();
  public void setId(java.lang.Long);
  public int getLevel();
  public void setLevel(int);
  public void executeSkill(java.lang.String, org.nerv.rpgclient.RpgObject);
  static {};
}
Compiled from "Player.java"
class org.nerv.rpgclient.player.Player$1 {
  static final int[] $SwitchMap$org$nerv$rpgclient$EffectType;
  static {};
}
Compiled from "PlayerExecuteSkillTest.java"
public class org.nerv.rpgclient.player.PlayerExecuteSkillTest {
  public org.nerv.rpgclient.player.PlayerExecuteSkillTest();
  public void shouldHealIfRecovery();
  public void shouldDamageIfAttack();
  public void shouldReviveIfNecromancy();
  static {};
}
