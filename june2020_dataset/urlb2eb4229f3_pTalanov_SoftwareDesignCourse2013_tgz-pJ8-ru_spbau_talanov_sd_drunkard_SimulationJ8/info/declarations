Compiled from "Actor.java"
public interface ru.spbau.talanov.sd.drunkard.Actor {
  public abstract void performMove(ru.spbau.talanov.sd.drunkard.SimulationState);
}
Compiled from "Beggar.java"
public final class ru.spbau.talanov.sd.drunkard.Beggar extends ru.spbau.talanov.sd.drunkard.MovableObject implements ru.spbau.talanov.sd.drunkard.Actor {
  boolean isAtRecyclePoint;
  static final boolean $assertionsDisabled;
  public ru.spbau.talanov.sd.drunkard.Beggar(ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.Position);
  public void performMove(ru.spbau.talanov.sd.drunkard.SimulationState);
  public ru.spbau.talanov.sd.drunkard.Position getPosition();
  public char representation();
  public boolean isSpendingMoney();
  static ru.spbau.talanov.sd.drunkard.Position access$000(ru.spbau.talanov.sd.drunkard.Beggar);
  static {};
}
Compiled from "Beggar.java"
class ru.spbau.talanov.sd.drunkard.Beggar$1 implements ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  final ru.spbau.talanov.sd.drunkard.Beggar this$0;
  ru.spbau.talanov.sd.drunkard.Beggar$1(ru.spbau.talanov.sd.drunkard.Beggar);
  public boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Beggar.java"
class ru.spbau.talanov.sd.drunkard.Beggar$2 implements ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  final ru.spbau.talanov.sd.drunkard.Board val$board;
  final ru.spbau.talanov.sd.drunkard.Beggar this$0;
  ru.spbau.talanov.sd.drunkard.Beggar$2(ru.spbau.talanov.sd.drunkard.Beggar, ru.spbau.talanov.sd.drunkard.Board);
  public boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Board.java"
public final class ru.spbau.talanov.sd.drunkard.Board {
  static final boolean $assertionsDisabled;
  public ru.spbau.talanov.sd.drunkard.Board(int, ru.spbau.talanov.sd.drunkard.BoardTopology);
  public void addObject(ru.spbau.talanov.sd.drunkard.BoardObject);
  public void addSpecialObject(ru.spbau.talanov.sd.drunkard.BoardObject);
  public void move(ru.spbau.talanov.sd.drunkard.Movable, ru.spbau.talanov.sd.drunkard.Position);
  public void setEmpty(ru.spbau.talanov.sd.drunkard.Position);
  public ru.spbau.talanov.sd.drunkard.BoardObject getObject(ru.spbau.talanov.sd.drunkard.Position);
  public boolean isValid(ru.spbau.talanov.sd.drunkard.Position);
  public ru.spbau.talanov.sd.drunkard.BoardTopology getTopology();
  public java.lang.String representation();
  public boolean isEmpty(ru.spbau.talanov.sd.drunkard.Position);
  static {};
}
Compiled from "BoardObject.java"
public interface ru.spbau.talanov.sd.drunkard.BoardObject {
  public abstract ru.spbau.talanov.sd.drunkard.Position getPosition();
  public abstract char representation();
}
Compiled from "BoardTopology.java"
public abstract class ru.spbau.talanov.sd.drunkard.BoardTopology {
  static final boolean $assertionsDisabled;
  public ru.spbau.talanov.sd.drunkard.BoardTopology();
  public abstract java.util.List<ru.spbau.talanov.sd.drunkard.Position> getAdjacentPositions(ru.spbau.talanov.sd.drunkard.Position);
  public ru.spbau.talanov.sd.drunkard.Position getRandomAdjacentPosition(ru.spbau.talanov.sd.drunkard.Position);
  public java.util.Collection<ru.spbau.talanov.sd.drunkard.Position> allPositionsInRadius(ru.spbau.talanov.sd.drunkard.Position, int);
  static {};
}
Compiled from "Bottle.java"
public final class ru.spbau.talanov.sd.drunkard.Bottle extends ru.spbau.talanov.sd.drunkard.ImmobileObject {
  public ru.spbau.talanov.sd.drunkard.Bottle(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Column.java"
public final class ru.spbau.talanov.sd.drunkard.Column extends ru.spbau.talanov.sd.drunkard.ImmobileObject {
  protected ru.spbau.talanov.sd.drunkard.Column(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Direction.java"
public final class ru.spbau.talanov.sd.drunkard.Direction extends java.lang.Enum<ru.spbau.talanov.sd.drunkard.Direction> {
  public static final ru.spbau.talanov.sd.drunkard.Direction DOWN;
  public static final ru.spbau.talanov.sd.drunkard.Direction UP;
  public static final ru.spbau.talanov.sd.drunkard.Direction LEFT;
  public static final ru.spbau.talanov.sd.drunkard.Direction RIGHT;
  public static ru.spbau.talanov.sd.drunkard.Direction[] values();
  public static ru.spbau.talanov.sd.drunkard.Direction valueOf(java.lang.String);
  public int getDeltaX();
  public int getDeltaY();
  public static ru.spbau.talanov.sd.drunkard.Direction randomDirection();
  static {};
}
Compiled from "Drunkard.java"
public final class ru.spbau.talanov.sd.drunkard.Drunkard extends ru.spbau.talanov.sd.drunkard.MovableObject implements ru.spbau.talanov.sd.drunkard.Actor {
  public static final java.util.Random RANDOM;
  static final boolean $assertionsDisabled;
  public ru.spbau.talanov.sd.drunkard.Drunkard(ru.spbau.talanov.sd.drunkard.Position);
  public char representation();
  public java.lang.String toString();
  public boolean shouldBePickedByPoliceman();
  public void performMove(ru.spbau.talanov.sd.drunkard.SimulationState);
  static {};
}
Compiled from "Drunkard.java"
final class ru.spbau.talanov.sd.drunkard.Drunkard$State extends java.lang.Enum<ru.spbau.talanov.sd.drunkard.Drunkard$State> {
  public static final ru.spbau.talanov.sd.drunkard.Drunkard$State SLEEPING;
  public static final ru.spbau.talanov.sd.drunkard.Drunkard$State WALKING;
  public static final ru.spbau.talanov.sd.drunkard.Drunkard$State LYING;
  public static ru.spbau.talanov.sd.drunkard.Drunkard$State[] values();
  public static ru.spbau.talanov.sd.drunkard.Drunkard$State valueOf(java.lang.String);
  static char access$000(ru.spbau.talanov.sd.drunkard.Drunkard$State);
  static {};
}
Compiled from "FindPath.java"
public final class ru.spbau.talanov.sd.drunkard.FindPath {
  public static ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate emptyValidPosition(ru.spbau.talanov.sd.drunkard.Board);
  public static java.util.List<ru.spbau.talanov.sd.drunkard.Position> findPath(ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate, ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate, ru.spbau.talanov.sd.drunkard.BoardTopology);
}
Compiled from "FindPath.java"
final class ru.spbau.talanov.sd.drunkard.FindPath$1 implements ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  final ru.spbau.talanov.sd.drunkard.Board val$board;
  ru.spbau.talanov.sd.drunkard.FindPath$1(ru.spbau.talanov.sd.drunkard.Board);
  public boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "FindPath.java"
public interface ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  public abstract boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "HexagonalTopology.java"
public final class ru.spbau.talanov.sd.drunkard.HexagonalTopology extends ru.spbau.talanov.sd.drunkard.BoardTopology {
  public ru.spbau.talanov.sd.drunkard.HexagonalTopology();
  public java.util.List<ru.spbau.talanov.sd.drunkard.Position> getAdjacentPositions(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "ImmobileObject.java"
public abstract class ru.spbau.talanov.sd.drunkard.ImmobileObject implements ru.spbau.talanov.sd.drunkard.BoardObject {
  protected ru.spbau.talanov.sd.drunkard.ImmobileObject(ru.spbau.talanov.sd.drunkard.Position, char);
  public ru.spbau.talanov.sd.drunkard.Position getPosition();
  public char representation();
}
Compiled from "Inn.java"
public final class ru.spbau.talanov.sd.drunkard.Inn extends ru.spbau.talanov.sd.drunkard.ImmobileObject implements ru.spbau.talanov.sd.drunkard.Actor {
  public ru.spbau.talanov.sd.drunkard.Inn(ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.Position);
  public void performMove(ru.spbau.talanov.sd.drunkard.SimulationState);
}
Compiled from "Lantern.java"
public final class ru.spbau.talanov.sd.drunkard.Lantern extends ru.spbau.talanov.sd.drunkard.ImmobileObject {
  public ru.spbau.talanov.sd.drunkard.Lantern(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Movable.java"
public interface ru.spbau.talanov.sd.drunkard.Movable extends ru.spbau.talanov.sd.drunkard.BoardObject {
  public abstract void setPosition(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "MovableObject.java"
public abstract class ru.spbau.talanov.sd.drunkard.MovableObject implements ru.spbau.talanov.sd.drunkard.Movable {
  public ru.spbau.talanov.sd.drunkard.MovableObject(ru.spbau.talanov.sd.drunkard.Position);
  public void setPosition(ru.spbau.talanov.sd.drunkard.Position);
  public ru.spbau.talanov.sd.drunkard.Position getPosition();
}
Compiled from "PoliceStation.java"
public final class ru.spbau.talanov.sd.drunkard.PoliceStation extends ru.spbau.talanov.sd.drunkard.ImmobileObject {
  public ru.spbau.talanov.sd.drunkard.PoliceStation(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Policeman.java"
public final class ru.spbau.talanov.sd.drunkard.Policeman extends ru.spbau.talanov.sd.drunkard.MovableObject implements ru.spbau.talanov.sd.drunkard.Actor {
  static final boolean $assertionsDisabled;
  public ru.spbau.talanov.sd.drunkard.Policeman(ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.Position, ru.spbau.talanov.sd.drunkard.BoardTopology);
  public void performMove(ru.spbau.talanov.sd.drunkard.SimulationState);
  public ru.spbau.talanov.sd.drunkard.Position getPosition();
  public char representation();
  static ru.spbau.talanov.sd.drunkard.Position access$000(ru.spbau.talanov.sd.drunkard.Policeman);
  static java.util.Collection access$100(ru.spbau.talanov.sd.drunkard.Policeman);
  static {};
}
Compiled from "Policeman.java"
class ru.spbau.talanov.sd.drunkard.Policeman$1 implements ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  final ru.spbau.talanov.sd.drunkard.Policeman this$0;
  ru.spbau.talanov.sd.drunkard.Policeman$1(ru.spbau.talanov.sd.drunkard.Policeman);
  public boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Policeman.java"
class ru.spbau.talanov.sd.drunkard.Policeman$2 implements ru.spbau.talanov.sd.drunkard.FindPath$PositionPredicate {
  final ru.spbau.talanov.sd.drunkard.Board val$board;
  final ru.spbau.talanov.sd.drunkard.Policeman this$0;
  ru.spbau.talanov.sd.drunkard.Policeman$2(ru.spbau.talanov.sd.drunkard.Policeman, ru.spbau.talanov.sd.drunkard.Board);
  public boolean accepts(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Position.java"
public final class ru.spbau.talanov.sd.drunkard.Position {
  public int getX();
  public int getY();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  public static ru.spbau.talanov.sd.drunkard.Position at(int, int);
}
Compiled from "RectangularTopology.java"
public final class ru.spbau.talanov.sd.drunkard.RectangularTopology extends ru.spbau.talanov.sd.drunkard.BoardTopology {
  public ru.spbau.talanov.sd.drunkard.RectangularTopology();
  public java.util.List<ru.spbau.talanov.sd.drunkard.Position> getAdjacentPositions(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "RecyclingPoint.java"
public final class ru.spbau.talanov.sd.drunkard.RecyclingPoint extends ru.spbau.talanov.sd.drunkard.ImmobileObject {
  public ru.spbau.talanov.sd.drunkard.RecyclingPoint(ru.spbau.talanov.sd.drunkard.Position);
}
Compiled from "Simulation.java"
public final class ru.spbau.talanov.sd.drunkard.Simulation {
  public ru.spbau.talanov.sd.drunkard.Simulation(java.io.PrintStream, java.io.PrintStream);
  public void simulate();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "SimulationState.java"
public final class ru.spbau.talanov.sd.drunkard.SimulationState {
  public static ru.spbau.talanov.sd.drunkard.SimulationState initialState(ru.spbau.talanov.sd.drunkard.Board, java.util.List<ru.spbau.talanov.sd.drunkard.Actor>);
  public ru.spbau.talanov.sd.drunkard.Board getBoard();
  public java.util.List<ru.spbau.talanov.sd.drunkard.Actor> getActors();
  public void addActor(ru.spbau.talanov.sd.drunkard.Actor);
  public void removeActor(ru.spbau.talanov.sd.drunkard.Actor);
}
