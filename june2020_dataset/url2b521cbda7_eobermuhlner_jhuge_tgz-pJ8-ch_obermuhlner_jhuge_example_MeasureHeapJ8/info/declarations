Compiled from "AbstractCollectionTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractCollectionTest {
  public ch.obermuhlner.jhuge.collection.AbstractCollectionTest();
  protected abstract <T> java.util.Collection<T> createCollection(T...);
  protected abstract boolean supportsMutable();
  protected abstract boolean supportsNullValues();
  public void testSize_empty();
  public void testSize_not_empty();
  public void testSize_collision();
  public void testSize_null_value();
  public void testContains_empty();
  public void testContains_not_empty();
  public void testContains_collision();
  public void testContains_null_value();
  public void testAdd_not_mutable();
  public void testAdd_mutable();
  public void testAdd_mutable_null_value();
  public void testAdd_mutable_collision();
  public void testRemove_not_mutable();
  public void testRemove_not_mutable_null_value();
  public void testRemove_mutable();
  public void testRemove_mutable_collision();
  public void testRemove_mutable_null_value();
  public void testClear_not_mutable();
  public void testClear_mutable();
  public void testIterator_not_empty();
  public void testIterator_collision_not_empty();
  public void testIterator_not_mutable();
  public void testIterator_mutable_remove();
  public void testIterator_mutable_collision_remove();
  public void testHashCode();
  public void testEquals();
  public void testToString();
  public void testLarge();
  public void testRandom();
  public void testContainsWithCollisions();
}
Compiled from "AbstractHugeArrayList.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeArrayList<E> extends java.util.AbstractList<E> {
  protected ch.obermuhlner.jhuge.collection.AbstractHugeArrayList(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter<E>, boolean, int);
  ch.obermuhlner.jhuge.memory.MemoryManager getMemoryManager();
  ch.obermuhlner.jhuge.converter.Converter<E> getElementConverter();
  public E get(int);
  protected E setInternal(int, E);
  protected void addInternal(int, E);
  protected E removeInternal(int);
  protected void clearInternal();
  public int size();
  public java.lang.String toString();
  static {};
}
Compiled from "AbstractHugeArrayListTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractListTest {
  public ch.obermuhlner.jhuge.collection.AbstractHugeArrayListTest();
  protected <E> java.util.List<E> createList(E...);
  protected abstract boolean isFaster();
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_elementClass();
  public void testBuilder_elementConverter();
  public void testBuilder_compressElement();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_add();
  public void testBuilder_addAll_vararg();
  public void testBuilder_addAll_Collection();
}
Compiled from "AbstractHugeHashMap.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V> extends java.util.AbstractMap<K, V> {
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashMap(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter<K>, ch.obermuhlner.jhuge.converter.Converter<V>, boolean, int);
  ch.obermuhlner.jhuge.memory.MemoryManager getMemoryManager();
  ch.obermuhlner.jhuge.converter.Converter<K> getKeyConverter();
  ch.obermuhlner.jhuge.converter.Converter<V> getValueConverter();
  public V get(java.lang.Object);
  public boolean containsKey(java.lang.Object);
  public java.lang.String toString();
  public boolean isEmpty();
  protected V putInternal(K, V);
  protected void clearInternal();
  static ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap access$000(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap);
  static java.lang.Object access$100(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap, long);
  static java.lang.Object access$200(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap, long);
  static ch.obermuhlner.jhuge.memory.MemoryManager access$300(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap);
  static {};
}
Compiled from "AbstractHugeHashMap.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntry implements java.util.Map$Entry<K, V> {
  final ch.obermuhlner.jhuge.collection.AbstractHugeHashMap this$0;
  public ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntry(K, V);
  public K getKey();
  public V getValue();
  protected V setValueInternal(V);
  public java.lang.String toString();
}
Compiled from "AbstractHugeHashMap.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>> {
  final ch.obermuhlner.jhuge.collection.AbstractHugeHashMap this$0;
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntrySet(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap);
  public int size();
}
Compiled from "AbstractHugeHashMap.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntrySetIterator implements java.util.Iterator<java.util.Map$Entry<K, V>> {
  final ch.obermuhlner.jhuge.collection.AbstractHugeHashMap this$0;
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashMap$AbstractEntrySetIterator(ch.obermuhlner.jhuge.collection.AbstractHugeHashMap);
  public boolean hasNext();
  public java.util.Map$Entry<K, V> next();
  protected abstract ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntry createEntry(K, V);
  protected void removeInternal();
  public java.lang.Object next();
}
Compiled from "AbstractHugeHashMapTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractMutableMapTest {
  public ch.obermuhlner.jhuge.collection.AbstractHugeHashMapTest();
  protected <K, V> java.util.Map<K, V> createEmptyMap();
  protected abstract boolean isFaster();
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsNullKeys();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_keyClass();
  public void testBuilder_valueClass();
  public void testBuilder_keyClass_valueClass();
  public void testBuilder_keyConverter();
  public void testBuilder_valueConverter();
  public void testBuilder_compressKey();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_add();
  public void testBuilder_addAll();
}
Compiled from "AbstractHugeHashSet.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashSet<E> extends java.util.AbstractSet<E> {
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashSet(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter<E>, boolean, int);
  ch.obermuhlner.jhuge.memory.MemoryManager getMemoryManager();
  ch.obermuhlner.jhuge.converter.Converter<E> getElementConverter();
  public boolean contains(java.lang.Object);
  protected boolean addInternal(E);
  protected boolean removeInternal(java.lang.Object);
  protected void clearInternal();
  public int size();
  static ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap access$000(ch.obermuhlner.jhuge.collection.AbstractHugeHashSet);
  static java.lang.Object access$100(ch.obermuhlner.jhuge.collection.AbstractHugeHashSet, long);
  static ch.obermuhlner.jhuge.memory.MemoryManager access$200(ch.obermuhlner.jhuge.collection.AbstractHugeHashSet);
  static {};
}
Compiled from "AbstractHugeHashSet.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashSet$AbstractHugeHashSetIterator implements java.util.Iterator<E> {
  final ch.obermuhlner.jhuge.collection.AbstractHugeHashSet this$0;
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashSet$AbstractHugeHashSetIterator(ch.obermuhlner.jhuge.collection.AbstractHugeHashSet);
  public boolean hasNext();
  public E next();
  protected void removeInternal();
  public java.lang.String toString();
}
Compiled from "AbstractHugeHashSetTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractHugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractSetTest {
  public ch.obermuhlner.jhuge.collection.AbstractHugeHashSetTest();
  protected <E> java.util.Set<E> createSet(E...);
  protected abstract boolean isFaster();
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_elementClass();
  public void testBuilder_elementConverter();
  public void testBuilder_compressElement();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_add();
  public void testBuilder_addAll_vararg();
  public void testBuilder_addAll_Collection();
}
Compiled from "AbstractImmutableHugeArrayListTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractImmutableHugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractListTest {
  public ch.obermuhlner.jhuge.collection.AbstractImmutableHugeArrayListTest();
  protected <E> java.util.List<E> createList(E...);
  protected abstract boolean isFaster();
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_elementClass();
  public void testBuilder_elementConverter();
  public void testBuilder_compressElement();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_add();
  public void testBuilder_addAll_vararg();
  public void testBuilder_addAll_Collection();
}
Compiled from "AbstractImmutableHugeHashMapTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractMapTest {
  public ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashMapTest();
  protected <K, V> java.util.Map<K, V> createMap(ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<K, V>...);
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsMutable();
  protected boolean supportsNullKeys();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_keyClass();
  public void testBuilder_valueClass();
  public void testBuilder_keyClass_valueClass();
  public void testBuilder_keyConverter();
  public void testBuilder_valueConverter();
  public void testBuilder_compressKey();
  public void testBuilder_compressValue();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_put();
  public void testBuilder_putAll();
}
Compiled from "AbstractImmutableHugeHashSetTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractSetTest {
  public ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashSetTest();
  protected <E> java.util.Set<E> createSet(E...);
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
  public void testBuilder_default();
  public void testBuilder_classLoader();
  public void testBuilder_elementClass();
  public void testBuilder_elementConverter();
  public void testBuilder_compressElement();
  public void testBuilder_bufferSize();
  public void testBuilder_blockSize();
  public void testBuilder_prepare();
  public void testBuilder_add();
  public void testBuilder_addAll_vararg();
  public void testBuilder_addAll_Collection();
}
Compiled from "AbstractListTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractListTest extends ch.obermuhlner.jhuge.collection.AbstractCollectionTest {
  public ch.obermuhlner.jhuge.collection.AbstractListTest();
  protected final <T> java.util.Collection<T> createCollection(T...);
  protected abstract <T> java.util.List<T> createList(T...);
  public void testOrderedElements();
  public void testSet_not_mutable();
  public void testSet_mutable();
  public void testSet_mutable_left_IndexOutOfBoundsException();
  public void testSet_mutable_right_IndexOutOfBoundsException();
  public void testEquals_List();
}
Compiled from "AbstractMapTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractMapTest {
  public ch.obermuhlner.jhuge.collection.AbstractMapTest();
  protected abstract <K, V> java.util.Map<K, V> createMap(ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<K, V>...);
  protected abstract boolean supportsMutable();
  protected abstract boolean supportsNullKeys();
  protected abstract boolean supportsNullValues();
  public void testIsEmpty_empty();
  public void testIsEmpty_not_empty();
  public void testIsEmpty_mutable();
  public void testSize_empty();
  public void testSize_not_empty();
  public void testSize_collision();
  public void testSize_null_value();
  public void testSize_null_key();
  public void testSize_mutable();
  public void testGet_empty();
  public void testGet_not_empty();
  public void testGet_collision();
  public void testGet_null_key();
  public void testGet_null_value();
  public void testContainsKey_empty();
  public void testContainsKey_not_empty();
  public void testContainsKey_collision();
  public void testContainsKey_null_key();
  public void testContainsKey_null_value();
  public void testContainsValue_empty();
  public void testContainsValue_not_empty();
  public void testContainsValue_null_key();
  public void testContainsValue_null_value();
  public void testPut_not_mutable();
  public void testPut_mutable();
  public void testPut_mutable_collision();
  public void testPut_mutable_null_key();
  public void testPut_mutable_null_value();
  public void testClear_not_mutable();
  public void testClear_mutable();
  public void testKeySet_not_empty();
  public void testKeySet_collision();
  public void testKeySet_not_mutable();
  public void testKeySet_mutable_remove();
  public void testValues_not_empty();
  public void testValues_not_mutable();
  public void testValues_mutable_remove();
  public void testEntrySet_not_empty();
  public void testEntrySet_empty_NoSuchElementException();
  public void testEntrySet_not_empty_NoSuchElementException();
  public void testEntrySet_collision();
  public void testEntrySet_not_mutable();
  public void testEntrySet_mutable_remove();
  public void testEntrySet_mutable_collision_remove();
  public void testEntrySet_mutable_setValue();
  public void testToString();
  public void testHashCode();
  public void testEquals();
  public void testRandom();
  public static <T1, T2> ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<T1, T2> pair(T1, T2);
}
Compiled from "AbstractMapTest.java"
class ch.obermuhlner.jhuge.collection.AbstractMapTest$MyMap<K, V> extends java.util.HashMap<K, V> {
  public ch.obermuhlner.jhuge.collection.AbstractMapTest$MyMap(java.util.Map<? extends K, ? extends V>);
}
Compiled from "AbstractMapTest.java"
public class ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<T1, T2> {
  public ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair(T1, T2);
  public T1 getValue1();
  public T2 getValue2();
  public java.lang.String toString();
}
Compiled from "AbstractMutableMapTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractMutableMapTest extends ch.obermuhlner.jhuge.collection.AbstractMapTest {
  public ch.obermuhlner.jhuge.collection.AbstractMutableMapTest();
  protected <K, V> java.util.Map<K, V> createMap(ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<K, V>...);
  protected abstract <K, V> java.util.Map<K, V> createEmptyMap();
  protected boolean supportsMutable();
}
Compiled from "AbstractSetTest.java"
public abstract class ch.obermuhlner.jhuge.collection.AbstractSetTest extends ch.obermuhlner.jhuge.collection.AbstractCollectionTest {
  public ch.obermuhlner.jhuge.collection.AbstractSetTest();
  protected final <T> java.util.Collection<T> createCollection(T...);
  protected abstract <T> java.util.Set<T> createSet(T...);
  public void testDuplicates();
  public void testDuplicates_null();
  public void testEquals_Set();
}
Compiled from "AbstractSetTest.java"
class ch.obermuhlner.jhuge.collection.AbstractSetTest$MySet<E> extends java.util.HashSet<E> {
  public ch.obermuhlner.jhuge.collection.AbstractSetTest$MySet(java.util.Collection<? extends E>);
}
Compiled from "ArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.ArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractListTest {
  public ch.obermuhlner.jhuge.collection.ArrayListTest();
  protected <T> java.util.List<T> createList(T...);
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
}
Compiled from "Dummy_HugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_HugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.Dummy_HugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Dummy_HugeHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_HugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMapTest {
  public ch.obermuhlner.jhuge.collection.Dummy_HugeHashMapTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Dummy_HugeHashSetTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_HugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSetTest {
  public ch.obermuhlner.jhuge.collection.Dummy_HugeHashSetTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Dummy_ImmutableHugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Dummy_ImmutableHugeHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashMapTest {
  public ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeHashMapTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
}
Compiled from "Dummy_ImmutableHugeHashSetTest.java"
public class ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashSetTest {
  public ch.obermuhlner.jhuge.collection.Dummy_ImmutableHugeHashSetTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
}
Compiled from "Fast_MemoryMappedFile_HugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Fast_MemoryMappedFile_HugeHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMapTest {
  public ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeHashMapTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Fast_MemoryMappedFile_HugeHashSetTest.java"
public class ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSetTest {
  public ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_HugeHashSetTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "Fast_MemoryMappedFile_ImmutableHugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_ImmutableHugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.Fast_MemoryMappedFile_ImmutableHugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "HashCodeCollision.java"
public class ch.obermuhlner.jhuge.collection.HashCodeCollision<T extends java.io.Serializable> implements java.io.Serializable {
  ch.obermuhlner.jhuge.collection.HashCodeCollision(T);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
}
Compiled from "HashCodeCollisionsTest.java"
public class ch.obermuhlner.jhuge.collection.HashCodeCollisionsTest {
  public static final java.lang.String COLLISION_0;
  public static final java.lang.String COLLISION_1;
  public static final java.lang.String COLLISION_2;
  public static final java.lang.String COLLISION_3;
  public ch.obermuhlner.jhuge.collection.HashCodeCollisionsTest();
  public void testHashCodeCollisions();
}
Compiled from "HashMapTest.java"
public class ch.obermuhlner.jhuge.collection.HashMapTest extends ch.obermuhlner.jhuge.collection.AbstractMutableMapTest {
  public ch.obermuhlner.jhuge.collection.HashMapTest();
  protected <K, V> java.util.Map<K, V> createEmptyMap();
  protected boolean supportsNullKeys();
  protected boolean supportsNullValues();
}
Compiled from "HashSetTest.java"
public class ch.obermuhlner.jhuge.collection.HashSetTest extends ch.obermuhlner.jhuge.collection.AbstractSetTest {
  public ch.obermuhlner.jhuge.collection.HashSetTest();
  protected <T> java.util.Set<T> createSet(T...);
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
}
Compiled from "HugeArrayList.java"
public class ch.obermuhlner.jhuge.collection.HugeArrayList<E> extends ch.obermuhlner.jhuge.collection.AbstractHugeArrayList<E> {
  public E set(int, E);
  public void add(int, E);
  public E remove(int);
  public void clear();
  ch.obermuhlner.jhuge.collection.HugeArrayList(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.HugeArrayList$1);
}
Compiled from "HugeArrayList.java"
class ch.obermuhlner.jhuge.collection.HugeArrayList$1 {
}
Compiled from "HugeArrayList.java"
public class ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeListBuilder<E> {
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder();
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> element(java.lang.Class<E>);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> element(ch.obermuhlner.jhuge.converter.Converter<E>);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> compressElement();
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> blockSize(int);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> faster();
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> capacity(int);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> add(E);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> addAll(java.util.Collection<E>);
  public ch.obermuhlner.jhuge.collection.HugeArrayList$Builder<E> addAll(E...);
  public ch.obermuhlner.jhuge.collection.HugeArrayList<E> build();
  public java.util.List build();
  public java.util.Collection build();
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder add(java.lang.Object);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder compressElement();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder classLoader(java.lang.ClassLoader);
}
Compiled from "HugeHashMap.java"
public class ch.obermuhlner.jhuge.collection.HugeHashMap<K, V> extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V> {
  public V put(K, V);
  public void clear();
  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
  ch.obermuhlner.jhuge.collection.HugeHashMap(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.HugeHashMap$1);
}
Compiled from "HugeHashMap.java"
class ch.obermuhlner.jhuge.collection.HugeHashMap$1 {
}
Compiled from "HugeHashMap.java"
public class ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> {
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder();
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> key(java.lang.Class<K>);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> key(ch.obermuhlner.jhuge.converter.Converter<K>);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> value(java.lang.Class<V>);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> value(ch.obermuhlner.jhuge.converter.Converter<V>);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> compressKey();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> compressValue();
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> blockSize(int);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> faster();
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> capacity(int);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> put(K, V);
  public ch.obermuhlner.jhuge.collection.HugeHashMap$Builder<K, V> putAll(java.util.Map<K, V>);
  public ch.obermuhlner.jhuge.collection.HugeHashMap<K, V> build();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder compressKey();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder value(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder value(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder key(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder key(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder classLoader(java.lang.ClassLoader);
  public java.util.Map build();
  public ch.obermuhlner.jhuge.collection.builder.MapBuilder putAll(java.util.Map);
  public ch.obermuhlner.jhuge.collection.builder.MapBuilder put(java.lang.Object, java.lang.Object);
}
Compiled from "HugeHashMap.java"
class ch.obermuhlner.jhuge.collection.HugeHashMap$EntrySet extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntrySet {
  final ch.obermuhlner.jhuge.collection.HugeHashMap this$0;
  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
  ch.obermuhlner.jhuge.collection.HugeHashMap$EntrySet(ch.obermuhlner.jhuge.collection.HugeHashMap, ch.obermuhlner.jhuge.collection.HugeHashMap$1);
}
Compiled from "HugeHashMap.java"
class ch.obermuhlner.jhuge.collection.HugeHashMap$EntrySetIterator extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntrySetIterator {
  final ch.obermuhlner.jhuge.collection.HugeHashMap this$0;
  public void remove();
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntry createEntry(K, V);
  ch.obermuhlner.jhuge.collection.HugeHashMap$EntrySetIterator(ch.obermuhlner.jhuge.collection.HugeHashMap, ch.obermuhlner.jhuge.collection.HugeHashMap$1);
}
Compiled from "HugeHashMap.java"
class ch.obermuhlner.jhuge.collection.HugeHashMap$HugeMapEntry extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntry {
  final ch.obermuhlner.jhuge.collection.HugeHashMap this$0;
  public ch.obermuhlner.jhuge.collection.HugeHashMap$HugeMapEntry(K, V);
  public V setValue(V);
}
Compiled from "HugeHashSet.java"
public class ch.obermuhlner.jhuge.collection.HugeHashSet<E> extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSet<E> {
  public boolean add(E);
  public boolean remove(java.lang.Object);
  public void clear();
  public java.util.Iterator<E> iterator();
  ch.obermuhlner.jhuge.collection.HugeHashSet(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.HugeHashSet$1);
}
Compiled from "HugeHashSet.java"
class ch.obermuhlner.jhuge.collection.HugeHashSet$1 {
}
Compiled from "HugeHashSet.java"
public class ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeSetBuilder<E> {
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder();
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> element(java.lang.Class<E>);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> element(ch.obermuhlner.jhuge.converter.Converter<E>);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> compressElement();
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> blockSize(int);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> faster();
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> capacity(int);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> add(E);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> addAll(java.util.Collection<E>);
  public ch.obermuhlner.jhuge.collection.HugeHashSet$Builder<E> addAll(E...);
  public ch.obermuhlner.jhuge.collection.HugeHashSet<E> build();
  public java.util.Set build();
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder add(java.lang.Object);
  public java.util.Collection build();
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder add(java.lang.Object);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder compressElement();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder classLoader(java.lang.ClassLoader);
}
Compiled from "HugeHashSet.java"
class ch.obermuhlner.jhuge.collection.HugeHashSet$HugeHashSetIterator extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSet<E>.AbstractHugeHashSetIterator {
  final ch.obermuhlner.jhuge.collection.HugeHashSet this$0;
  public void remove();
  ch.obermuhlner.jhuge.collection.HugeHashSet$HugeHashSetIterator(ch.obermuhlner.jhuge.collection.HugeHashSet, ch.obermuhlner.jhuge.collection.HugeHashSet$1);
}
Compiled from "ImmutableHugeArrayList.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList<E> extends ch.obermuhlner.jhuge.collection.AbstractHugeArrayList<E> {
  public int hashCode();
  public boolean equals(java.lang.Object);
  ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$1);
  static void access$100(ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList);
}
Compiled from "ImmutableHugeArrayList.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$1 {
}
Compiled from "ImmutableHugeArrayList.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeListBuilder<E> {
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> element(java.lang.Class<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> element(ch.obermuhlner.jhuge.converter.Converter<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> compressElement();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> blockSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> faster();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> capacity(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> add(E);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> addAll(java.util.Collection<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList$Builder<E> addAll(E...);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeArrayList<E> build();
  public java.util.List build();
  public java.util.Collection build();
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder add(java.lang.Object);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder compressElement();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder classLoader(java.lang.ClassLoader);
}
Compiled from "ImmutableHugeHashMap.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap<K, V> extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V> {
  public int hashCode();
  public boolean equals(java.lang.Object);
  public void clear();
  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
  ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$1);
  static void access$300(ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap);
}
Compiled from "ImmutableHugeHashMap.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$1 {
}
Compiled from "ImmutableHugeHashMap.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> {
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> key(java.lang.Class<K>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> key(ch.obermuhlner.jhuge.converter.Converter<K>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> value(java.lang.Class<V>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> value(ch.obermuhlner.jhuge.converter.Converter<V>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> compressKey();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> compressValue();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> blockSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> faster();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> capacity(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> put(K, V);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$Builder<K, V> putAll(java.util.Map<K, V>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap<K, V> build();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder compressValue();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder compressKey();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder value(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder value(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder key(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder key(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder classLoader(java.lang.ClassLoader);
  public java.util.Map build();
  public ch.obermuhlner.jhuge.collection.builder.MapBuilder putAll(java.util.Map);
  public ch.obermuhlner.jhuge.collection.builder.MapBuilder put(java.lang.Object, java.lang.Object);
}
Compiled from "ImmutableHugeHashMap.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$EntrySet extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntrySet {
  final ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap this$0;
  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
  ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$EntrySet(ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap, ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$1);
}
Compiled from "ImmutableHugeHashMap.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$EntrySetIterator extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntrySetIterator {
  final ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap this$0;
  public void remove();
  protected ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntry createEntry(K, V);
  ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$EntrySetIterator(ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap, ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$1);
}
Compiled from "ImmutableHugeHashMap.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$HugeMapEntry extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMap<K, V>.AbstractEntry {
  final ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap this$0;
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashMap$HugeMapEntry(K, V);
  public V setValue(V);
}
Compiled from "ImmutableHugeHashSet.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet<E> extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSet<E> {
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.util.Iterator<E> iterator();
  ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet(ch.obermuhlner.jhuge.memory.MemoryManager, ch.obermuhlner.jhuge.converter.Converter, boolean, int, ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$1);
  static void access$200(ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet);
}
Compiled from "ImmutableHugeHashSet.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$1 {
}
Compiled from "ImmutableHugeHashSet.java"
public class ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeSetBuilder<E> {
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> element(java.lang.Class<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> element(ch.obermuhlner.jhuge.converter.Converter<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> compressElement();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> blockSize(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> faster();
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> capacity(int);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> add(E);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> addAll(java.util.Collection<E>);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$Builder<E> addAll(E...);
  public ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet<E> build();
  public java.util.Set build();
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.SetBuilder add(java.lang.Object);
  public java.util.Collection build();
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder add(java.lang.Object);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder capacity(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder compressElement();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(ch.obermuhlner.jhuge.converter.Converter);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder element(java.lang.Class);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder classLoader(java.lang.ClassLoader);
}
Compiled from "ImmutableHugeHashSet.java"
class ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$ImmutableHugeHashSetIterator extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSet<E>.AbstractHugeHashSetIterator {
  final ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet this$0;
  public void remove();
  ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$ImmutableHugeHashSetIterator(ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet, ch.obermuhlner.jhuge.collection.ImmutableHugeHashSet$1);
}
Compiled from "MemoryMappedFile_HugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "MemoryMappedFile_HugeHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashMapTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeHashMapTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "MemoryMappedFile_HugeHashSetTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractHugeHashSetTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_HugeHashSetTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "MemoryMappedFile_ImmutableHugeArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeArrayListTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeArrayListTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  protected boolean isFaster();
}
Compiled from "MemoryMappedFile_ImmutableHugeHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashMapTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeHashMapTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
}
Compiled from "MemoryMappedFile_ImmutableHugeHashSetTest.java"
public class ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeHashSetTest extends ch.obermuhlner.jhuge.collection.AbstractImmutableHugeHashSetTest {
  public ch.obermuhlner.jhuge.collection.MemoryMappedFile_ImmutableHugeHashSetTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
}
Compiled from "UnmodifiableArrayListTest.java"
public class ch.obermuhlner.jhuge.collection.UnmodifiableArrayListTest extends ch.obermuhlner.jhuge.collection.AbstractListTest {
  public ch.obermuhlner.jhuge.collection.UnmodifiableArrayListTest();
  protected <T> java.util.List<T> createList(T...);
  protected boolean supportsMutable();
  protected boolean supportsNullValues();
}
Compiled from "UnmodifiableHashMapTest.java"
public class ch.obermuhlner.jhuge.collection.UnmodifiableHashMapTest extends ch.obermuhlner.jhuge.collection.AbstractMapTest {
  public ch.obermuhlner.jhuge.collection.UnmodifiableHashMapTest();
  protected <K, V> java.util.Map<K, V> createMap(ch.obermuhlner.jhuge.collection.AbstractMapTest$Pair<K, V>...);
  protected boolean supportsMutable();
  protected boolean supportsNullKeys();
  protected boolean supportsNullValues();
}
Compiled from "AbstractHugeCollectionBuilder.java"
public abstract class ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> implements ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> {
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> element(java.lang.Class<E>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> element(ch.obermuhlner.jhuge.converter.Converter<E>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> compressElement();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> capacity(int);
  protected ch.obermuhlner.jhuge.converter.Converter<E> getElementConverter();
  protected ch.obermuhlner.jhuge.memory.MemoryManager getMemoryManager();
  protected boolean isFaster();
  protected int getCapacity();
}
Compiled from "AbstractHugeListBuilder.java"
public abstract class ch.obermuhlner.jhuge.collection.builder.AbstractHugeListBuilder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> implements ch.obermuhlner.jhuge.collection.builder.ListBuilder<E> {
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeListBuilder();
}
Compiled from "AbstractHugeMapBuilder.java"
public abstract class ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> implements ch.obermuhlner.jhuge.collection.builder.MapBuilder<K, V> {
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> classLoader(java.lang.ClassLoader);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> key(java.lang.Class<K>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> key(ch.obermuhlner.jhuge.converter.Converter<K>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> value(java.lang.Class<V>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> value(ch.obermuhlner.jhuge.converter.Converter<V>);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> compressKey();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> compressValue();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> bufferSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> blockSize(int);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> memoryManager(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> faster();
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeMapBuilder<K, V> capacity(int);
  protected ch.obermuhlner.jhuge.converter.Converter<K> getKeyConverter();
  protected ch.obermuhlner.jhuge.converter.Converter<V> getValueConverter();
  protected ch.obermuhlner.jhuge.memory.MemoryManager getMemoryManager();
  protected boolean isFaster();
  protected int getCapacity();
}
Compiled from "AbstractHugeSetBuilder.java"
public abstract class ch.obermuhlner.jhuge.collection.builder.AbstractHugeSetBuilder<E> extends ch.obermuhlner.jhuge.collection.builder.AbstractHugeCollectionBuilder<E> implements ch.obermuhlner.jhuge.collection.builder.SetBuilder<E> {
  public ch.obermuhlner.jhuge.collection.builder.AbstractHugeSetBuilder();
}
Compiled from "CollectionBuilder.java"
public interface ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> {
  public abstract ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> add(E);
  public abstract ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> addAll(java.util.Collection<E>);
  public abstract ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> addAll(E...);
  public abstract java.util.Collection<E> build();
}
Compiled from "ListBuilder.java"
public interface ch.obermuhlner.jhuge.collection.builder.ListBuilder<E> extends ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> {
  public abstract java.util.List<E> build();
  public java.util.Collection build();
}
Compiled from "MapBuilder.java"
public interface ch.obermuhlner.jhuge.collection.builder.MapBuilder<K, V> {
  public abstract ch.obermuhlner.jhuge.collection.builder.MapBuilder<K, V> put(K, V);
  public abstract ch.obermuhlner.jhuge.collection.builder.MapBuilder<K, V> putAll(java.util.Map<K, V>);
  public abstract java.util.Map<K, V> build();
}
Compiled from "SetBuilder.java"
public interface ch.obermuhlner.jhuge.collection.builder.SetBuilder<E> extends ch.obermuhlner.jhuge.collection.builder.CollectionBuilder<E> {
  public abstract ch.obermuhlner.jhuge.collection.builder.SetBuilder<E> add(E);
  public abstract ch.obermuhlner.jhuge.collection.builder.SetBuilder<E> addAll(java.util.Collection<E>);
  public abstract ch.obermuhlner.jhuge.collection.builder.SetBuilder<E> addAll(E...);
  public abstract java.util.Set<E> build();
  public java.util.Collection build();
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.lang.Object[]);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder addAll(java.util.Collection);
  public ch.obermuhlner.jhuge.collection.builder.CollectionBuilder add(java.lang.Object);
}
Compiled from "AbstractIntArray.java"
public abstract class ch.obermuhlner.jhuge.collection.internal.AbstractIntArray implements ch.obermuhlner.jhuge.collection.internal.IntArray {
  public ch.obermuhlner.jhuge.collection.internal.AbstractIntArray();
  public int indexOf(int);
  public void addAscending(int);
  public int[] toArray();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AbstractIntArrayTest.java"
public abstract class ch.obermuhlner.jhuge.collection.internal.AbstractIntArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.AbstractIntArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.IntArray createIntArray();
  protected abstract ch.obermuhlner.jhuge.collection.internal.IntArray createIntArray(int);
  public void testSize();
  public void testGet();
  public void testAdd_index();
  public void testRemove();
  public void testSet();
  public void testIndexOf();
  public void testToArray();
  public void testClear();
  public void testGet_IndexOutOfBoundsException();
  public void testAdd_IndexOutOfBoundsException();
  public void testAddAscending();
  public void testToString();
  public void testHashCode();
  public void testEquals();
  public void testLarge();
}
Compiled from "AbstractIntLongArrayMapTest.java"
public abstract class ch.obermuhlner.jhuge.collection.internal.AbstractIntLongArrayMapTest {
  public ch.obermuhlner.jhuge.collection.internal.AbstractIntLongArrayMapTest();
  protected abstract ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap createIntLongArrayMap();
  public void testSize();
  public void testContainsKey();
  public void testGet();
  public void testPut();
  public void testRemove();
  public void testClear();
  public void testKeySet();
  public void testKeySet_remove();
  public void testToString();
  public void testHashCode();
  public void testEquals();
  public void testLarge();
  public void testRandom();
  static {};
}
Compiled from "AbstractLongArray.java"
public abstract class ch.obermuhlner.jhuge.collection.internal.AbstractLongArray implements ch.obermuhlner.jhuge.collection.internal.LongArray {
  public ch.obermuhlner.jhuge.collection.internal.AbstractLongArray();
  public int indexOf(long);
  public void addAscending(long);
  public long[] toArray();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AbstractLongArrayTest.java"
public abstract class ch.obermuhlner.jhuge.collection.internal.AbstractLongArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.AbstractLongArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.LongArray createLongArray();
  protected abstract ch.obermuhlner.jhuge.collection.internal.LongArray createLongArray(int);
  public void testSize();
  public void testGet();
  public void testAdd_index();
  public void testAddAscending();
  public void testRemove();
  public void testSet();
  public void testIndexOf();
  public void testToArray();
  public void testClear();
  public void testGet_IndexOutOfBoundsException();
  public void testAdd_IndexOutOfBoundsException();
  public void testToString();
  public void testHashCode();
  public void testEquals();
  public void testLarge();
}
Compiled from "HugeIntArray.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeIntArray extends ch.obermuhlner.jhuge.collection.internal.AbstractIntArray {
  public ch.obermuhlner.jhuge.collection.internal.HugeIntArray(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.internal.HugeIntArray(ch.obermuhlner.jhuge.memory.MemoryManager, int);
  public int set(int, int);
  public void add(int, int);
  public void add(int);
  public int get(int);
  public int remove(int);
  public void clear();
  public int size();
}
Compiled from "HugeIntArrayTest.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeIntArrayTest extends ch.obermuhlner.jhuge.collection.internal.AbstractIntArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.HugeIntArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.IntArray createIntArray(int);
}
Compiled from "HugeIntLongArrayMap.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap implements ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap {
  static final boolean $assertionsDisabled;
  public ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap(ch.obermuhlner.jhuge.memory.MemoryManager, int);
  public void put(int, long[]);
  public boolean containsKey(int);
  public long[] get(int);
  public void remove(int);
  public int size();
  public void clear();
  public ch.obermuhlner.jhuge.collection.internal.IntIterator keySet();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static ch.obermuhlner.jhuge.collection.internal.HugeLongArray access$000(ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap);
  static int access$100(ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap, long, int);
  static int access$200(ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap, long);
  static {};
}
Compiled from "HugeIntLongArrayMap.java"
class ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap$MyIntIterator implements ch.obermuhlner.jhuge.collection.internal.IntIterator {
  final ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap this$0;
  public ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap$MyIntIterator(ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMap);
  public boolean hasNext();
  public int next();
  public void remove();
  public java.lang.String toString();
}
Compiled from "HugeIntLongArrayMapTest.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMapTest extends ch.obermuhlner.jhuge.collection.internal.AbstractIntLongArrayMapTest {
  public ch.obermuhlner.jhuge.collection.internal.HugeIntLongArrayMapTest();
  protected ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap createIntLongArrayMap();
}
Compiled from "HugeLongArray.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeLongArray extends ch.obermuhlner.jhuge.collection.internal.AbstractLongArray {
  public ch.obermuhlner.jhuge.collection.internal.HugeLongArray(ch.obermuhlner.jhuge.memory.MemoryManager);
  public ch.obermuhlner.jhuge.collection.internal.HugeLongArray(ch.obermuhlner.jhuge.memory.MemoryManager, int);
  public long set(int, long);
  public void add(int, long);
  public void add(long);
  public long get(int);
  public long remove(int);
  public void setSize(int);
  public void clear();
  public int size();
  public java.lang.String toString();
}
Compiled from "HugeLongArrayTest.java"
public class ch.obermuhlner.jhuge.collection.internal.HugeLongArrayTest extends ch.obermuhlner.jhuge.collection.internal.AbstractLongArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.HugeLongArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.LongArray createLongArray(int);
  public void testSetSize();
}
Compiled from "IntArray.java"
public interface ch.obermuhlner.jhuge.collection.internal.IntArray {
  public abstract int set(int, int);
  public abstract void add(int, int);
  public abstract void add(int);
  public abstract void addAscending(int);
  public abstract int get(int);
  public abstract int remove(int);
  public abstract void clear();
  public abstract int size();
  public abstract int indexOf(int);
  public abstract int[] toArray();
}
Compiled from "IntIterator.java"
public interface ch.obermuhlner.jhuge.collection.internal.IntIterator {
  public abstract boolean hasNext();
  public abstract int next();
  public abstract void remove();
}
Compiled from "IntLongArrayMap.java"
public interface ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap {
  public abstract void put(int, long[]);
  public abstract boolean containsKey(int);
  public abstract long[] get(int);
  public abstract void remove(int);
  public abstract void clear();
  public abstract int size();
  public abstract ch.obermuhlner.jhuge.collection.internal.IntIterator keySet();
}
Compiled from "LongArray.java"
public interface ch.obermuhlner.jhuge.collection.internal.LongArray {
  public abstract long set(int, long);
  public abstract void add(int, long);
  public abstract void add(long);
  public abstract void addAscending(long);
  public abstract long get(int);
  public abstract long remove(int);
  public abstract void clear();
  public abstract int size();
  public abstract int indexOf(long);
  public abstract long[] toArray();
}
Compiled from "PrimitiveIntArray.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveIntArray extends ch.obermuhlner.jhuge.collection.internal.AbstractIntArray {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntArray();
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntArray(int);
  public int set(int, int);
  public void add(int, int);
  public void add(int);
  public int get(int);
  public int remove(int);
  public void clear();
  public int size();
  public java.lang.String toString();
}
Compiled from "PrimitiveIntArrayTest.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveIntArrayTest extends ch.obermuhlner.jhuge.collection.internal.AbstractIntArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.IntArray createIntArray(int);
}
Compiled from "PrimitiveIntLongArrayMap.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMap implements ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMap();
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMap(int);
  public void put(int, long[]);
  public boolean containsKey(int);
  public long[] get(int);
  public void remove(int);
  public int size();
  public void clear();
  public ch.obermuhlner.jhuge.collection.internal.IntIterator keySet();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "PrimitiveIntLongArrayMap.java"
class ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMap$MyIntIterator implements ch.obermuhlner.jhuge.collection.internal.IntIterator {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMap$MyIntIterator(java.util.Iterator<java.lang.Integer>);
  public boolean hasNext();
  public int next();
  public void remove();
}
Compiled from "PrimitiveIntLongArrayMapTest.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMapTest extends ch.obermuhlner.jhuge.collection.internal.AbstractIntLongArrayMapTest {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveIntLongArrayMapTest();
  protected ch.obermuhlner.jhuge.collection.internal.IntLongArrayMap createIntLongArrayMap();
}
Compiled from "PrimitiveLongArray.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveLongArray extends ch.obermuhlner.jhuge.collection.internal.AbstractLongArray {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveLongArray();
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveLongArray(int);
  public long set(int, long);
  public void add(int, long);
  public void add(long);
  public long get(int);
  public long remove(int);
  public void clear();
  public int size();
  public int indexOf(long);
  public java.lang.String toString();
}
Compiled from "PrimitiveLongArrayTest.java"
public class ch.obermuhlner.jhuge.collection.internal.PrimitiveLongArrayTest extends ch.obermuhlner.jhuge.collection.internal.AbstractLongArrayTest {
  public ch.obermuhlner.jhuge.collection.internal.PrimitiveLongArrayTest();
  protected ch.obermuhlner.jhuge.collection.internal.LongArray createLongArray(int);
}
Compiled from "AbstractSerializableConverterTest.java"
public abstract class ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest {
  public ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest();
  protected abstract <T extends java.io.Serializable> ch.obermuhlner.jhuge.converter.Converter<T> createConverter();
  public void testConvert_null();
  public void testConvert_Boolean();
  public void testConvert_Char();
  public void testConvert_Byte();
  public void testConvert_Short();
  public void testConvert_Integer();
  public void testConvert_Long();
  public void testConvert_Float();
  public void testConvert_Double();
  public void testConvert_String();
  public void testConvert_BigInteger();
  public void testConvert_BigDecimal();
  public void testConvert_Date();
  public void testConvert_Array_boolean();
  public void testConvert_Array_char();
  public void testConvert_Array_byte();
  public void testConvert_Array_short();
  public void testConvert_Array_int();
  public void testConvert_Array_long();
  public void testConvert_Array_float();
  public void testConvert_Array_double();
  public void testConvert_Array_BigDecimal();
  public void testConvert_Array_String();
  public void testConvert_Array_Date();
  public static <T> void assertConvert(ch.obermuhlner.jhuge.converter.Converter<T>, T);
  public static <T> void assertConvert(ch.obermuhlner.jhuge.converter.Converter<T>, T, boolean);
  public static void assertArrayEquals(java.lang.Object, java.lang.Object);
  public static void assertArrayEquals(java.lang.String, java.lang.Object, java.lang.Object);
}
Compiled from "AbstractSerializableConverterTest.java"
class ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest$SubBigDecimal extends java.math.BigDecimal {
  public ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest$SubBigDecimal(java.lang.String, java.math.MathContext);
  public ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest$SubBigDecimal(java.lang.String);
  public java.lang.String toString();
}
Compiled from "AbstractSerializableConverterTest.java"
class ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest$SubBigInteger extends java.math.BigInteger {
  public ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest$SubBigInteger(java.lang.String);
  public java.lang.String toString();
}
Compiled from "ClassLoaderObjectInputStream.java"
public class ch.obermuhlner.jhuge.converter.ClassLoaderObjectInputStream extends java.io.ObjectInputStream {
  public ch.obermuhlner.jhuge.converter.ClassLoaderObjectInputStream(java.io.InputStream, java.lang.ClassLoader) throws java.io.IOException;
  protected java.lang.Class<?> resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException;
}
Compiled from "CompactConverter.java"
public class ch.obermuhlner.jhuge.converter.CompactConverter<T extends java.io.Serializable> extends ch.obermuhlner.jhuge.converter.SerializableConverter<T> {
  public ch.obermuhlner.jhuge.converter.CompactConverter();
  public ch.obermuhlner.jhuge.converter.CompactConverter(java.lang.ClassLoader);
  public byte[] serialize(T);
  public T deserialize(byte[]);
  public java.lang.Object deserialize(byte[]);
  public byte[] serialize(java.lang.Object);
}
Compiled from "CompactConverterTest.java"
public class ch.obermuhlner.jhuge.converter.CompactConverterTest extends ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest {
  public ch.obermuhlner.jhuge.converter.CompactConverterTest();
  protected <T extends java.io.Serializable> ch.obermuhlner.jhuge.converter.Converter<T> createConverter();
}
Compiled from "Converter.java"
public interface ch.obermuhlner.jhuge.converter.Converter<T> {
  public abstract int serializedLength();
  public abstract byte[] serialize(T);
  public abstract T deserialize(byte[]);
}
Compiled from "Converters.java"
public final class ch.obermuhlner.jhuge.converter.Converters {
  public ch.obermuhlner.jhuge.converter.Converters();
  public static <T> ch.obermuhlner.jhuge.converter.Converter<T> bestConverter(java.lang.Class<T>);
  public static <T> ch.obermuhlner.jhuge.converter.Converter<T> bestConverter(java.lang.Class<T>, java.lang.ClassLoader);
}
Compiled from "IntegerConverter.java"
public class ch.obermuhlner.jhuge.converter.IntegerConverter implements ch.obermuhlner.jhuge.converter.Converter<java.lang.Integer> {
  public ch.obermuhlner.jhuge.converter.IntegerConverter();
  public int serializedLength();
  public byte[] serialize(java.lang.Integer);
  public java.lang.Integer deserialize(byte[]);
  public java.lang.Object deserialize(byte[]);
  public byte[] serialize(java.lang.Object);
}
Compiled from "IntegerConverterTest.java"
public class ch.obermuhlner.jhuge.converter.IntegerConverterTest {
  public ch.obermuhlner.jhuge.converter.IntegerConverterTest();
  public void testConvert_Integer();
}
Compiled from "LongConverter.java"
public class ch.obermuhlner.jhuge.converter.LongConverter implements ch.obermuhlner.jhuge.converter.Converter<java.lang.Long> {
  public ch.obermuhlner.jhuge.converter.LongConverter();
  public int serializedLength();
  public byte[] serialize(java.lang.Long);
  public java.lang.Long deserialize(byte[]);
  public java.lang.Object deserialize(byte[]);
  public byte[] serialize(java.lang.Object);
}
Compiled from "LongConverterTest.java"
public class ch.obermuhlner.jhuge.converter.LongConverterTest {
  public ch.obermuhlner.jhuge.converter.LongConverterTest();
  public void testConvert_Long();
}
Compiled from "RunLengthCompressingConverterTest.java"
public class ch.obermuhlner.jhuge.converter.RunLengthCompressingConverterTest extends ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest {
  public ch.obermuhlner.jhuge.converter.RunLengthCompressingConverterTest();
  protected <T extends java.io.Serializable> ch.obermuhlner.jhuge.converter.Converter<T> createConverter();
  public void testCornerCases();
  public void testEscape();
  public void testEscapingEscape();
  public void testLongRunLength();
}
Compiled from "RunLengthCompressionConverter.java"
public class ch.obermuhlner.jhuge.converter.RunLengthCompressionConverter<T> implements ch.obermuhlner.jhuge.converter.Converter<T> {
  public static final byte DEFAULT_ESCAPE;
  public ch.obermuhlner.jhuge.converter.RunLengthCompressionConverter(ch.obermuhlner.jhuge.converter.Converter<T>);
  public ch.obermuhlner.jhuge.converter.RunLengthCompressionConverter(ch.obermuhlner.jhuge.converter.Converter<T>, byte);
  public int serializedLength();
  public byte[] serialize(T);
  public T deserialize(byte[]);
}
Compiled from "SerializableConverter.java"
public class ch.obermuhlner.jhuge.converter.SerializableConverter<T extends java.io.Serializable> implements ch.obermuhlner.jhuge.converter.Converter<T> {
  public ch.obermuhlner.jhuge.converter.SerializableConverter(java.lang.ClassLoader);
  public int serializedLength();
  public byte[] serialize(T);
  public T deserialize(byte[]);
  protected java.lang.ClassLoader getClassLoader();
  public static <T extends java.io.Serializable> T deserialize(java.io.InputStream, java.lang.ClassLoader);
  public static <T extends java.io.Serializable> void serialize(T, java.io.OutputStream);
  public java.lang.Object deserialize(byte[]);
  public byte[] serialize(java.lang.Object);
}
Compiled from "SerializableConverterTest.java"
public class ch.obermuhlner.jhuge.converter.SerializableConverterTest extends ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest {
  public ch.obermuhlner.jhuge.converter.SerializableConverterTest();
  protected <T extends java.io.Serializable> ch.obermuhlner.jhuge.converter.Converter<T> createConverter();
}
Compiled from "ZipCompressingConverterTest.java"
public class ch.obermuhlner.jhuge.converter.ZipCompressingConverterTest extends ch.obermuhlner.jhuge.converter.AbstractSerializableConverterTest {
  public ch.obermuhlner.jhuge.converter.ZipCompressingConverterTest();
  protected <T extends java.io.Serializable> ch.obermuhlner.jhuge.converter.Converter<T> createConverter();
  public void testAuto();
  public void testNotAuto();
}
Compiled from "ZipCompressionConverter.java"
public class ch.obermuhlner.jhuge.converter.ZipCompressionConverter<T> implements ch.obermuhlner.jhuge.converter.Converter<T> {
  public ch.obermuhlner.jhuge.converter.ZipCompressionConverter(ch.obermuhlner.jhuge.converter.Converter<T>);
  public ch.obermuhlner.jhuge.converter.ZipCompressionConverter(ch.obermuhlner.jhuge.converter.Converter<T>, boolean);
  public int serializedLength();
  public byte[] serialize(T);
  public T deserialize(byte[]);
}
Compiled from "EmptySerializable.java"
public class ch.obermuhlner.jhuge.example.EmptySerializable implements java.io.Serializable {
  public ch.obermuhlner.jhuge.example.EmptySerializable();
  public java.lang.String toString();
}
Compiled from "MeasureConverters.java"
public class ch.obermuhlner.jhuge.example.MeasureConverters {
  public ch.obermuhlner.jhuge.example.MeasureConverters();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "MeasureCpu.java"
public class ch.obermuhlner.jhuge.example.MeasureCpu {
  public ch.obermuhlner.jhuge.example.MeasureCpu();
  public static void main(java.lang.String[]);
}
Compiled from "MeasureCpu.java"
class ch.obermuhlner.jhuge.example.MeasureCpu$1 {
}
Compiled from "MeasureCpu.java"
class ch.obermuhlner.jhuge.example.MeasureCpu$StopWatch {
  double getElapsedMilliseconds();
  public java.lang.String toString();
  ch.obermuhlner.jhuge.example.MeasureCpu$StopWatch(ch.obermuhlner.jhuge.example.MeasureCpu$1);
}
Compiled from "MeasureHeap.java"
public class ch.obermuhlner.jhuge.example.MeasureHeap {
  public ch.obermuhlner.jhuge.example.MeasureHeap();
  public static void main(java.lang.String[]);
}
Compiled from "PlanetInformation.java"
public class ch.obermuhlner.jhuge.example.PlanetInformation {
  public ch.obermuhlner.jhuge.example.PlanetInformation();
  public static void main(java.lang.String[]);
}
Compiled from "PlanetInformation.java"
public class ch.obermuhlner.jhuge.example.PlanetInformation$PlanetInfo implements java.io.Serializable {
  public ch.obermuhlner.jhuge.example.PlanetInformation$PlanetInfo(double, double, double, int, java.lang.String, java.lang.String);
  public double getX();
  public double getY();
  public double getZ();
  public int getId();
  public java.lang.String getName();
  public java.lang.String getDescription();
}
Compiled from "SimpleExamples.java"
public class ch.obermuhlner.jhuge.example.SimpleExamples {
  public ch.obermuhlner.jhuge.example.SimpleExamples();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "AbstractMemoryManager.java"
public abstract class ch.obermuhlner.jhuge.memory.AbstractMemoryManager implements ch.obermuhlner.jhuge.memory.MemoryManager {
  public ch.obermuhlner.jhuge.memory.AbstractMemoryManager();
  public long allocate(byte[]);
}
Compiled from "AbstractMemoryManagerTest.java"
public abstract class ch.obermuhlner.jhuge.memory.AbstractMemoryManagerTest {
  public ch.obermuhlner.jhuge.memory.AbstractMemoryManagerTest();
  protected abstract ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  public void testBasics();
}
Compiled from "DummyMemoryManager.java"
public class ch.obermuhlner.jhuge.memory.DummyMemoryManager extends ch.obermuhlner.jhuge.memory.AbstractMemoryManager {
  public ch.obermuhlner.jhuge.memory.DummyMemoryManager();
  public long allocate(int);
  public byte[] read(long);
  public void write(long, byte[]);
  public void free(long);
  public void reset();
  public java.lang.String toString();
}
Compiled from "DummyMemoryManagerTest.java"
public class ch.obermuhlner.jhuge.memory.DummyMemoryManagerTest extends ch.obermuhlner.jhuge.memory.AbstractMemoryManagerTest {
  public ch.obermuhlner.jhuge.memory.DummyMemoryManagerTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  public void testRead_not_found();
  public void testWrite_not_found();
  public void testWrite_too_long();
  public void testFree_twice();
  public void testFree_not_found();
}
Compiled from "MemoryManager.java"
public interface ch.obermuhlner.jhuge.memory.MemoryManager {
  public abstract long allocate(int);
  public abstract long allocate(byte[]);
  public abstract byte[] read(long);
  public abstract void write(long, byte[]);
  public abstract void free(long);
  public abstract void reset();
}
Compiled from "MemoryMappedFileManager.java"
public class ch.obermuhlner.jhuge.memory.MemoryMappedFileManager extends ch.obermuhlner.jhuge.memory.AbstractMemoryManager {
  public static final int KILOBYTES;
  public static final int MEGABYTES;
  public static final int GIGABYTES;
  public static final int NO_BLOCK_SIZE;
  static final boolean $assertionsDisabled;
  public ch.obermuhlner.jhuge.memory.MemoryMappedFileManager();
  public ch.obermuhlner.jhuge.memory.MemoryMappedFileManager(int);
  public ch.obermuhlner.jhuge.memory.MemoryMappedFileManager(int, int);
  public ch.obermuhlner.jhuge.memory.MemoryMappedFileManager(int, int, int, boolean);
  public int getBufferSize();
  public int getBlockSize();
  public long allocate(int);
  public byte[] read(long);
  public void write(long, byte[]);
  public void free(long);
  public void compact();
  public void reset();
  public long getUsedBytes();
  public long getFreeBytes();
  public long getTotalBytes();
  public int getAllocatedBlocks();
  public int getFreeBlocks();
  public int[] getFreeBlockSizes();
  public java.lang.String toString();
  static int quantify(int, int);
  static {};
}
Compiled from "MemoryMappedFileManagerTest.java"
public class ch.obermuhlner.jhuge.memory.MemoryMappedFileManagerTest extends ch.obermuhlner.jhuge.memory.AbstractMemoryManagerTest {
  public ch.obermuhlner.jhuge.memory.MemoryMappedFileManagerTest();
  protected ch.obermuhlner.jhuge.memory.MemoryManager createMemoryManager();
  public void testSizes();
  public void testBufferSize();
  public void testFragmentation();
}
