Compiled from "CoreDownSchematic.java"
public final class net.woopa.dungeon.core.CoreDownSchematic extends java.lang.Enum<net.woopa.dungeon.core.CoreDownSchematic> implements net.woopa.dungeon.datatypes.Schematic {
  public static final net.woopa.dungeon.core.CoreDownSchematic DEFAULT;
  public static net.woopa.dungeon.core.CoreDownSchematic[] values();
  public static net.woopa.dungeon.core.CoreDownSchematic valueOf(java.lang.String);
  public java.lang.String[] getMap();
  public int sx(net.woopa.dungeon.datatypes.Direction);
  public int sy(net.woopa.dungeon.datatypes.Direction);
  public net.woopa.dungeon.datatypes.Material get(int, int, net.woopa.dungeon.datatypes.Direction);
  public int getAccess(net.woopa.dungeon.datatypes.Direction, net.woopa.dungeon.datatypes.Direction);
  static {};
}
Compiled from "CoreDownSchematic.java"
class net.woopa.dungeon.core.CoreDownSchematic$1 {
  static final int[] $SwitchMap$net$woopa$dungeon$datatypes$Direction;
  static {};
}
Compiled from "CoreLevelCreator.java"
public class net.woopa.dungeon.core.CoreLevelCreator implements net.woopa.dungeon.datatypes.LevelCreator {
  public net.woopa.dungeon.core.CoreLevelCreator();
  public net.woopa.dungeon.datatypes.Vector2D levelStart();
  public net.woopa.dungeon.datatypes.Vector2D levelEnd();
  public net.woopa.dungeon.datatypes.Grid generate(net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Direction);
  public net.woopa.dungeon.datatypes.Direction endDirection();
  public net.woopa.dungeon.datatypes.Direction startDirection();
  public void clean();
}
Compiled from "CoreMaterial.java"
public final class net.woopa.dungeon.core.CoreMaterial extends java.lang.Enum<net.woopa.dungeon.core.CoreMaterial> implements net.woopa.dungeon.datatypes.Material {
  public static final net.woopa.dungeon.core.CoreMaterial UNDEF;
  public static final net.woopa.dungeon.core.CoreMaterial WALL;
  public static final net.woopa.dungeon.core.CoreMaterial FIXEDWALL;
  public static final net.woopa.dungeon.core.CoreMaterial UPWALL;
  public static final net.woopa.dungeon.core.CoreMaterial DOWNWALL;
  public static final net.woopa.dungeon.core.CoreMaterial BOTHWALL;
  public static final net.woopa.dungeon.core.CoreMaterial PRESSURE;
  public static final net.woopa.dungeon.core.CoreMaterial RED1;
  public static final net.woopa.dungeon.core.CoreMaterial RED2;
  public static final net.woopa.dungeon.core.CoreMaterial ARROW;
  public static final net.woopa.dungeon.core.CoreMaterial FLOOR;
  public static final net.woopa.dungeon.core.CoreMaterial FIXEDFLOOR;
  public static final net.woopa.dungeon.core.CoreMaterial FIXEDFLOORUP;
  public static final net.woopa.dungeon.core.CoreMaterial FIXEDFLOORDOWN;
  public static final net.woopa.dungeon.core.CoreMaterial O_FLOOR;
  public static final net.woopa.dungeon.core.CoreMaterial WINDOW;
  public static final net.woopa.dungeon.core.CoreMaterial BARS;
  public static final net.woopa.dungeon.core.CoreMaterial HIGH_BARS;
  public static final net.woopa.dungeon.core.CoreMaterial DOOR;
  public static final net.woopa.dungeon.core.CoreMaterial UP;
  public static final net.woopa.dungeon.core.CoreMaterial DOWN;
  public static final net.woopa.dungeon.core.CoreMaterial ARCH;
  public static final net.woopa.dungeon.core.CoreMaterial HIDDEN;
  public static final net.woopa.dungeon.core.CoreMaterial WATER;
  public static final net.woopa.dungeon.core.CoreMaterial LAVA;
  public static final net.woopa.dungeon.core.CoreMaterial ANVIL;
  public static final net.woopa.dungeon.core.CoreMaterial FURNACE;
  public static final net.woopa.dungeon.core.CoreMaterial BOOKCASE;
  public static final net.woopa.dungeon.core.CoreMaterial BOOKCASE2;
  public static final net.woopa.dungeon.core.CoreMaterial SIGNPOST;
  public static final net.woopa.dungeon.core.CoreMaterial ENCHANT;
  public static final net.woopa.dungeon.core.CoreMaterial TORCH;
  public static final net.woopa.dungeon.core.CoreMaterial O_TORCH;
  public static final net.woopa.dungeon.core.CoreMaterial WEB;
  public static final net.woopa.dungeon.core.CoreMaterial SHROOM;
  public static final net.woopa.dungeon.core.CoreMaterial CAKE;
  public static final net.woopa.dungeon.core.CoreMaterial SOULSAND;
  public static final net.woopa.dungeon.core.CoreMaterial EMPTYCHEST;
  public static final net.woopa.dungeon.core.CoreMaterial CHEST;
  public static final net.woopa.dungeon.core.CoreMaterial MIDCHEST;
  public static final net.woopa.dungeon.core.CoreMaterial BIGCHEST;
  public static final net.woopa.dungeon.core.CoreMaterial WORKBENCH;
  public static final net.woopa.dungeon.core.CoreMaterial SPAWNER;
  public static final net.woopa.dungeon.core.CoreMaterial BED_H;
  public static final net.woopa.dungeon.core.CoreMaterial BED_F;
  public static final net.woopa.dungeon.core.CoreMaterial NONE;
  public static net.woopa.dungeon.core.CoreMaterial[] values();
  public static net.woopa.dungeon.core.CoreMaterial valueOf(java.lang.String);
  public java.lang.Boolean isFloor();
  public java.lang.Boolean isWall();
  public java.lang.Boolean isChest();
  public java.lang.Boolean isDoor();
  public java.lang.Boolean isStair();
  public java.lang.Boolean isUndef();
  public java.lang.Boolean isBoundary();
  public char getSymbol();
  public java.lang.String getName();
  static {};
}
Compiled from "CoreRoom.java"
public class net.woopa.dungeon.core.CoreRoom {
  public net.woopa.dungeon.core.CoreRoom(net.woopa.dungeon.datatypes.Grid);
  public void clearAttempts();
  public java.lang.Boolean startRoom(int, int, net.woopa.dungeon.datatypes.Direction);
  public java.lang.Boolean nextRoom(net.woopa.dungeon.core.CoreRoom);
  public java.lang.Boolean endRoom(net.woopa.dungeon.core.CoreRoom);
  public int corridorWidth();
  public int getExtensionAttempts();
  public int getGen();
  public net.woopa.dungeon.datatypes.Grid getGrid();
  public int getOriginX();
  public int getOriginY();
  public net.woopa.dungeon.datatypes.Direction getRoomDir();
  public int getSizeX();
  public int getSizeY();
  public net.woopa.dungeon.core.CoreRoom$RoomType getType();
  public int randomCorridorSize();
  public void setRoomDir(net.woopa.dungeon.datatypes.Direction);
  public java.lang.String toString();
  public net.woopa.dungeon.datatypes.Vector2D wayin();
}
Compiled from "CoreRoom.java"
class net.woopa.dungeon.core.CoreRoom$1 {
  static final int[] $SwitchMap$net$woopa$dungeon$datatypes$Direction;
  static {};
}
Compiled from "CoreRoom.java"
public final class net.woopa.dungeon.core.CoreRoom$RoomType extends java.lang.Enum<net.woopa.dungeon.core.CoreRoom$RoomType> {
  public static final net.woopa.dungeon.core.CoreRoom$RoomType ROOM;
  public static final net.woopa.dungeon.core.CoreRoom$RoomType CORRIDOR;
  public static final net.woopa.dungeon.core.CoreRoom$RoomType SPECIAL;
  public static net.woopa.dungeon.core.CoreRoom$RoomType[] values();
  public static net.woopa.dungeon.core.CoreRoom$RoomType valueOf(java.lang.String);
  static {};
}
Compiled from "CoreSchematic.java"
public final class net.woopa.dungeon.core.CoreSchematic extends java.lang.Enum<net.woopa.dungeon.core.CoreSchematic> implements net.woopa.dungeon.datatypes.Schematic {
  public static final net.woopa.dungeon.core.CoreSchematic CIRCLE7x7;
  public static final net.woopa.dungeon.core.CoreSchematic CHANTING9x9;
  public static net.woopa.dungeon.core.CoreSchematic[] values();
  public static net.woopa.dungeon.core.CoreSchematic valueOf(java.lang.String);
  public java.lang.String[] getMap();
  public int sx(net.woopa.dungeon.datatypes.Direction);
  public int sy(net.woopa.dungeon.datatypes.Direction);
  public net.woopa.dungeon.datatypes.Material get(int, int, net.woopa.dungeon.datatypes.Direction);
  public int getAccess(net.woopa.dungeon.datatypes.Direction, net.woopa.dungeon.datatypes.Direction);
  static {};
}
Compiled from "CoreSchematic.java"
class net.woopa.dungeon.core.CoreSchematic$1 {
  static final int[] $SwitchMap$net$woopa$dungeon$datatypes$Direction;
  static {};
}
Compiled from "CoreSettings.java"
public final class net.woopa.dungeon.core.CoreSettings extends java.lang.Enum<net.woopa.dungeon.core.CoreSettings> implements net.woopa.dungeon.settings.Property {
  public static final net.woopa.dungeon.core.CoreSettings RoomMax;
  public static final net.woopa.dungeon.core.CoreSettings RoomMin;
  public static final net.woopa.dungeon.core.CoreSettings SpecialPct;
  public static final net.woopa.dungeon.core.CoreSettings CorridorPct;
  public static final net.woopa.dungeon.core.CoreSettings CorridorMax;
  public static final net.woopa.dungeon.core.CoreSettings CorridorMin;
  public static final net.woopa.dungeon.core.CoreSettings CorridorW2Pct;
  public static final net.woopa.dungeon.core.CoreSettings CorridorW3Pct;
  public static final net.woopa.dungeon.core.CoreSettings HiddenPct;
  public static final net.woopa.dungeon.core.CoreSettings DoorPct;
  public static final net.woopa.dungeon.core.CoreSettings WebDoorPct;
  public static final net.woopa.dungeon.core.CoreSettings TrapPct;
  public static final net.woopa.dungeon.core.CoreSettings SandPct;
  public static final net.woopa.dungeon.core.CoreSettings ChestPct;
  public static final net.woopa.dungeon.core.CoreSettings SpawnerPct;
  public static final net.woopa.dungeon.core.CoreSettings PoolPct;
  public static final net.woopa.dungeon.core.CoreSettings FullPoolPct;
  public static final net.woopa.dungeon.core.CoreSettings LavaPct;
  public static final net.woopa.dungeon.core.CoreSettings ShroomPct;
  public static final net.woopa.dungeon.core.CoreSettings BenchPct;
  public static final net.woopa.dungeon.core.CoreSettings AnvilPct;
  public static final net.woopa.dungeon.core.CoreSettings EnchantPct;
  public static final net.woopa.dungeon.core.CoreSettings OvenPct;
  public static final net.woopa.dungeon.core.CoreSettings DoubleDoorPct;
  public static final net.woopa.dungeon.core.CoreSettings MedHalfEmpty;
  public static net.woopa.dungeon.core.CoreSettings[] values();
  public static net.woopa.dungeon.core.CoreSettings valueOf(java.lang.String);
  public java.lang.String getKey();
  public java.lang.Object getValue();
  static {};
}
Compiled from "Dbg.java"
public class net.woopa.dungeon.core.Dbg {
  public net.woopa.dungeon.core.Dbg();
  public static void tic();
  public static void toc(java.lang.String);
  static {};
}
Compiled from "Main2.java"
public class net.woopa.dungeon.core.Main2 {
  public final net.woopa.dungeon.managers.MaterialManager mm;
  public final net.woopa.dungeon.managers.SettingsManager sm;
  public final net.woopa.dungeon.managers.SchematicManager scm;
  public net.woopa.dungeon.core.Main2();
  public static void main(java.lang.String[]);
  public static void log(java.lang.String);
}
Compiled from "RandomUtil.java"
public class net.woopa.dungeon.core.RandomUtil {
  public net.woopa.dungeon.core.RandomUtil();
  public static int nextInt(int);
  public static boolean chance(int);
  static {};
}
Compiled from "RoomPopulator.java"
public class net.woopa.dungeon.core.RoomPopulator {
  public net.woopa.dungeon.core.RoomPopulator(net.woopa.dungeon.core.CoreRoom);
  public void dressRoom();
  java.lang.Boolean chestDoubleRandom();
  java.lang.Boolean objectRandom(net.woopa.dungeon.datatypes.Material);
}
Compiled from "StandardMethods.java"
public class net.woopa.dungeon.core.StandardMethods {
  public net.woopa.dungeon.core.StandardMethods();
  public static void build_door(net.woopa.dungeon.datatypes.Direction, net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Material, net.woopa.dungeon.datatypes.Grid);
  public static void fixWall(int, int, net.woopa.dungeon.datatypes.Grid);
  public static void fixFloor(int, int, net.woopa.dungeon.datatypes.Grid);
  public static void startUpStaircase(int, int, net.woopa.dungeon.core.CoreMaterial, net.woopa.dungeon.datatypes.Grid, net.woopa.dungeon.datatypes.Direction);
  public static void upWall(int, int, net.woopa.dungeon.datatypes.Grid);
}
Compiled from "Direction.java"
public final class net.woopa.dungeon.datatypes.Direction extends java.lang.Enum<net.woopa.dungeon.datatypes.Direction> {
  public static final net.woopa.dungeon.datatypes.Direction NORTH;
  public static final net.woopa.dungeon.datatypes.Direction EAST;
  public static final net.woopa.dungeon.datatypes.Direction SOUTH;
  public static final net.woopa.dungeon.datatypes.Direction WEST;
  public static net.woopa.dungeon.datatypes.Direction[] values();
  public static net.woopa.dungeon.datatypes.Direction valueOf(java.lang.String);
  public static net.woopa.dungeon.datatypes.Direction randomDirection();
  public net.woopa.dungeon.datatypes.Direction rotate90();
  public net.woopa.dungeon.datatypes.Direction rotate180();
  public net.woopa.dungeon.datatypes.Direction rotate270();
  public java.lang.Boolean isHorizontal();
  public java.lang.Boolean isVertical();
  public int dx(int);
  public int dy(int);
  public int forwards_x(int);
  public int forwards_y(int);
  public int backwards_x(int);
  public int backwards_y(int);
  public int left_x(int);
  public int left_y(int);
  public int right_x(int);
  public int right_y(int);
  static {};
}
Compiled from "Grid.java"
public class net.woopa.dungeon.datatypes.Grid {
  public net.woopa.dungeon.datatypes.Grid(int, int);
  public net.woopa.dungeon.datatypes.Grid(java.lang.String[]);
  public net.woopa.dungeon.datatypes.Grid(net.woopa.dungeon.datatypes.Vector2D);
  public float percentUtilized();
  public void show();
  public java.util.List<java.lang.String> getMap();
  public net.woopa.dungeon.datatypes.Vector2D getSize();
  public void renderBasicEmptyRoom(int, int, int, int, net.woopa.dungeon.datatypes.Material, net.woopa.dungeon.datatypes.Material);
  public java.lang.Boolean isUndef(int, int);
  public void set(int, int, net.woopa.dungeon.datatypes.Material);
  public java.lang.Boolean fits(int, int, int, int);
  public net.woopa.dungeon.datatypes.Material get(int, int);
  public java.lang.Boolean isFloor(int, int);
  public void use();
  public void renderSchematic(int, int, net.woopa.dungeon.datatypes.Schematic, net.woopa.dungeon.datatypes.Direction);
  public java.lang.Boolean isWall(int, int);
  public boolean isChest(int, int);
}
Compiled from "Level.java"
public class net.woopa.dungeon.datatypes.Level {
  public net.woopa.dungeon.datatypes.Level(net.woopa.dungeon.datatypes.LevelCreator, net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Direction);
  public net.woopa.dungeon.datatypes.Grid getGrid();
  public void setGrid(net.woopa.dungeon.datatypes.Grid);
  public net.woopa.dungeon.datatypes.Vector2D getLevelEnd();
  public net.woopa.dungeon.datatypes.Vector2D getLevelStart();
  public void show();
}
Compiled from "LevelCreator.java"
public interface net.woopa.dungeon.datatypes.LevelCreator {
  public abstract net.woopa.dungeon.datatypes.Vector2D levelStart();
  public abstract net.woopa.dungeon.datatypes.Vector2D levelEnd();
  public abstract net.woopa.dungeon.datatypes.Grid generate(net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Vector2D, net.woopa.dungeon.datatypes.Direction);
  public abstract net.woopa.dungeon.datatypes.Direction endDirection();
  public abstract net.woopa.dungeon.datatypes.Direction startDirection();
  public abstract void clean();
}
Compiled from "Material.java"
public interface net.woopa.dungeon.datatypes.Material {
  public abstract char getSymbol();
  public abstract java.lang.String getName();
  public abstract java.lang.Boolean isChest();
  public abstract java.lang.Boolean isWall();
  public abstract java.lang.Boolean isFloor();
  public abstract java.lang.Boolean isBoundary();
  public abstract java.lang.Boolean isUndef();
}
Compiled from "Schematic.java"
public interface net.woopa.dungeon.datatypes.Schematic {
  public abstract java.lang.String[] getMap();
  public abstract int sx(net.woopa.dungeon.datatypes.Direction);
  public abstract net.woopa.dungeon.datatypes.Material get(int, int, net.woopa.dungeon.datatypes.Direction);
  public abstract int sy(net.woopa.dungeon.datatypes.Direction);
  public abstract int getAccess(net.woopa.dungeon.datatypes.Direction, net.woopa.dungeon.datatypes.Direction);
}
Compiled from "Vector2D.java"
public class net.woopa.dungeon.datatypes.Vector2D {
  public net.woopa.dungeon.datatypes.Vector2D(int, int);
  public net.woopa.dungeon.datatypes.Vector2D(net.woopa.dungeon.datatypes.Vector2D, int);
  public net.woopa.dungeon.datatypes.Vector2D(java.util.Random, int, int);
  public net.woopa.dungeon.datatypes.Vector2D(java.util.Random, net.woopa.dungeon.datatypes.Vector2D);
  public void set(int, int);
  public void setX(int);
  public void setY(int);
  public int getX();
  public int getY();
  public void set(net.woopa.dungeon.datatypes.Vector2D);
  public net.woopa.dungeon.datatypes.Vector2D clone();
  public java.lang.String toString();
  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
}
Compiled from "MaterialManager.java"
public class net.woopa.dungeon.managers.MaterialManager {
  public net.woopa.dungeon.managers.MaterialManager(net.woopa.dungeon.core.Main2);
  public void addMaterials(java.lang.Class<?>);
  public static net.woopa.dungeon.datatypes.Material getMaterial(char);
  public void addMaterial(net.woopa.dungeon.datatypes.Material);
  static {};
}
Compiled from "SchematicManager.java"
public class net.woopa.dungeon.managers.SchematicManager {
  public static java.util.List<net.woopa.dungeon.datatypes.Schematic> customRooms;
  public static java.util.List<net.woopa.dungeon.datatypes.Schematic> customDown;
  public net.woopa.dungeon.managers.SchematicManager(net.woopa.dungeon.core.Main2);
  public void addCustomRoom(net.woopa.dungeon.datatypes.Schematic);
  public void addCustomDown(net.woopa.dungeon.datatypes.Schematic);
  public void addCustomRooms(java.lang.Class<?>);
  public void addCustomDowns(java.lang.Class<?>);
  public static net.woopa.dungeon.datatypes.Schematic randomRoomSchematic();
  public static net.woopa.dungeon.datatypes.Schematic randomDownSchematic();
  static {};
}
Compiled from "SettingsManager.java"
public class net.woopa.dungeon.managers.SettingsManager {
  public static java.util.Properties properties;
  public net.woopa.dungeon.managers.SettingsManager();
  public static void addProperties(java.lang.Class<?>);
  public static int getInt(net.woopa.dungeon.settings.Property);
  public static boolean getBoolean(net.woopa.dungeon.settings.Property);
  static {};
}
Compiled from "Property.java"
public interface net.woopa.dungeon.settings.Property {
  public abstract java.lang.String getKey();
  public abstract java.lang.Object getValue();
}
