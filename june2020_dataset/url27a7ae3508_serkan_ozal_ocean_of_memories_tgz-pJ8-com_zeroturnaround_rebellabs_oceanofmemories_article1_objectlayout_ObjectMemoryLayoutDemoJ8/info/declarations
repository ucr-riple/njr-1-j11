Compiled from "GarbageCollectionAllocationDeallocationDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionAllocationDeallocationDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionAllocationDeallocationDemo();
  public static void main(java.lang.String[]);
}
Compiled from "GarbageCollectionAllocationDeallocationDemo.java"
class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionAllocationDeallocationDemo$SampleClass {
  byte b;
  short s;
  int i;
  long l;
  com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionAllocationDeallocationDemo$SampleClass();
}
Compiled from "GarbageCollectionFinalizerDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionFinalizerDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionFinalizerDemo();
  public static void main(java.lang.String[]);
}
Compiled from "GarbageCollectionFinalizerDemo.java"
class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionFinalizerDemo$SampleClass {
  static long numberOfCreatedInstances;
  static long numberOfDeletedInstances;
  com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionFinalizerDemo$SampleClass();
  protected void finalize() throws java.lang.Throwable;
  static {};
}
Compiled from "GarbageCollectionNotificationDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionNotificationDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionNotificationDemo();
  public static void main(java.lang.String[]);
}
Compiled from "GarbageCollectionNotificationDemo.java"
final class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionNotificationDemo$1 implements javax.management.NotificationListener {
  long totalGcDuration;
  com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionNotificationDemo$1();
  public void handleNotification(javax.management.Notification, java.lang.Object);
}
Compiled from "GarbageCollectionParameterDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionParameterDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionParameterDemo();
  public static void main(java.lang.String[]);
}
Compiled from "GarbageCollectionParameterDemo.java"
class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionParameterDemo$GarbageCollectionTester {
  com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionParameterDemo$GarbageCollectionTester();
  public static void main(java.lang.String[]);
}
Compiled from "GarbageCollectionThresholdDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionThresholdDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionThresholdDemo();
  public static void main(java.lang.String[]);
  static long access$000();
  static {};
}
Compiled from "GarbageCollectionThresholdDemo.java"
final class com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionThresholdDemo$1 implements javax.management.NotificationListener {
  com.zeroturnaround.rebellabs.oceanofmemories.article0.gc.GarbageCollectionThresholdDemo$1();
  public void handleNotification(javax.management.Notification, java.lang.Object);
}
Compiled from "SampleBaseClass.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleBaseClass {
  protected short s;
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleBaseClass();
}
Compiled from "SampleClass.java"
public final class com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleClass extends com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleBaseClass {
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleClass();
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.SampleClass(int, long);
  public int getI();
  public void setI(int);
  public long getL();
  public void setL(long);
  public static byte getB();
}
Compiled from "ClassFileLayoutDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article1.classlayout.ClassFileLayoutDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.classlayout.ClassFileLayoutDemo();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "ClassMemoryLayoutDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article1.classlayout.ClassMemoryLayoutDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.classlayout.ClassMemoryLayoutDemo();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "ObjectMemoryLayoutDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article1.objectlayout.ObjectMemoryLayoutDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article1.objectlayout.ObjectMemoryLayoutDemo();
  public static void main(java.lang.String[]);
}
Compiled from "OffHeapBenchmarkRunner.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapBenchmarkRunner extends com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BaseBenchmarkRunner {
  public static final int OFFHEAP_BENCHMARK_RUNNER_ID;
  public static final int ELEMENT_COUNT;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapBenchmarkRunner();
  protected void doRun();
  static {};
}
Compiled from "OffHeapWithDirectByteBufferDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithDirectByteBufferDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithDirectByteBufferDemo();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "OffHeapWithMemoryMappedFileDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithMemoryMappedFileDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithMemoryMappedFileDemo();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "OffHeapWithProxyOnUnsafeDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithProxyOnUnsafeDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithProxyOnUnsafeDemo();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "OffHeapWithSerializationDeserializationDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithSerializationDeserializationDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithSerializationDeserializationDemo();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "OffHeapWithUnsafeDemo.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithUnsafeDemo {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.OffHeapWithUnsafeDemo();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "BaseOffHeapBenchmarkWorker.java"
public abstract class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker implements com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.OffHeapBenchmarkWorker {
  protected final org.apache.log4j.Logger logger;
  protected int elementCount;
  protected java.lang.String type;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker(int);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker(int, java.lang.String);
  public int getElementCount();
  public java.lang.String getType();
  public void flush();
  public void finish();
}
Compiled from "ByteBufferBasedOffHeapBenchmarkWorker.java"
public abstract class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.ByteBufferBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker {
  protected java.nio.ByteBuffer bb;
  protected int index;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.ByteBufferBasedOffHeapBenchmarkWorker(int, java.lang.String);
  protected abstract java.nio.ByteBuffer createByteBuffer(int);
  public void reset();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade createElement();
  public void saveElement(com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade getElement(int);
}
Compiled from "OffHeapBenchmarkWorker.java"
public interface com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.OffHeapBenchmarkWorker {
  public abstract java.lang.String getType();
  public abstract void reset();
  public abstract int getElementCount();
  public abstract com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade createElement();
  public abstract void saveElement(com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade);
  public abstract com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade getElement(int);
  public abstract void flush();
  public abstract void finish();
}
Compiled from "OffHeapBenchmarkWorkerFactory.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.OffHeapBenchmarkWorkerFactory {
  public static com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.OffHeapBenchmarkWorker createOffHeapBenchmarkWorker(java.lang.String, int);
}
Compiled from "DirectByteBufferBasedOffHeapBenchmarkWorker.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.directbytebuffer.DirectByteBufferBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.ByteBufferBasedOffHeapBenchmarkWorker {
  public static final java.lang.String TYPE;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.directbytebuffer.DirectByteBufferBasedOffHeapBenchmarkWorker(int);
  protected java.nio.ByteBuffer createByteBuffer(int);
  public void finish();
}
Compiled from "MemoryMappedFileBasedOffHeapBenchmarkWorker.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.memorymappedfile.MemoryMappedFileBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.ByteBufferBasedOffHeapBenchmarkWorker {
  public static final java.lang.String TYPE;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.memorymappedfile.MemoryMappedFileBasedOffHeapBenchmarkWorker(int);
  protected java.nio.ByteBuffer createByteBuffer(int);
  public void flush();
  public void finish();
}
Compiled from "ProxyOnUnsafeBasedOffHeapBenchmarkWorker.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.proxyonunsafe.ProxyOnUnsafeBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker {
  public static final java.lang.String TYPE;
  protected static final sun.misc.Unsafe unsafe;
  protected int index;
  protected long allocatedAddress;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.proxyonunsafe.ProxyOnUnsafeBasedOffHeapBenchmarkWorker(int);
  public void reset();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade createElement();
  public void saveElement(com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade getElement(int);
  public void finish();
  static {};
}
Compiled from "UnsafeBasedProxyOffHeapBenchmarkTrade.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.proxyonunsafe.UnsafeBasedProxyOffHeapBenchmarkTrade implements com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.proxyonunsafe.UnsafeBasedProxyOffHeapBenchmarkTrade(sun.misc.Unsafe, long);
  public long getTradeId();
  public void setTradeId(long);
  public long getClientId();
  public void setClientId(long);
  public int getVenueCode();
  public void setVenueCode(int);
  public int getInstrumentCode();
  public void setInstrumentCode(int);
  public long getPrice();
  public void setPrice(long);
  public long getQuantity();
  public void setQuantity(long);
  public char getSide();
  public void setSide(char);
  public java.lang.String toString();
}
Compiled from "SerializationDeserializationBasedOffHeapBenchmarkWorker.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker {
  public static final java.lang.String TYPE;
  protected static final sun.misc.Unsafe UNSAFE;
  protected static final int BYTE_ARRAY_START_OFFSET;
  protected static final int BYTE_ARRAY_INDEX_SCALE;
  protected static final int STREAM_HEADER_SIZE;
  protected static final int OFFSET_INDEX_ELEMENT_SIZE;
  protected int index;
  protected int offsetIndex;
  protected long allocatedAddress;
  protected long offsetAddress;
  protected long allocationSize;
  protected com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedOutputStream unsafeBasedOutputStream;
  protected java.io.ObjectOutputStream oos;
  protected com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedInputStream unsafeBasedInputStream;
  protected java.io.ObjectInputStream ois;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker(int);
  public void reset();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade createElement();
  public void saveElement(com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade getElement(int);
  public void flush();
  public void finish();
  static {};
}
Compiled from "SerializationDeserializationBasedOffHeapBenchmarkWorker.java"
class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedInputStream extends java.io.InputStream {
  com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedInputStream(sun.misc.Unsafe, long, long);
  public int read() throws java.io.IOException;
  public int read(byte[], int, int) throws java.io.IOException;
  public long skip(long) throws java.io.IOException;
  public int available() throws java.io.IOException;
  void moveTo(long);
  public void reset();
}
Compiled from "SerializationDeserializationBasedOffHeapBenchmarkWorker.java"
class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedOutputStream extends java.io.OutputStream {
  com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.serde.SerializationDeserializationBasedOffHeapBenchmarkWorker$UnsafeBasedOutputStream(sun.misc.Unsafe, long, long);
  public void write(int) throws java.io.IOException;
  public void write(byte[], int, int) throws java.io.IOException;
  void moveTo(long);
  void reset();
  long offset();
}
Compiled from "UnsafeBasedOffHeapBenchmarkWorker.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.unsafe.UnsafeBasedOffHeapBenchmarkWorker extends com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.BaseOffHeapBenchmarkWorker {
  public static final java.lang.String TYPE;
  protected static final sun.misc.Unsafe unsafe;
  protected int index;
  protected long allocatedAddress;
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.benchmark.unsafe.UnsafeBasedOffHeapBenchmarkWorker(int);
  public void reset();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade createElement();
  public void saveElement(com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade getElement(int);
  public void finish();
  static {};
}
Compiled from "OffHeapBenchmarkTradeBeanBuilder.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder implements com.zeroturnaround.rebellabs.oceanofmemories.common.domain.builder.Builder<com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean> {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean build();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder elementKey(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder tradeId(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder clientId(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder venueCode(int);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder instrumentCode(int);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder price(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder quantity(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.builder.OffHeapBenchmarkTradeBeanBuilder side(char);
  public java.lang.Object build();
}
Compiled from "OffHeapBenchmarkTrade.java"
public interface com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade extends java.io.Serializable {
  public static final int LAYOUTED_SIZE;
  public static final int SIZE;
  public static final int STREAMED_APPROXIMATE_SIZE;
  public abstract long getTradeId();
  public abstract void setTradeId(long);
  public abstract long getClientId();
  public abstract void setClientId(long);
  public abstract int getVenueCode();
  public abstract void setVenueCode(int);
  public abstract int getInstrumentCode();
  public abstract void setInstrumentCode(int);
  public abstract long getPrice();
  public abstract void setPrice(long);
  public abstract long getQuantity();
  public abstract void setQuantity(long);
  public abstract char getSide();
  public abstract void setSide(char);
}
Compiled from "OffHeapBenchmarkTradeBean.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean implements com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTrade {
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean();
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean(long);
  public com.zeroturnaround.rebellabs.oceanofmemories.article2.domain.model.OffHeapBenchmarkTradeBean(long, long, int, int, long, long, char);
  public long getTradeId();
  public void setTradeId(long);
  public long getClientId();
  public void setClientId(long);
  public int getVenueCode();
  public void setVenueCode(int);
  public int getInstrumentCode();
  public void setInstrumentCode(int);
  public long getPrice();
  public void setPrice(long);
  public long getQuantity();
  public void setQuantity(long);
  public char getSide();
  public void setSide(char);
  public java.lang.String toString();
}
Compiled from "BaseBenchmarkRunner.java"
public abstract class com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BaseBenchmarkRunner implements com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BenchmarkRunner {
  protected int id;
  protected java.lang.String name;
  protected java.lang.String description;
  public com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BaseBenchmarkRunner(int);
  public com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BaseBenchmarkRunner(int, java.lang.String);
  public com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BaseBenchmarkRunner(int, java.lang.String, java.lang.String);
  public int getId();
  public java.lang.String getName();
  public java.lang.String getDescription();
  protected void beforeRun();
  protected void doRun();
  protected void afterRun();
  protected void onError(java.lang.Throwable);
  protected void onTerminate();
  public void run();
}
Compiled from "BenchmarkDriver.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BenchmarkDriver {
  public static final java.lang.String BENCHMARK_ID_PARAM_NAME;
  public com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BenchmarkDriver();
  public static void registerBenchmarkRunner(com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BenchmarkRunner);
  public void benchmarkSetup(org.openjdk.jmh.infra.BenchmarkParams);
  public void setup(org.openjdk.jmh.infra.BenchmarkParams);
  public void benchmark();
  public void teardown();
  public void benchmarkTeardown();
  static {};
}
Compiled from "BenchmarkRunner.java"
public interface com.zeroturnaround.rebellabs.oceanofmemories.common.benchmark.BenchmarkRunner {
  public abstract int getId();
  public abstract java.lang.String getName();
  public abstract java.lang.String getDescription();
  public abstract void run();
}
Compiled from "Builder.java"
public interface com.zeroturnaround.rebellabs.oceanofmemories.common.domain.builder.Builder<T> {
  public abstract T build();
}
Compiled from "Mergeable.java"
public interface com.zeroturnaround.rebellabs.oceanofmemories.common.domain.model.Mergeable<T> {
  public abstract com.zeroturnaround.rebellabs.oceanofmemories.common.domain.model.Mergeable<T> merge(T);
}
Compiled from "ClassUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ClassUtil {
  public static final java.lang.String CLASS_FILE_EXTENSION;
  public static int BYTE_COUNT_IN_A_ROW_FOR_PRINT;
  public static java.lang.String getPathOfClass(java.lang.Class<?>);
  public static java.io.InputStream getInputStreamOfClass(java.lang.Class<?>);
  public static java.io.File getFileOfClass(java.lang.Class<?>);
  public static byte[] getContentOfClass(java.lang.Class<?>);
  public static void printContentOfClassFile(java.lang.Class<?>);
  public static void printContentOfClassFileByShowingPrintableCharacters(java.lang.Class<?>);
  static {};
}
Compiled from "ClasspathUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ClasspathUtil {
  public static java.util.Set<java.net.URL> getClasspathUrls();
  public static java.lang.String getFullClasspath();
  static {};
}
Compiled from "JvmUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil {
  public static final java.lang.String JAVA_6;
  public static final java.lang.String JAVA_7;
  public static final java.lang.String JAVA_8;
  public static final java.lang.String JAVA_VERSION;
  public static final java.lang.String JAVA_SPEC_VERSION;
  public static final java.lang.String JAVA_RUNTIME_VERSION;
  public static final java.lang.String JAVA_VENDOR;
  public static final java.lang.String JVM_VENDOR;
  public static final java.lang.String JVM_VERSION;
  public static final java.lang.String JVM_NAME;
  public static final java.lang.String OS_ARCH;
  public static final java.lang.String OS_NAME;
  public static final java.lang.String OS_VERSION;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo JAVA_VERSION_INFO;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo JVM_INFO;
  public static final byte BITS_32;
  public static final byte BITS_64;
  public static final byte SIZE_32_BIT;
  public static final byte SIZE_64_BIT;
  public static final byte DEFAULT_COMPRESSED_REF_SHIFT_SIZE;
  public static final byte INVALID_ADDRESS;
  public static final byte ADDRESSING_4_BYTE;
  public static final byte ADDRESSING_8_BYTE;
  public static final byte ADDRESSING_16_BYTE;
  public static final int NR_BITS;
  public static final int BYTE;
  public static final int WORD;
  public static final int MIN_SIZE;
  public static final int ADDRESS_SHIFT_SIZE_FOR_BETWEEN_32GB_AND_64_GB;
  public static final int ADDRESS_SHIFT_SIZE_FOR_BIGGER_THAN_64_GB;
  public static final int OBJECT_HEADER_SIZE_32_BIT;
  public static final int OBJECT_HEADER_SIZE_64_BIT;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_OBJECT_FOR_32_BIT;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_OBJECT_FOR_64_BIT;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_32_BIT_FOR_JAVA_6;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITH_COMPRESSED_REF_FOR_JAVA_6;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITHOUT_COMPRESSED_REF_FOR_JAVA_6;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_32_BIT_FOR_JAVA_7;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITH_COMPRESSED_REF_FOR_JAVA_7;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITHOUT_COMPRESSED_REF_FOR_JAVA_7;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_32_BIT_FOR_JAVA_8;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITH_COMPRESSED_REF_FOR_JAVA_8;
  public static final int CLASS_DEF_POINTER_OFFSET_IN_CLASS_64_BIT_WITHOUT_COMPRESSED_REF_FOR_JAVA_8;
  public static final int SIZE_FIELD_OFFSET_IN_CLASS_32_BIT;
  public static final int SIZE_FIELD_OFFSET_IN_CLASS_64_BIT;
  public static final int BOOLEAN_SIZE;
  public static final int BYTE_SIZE;
  public static final int CHAR_SIZE;
  public static final int SHORT_SIZE;
  public static final int INT_SIZE;
  public static final int FLOAT_SIZE;
  public static final int LONG_SIZE;
  public static final int DOUBLE_SIZE;
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil();
  public static sun.misc.Unsafe getUnsafe();
  public static boolean isJava_6();
  public static boolean isJava_7();
  public static boolean isJava_8();
  public static boolean isJvmSupported();
  public static boolean isHotspotJvmSupported();
  public static boolean isJrockitJvmSupported();
  public static boolean isJavaVersionSupported();
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions getOptions();
  public static int getAddressSize();
  public static boolean isAddressSizeSupported();
  public static int getHeaderSize();
  public static int getArrayHeaderSize();
  public static long getBaseOffset();
  public static int getIndexScale();
  public static int getClassDefPointerOffsetInClass();
  public static int getClassDefPointerOffsetInObject();
  public static int getSizeFieldOffsetOffsetInClass();
  public static boolean isCompressedRef();
  public static int getReferenceSize();
  public static int getObjectAlignment();
  public static int getCompressedReferenceShift();
  public static long getCompressedReferenceBase();
  public static java.lang.String getVmName();
  public static long normalize(int);
  public static long internalAddressOf(java.lang.Object);
  public static synchronized long addressOf(java.lang.Object);
  public static synchronized long jvmAddressOf(java.lang.Object);
  public static java.lang.reflect.Field getField(java.lang.Class<?>, java.lang.String);
  public static long addressOfField(java.lang.Object, java.lang.String);
  public static long addressOfClass(java.lang.Object);
  public static long jvmAddressOfClass(java.lang.Object);
  public static long addressOfClass(java.lang.Class<?>);
  public static boolean isPrimitiveType(java.lang.Class<?>);
  public static boolean isComplexType(java.lang.Class<?>);
  public static java.lang.Class<?> primitiveTypeOf(java.lang.Class<?>);
  public static java.lang.Class<?> complexTypeOf(java.lang.Class<?>);
  public static long sizeOfWithUnsafe(java.lang.Object);
  public static long sizeOfWithReflection(java.lang.Class<?>);
  public static int sizeOfType(java.lang.Class<?>);
  public static int sizeOfArray(java.lang.Object);
  public static long sizeOfArray(java.lang.Class<?>, long);
  public static int arrayBaseOffset(java.lang.Class<?>);
  public static int arrayIndexScale(java.lang.Class<?>);
  public static int arrayLengthSize();
  public static long getArrayBaseAddress(java.lang.Object);
  public static long getArrayBaseAddress(java.lang.Object, java.lang.Class<?>);
  public static long getArrayElementAddress(java.lang.Object, int);
  public static long getArrayElementAddress(java.lang.Object, java.lang.Class<?>, int);
  public static int getArrayLength(long, java.lang.Class<?>);
  public static void setArrayLength(long, java.lang.Class<?>, int);
  public static long toNativeAddress(long);
  public static long toJvmAddress(long);
  public static void dump(long, long);
  public static void dump(java.io.PrintStream, long, long);
  public static void dump(java.lang.Object, long);
  public static void dump(java.io.PrintWriter, java.lang.Object);
  public static java.lang.String dump(java.lang.Object);
  public static java.lang.String objectMemoryAsString(java.lang.Object);
  public static java.lang.String fieldsLayoutAsString(java.lang.Class<?>);
  public static long alignObjectSize(long);
  public static long sizeOf(java.lang.Object);
  public static long sizeOfAll(java.lang.Object...);
  public static long sizeOfAll(java.lang.Iterable<java.lang.Object>);
  public static long shallowSizeOf(java.lang.Object);
  public static long sizeOf(java.lang.Class<?>);
  public static long shallowSizeOfAll(java.lang.Object...);
  public static long shallowSizeOfAll(java.lang.Iterable<java.lang.Object>);
  public static <T> T allocateInstance(java.lang.Class<T>);
  public static java.lang.String toHexAddress(long);
  public static java.lang.String toBinaryStringAddress(long);
  public static java.lang.Integer getProcessId() throws java.lang.Exception;
  public static <T> T getSampleInstance(java.lang.Class<T>);
  public static void runGC();
  public static void info();
  public static java.lang.String getPlatformMBeanAttribute(java.lang.String, java.lang.String);
  public static boolean isHotspotJvm();
  public static boolean isJRockitJvm();
  public static boolean isIBMJvm();
  static long access$1200(java.lang.Class);
  static int access$1300();
  static sun.misc.Unsafe access$1400();
  static java.lang.Object[] access$1600();
  static long access$1700();
  static int access$1800();
  static int access$1900();
  static int access$2600(int);
  static {};
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1 {
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address32BitJRockitJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address32BitJvmUtil {
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  public int getArrayLength(long, java.lang.Class<?>);
  public void setArrayLength(long, java.lang.Class<?>, int);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address32BitJRockitJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address32BitJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$BaseJvmAwaretil {
  public long addressOf(java.lang.Object);
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOf(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  public int getArrayLength(long, java.lang.Class<?>);
  public void setArrayLength(long, java.lang.Class<?>, int);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address32BitJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
abstract class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$BaseJvmAwaretil {
  public int getArrayLength(long, java.lang.Class<?>);
  public void setArrayLength(long, java.lang.Class<?>, int);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithCompressedOopsJRockitJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithCompressedOopsJvmUtil {
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  public int getArrayLength(long, java.lang.Class<?>);
  public void setArrayLength(long, java.lang.Class<?>, int);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithCompressedOopsJRockitJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithCompressedOopsJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitJvmUtil {
  public long addressOf(java.lang.Object);
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOf(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithCompressedOopsJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithoutCompressedOopsJRockitJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithoutCompressedOopsJvmUtil {
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  public int getArrayLength(long, java.lang.Class<?>);
  public void setArrayLength(long, java.lang.Class<?>, int);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithoutCompressedOopsJRockitJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithoutCompressedOopsJvmUtil extends com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitJvmUtil {
  public long addressOf(java.lang.Object);
  public long addressOfClass(java.lang.Object);
  public long jvmAddressOf(java.lang.Object);
  public long jvmAddressOfClass(java.lang.Object);
  public long addressOfClassBase(java.lang.Class<?>);
  public long addressOfClassInternal(java.lang.Class<?>);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Address64BitWithoutCompressedOopsJvmUtil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
abstract class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$BaseJvmAwaretil implements com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmAwareUtil {
  public long sizeOfWithUnsafe(java.lang.Object);
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$BaseJvmAwaretil(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
final class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$ClassInfo {
  final long alignedShallowInstanceSize;
  final java.lang.reflect.Field[] referenceFields;
  final long size;
  final int arrayBaseOffset;
  final int arrayIndexScale;
  final long classAddress;
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$ClassInfo(long, java.lang.reflect.Field[], long, int, int, long);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$CompressedOopsClass {
  public java.lang.Object obj1;
  public java.lang.Object obj2;
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$HeaderClass {
  public boolean b1;
}
Compiled from "JvmUtil.java"
public final class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo extends java.lang.Enum<com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo> {
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo JAVA_VERSION_6;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo JAVA_VERSION_7;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo JAVA_VERSION_8;
  java.lang.String name;
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo[] values();
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JavaVersionInfo valueOf(java.lang.String);
  public java.lang.String getName();
  static {};
}
Compiled from "JvmUtil.java"
interface com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmAwareUtil {
  public abstract long addressOf(java.lang.Object);
  public abstract long addressOfClass(java.lang.Object);
  public abstract long jvmAddressOf(java.lang.Object);
  public abstract long jvmAddressOfClass(java.lang.Object);
  public abstract long addressOfClassBase(java.lang.Class<?>);
  public abstract long addressOfClassInternal(java.lang.Class<?>);
  public abstract long sizeOfWithUnsafe(java.lang.Object);
  public abstract int getArrayLength(long, java.lang.Class<?>);
  public abstract void setArrayLength(long, java.lang.Class<?>, int);
}
Compiled from "JvmUtil.java"
public final class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo extends java.lang.Enum<com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo> {
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo HOTSPOT_JVM;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo JROCKIT_JVM;
  public static final com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo IBM_JVM;
  java.lang.String name;
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo[] values();
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$JvmInfo valueOf(java.lang.String);
  public java.lang.String getName();
  static {};
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject1 {
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject1(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject2 {
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject2(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject3 {
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$MyObject3(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$1);
}
Compiled from "JvmUtil.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node {
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node(java.lang.String, java.lang.Object);
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node create(java.lang.Object);
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node create(java.lang.String, java.lang.Object, java.util.IdentityHashMap<java.lang.Object, java.lang.Integer>);
  public java.lang.String getName();
  public boolean hasChildren();
  public java.util.List<com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node> getChildren();
  static long access$2100(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node);
  static long access$2200(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node);
}
Compiled from "JvmUtil.java"
final class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node$1 implements java.util.Comparator<java.lang.reflect.Field> {
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$Node$1();
  public int compare(java.lang.reflect.Field, java.lang.reflect.Field);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "JvmUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions {
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions(java.lang.String);
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions(java.lang.String, int);
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions(java.lang.String, int, long);
  public long toNativeAddress(long);
  public long toJvmAddress(long);
  public java.lang.String getName();
  public boolean isCompressedRef();
  public int getCompressRefShift();
  public long getCompressRefBase();
  public int getObjectAlignment();
  public int getReferenceSize();
  static boolean access$200(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
  static int access$700(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
  static int access$800(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
  static int access$900(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
  static long access$1000(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
  static java.lang.String access$1100(com.zeroturnaround.rebellabs.oceanofmemories.common.util.JvmUtil$VMOptions);
}
Compiled from "LogUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.LogUtil {
  public static org.apache.log4j.Logger getLogger();
}
Compiled from "MemoryUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.MemoryUtil {
  public static final long BYTE_COUNT_IN_KB;
  public static final long BYTE_COUNT_IN_MB;
  public static final long KB_COUNT_IN_MB;
  public static final int NR_BITS;
  public static final int BYTE;
  public static final int WORD;
  public static void info();
  public static double byte2KB(long);
  public static double byte2MB(long);
  public static double kb2MB(long);
  public static void runGC();
  public static void printMemoryUsage();
  public static void dumpFromObject(java.lang.Object, long);
  static {};
}
Compiled from "ObjectTree.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree {
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree();
  public static void dump(java.io.PrintWriter, java.lang.Object);
  public static java.lang.String dump(java.lang.Object);
}
Compiled from "ObjectTree.java"
class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node {
  public com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node(java.lang.String, java.lang.Object);
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node create(java.lang.Object);
  public static com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node create(java.lang.String, java.lang.Object, java.util.IdentityHashMap<java.lang.Object, java.lang.Integer>);
  public java.lang.String getName();
  public boolean hasChildren();
  public java.util.List<com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node> getChildren();
  static long access$000(com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node);
  static long access$100(com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node);
}
Compiled from "ObjectTree.java"
final class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node$1 implements java.util.Comparator<java.lang.reflect.Field> {
  com.zeroturnaround.rebellabs.oceanofmemories.common.util.ObjectTree$Node$1();
  public int compare(java.lang.reflect.Field, java.lang.reflect.Field);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ReflectionUtil.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.ReflectionUtil {
  public static java.lang.reflect.Field getField(java.lang.Class<?>, java.lang.String);
  public static java.util.List<java.lang.reflect.Field> getAllFields(java.lang.Class<?>);
  public static java.util.List<java.lang.reflect.Field> getAllFields(java.lang.Class<?>, java.lang.Class<? extends java.lang.annotation.Annotation>...);
  public static java.lang.reflect.Method getMethod(java.lang.Class<?>, java.lang.String);
  public static java.lang.reflect.Method getMethod(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);
  public static java.util.List<java.lang.reflect.Method> getAllMethods(java.lang.Class<?>);
  public static java.util.List<java.lang.reflect.Method> getAllMethods(java.lang.Class<?>, java.lang.Class<? extends java.lang.annotation.Annotation>...);
  public static boolean isPrimitiveType(java.lang.String);
  public static boolean isPrimitiveType(java.lang.Class<?>);
  public static boolean isNonPrimitiveType(java.lang.String);
  public static boolean isNonPrimitiveType(java.lang.Class<?>);
  public static boolean isComplexType(java.lang.Class<?>);
  public static boolean isCollectionType(java.lang.Class<?>);
  public static java.lang.Class<?> getNonPrimitiveType(java.lang.String);
  public static java.lang.Class<?> getNonPrimitiveType(java.lang.Class<?>);
  public static boolean isDecimalType(java.lang.Class<?>);
  static {};
}
Compiled from "Util.java"
public class com.zeroturnaround.rebellabs.oceanofmemories.common.util.Util {
  public static final int ASCII_CODE_OF_MIN_PRINTABLE_CHARACTER;
  public static final int ASCII_CODE_OF_MAX_PRINTABLE_CHARACTER;
  public static double makeDouble2DigitPrecisioned(double);
  public static double percantegeOf(double, double);
  public static boolean isPrintableChacter(char);
  public static void waitFor(long);
  public static void runClass(java.lang.Class<?>, java.lang.String[], java.lang.String[]);
}
