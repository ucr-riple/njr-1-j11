Compiled from "GenericLittleManGui.java"
public class littlemangame.GenericLittleManGui<T extends littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui<?, ?, V>, U extends littlemangame.notebookdeveloper.gui.NotebookEditorPanel, V extends littlemangame.notebookdeveloper.GenericNotebookDeveloper<?>> extends GameGui.BaseGameGui {
  protected final T genericNotebookDeveloperGui;
  protected final U notebookEditorPanel;
  public littlemangame.GenericLittleManGui(T, U);
  public T getNotebookDeveloperGui();
  public U getNotebookEditorPanel();
  public void setNotebookDeveloper(V);
  public void showNotebookEditor();
  public void showNotebookDeveloperGui();
  public void registerSpeedController(littlemangame.notebookdeveloper.speedcontroller.SpeedController);
  static littlemangame.notebookdeveloper.GenericNotebookDeveloper access$000(littlemangame.GenericLittleManGui);
}
Compiled from "GenericLittleManGui.java"
class littlemangame.GenericLittleManGui$1 implements java.awt.event.ActionListener {
  final littlemangame.GenericLittleManGui this$0;
  littlemangame.GenericLittleManGui$1(littlemangame.GenericLittleManGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "GenericLittleManGui.java"
class littlemangame.GenericLittleManGui$2 implements java.awt.event.ActionListener {
  final littlemangame.GenericLittleManGui this$0;
  littlemangame.GenericLittleManGui$2(littlemangame.GenericLittleManGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "LittleManGame.java"
public class littlemangame.LittleManGame extends RealTimeGame.AbstractRealTimeGame<littlemangame.GenericLittleManGui<?, ?, ?>> {
  public static void main(java.lang.String[]);
  public littlemangame.LittleManGame();
  protected void doLogic();
  static void access$000(littlemangame.LittleManGame);
}
Compiled from "LittleManGame.java"
class littlemangame.LittleManGame$1 implements java.awt.event.ActionListener {
  final littlemangame.LittleManGame this$0;
  littlemangame.LittleManGame$1(littlemangame.LittleManGame);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "GenericOffice.java"
public class littlemangame.computer.GenericOffice<T extends littlemangame.computer.computercomponents.Worksheet, U extends littlemangame.computer.computercomponents.Notebook, V extends littlemangame.computer.computercomponents.NotebookPageSheet, W extends littlemangame.computer.computercomponents.OfficeOutputter, X extends littlemangame.computer.computercomponents.OfficeInputter> implements Renderer.Drawable {
  public final T worksheet;
  public final U notebook;
  public final V notebookPageSheet;
  public final W outputPanel;
  public final X inputPanel;
  public littlemangame.computer.GenericOffice(T, U, V, W, X);
  public void draw(java.awt.Graphics);
  public void reset();
  public void loadCopyOfNotebook(littlemangame.computer.computercomponents.Notebook);
  public littlemangame.word.Word getValueOfComputerWordContainer(littlemangame.computer.OfficeWordContainer);
  public void doUnaryOperation(littlemangame.computer.OfficeWordContainer, littlemangame.word.UnaryWordOperation);
  public void doBinaryWordOperation(littlemangame.computer.OfficeWordContainer, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
}
Compiled from "Office.java"
public class littlemangame.computer.Office extends littlemangame.computer.GenericOffice<littlemangame.computer.computercomponents.Worksheet, littlemangame.computer.computercomponents.Notebook, littlemangame.computer.computercomponents.NotebookPageSheet, littlemangame.computer.computercomponents.OfficeOutputter, littlemangame.computer.computercomponents.OfficeInputter> {
  public littlemangame.computer.Office(littlemangame.computer.computercomponents.OfficeOutputter, littlemangame.computer.computercomponents.OfficeInputter);
}
Compiled from "OfficeWordContainer.java"
public abstract class littlemangame.computer.OfficeWordContainer {
  public static final littlemangame.computer.OfficeWordContainer WORKSHEET;
  public static final littlemangame.computer.OfficeWordContainer PAGE_NUMBER_SHEET;
  public static littlemangame.computer.OfficeWordContainer notebookPage(littlemangame.word.Word);
  void doUnaryOperation(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>, littlemangame.word.UnaryWordOperation);
  void doBinaryOperation(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  littlemangame.word.Word getWord(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
  abstract littlemangame.word.WordContainer getWordContainer(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
  littlemangame.computer.OfficeWordContainer(littlemangame.computer.OfficeWordContainer$1);
  static {};
}
Compiled from "OfficeWordContainer.java"
final class littlemangame.computer.OfficeWordContainer$1 extends littlemangame.computer.OfficeWordContainer {
  littlemangame.computer.OfficeWordContainer$1();
  littlemangame.word.WordContainer getWordContainer(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
}
Compiled from "OfficeWordContainer.java"
final class littlemangame.computer.OfficeWordContainer$2 extends littlemangame.computer.OfficeWordContainer {
  littlemangame.computer.OfficeWordContainer$2();
  littlemangame.word.WordContainer getWordContainer(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
}
Compiled from "OfficeWordContainer.java"
final class littlemangame.computer.OfficeWordContainer$3 extends littlemangame.computer.OfficeWordContainer {
  final littlemangame.word.Word val$page;
  littlemangame.computer.OfficeWordContainer$3(littlemangame.word.Word);
  littlemangame.word.WordContainer getWordContainer(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
  littlemangame.word.Word getWord(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>);
  void doBinaryOperation(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  void doUnaryOperation(littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>, littlemangame.word.UnaryWordOperation);
}
Compiled from "InputPanel.java"
public class littlemangame.computer.computercomponents.InputPanel extends javax.swing.JPanel implements littlemangame.computer.computercomponents.OfficeInputter {
  public littlemangame.computer.computercomponents.InputPanel();
  public void setAnchorPoint(java.awt.Point);
  public final void cancelInputRequest();
  public void requestInput();
  public littlemangame.word.Word getEnteredWord();
  public boolean isWordEntered();
  public boolean isDisabled();
  public boolean isAwaitingInput();
  public java.awt.Point getAccessLocation();
  static void access$000(littlemangame.computer.computercomponents.InputPanel, java.awt.event.ActionEvent);
}
Compiled from "InputPanel.java"
class littlemangame.computer.computercomponents.InputPanel$1 implements java.awt.event.ActionListener {
  final littlemangame.computer.computercomponents.InputPanel this$0;
  littlemangame.computer.computercomponents.InputPanel$1(littlemangame.computer.computercomponents.InputPanel);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "InputPanelState.java"
public final class littlemangame.computer.computercomponents.InputPanelState extends java.lang.Enum<littlemangame.computer.computercomponents.InputPanelState> {
  public static final littlemangame.computer.computercomponents.InputPanelState DISABLED;
  public static final littlemangame.computer.computercomponents.InputPanelState AWAITING_INPUT;
  public static final littlemangame.computer.computercomponents.InputPanelState HAS_INPUT;
  public static littlemangame.computer.computercomponents.InputPanelState[] values();
  public static littlemangame.computer.computercomponents.InputPanelState valueOf(java.lang.String);
  static {};
}
Compiled from "Notebook.java"
public class littlemangame.computer.computercomponents.Notebook implements Renderer.Drawable {
  protected static final int xPosition;
  protected static final int yPosition;
  protected static final int width;
  protected static final int height;
  public littlemangame.computer.computercomponents.Notebook();
  public littlemangame.computer.computercomponents.Notebook(littlemangame.computer.computercomponents.Notebook);
  public void draw(java.awt.Graphics);
  public void setWordAtPage(littlemangame.word.Word, littlemangame.word.Word);
  public final void loadCopyOfNotebook(littlemangame.computer.computercomponents.Notebook);
  public littlemangame.word.Word getWordOnPage(littlemangame.word.Word);
  public void doUnaryOperationOnPage(littlemangame.word.Word, littlemangame.word.UnaryWordOperation);
  public void doBinaryOperationOnPage(littlemangame.word.Word, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  public java.awt.Point getAccessLocation(littlemangame.word.Word);
}
Compiled from "NotebookPageSheet.java"
public class littlemangame.computer.computercomponents.NotebookPageSheet extends littlemangame.word.WordContainer implements Renderer.Drawable {
  protected static final int xPosition;
  protected static final int yPosition;
  protected static final int width;
  protected static final int height;
  public littlemangame.computer.computercomponents.NotebookPageSheet();
  public java.awt.Point getAccessLocation();
  public void draw(java.awt.Graphics);
}
Compiled from "OfficeInputter.java"
public interface littlemangame.computer.computercomponents.OfficeInputter {
  public abstract void cancelInputRequest();
  public abstract void requestInput();
  public abstract java.awt.Point getAccessLocation();
  public abstract littlemangame.word.Word getEnteredWord();
  public abstract boolean isAwaitingInput();
  public abstract boolean isWordEntered();
  public abstract boolean isDisabled();
}
Compiled from "OfficeOutputter.java"
public interface littlemangame.computer.computercomponents.OfficeOutputter {
  public abstract void clear();
  public abstract java.awt.Point getAccessLocation();
  public abstract void printlnUnsigned(littlemangame.word.Word);
}
Compiled from "OutputPanel.java"
public class littlemangame.computer.computercomponents.OutputPanel extends javax.swing.JPanel implements littlemangame.computer.computercomponents.OfficeOutputter {
  public littlemangame.computer.computercomponents.OutputPanel();
  public void setAnchorPoint(java.awt.Point);
  public void printlnUnsigned(littlemangame.word.Word);
  public void clear();
  public java.awt.Point getAccessLocation();
}
Compiled from "Worksheet.java"
public class littlemangame.computer.computercomponents.Worksheet extends littlemangame.word.WordContainer implements Renderer.Drawable {
  protected static final int xPosition;
  protected static final int yPosition;
  protected static final int width;
  protected static final int height;
  public littlemangame.computer.computercomponents.Worksheet();
  public java.awt.Point getAccessLocation();
  public void draw(java.awt.Graphics);
}
Compiled from "DestinationOperand.java"
public final class littlemangame.instructions.DestinationOperand extends java.lang.Enum<littlemangame.instructions.DestinationOperand> {
  public static final littlemangame.instructions.DestinationOperand WORKSHEET;
  public static final littlemangame.instructions.DestinationOperand WORKSHEET_INDIRECT;
  public static final littlemangame.instructions.DestinationOperand NOTEBOOK_PAGE_SHEET;
  public static final littlemangame.instructions.DestinationOperand NOTEBOOK;
  public static littlemangame.instructions.DestinationOperand[] values();
  public static littlemangame.instructions.DestinationOperand valueOf(java.lang.String);
  public littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer getDestinationContainer();
  public littlemangame.littlemancommands.LittleManCommands.LittleManAction getPreparationAction();
  static {};
}
Compiled from "InstructionFromSet.java"
public final class littlemangame.instructions.InstructionFromSet extends java.lang.Enum<littlemangame.instructions.InstructionFromSet> {
  public static final littlemangame.instructions.InstructionFromSet NO_OPERATION;
  public static final littlemangame.instructions.InstructionFromSet HALT;
  public static final littlemangame.instructions.InstructionFromSet UNCONDITIONAL_JUMP;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_ZERO;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_NOT_ZERO;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_GREATER_THAN_ZERO;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_GREATER_THAN_OR_EQUAL_TO_ZERO;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_LESS_THAN_OR_EQUAL_TO_ZERO;
  public static final littlemangame.instructions.InstructionFromSet JUMP_IF_LESS_THAN_ZERO;
  public static final littlemangame.instructions.InstructionFromSet PRINT_UNSIGNED;
  public static final littlemangame.instructions.InstructionFromSet INPUT;
  public static final littlemangame.instructions.InstructionFromSet LOAD_IMMEDIATE;
  public static final littlemangame.instructions.InstructionFromSet LOAD_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet LOAD_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet STORE_IMMEDIATE_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet STORE_REGISTER_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet STORE_IMMEDIATE_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet COMPLEMENT_WORKSHEET;
  public static final littlemangame.instructions.InstructionFromSet COMPLEMENT_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet COMPLEMENT_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MAX_IMMEDIATE_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MAX_MEMORY_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MAX_IMMEDIATE_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MAX_REGISTER_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MIN_IMMEDIATE_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MIN_MEMORY_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MIN_IMMEDIATE_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet DIGITWISE_MIN_REGISTER_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet LEFT_SHIFT_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet LEFT_SHIFT_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet LEFT_SHIFT_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_UNSIGNED_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_UNSIGNED_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_UNSIGNED_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_SIGNED_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_SIGNED_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet RIGHT_SHIFT_SIGNED_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet INCREMENT_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet INCREMENT_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet INCREMENT_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet DECREMENT_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet DECREMENT_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet DECREMENT_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet NEGATE_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet NEGATE_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet NEGATE_INDIRECT;
  public static final littlemangame.instructions.InstructionFromSet ADD_IMMEDIATE_TO_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet ADD_MEMORY_TO_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet ADD_IMMEDIATE_TO_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet ADD_REGISTER_TO_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet SUBTRACT_IMMEDIATE_FROM_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet SUBTRACT_MEMORY_FROM_REGISTER;
  public static final littlemangame.instructions.InstructionFromSet SUBTRACT_IMMEDIATE_FROM_MEMORY;
  public static final littlemangame.instructions.InstructionFromSet SUBTRACT_REGISTER_FROM_MEMORY;
  public static littlemangame.instructions.InstructionFromSet[] values();
  public static littlemangame.instructions.InstructionFromSet valueOf(java.lang.String);
  static void makeInstructionDescriptions();
  static java.lang.String makeShortDescriptionString(littlemangame.instructions.InstructionFromSet);
  static java.lang.String makeDetailsString(littlemangame.instructions.InstructionFromSet, java.lang.String);
  public static littlemangame.instructions.interfaceandimplementations.Instruction decodeInstruction(littlemangame.word.Word);
  public littlemangame.word.Word getOpcode();
  public java.lang.String getDescription();
  public java.lang.String getDetails();
  public java.lang.String toString();
  public littlemangame.instructions.interfaceandimplementations.Instruction getInstruction();
  static {};
}
Compiled from "SourceOperand.java"
public final class littlemangame.instructions.SourceOperand extends java.lang.Enum<littlemangame.instructions.SourceOperand> {
  public static final littlemangame.instructions.SourceOperand IMMEDIATE;
  public static final littlemangame.instructions.SourceOperand REGISTER;
  public static final littlemangame.instructions.SourceOperand REGISTER_INDIRECT;
  public static final littlemangame.instructions.SourceOperand MEMORY;
  public static littlemangame.instructions.SourceOperand[] values();
  public static littlemangame.instructions.SourceOperand valueOf(java.lang.String);
  littlemangame.littlemancommands.LittleManCommands.LittleManAction getOperandMemorizer();
  static {};
}
Compiled from "Instruction.java"
public interface littlemangame.instructions.interfaceandimplementations.Instruction {
  public abstract littlemangame.littlemancommands.LittleManCommands.LittleManAction getAction();
  public abstract boolean isDataOperandNeeded();
  public abstract boolean isPageNumberOperandNeeded();
  public abstract littlemangame.instructions.interfaceandimplementations.Instruction getResetCopy();
}
Compiled from "InstructionOperandTypes.java"
public final class littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes extends java.lang.Enum<littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes> {
  public static final littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes NEITHER;
  public static final littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes DATA_ONLY;
  public static final littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes PAGE_NUMBER_ONLY;
  public static final littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes BOTH;
  public static littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes[] values();
  public static littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes valueOf(java.lang.String);
  boolean isDataOperandNeeded();
  boolean isAddressOperandNeeded();
  littlemangame.instructions.interfaceandimplementations.Instruction makeInstruction(littlemangame.littlemancommands.LittleManCommands.LittleManAction);
  littlemangame.instructions.interfaceandimplementations.Instruction makeInstruction(littlemangame.littlemancommands.LittleManCommands.LittleManAction...);
  static {};
}
Compiled from "ParselessInstruction.java"
public class littlemangame.instructions.interfaceandimplementations.ParselessInstruction implements littlemangame.instructions.interfaceandimplementations.Instruction {
  public littlemangame.instructions.interfaceandimplementations.ParselessInstruction(littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes, littlemangame.littlemancommands.LittleManCommands.LittleManAction);
  public littlemangame.instructions.interfaceandimplementations.ParselessInstruction(littlemangame.instructions.interfaceandimplementations.InstructionOperandTypes, littlemangame.littlemancommands.LittleManCommands.LittleManAction...);
  public boolean isDataOperandNeeded();
  public littlemangame.littlemancommands.LittleManCommands.LittleManAction getAction();
  public boolean isPageNumberOperandNeeded();
  public littlemangame.instructions.interfaceandimplementations.Instruction getResetCopy();
}
Compiled from "GenericLittleMan.java"
public class littlemangame.littleman.GenericLittleMan<T extends littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>> implements Renderer.Drawable {
  public littlemangame.littleman.GenericLittleMan(T, littlemangame.littleman.PositionGetterAdapter);
  public boolean goToComputerLocation(littlemangame.littleman.littlemanutilities.location.OfficeLocation);
  public boolean memorizeDataAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public boolean memorizePageNumberAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public boolean doBinaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.BinaryWordOperation);
  public boolean doUnaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.UnaryWordOperation);
  public boolean printUnsignedToOutputPanel();
  public boolean getDataFromInputPanel();
  public boolean test(littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest);
  public void clearMemory();
  public void loadCopyOfMemory(littlemangame.computer.computercomponents.Notebook);
  public void halt();
  public void reset();
  public void decodeRememberedInstruction();
  public boolean doInstruction();
  public void draw(java.awt.Graphics);
  public boolean isDataOperandNeeded();
  public boolean isPageNumberOperandNeeded();
  protected final T getLittleManData();
  public boolean isHalted();
}
Compiled from "LittleMan.java"
public class littlemangame.littleman.LittleMan extends littlemangame.littleman.GenericLittleMan<littlemangame.littleman.littlemanutilities.littlemandata.LittleManData> {
  public littlemangame.littleman.LittleMan(littlemangame.computer.Office);
}
Compiled from "PositionGetterAdapter.java"
public class littlemangame.littleman.PositionGetterAdapter {
  public littlemangame.littleman.PositionGetterAdapter();
  public void setPositionGetter(littlemangame.littleman.PositionGetterAdapter$PositionGetter);
  public java.awt.Point getWorksheetPosition();
  public java.awt.Point getRememberedPagePosition();
  public java.awt.Point getPageNumberSheetPosition();
  public java.awt.Point getOutputPanelPosition();
  public java.awt.Point getInputPanelPosition();
}
Compiled from "PositionGetterAdapter.java"
public interface littlemangame.littleman.PositionGetterAdapter$PositionGetter {
  public abstract java.awt.Point getWorksheetPosition();
  public abstract java.awt.Point getRememberedPagePosition();
  public abstract java.awt.Point getPageNumberSheetPosition();
  public abstract java.awt.Point getOutputPanelPosition();
  public abstract java.awt.Point getInputPanelPosition();
}
Compiled from "GenericLittleManData.java"
public class littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<T extends littlemangame.computer.GenericOffice<?, ?, ?, ?, ?>> {
  public littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData(T, littlemangame.littleman.PositionGetterAdapter);
  public void memorizeDataAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public void memorizePageNumberAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public void doBinaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.BinaryWordOperation);
  public void doUnaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.UnaryWordOperation);
  public littlemangame.word.Word getContainerWord(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public void printUnsigedToOutputPanel();
  public boolean memorizeDataFromInputPanel();
  public littlemangame.instructions.interfaceandimplementations.Instruction decodeRememberedInstruction();
  public boolean test(littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest);
  public void reset();
  littlemangame.word.WordContainer getInstructionPointer();
  littlemangame.word.WordContainer getRegister();
  littlemangame.computer.computercomponents.Notebook getNotebook();
  public void clearMemory();
  littlemangame.word.Word useRememberedAddress();
  public void draw(java.awt.Graphics, int, int);
  public void loadCopyOfMemory(littlemangame.computer.computercomponents.Notebook);
  protected final T getComputer();
  static littlemangame.word.Word access$000(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData);
}
Compiled from "GenericLittleManData.java"
class littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData$1 implements littlemangame.littleman.PositionGetterAdapter$PositionGetter {
  final littlemangame.computer.GenericOffice val$computer;
  final littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData this$0;
  littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData$1(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData, littlemangame.computer.GenericOffice);
  public java.awt.Point getWorksheetPosition();
  public java.awt.Point getRememberedPagePosition();
  public java.awt.Point getPageNumberSheetPosition();
  public java.awt.Point getOutputPanelPosition();
  public java.awt.Point getInputPanelPosition();
}
Compiled from "LittleManData.java"
public class littlemangame.littleman.littlemanutilities.littlemandata.LittleManData extends littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<littlemangame.computer.Office> {
  public littlemangame.littleman.littlemanutilities.littlemandata.LittleManData(littlemangame.computer.Office, littlemangame.littleman.PositionGetterAdapter);
}
Compiled from "LittleManMemory.java"
public class littlemangame.littleman.littlemanutilities.littlemandata.LittleManMemory {
  public littlemangame.littleman.littlemanutilities.littlemandata.LittleManMemory();
  public void memorizeData(littlemangame.word.Word);
  public void memorizePageNumber(littlemangame.word.Word);
  public void clearDataMemory();
  public void clearPageNumberMemory();
  public void clearMemory();
  public boolean isRememberingData();
  public boolean isRememberingPageNumber();
  public littlemangame.word.Word useRememberedPageNumber();
  public littlemangame.word.Word getRememberedPageNumber();
  public littlemangame.word.Word useRememberedData();
  public void draw(java.awt.Graphics, int, int);
}
Compiled from "LittleManTest.java"
public final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest extends java.lang.Enum<littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest> {
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest ZERO;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest NOT_ZERO;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest GREATER_THAN_ZERO;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest GREATER_OR_EQUAL_TO_ZERO;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest LESS_THAN_ZERO;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest LESS_OR_EQUAL_ZERO;
  public static littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest[] values();
  public static littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest valueOf(java.lang.String);
  public littlemangame.littleman.littlemanutilities.location.OfficeLocation getComputerLocation();
  boolean test(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  static {};
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$1 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$1();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$2 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$2();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$3 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$3();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$4 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$4();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$5 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$5();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$6 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$6();
  boolean testWord(littlemangame.word.Word);
}
Compiled from "LittleManTest.java"
abstract class littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester implements littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManTester {
  littlemangame.word.Word getRegisterWord(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  abstract boolean testWord(littlemangame.word.Word);
  public boolean test(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManRegisterTester(littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$1);
}
Compiled from "LittleManTest.java"
interface littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest$LittleManTester {
  public abstract boolean test(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
}
Compiled from "LittleManWordContainer.java"
public final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer extends java.lang.Enum<littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer> {
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer NOTEBOOK_PAGE_SHEET;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer WORKSHEET;
  public static final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer REMEMBERED_NOTEBOOK_PAGE;
  public static littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer[] values();
  public static littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer valueOf(java.lang.String);
  public littlemangame.littleman.littlemanutilities.location.OfficeLocation getOfficeLocation();
  littlemangame.word.Word getWord(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  void doBinaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  void doUnaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.UnaryWordOperation);
  static {};
}
Compiled from "LittleManWordContainer.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$1 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerGetter {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$1();
  public littlemangame.word.WordContainer getWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
}
Compiled from "LittleManWordContainer.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$2 extends littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerGetter {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$2();
  public littlemangame.word.WordContainer getWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
}
Compiled from "LittleManWordContainer.java"
final class littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$3 implements littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerInterface {
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$3();
  public littlemangame.word.Word getWord(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  public void doBinaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  public void doUnaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.UnaryWordOperation);
}
Compiled from "LittleManWordContainer.java"
abstract class littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerGetter implements littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerInterface {
  abstract littlemangame.word.WordContainer getWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  public littlemangame.word.Word getWord(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  public void doBinaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  public void doUnaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.UnaryWordOperation);
  littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerGetter(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$1);
}
Compiled from "LittleManWordContainer.java"
interface littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer$WordContainerInterface {
  public abstract littlemangame.word.Word getWord(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>);
  public abstract void doBinaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
  public abstract void doUnaryOperationOnWordContainer(littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<?>, littlemangame.word.UnaryWordOperation);
}
Compiled from "LittleManPosition.java"
public class littlemangame.littleman.littlemanutilities.location.LittleManPosition {
  public littlemangame.littleman.littlemanutilities.location.LittleManPosition(int, int, java.awt.Point, littlemangame.littleman.PositionGetterAdapter);
  public boolean goTo(littlemangame.littleman.littlemanutilities.location.OfficeLocation);
  public boolean isAtLocation(littlemangame.littleman.littlemanutilities.location.OfficeLocation);
  boolean goToPoint(java.awt.Point);
  boolean isAtPoint(java.awt.Point);
  public int getX();
  public int getY();
  littlemangame.littleman.PositionGetterAdapter getPositionGetterAdapter();
}
Compiled from "OfficeLocation.java"
public final class littlemangame.littleman.littlemanutilities.location.OfficeLocation extends java.lang.Enum<littlemangame.littleman.littlemanutilities.location.OfficeLocation> {
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation PAGE_NUMBER_SHEET;
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation WORKSHEET;
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation REMEMBERED_NOTEBOOK_PAGE;
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation OUTPUT_PANEL;
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation INPUT_PANEL;
  public static final littlemangame.littleman.littlemanutilities.location.OfficeLocation CURRENT_LOCATION;
  public static littlemangame.littleman.littlemanutilities.location.OfficeLocation[] values();
  public static littlemangame.littleman.littlemanutilities.location.OfficeLocation valueOf(java.lang.String);
  boolean goTo(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  boolean isHere(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  static {};
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$1 extends littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$1();
  java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$2 extends littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$2();
  java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$3 extends littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$3();
  java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$4 extends littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$4();
  java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$5 extends littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$5();
  java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
final class littlemangame.littleman.littlemanutilities.location.OfficeLocation$6 implements littlemangame.littleman.littlemanutilities.location.OfficeLocation$PositionGetter {
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$6();
  public boolean goTo(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  public boolean isHere(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "OfficeLocation.java"
abstract class littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter implements littlemangame.littleman.littlemanutilities.location.OfficeLocation$PositionGetter {
  abstract java.awt.Point getPoint(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  public boolean goTo(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  public boolean isHere(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  littlemangame.littleman.littlemanutilities.location.OfficeLocation$PointPositionGetter(littlemangame.littleman.littlemanutilities.location.OfficeLocation$1);
}
Compiled from "OfficeLocation.java"
interface littlemangame.littleman.littlemanutilities.location.OfficeLocation$PositionGetter {
  public abstract boolean goTo(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
  public abstract boolean isHere(littlemangame.littleman.littlemanutilities.location.LittleManPosition);
}
Compiled from "GenericLittleManCommander.java"
public class littlemangame.littlemancommands.GenericLittleManCommander<T extends littlemangame.littleman.GenericLittleMan<?>> implements Renderer.Drawable {
  protected littlemangame.littlemancommands.GenericLittleManCommander(T);
  public boolean doCycle();
  public void reset();
  public void draw(java.awt.Graphics);
  public void loadCopyOfNotebook(littlemangame.computer.computercomponents.Notebook);
  public boolean isHalted();
  protected final T getLittleMan();
}
Compiled from "LittleManCommander.java"
public class littlemangame.littlemancommands.LittleManCommander extends littlemangame.littlemancommands.GenericLittleManCommander<littlemangame.littleman.LittleMan> {
  public littlemangame.littlemancommands.LittleManCommander(littlemangame.littleman.LittleMan);
  public littlemangame.littlemancommands.LittleManCommander(littlemangame.notebookdeveloper.gui.OfficeView);
  public littlemangame.littlemancommands.LittleManCommander(littlemangame.computer.Office);
}
Compiled from "LittleManAction.java"
public abstract class littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManAction();
  public abstract boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
  public littlemangame.littlemancommands.LittleManCommands.LittleManAction getResetCopy();
}
Compiled from "LittleManActionSequence.java"
public final class littlemangame.littlemancommands.LittleManCommands.LittleManActionSequence extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  public littlemangame.littlemancommands.LittleManCommands.LittleManActionSequence(java.util.List<littlemangame.littlemancommands.LittleManCommands.LittleManAction>);
  public littlemangame.littlemancommands.LittleManCommands.LittleManActionSequence(littlemangame.littlemancommands.LittleManCommands.LittleManAction...);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
  public littlemangame.littlemancommands.LittleManCommands.LittleManAction getResetCopy();
}
Compiled from "LittleManCommands.java"
public class littlemangame.littlemancommands.LittleManCommands.LittleManCommands {
  public static final littlemangame.littlemancommands.LittleManCommands.LittleManAction haltAction;
  public static final littlemangame.littlemancommands.LittleManCommands.LittleManAction nullAction;
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction getPrintUnsignedToOutputPanelAction();
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction doBinaryOperationOnContainerAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.BinaryWordOperation);
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction getDoCycle();
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction doUnaryOperationOnContainerAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.UnaryWordOperation);
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction getGetDataFromInputPanelAction();
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction memorizePageNumberAtContainerAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public static littlemangame.littlemancommands.LittleManCommands.LittleManAction memorizeDataAtContainerAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  static littlemangame.littlemancommands.LittleManCommands.LittleManAction access$000();
  static littlemangame.littlemancommands.LittleManCommands.LittleManAction access$100();
  static {};
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$1 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$1();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$10 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer val$littleManWordContainer;
  final littlemangame.word.BinaryWordOperation val$binaryWordOperation;
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$10(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.BinaryWordOperation);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$11 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer val$littleManWordContainer;
  final littlemangame.word.UnaryWordOperation val$unaryWordOperation;
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$11(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.UnaryWordOperation);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$12 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer val$littleManWordContainer;
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$12(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$13 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  final littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer val$littleManWordContainer;
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$13(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$2 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$2();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$3 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$3();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$4 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$4();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$5 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$5();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$6 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$6();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$7 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$7();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$8 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$8();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManCommands.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManCommands$9 extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  littlemangame.littlemancommands.LittleManCommands.LittleManCommands$9();
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
}
Compiled from "LittleManConditionalAction.java"
public final class littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction extends littlemangame.littlemancommands.LittleManCommands.LittleManAction {
  public littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest, littlemangame.littlemancommands.LittleManCommands.LittleManAction);
  public littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction(littlemangame.littleman.littlemanutilities.littlemandata.LittleManTest, littlemangame.littlemancommands.LittleManCommands.LittleManAction...);
  public boolean doAction(littlemangame.littleman.GenericLittleMan<?>);
  public littlemangame.littlemancommands.LittleManCommands.LittleManAction getResetCopy();
}
Compiled from "LittleManConditionalAction.java"
class littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$1 {
  static final int[] $SwitchMap$littlemangame$littlemancommands$LittleManCommands$LittleManConditionalAction$ConditionalActionStep;
  static {};
}
Compiled from "LittleManConditionalAction.java"
final class littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep extends java.lang.Enum<littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep> {
  public static final littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep GO_TO_TEST;
  public static final littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep DO_TEST;
  public static final littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep DO_ACTION;
  public static littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep[] values();
  public static littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep valueOf(java.lang.String);
  littlemangame.littlemancommands.LittleManCommands.LittleManConditionalAction$ConditionalActionStep getNextStep();
  static {};
}
Compiled from "GenericNotebookDeveloper.java"
public class littlemangame.notebookdeveloper.GenericNotebookDeveloper<T extends littlemangame.littlemancommands.GenericLittleManCommander<?>> implements Renderer.Drawable {
  protected final T littleManCommander;
  public littlemangame.notebookdeveloper.GenericNotebookDeveloper(T);
  public void doFrames(int);
  public void endTest();
  public java.lang.String submitNotebookSolutionAttempt();
  public java.lang.String getCurrentProblemDescription();
  public littlemangame.computer.computercomponents.Notebook getNotebookSolutionAttempt();
  public void setNotebookSolutionAttempt(littlemangame.computer.computercomponents.Notebook);
  protected final T getLittleManComander();
  public void draw(java.awt.Graphics);
}
Compiled from "NotebookDeveloper.java"
public class littlemangame.notebookdeveloper.NotebookDeveloper extends littlemangame.notebookdeveloper.GenericNotebookDeveloper<littlemangame.littlemancommands.LittleManCommander> {
  public littlemangame.notebookdeveloper.NotebookDeveloper(littlemangame.littlemancommands.LittleManCommander);
}
Compiled from "NotebookProblemSet.java"
public class littlemangame.notebookdeveloper.NotebookProblemSet {
  public static littlemangame.notebookdeveloper.NotebookProblemSet makeDefaultNotebookProblemSet();
  public littlemangame.notebookdeveloper.NotebookProblemSet(java.util.Collection<? extends littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem>);
  public boolean verifyNotebook(littlemangame.computer.computercomponents.Notebook);
  public boolean hasNextProblem();
  public void beginNextProblem();
  public java.lang.String getCurrentProblemDescription();
  public java.lang.String getMessageFromLastTest();
}
Compiled from "BaseLittleManGui.java"
public class littlemangame.notebookdeveloper.gui.BaseLittleManGui extends littlemangame.GenericLittleManGui<littlemangame.notebookdeveloper.gui.BaseNotebookDeveloperGui, littlemangame.notebookdeveloper.gui.NotebookEditorPanel, littlemangame.notebookdeveloper.NotebookDeveloper> {
  public littlemangame.notebookdeveloper.gui.BaseLittleManGui();
}
Compiled from "BaseNotebookDeveloperGui.java"
public class littlemangame.notebookdeveloper.gui.BaseNotebookDeveloperGui extends littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui<littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui<littlemangame.notebookdeveloper.NotebookDeveloper>, littlemangame.notebookdeveloper.gui.OfficeView, littlemangame.notebookdeveloper.NotebookDeveloper> {
  public littlemangame.notebookdeveloper.gui.BaseNotebookDeveloperGui();
}
Compiled from "GenericNotebookDeveloperGui.java"
public class littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui<T extends littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui<V>, U extends littlemangame.notebookdeveloper.gui.GenericOfficeView<?, ?>, V extends littlemangame.notebookdeveloper.GenericNotebookDeveloper<?>> extends javax.swing.JPanel {
  protected final T submissionControllerGui;
  public littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui(T, U);
  public U getOfficeView();
  public void setEditMemoryAction(java.awt.event.ActionListener);
  public void regsiterNotebookDeveloper(V);
  public void registerSpeedController(littlemangame.notebookdeveloper.speedcontroller.SpeedController);
}
Compiled from "GenericOfficeView.java"
public class littlemangame.notebookdeveloper.gui.GenericOfficeView<T extends littlemangame.computer.computercomponents.InputPanel, U extends littlemangame.computer.computercomponents.OutputPanel> extends javax.swing.JPanel {
  public littlemangame.notebookdeveloper.gui.GenericOfficeView(T, U);
  public T getInputPanel();
  public U getOutputPanel();
  public void registerNotebookDeveloper(littlemangame.notebookdeveloper.GenericNotebookDeveloper<?>);
}
Compiled from "NotebookEditorPanel.java"
public class littlemangame.notebookdeveloper.gui.NotebookEditorPanel extends javax.swing.JPanel {
  protected final java.util.List<littlemangame.notebookdeveloper.gui.PageEditor> memorySlotChoosers;
  protected final javax.swing.JButton saveButton;
  public littlemangame.notebookdeveloper.gui.NotebookEditorPanel();
  javax.swing.tree.DefaultMutableTreeNode makeNode(littlemangame.instructions.InstructionFromSet);
  public littlemangame.computer.computercomponents.Notebook getNotebook();
  public void setMemory(littlemangame.computer.computercomponents.Notebook);
  public void setSaveAction(java.awt.event.ActionListener);
  public void setProblemDescription(java.lang.String);
}
Compiled from "OfficeView.java"
public class littlemangame.notebookdeveloper.gui.OfficeView extends littlemangame.notebookdeveloper.gui.GenericOfficeView<littlemangame.computer.computercomponents.InputPanel, littlemangame.computer.computercomponents.OutputPanel> {
  public littlemangame.notebookdeveloper.gui.OfficeView();
}
Compiled from "PageEditor.java"
public class littlemangame.notebookdeveloper.gui.PageEditor extends javax.swing.JPanel {
  public littlemangame.notebookdeveloper.gui.PageEditor(littlemangame.word.Word);
  public littlemangame.notebookdeveloper.gui.PageEditor();
  public littlemangame.word.Word getSelectedWord();
  public void setSelectedWord(littlemangame.word.Word);
  public void setEnabled(boolean);
  public void addItemListener(java.awt.event.ItemListener);
  public void removeItemListener(java.awt.event.ItemListener);
}
Compiled from "WordSelector.java"
public class littlemangame.notebookdeveloper.gui.WordSelector extends javax.swing.JComboBox<littlemangame.word.Word> {
  public littlemangame.notebookdeveloper.gui.WordSelector();
  public littlemangame.word.Word getLastSelectedWord();
  public void setSelectedWord(littlemangame.word.Word);
  public void setEnabled(boolean);
  static {};
}
Compiled from "ExpectedProgramBehavior.java"
public class littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior {
  public littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior();
  public littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior(littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior);
  public void copy(littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior);
  public void addInputEvent(littlemangame.word.Word);
  public void addOutputEvent(littlemangame.word.Word);
  public void addOutputEvent(littlemangame.notebookdeveloper.notebooktester.WordPredicate);
  public void addHaltEvent();
  public boolean testInputEvent(littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputEvent);
  public littlemangame.word.Word pollInputWord();
  public boolean testHaltEvent(littlemangame.notebookdeveloper.notebooktester.inputoutputevents.HaltEvent);
  public boolean testOutputEvent(littlemangame.notebookdeveloper.notebooktester.inputoutputevents.OutputEvent);
  public java.lang.String getErrorString();
}
Compiled from "NotebookTester.java"
public interface littlemangame.notebookdeveloper.notebooktester.NotebookTester {
  public abstract boolean isNotebookCorrect(littlemangame.computer.computercomponents.Notebook);
  public abstract java.lang.String getMessageFromTest();
}
Compiled from "NotebookTesterFactory.java"
public interface littlemangame.notebookdeveloper.notebooktester.NotebookTesterFactory {
  public abstract littlemangame.notebookdeveloper.notebooktester.NotebookTester produceNotebookTester();
}
Compiled from "OnlineNotebookTester.java"
public class littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester implements littlemangame.notebookdeveloper.notebooktester.NotebookTester {
  public littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester();
  public boolean isNotebookCorrect(littlemangame.computer.computercomponents.Notebook);
  public void addInputEvent(littlemangame.word.Word);
  public void addOutputEvent(littlemangame.word.Word);
  public void addOutputEvent(littlemangame.notebookdeveloper.notebooktester.WordPredicate);
  public void addHaltEvent();
  public java.lang.String getMessageFromTest();
  static boolean access$002(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester, boolean);
  static littlemangame.notebookdeveloper.notebooktester.ExpectedProgramBehavior access$100(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester);
  static boolean access$202(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester, boolean);
}
Compiled from "OnlineNotebookTester.java"
class littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$1 implements littlemangame.notebookdeveloper.notebooktester.littleManMock.OutputEventListener {
  final littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester this$0;
  littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$1(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester);
  public void acceptOutput(littlemangame.word.Word);
}
Compiled from "OnlineNotebookTester.java"
class littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$2 implements littlemangame.notebookdeveloper.notebooktester.littleManMock.InputProducerMock {
  final littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester this$0;
  littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$2(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester);
  public littlemangame.word.Word getInputWord();
}
Compiled from "OnlineNotebookTester.java"
class littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$3 implements littlemangame.notebookdeveloper.notebooktester.littleManMock.HaltListener {
  final littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester this$0;
  littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester$3(littlemangame.notebookdeveloper.notebooktester.OnlineNotebookTester);
  public void acceptHalt();
}
Compiled from "RepeatingNotebookTester.java"
public class littlemangame.notebookdeveloper.notebooktester.RepeatingNotebookTester implements littlemangame.notebookdeveloper.notebooktester.NotebookTester {
  public littlemangame.notebookdeveloper.notebooktester.RepeatingNotebookTester(littlemangame.notebookdeveloper.notebooktester.NotebookTesterFactory, int);
  public boolean isNotebookCorrect(littlemangame.computer.computercomponents.Notebook);
  public java.lang.String getMessageFromTest();
}
Compiled from "WordPredicate.java"
public abstract class littlemangame.notebookdeveloper.notebooktester.WordPredicate {
  public static littlemangame.notebookdeveloper.notebooktester.WordPredicate alwaysTruePredicate;
  public littlemangame.notebookdeveloper.notebooktester.WordPredicate();
  static littlemangame.notebookdeveloper.notebooktester.WordPredicate makeEqualsWordPredicate(littlemangame.word.Word);
  public abstract boolean isCorrect(littlemangame.word.Word);
  public java.lang.String expectedWordString();
  protected abstract java.lang.String expectedWordDescription();
  static {};
}
Compiled from "WordPredicate.java"
final class littlemangame.notebookdeveloper.notebooktester.WordPredicate$1 extends littlemangame.notebookdeveloper.notebooktester.WordPredicate {
  littlemangame.notebookdeveloper.notebooktester.WordPredicate$1();
  public boolean isCorrect(littlemangame.word.Word);
  public java.lang.String expectedWordDescription();
}
Compiled from "WordPredicate.java"
final class littlemangame.notebookdeveloper.notebooktester.WordPredicate$2 extends littlemangame.notebookdeveloper.notebooktester.WordPredicate {
  final littlemangame.word.Word val$expectedWord;
  littlemangame.notebookdeveloper.notebooktester.WordPredicate$2(littlemangame.word.Word);
  public boolean isCorrect(littlemangame.word.Word);
  public java.lang.String expectedWordDescription();
}
Compiled from "HaltEvent.java"
public class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.HaltEvent extends littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEvent {
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.HaltEvent();
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType getEventType();
}
Compiled from "InputEvent.java"
public class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputEvent extends littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEvent {
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputEvent();
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType getEventType();
}
Compiled from "InputOutputEvent.java"
public abstract class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEvent {
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEvent();
  public abstract littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType getEventType();
  public java.lang.String getExpectedActionDescription();
  public java.lang.String getActualActionDescription();
  protected java.lang.String getExpectedBareInfinitiveClause();
  protected java.lang.String getActualVerbClause();
}
Compiled from "InputOutputEventType.java"
public final class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType extends java.lang.Enum<littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType> {
  public static final littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType INPUT;
  public static final littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType OUTPUT;
  public static final littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType HALT;
  public static littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType[] values();
  public static littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType valueOf(java.lang.String);
  public java.lang.String getBareInfinitive();
  public java.lang.String getPastTense();
  static {};
}
Compiled from "InputOutputEventType.java"
final class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$1 implements littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$ActualAndExpectedActionPerformedProducer {
  littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$1();
  public java.lang.String getBareInfinitive();
  public java.lang.String getPastTense();
}
Compiled from "InputOutputEventType.java"
final class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$2 implements littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$ActualAndExpectedActionPerformedProducer {
  littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$2();
  public java.lang.String getBareInfinitive();
  public java.lang.String getPastTense();
}
Compiled from "InputOutputEventType.java"
final class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$3 implements littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$ActualAndExpectedActionPerformedProducer {
  littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$3();
  public java.lang.String getBareInfinitive();
  public java.lang.String getPastTense();
}
Compiled from "InputOutputEventType.java"
interface littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType$ActualAndExpectedActionPerformedProducer {
  public abstract java.lang.String getBareInfinitive();
  public abstract java.lang.String getPastTense();
}
Compiled from "OutputEvent.java"
public class littlemangame.notebookdeveloper.notebooktester.inputoutputevents.OutputEvent extends littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEvent {
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.OutputEvent(littlemangame.word.Word);
  public littlemangame.notebookdeveloper.notebooktester.inputoutputevents.InputOutputEventType getEventType();
  protected java.lang.String getActualVerbClause();
  protected java.lang.String getExpectedBareInfinitiveClause();
  public littlemangame.word.Word getWord();
}
Compiled from "ComputerInputterMock.java"
public class littlemangame.notebookdeveloper.notebooktester.littleManMock.ComputerInputterMock implements littlemangame.computer.computercomponents.OfficeInputter {
  public littlemangame.notebookdeveloper.notebooktester.littleManMock.ComputerInputterMock(littlemangame.notebookdeveloper.notebooktester.littleManMock.InputProducerMock);
  public void cancelInputRequest();
  public void requestInput();
  public java.awt.Point getAccessLocation();
  public littlemangame.word.Word getEnteredWord();
  public boolean isAwaitingInput();
  public boolean isWordEntered();
  public boolean isDisabled();
}
Compiled from "ComputerOutputterMock.java"
public class littlemangame.notebookdeveloper.notebooktester.littleManMock.ComputerOutputterMock implements littlemangame.computer.computercomponents.OfficeOutputter {
  final littlemangame.notebookdeveloper.notebooktester.littleManMock.OutputEventListener outputEventListener;
  public littlemangame.notebookdeveloper.notebooktester.littleManMock.ComputerOutputterMock(littlemangame.notebookdeveloper.notebooktester.littleManMock.OutputEventListener);
  public void clear();
  public java.awt.Point getAccessLocation();
  public void printlnUnsigned(littlemangame.word.Word);
}
Compiled from "HaltListener.java"
public interface littlemangame.notebookdeveloper.notebooktester.littleManMock.HaltListener {
  public abstract void acceptHalt();
}
Compiled from "InputProducerMock.java"
public interface littlemangame.notebookdeveloper.notebooktester.littleManMock.InputProducerMock {
  public abstract littlemangame.word.Word getInputWord();
}
Compiled from "LittleManCommanderMock.java"
public class littlemangame.notebookdeveloper.notebooktester.littleManMock.LittleManCommanderMock extends littlemangame.littlemancommands.LittleManCommander {
  public littlemangame.notebookdeveloper.notebooktester.littleManMock.LittleManCommanderMock(littlemangame.notebookdeveloper.notebooktester.littleManMock.LittleManMock);
}
Compiled from "LittleManMock.java"
public class littlemangame.notebookdeveloper.notebooktester.littleManMock.LittleManMock extends littlemangame.littleman.LittleMan {
  public littlemangame.notebookdeveloper.notebooktester.littleManMock.LittleManMock(littlemangame.computer.Office, littlemangame.notebookdeveloper.notebooktester.littleManMock.HaltListener);
  public boolean goToComputerLocation(littlemangame.littleman.littlemanutilities.location.OfficeLocation);
  public void halt();
}
Compiled from "OutputEventListener.java"
public interface littlemangame.notebookdeveloper.notebooktester.littleManMock.OutputEventListener {
  public abstract void acceptOutput(littlemangame.word.Word);
}
Compiled from "SpeedController.java"
public class littlemangame.notebookdeveloper.speedcontroller.SpeedController {
  static final int maxSpeed;
  static final int minSpeed;
  public littlemangame.notebookdeveloper.speedcontroller.SpeedController();
  public int getCurrentSpeed();
  public void flushBuffer();
  public final void pause();
  public void resume();
  public void increaseSpeed();
  public void decreaseSpeed();
  public int getBufferedSpeed();
  public boolean getBufferedIsRunning();
  public int getBufferedSpeedIndex();
  static {};
}
Compiled from "SpeedControllerGui.java"
public class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui extends javax.swing.JPanel {
  public littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui();
  public void setEndTestAction(java.awt.event.ActionListener);
  public void resume();
  public void pause();
  public void registerSpeedController(littlemangame.notebookdeveloper.speedcontroller.SpeedController);
  static littlemangame.notebookdeveloper.speedcontroller.SpeedController access$000(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  static void access$100(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  static void access$200(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
}
Compiled from "SpeedControllerGui.java"
class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$1 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui this$0;
  littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$1(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SpeedControllerGui.java"
class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$2 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui this$0;
  littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$2(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SpeedControllerGui.java"
class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$3 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui this$0;
  littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$3(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SpeedControllerGui.java"
class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$4 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui this$0;
  littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$4(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SpeedControllerGui.java"
class littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$5 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui this$0;
  littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui$5(littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SubmissionControlGui.java"
public class littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui<T extends littlemangame.notebookdeveloper.GenericNotebookDeveloper<?>> extends javax.swing.JPanel {
  protected javax.swing.JTextArea consoleTextArea;
  protected final javax.swing.JButton editMemoryButton;
  protected final javax.swing.JButton submitButton;
  protected final javax.swing.JButton testButton;
  public littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui();
  public void setEditMemoryAction(java.awt.event.ActionListener);
  public void removeEditMemoryAction(java.awt.event.ActionListener);
  protected void printResultMessage(java.lang.String);
  public final void showSpeedPanel();
  public void registerSpeedController(littlemangame.notebookdeveloper.speedcontroller.SpeedController);
  public void registerNotebookDeveloper(T);
  public final void showSubmissionPanel();
  protected void hidePanels();
  protected final javax.swing.JLayeredPane getBaseLayeredPane();
  protected final void replaceDummyPanel(java.awt.Component);
  static littlemangame.notebookdeveloper.speedcontroller.SpeedControllerGui access$000(littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui);
  static littlemangame.notebookdeveloper.GenericNotebookDeveloper access$100(littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui);
}
Compiled from "SubmissionControlGui.java"
class littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$1 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui this$0;
  littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$1(littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SubmissionControlGui.java"
class littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$2 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui this$0;
  littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$2(littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "SubmissionControlGui.java"
class littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$3 implements java.awt.event.ActionListener {
  final littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui this$0;
  littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui$3(littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "HaltProblem.java"
public class littlemangame.notebookdevelopmentproblems.HaltProblem extends littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem {
  public static littlemangame.notebookdeveloper.notebooktester.NotebookTester produceNotebookTester();
  public littlemangame.notebookdevelopmentproblems.HaltProblem();
}
Compiled from "NotebookDevelopmentProblem.java"
public class littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem {
  public littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem(littlemangame.notebookdeveloper.notebooktester.NotebookTester, java.lang.String);
  public void testNotebook(littlemangame.computer.computercomponents.Notebook);
  public boolean wasLastTestCorrect();
  public java.lang.String getMessageFromLastTest();
  public java.lang.String getProblemDescription();
}
Compiled from "Output42.java"
public class littlemangame.notebookdevelopmentproblems.Output42 extends littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem {
  public static littlemangame.notebookdeveloper.notebooktester.NotebookTester produceNotebookTester();
  public littlemangame.notebookdevelopmentproblems.Output42();
}
Compiled from "OutputAnything.java"
public class littlemangame.notebookdevelopmentproblems.OutputAnything extends littlemangame.notebookdevelopmentproblems.NotebookDevelopmentProblem {
  public static littlemangame.notebookdeveloper.notebooktester.NotebookTester produceNotebookTester();
  public littlemangame.notebookdevelopmentproblems.OutputAnything();
}
Compiled from "TutorialDriver.java"
public class littlemangame.tutorial.TutorialDriver {
  public littlemangame.tutorial.TutorialDriver(littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper, littlemangame.tutorial.gui.TutorialLittleManGui, littlemangame.notebookdeveloper.speedcontroller.SpeedController, java.awt.event.ActionListener);
  public void printDialogue(java.lang.String);
  public void doFrames(int);
  public void startTutorial();
  static littlemangame.tutorial.gui.TutorialLittleManGui access$000(littlemangame.tutorial.TutorialDriver);
  static littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper access$100(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$200(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$300(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$400(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$500(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$600(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$700(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ItemListener access$800(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$900(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1000(littlemangame.tutorial.TutorialDriver);
  static void access$1100(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1200(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1300(littlemangame.tutorial.TutorialDriver);
  static littlemangame.notebookdeveloper.speedcontroller.SpeedController access$1400(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1500(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1600(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1700(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1800(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$1900(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2000(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2100(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2200(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2300(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2400(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2500(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2600(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2700(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2800(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$2900(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3000(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3100(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3200(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3300(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3400(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3500(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3600(littlemangame.tutorial.TutorialDriver);
  static java.awt.event.ActionListener access$3700(littlemangame.tutorial.TutorialDriver);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$1 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$1(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$10 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$10(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$11 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$11(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$12 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$12(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$13 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$13(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$14 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$14(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$15 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$15(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$16 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$16(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$17 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$17(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$18 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$18(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$19 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$19(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$2 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$2(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$20 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$20(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$21 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$21(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$22 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$22(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$23 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$23(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$24 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$24(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$25 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$25(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$26 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$26(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$27 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$27(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$28 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$28(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$29 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$29(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$3 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$3(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$30 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$30(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$31 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$31(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$32 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$32(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$33 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$33(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$34 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$34(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$4 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$4(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$5 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$5(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$6 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$6(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$7 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$7(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$8 implements java.awt.event.ItemListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$8(littlemangame.tutorial.TutorialDriver);
  public void itemStateChanged(java.awt.event.ItemEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$9 implements java.awt.event.ActionListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$9(littlemangame.tutorial.TutorialDriver);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "TutorialDriver.java"
class littlemangame.tutorial.TutorialDriver$PageEditorItemListener implements java.awt.event.ItemListener {
  final littlemangame.tutorial.TutorialDriver this$0;
  littlemangame.tutorial.TutorialDriver$PageEditorItemListener(littlemangame.tutorial.TutorialDriver, int, int);
  littlemangame.tutorial.TutorialDriver$PageEditorItemListener(littlemangame.tutorial.TutorialDriver, int, int, java.awt.event.ItemListener);
  littlemangame.tutorial.TutorialDriver$PageEditorItemListener(littlemangame.tutorial.TutorialDriver, int, int, java.lang.String);
  littlemangame.tutorial.TutorialDriver$PageEditorItemListener(littlemangame.tutorial.TutorialDriver, int, int, java.lang.String, java.awt.event.ItemListener);
  public void itemStateChanged(java.awt.event.ItemEvent);
}
Compiled from "SubmissionControllerTutorialGui.java"
public class littlemangame.tutorial.gui.SubmissionControllerTutorialGui extends littlemangame.notebookdeveloper.submissioncontrols.SubmissionControlGui<littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper> {
  public littlemangame.tutorial.gui.SubmissionControllerTutorialGui();
  protected void hidePanels();
  public void showDialoguePanel();
  public void printDialogue(java.lang.String);
  public void addDialogueActionListener(java.awt.event.ActionListener);
  public void removeDialogueActionListener(java.awt.event.ActionListener);
  public void setDialogueButtonIsEnabled(boolean);
  public void setEditMemoryEnabled(boolean);
  public void setSubmitButtonEnabled(boolean);
  public void setTestButtonEnabled(boolean);
  public void addTestButtonActionListener(java.awt.event.ActionListener);
  public void removeTestButtonActionListener(java.awt.event.ActionListener);
  public void addSubmitButtonActionListener(java.awt.event.ActionListener);
  public void removeSubmitButtonActionListener(java.awt.event.ActionListener);
  public void printResultMessage(java.lang.String);
}
Compiled from "TutorialDialogue.java"
public class littlemangame.tutorial.gui.TutorialDialogue extends javax.swing.JPanel {
  public littlemangame.tutorial.gui.TutorialDialogue();
  public void addActionListener(java.awt.event.ActionListener);
  public void removeActionListener(java.awt.event.ActionListener);
  public void setButtonIsEnabled(boolean);
  public void setText(java.lang.String);
}
Compiled from "TutorialLittleManGui.java"
public class littlemangame.tutorial.gui.TutorialLittleManGui extends littlemangame.GenericLittleManGui<littlemangame.tutorial.gui.TutorialNotebookDeveloperGui, littlemangame.tutorial.gui.TutorialNotebookEditorPanel, littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper> {
  public littlemangame.tutorial.gui.TutorialLittleManGui();
}
Compiled from "TutorialNotebookDeveloperGui.java"
public class littlemangame.tutorial.gui.TutorialNotebookDeveloperGui extends littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui<littlemangame.tutorial.gui.SubmissionControllerTutorialGui, littlemangame.tutorial.gui.TutorialOfficeView, littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper> {
  public littlemangame.tutorial.gui.TutorialNotebookDeveloperGui(littlemangame.tutorial.gui.SubmissionControllerTutorialGui);
  public littlemangame.tutorial.gui.SubmissionControllerTutorialGui getSubmissionControllerTutorialGui();
}
Compiled from "TutorialNotebookEditorPanel.java"
public class littlemangame.tutorial.gui.TutorialNotebookEditorPanel extends littlemangame.notebookdeveloper.gui.NotebookEditorPanel {
  public littlemangame.tutorial.gui.TutorialNotebookEditorPanel();
  public void setPageEditorIsEnabled(int, boolean);
  public void addPageEditorItemListener(int, java.awt.event.ItemListener);
  public void removePageEditorItemListener(int, java.awt.event.ItemListener);
  public void setSaveButtonIsEnabled(boolean);
  public void addSaveButtonActionListener(java.awt.event.ActionListener);
  public void removeSaveButtonActionListener(java.awt.event.ActionListener);
}
Compiled from "TutorialOfficeView.java"
public class littlemangame.tutorial.gui.TutorialOfficeView extends littlemangame.notebookdeveloper.gui.GenericOfficeView<littlemangame.tutorial.tutorialoffice.components.TutorialInputPanel, littlemangame.tutorial.tutorialoffice.components.TutorialOutputPanel> {
  public littlemangame.tutorial.gui.TutorialOfficeView();
}
Compiled from "TutorialLittleMan.java"
public class littlemangame.tutorial.tutoriallittleman.TutorialLittleMan extends littlemangame.littleman.GenericLittleMan<littlemangame.tutorial.tutoriallittleman.TutorialLittleManData> {
  public littlemangame.tutorial.tutoriallittleman.TutorialLittleMan(littlemangame.tutorial.tutorialoffice.TutorialOffice);
  public void setIsWorksheetArrowShown(boolean);
  public void setIsNotebookArrowShown(boolean);
  public void setIsNotebookPageSheetArrowShown(boolean);
  public void setIsInputPanelArrowShown(boolean);
  public void setIsOutputPanelArrowShown(boolean);
  public boolean addUnaryOperationActionListener(java.awt.event.ActionListener);
  public void removeUnaryOperationActionListener(java.awt.event.ActionListener);
  public boolean addBinaryOperationActionListener(java.awt.event.ActionListener);
  public void removeBinaryOperationActionListener(java.awt.event.ActionListener);
  public boolean addDataFromInputPanelActionListener(java.awt.event.ActionListener);
  public void removeDataFromInputPanelActionListener(java.awt.event.ActionListener);
  public boolean addMemorizeDataActionListener(java.awt.event.ActionListener);
  public boolean removeMemorizeDataActionListener(java.awt.event.ActionListener);
  public boolean addMemorizePageActionListener(java.awt.event.ActionListener);
  public boolean removeMemorizePageActionListener(java.awt.event.ActionListener);
  public boolean addPrintUnsignedToOutputPanelActionListener(java.awt.event.ActionListener);
  public boolean removePrintUnsignedToOutputPanelActionListener(java.awt.event.ActionListener);
  public boolean addHaltActionListener(java.awt.event.ActionListener);
  public boolean removeHaltActionListener(java.awt.event.ActionListener);
  public boolean getDataFromInputPanel();
  public boolean printUnsignedToOutputPanel();
  public boolean doUnaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.UnaryWordOperation);
  public boolean doBinaryOperationOnContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer, littlemangame.word.BinaryWordOperation);
  public boolean memorizePageNumberAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public boolean memorizeDataAtContainer(littlemangame.littleman.littlemanutilities.littlemandata.LittleManWordContainer);
  public void halt();
}
Compiled from "TutorialLittleManData.java"
public class littlemangame.tutorial.tutoriallittleman.TutorialLittleManData extends littlemangame.littleman.littlemanutilities.littlemandata.GenericLittleManData<littlemangame.tutorial.tutorialoffice.TutorialOffice> {
  public littlemangame.tutorial.tutoriallittleman.TutorialLittleManData(littlemangame.tutorial.tutorialoffice.TutorialOffice, littlemangame.littleman.PositionGetterAdapter);
  public void setIsWorksheetArrowShown(boolean);
  public void setIsNotebookArrowShown(boolean);
  public void setIsNotebookPageSheetArrowShown(boolean);
  public void setIsInputPanelArrowShown(boolean);
  public void setIsOutputPanelArrowShown(boolean);
}
Compiled from "TutorialLittleManCommander.java"
public class littlemangame.tutorial.tutoriallittlemancommands.TutorialLittleManCommander extends littlemangame.littlemancommands.GenericLittleManCommander<littlemangame.tutorial.tutoriallittleman.TutorialLittleMan> {
  public littlemangame.tutorial.tutoriallittlemancommands.TutorialLittleManCommander(littlemangame.tutorial.tutoriallittleman.TutorialLittleMan);
  public littlemangame.tutorial.tutoriallittlemancommands.TutorialLittleManCommander(littlemangame.tutorial.gui.TutorialOfficeView);
  public littlemangame.tutorial.tutoriallittlemancommands.TutorialLittleManCommander(littlemangame.tutorial.tutorialoffice.TutorialOffice);
  public void setIsWorksheetArrowShown(boolean);
  public void setIsNotebookArrowShown(boolean);
  public void setIsNotebookPageSheetArrowShown(boolean);
  public void setIsInputPanelArrowShown(boolean);
  public void setIsOutputPanelArrowShown(boolean);
  public littlemangame.tutorial.tutoriallittleman.TutorialLittleMan getTutorialLittleMan();
}
Compiled from "TutorialNotebookDeveloper.java"
public class littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper extends littlemangame.notebookdeveloper.GenericNotebookDeveloper<littlemangame.tutorial.tutoriallittlemancommands.TutorialLittleManCommander> {
  public littlemangame.tutorial.tutorialnotebookdeveloper.TutorialNotebookDeveloper(littlemangame.tutorial.gui.TutorialOfficeView);
  public void setIsWorksheetArrowShown(boolean);
  public void setIsNotebookArrowShown(boolean);
  public void setIsNotebookPageSheetArrowShown(boolean);
  public void setIsInputPanelArrowShown(boolean);
  public void setIsOutputPanelArrowShown(boolean);
  public littlemangame.tutorial.tutoriallittleman.TutorialLittleMan getLittleMan();
}
Compiled from "TutorialOffice.java"
public class littlemangame.tutorial.tutorialoffice.TutorialOffice extends littlemangame.computer.GenericOffice<littlemangame.tutorial.tutorialoffice.components.TutorialRegister, littlemangame.tutorial.tutorialoffice.components.TutorialMemory, littlemangame.tutorial.tutorialoffice.components.TutorialInstructionPointer, littlemangame.tutorial.tutorialoffice.components.TutorialOutputPanel, littlemangame.tutorial.tutorialoffice.components.TutorialInputPanel> {
  public littlemangame.tutorial.tutorialoffice.TutorialOffice(littlemangame.tutorial.tutorialoffice.components.TutorialOutputPanel, littlemangame.tutorial.tutorialoffice.components.TutorialInputPanel);
  public void draw(java.awt.Graphics);
  public void setIsWorksheetArrowShown(boolean);
  public void setIsNotebookArrowShown(boolean);
  public void setIsNotebookPageSheetArrowShown(boolean);
  public void setIsInputPanelArrowShown(boolean);
  public void setIsOutputPanelArrowShown(boolean);
}
Compiled from "IndicatorArrow.java"
public class littlemangame.tutorial.tutorialoffice.components.IndicatorArrow implements Renderer.Drawable {
  public littlemangame.tutorial.tutorialoffice.components.IndicatorArrow(int, int, int, int);
  public void draw(java.awt.Graphics);
  public void setTailX(int);
  public void setTailY(int);
  public void setHeadX(int);
  public void setHeadY(int);
}
Compiled from "TutorialInputPanel.java"
public class littlemangame.tutorial.tutorialoffice.components.TutorialInputPanel extends littlemangame.computer.computercomponents.InputPanel implements Renderer.Drawable {
  public littlemangame.tutorial.tutorialoffice.components.TutorialInputPanel();
  public void draw(java.awt.Graphics);
  public boolean isArrowShown();
  public void setIsArrowShown(boolean);
}
Compiled from "TutorialInstructionPointer.java"
public class littlemangame.tutorial.tutorialoffice.components.TutorialInstructionPointer extends littlemangame.computer.computercomponents.NotebookPageSheet {
  public littlemangame.tutorial.tutorialoffice.components.TutorialInstructionPointer();
  public void draw(java.awt.Graphics);
  public boolean isArrowShown();
  public void setIsArrowShown(boolean);
}
Compiled from "TutorialMemory.java"
public class littlemangame.tutorial.tutorialoffice.components.TutorialMemory extends littlemangame.computer.computercomponents.Notebook {
  public littlemangame.tutorial.tutorialoffice.components.TutorialMemory();
  public void draw(java.awt.Graphics);
  public boolean isArrowShown();
  public void setIsArrowShown(boolean);
}
Compiled from "TutorialOutputPanel.java"
public class littlemangame.tutorial.tutorialoffice.components.TutorialOutputPanel extends littlemangame.computer.computercomponents.OutputPanel implements Renderer.Drawable {
  public littlemangame.tutorial.tutorialoffice.components.TutorialOutputPanel();
  public void draw(java.awt.Graphics);
  public boolean isArrowShown();
  public void setIsArrowShown(boolean);
}
Compiled from "TutorialRegister.java"
public class littlemangame.tutorial.tutorialoffice.components.TutorialRegister extends littlemangame.computer.computercomponents.Worksheet {
  public littlemangame.tutorial.tutorialoffice.components.TutorialRegister();
  public void draw(java.awt.Graphics);
  public boolean isArrowShown();
  public void setIsArrowShown(boolean);
}
Compiled from "BinaryWordOperation.java"
public final class littlemangame.word.BinaryWordOperation extends java.lang.Enum<littlemangame.word.BinaryWordOperation> {
  public static final littlemangame.word.BinaryWordOperation SET;
  public static final littlemangame.word.BinaryWordOperation ADD;
  public static final littlemangame.word.BinaryWordOperation SUBTRACT;
  public static final littlemangame.word.BinaryWordOperation DIGITWISE_MAX;
  public static final littlemangame.word.BinaryWordOperation DIGITWISE_MIN;
  public static littlemangame.word.BinaryWordOperation[] values();
  public static littlemangame.word.BinaryWordOperation valueOf(java.lang.String);
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
  static {};
}
Compiled from "BinaryWordOperation.java"
final class littlemangame.word.BinaryWordOperation$1 implements littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  littlemangame.word.BinaryWordOperation$1();
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "BinaryWordOperation.java"
final class littlemangame.word.BinaryWordOperation$2 implements littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  littlemangame.word.BinaryWordOperation$2();
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "BinaryWordOperation.java"
final class littlemangame.word.BinaryWordOperation$3 implements littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  littlemangame.word.BinaryWordOperation$3();
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "BinaryWordOperation.java"
final class littlemangame.word.BinaryWordOperation$4 implements littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  littlemangame.word.BinaryWordOperation$4();
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "BinaryWordOperation.java"
final class littlemangame.word.BinaryWordOperation$5 implements littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  littlemangame.word.BinaryWordOperation$5();
  public void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "BinaryWordOperation.java"
interface littlemangame.word.BinaryWordOperation$BinaryWordOperator {
  public abstract void operate(littlemangame.word.Word, littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
public final class littlemangame.word.UnaryWordOperation extends java.lang.Enum<littlemangame.word.UnaryWordOperation> {
  public static final littlemangame.word.UnaryWordOperation INCREMENT;
  public static final littlemangame.word.UnaryWordOperation DECREMENT;
  public static final littlemangame.word.UnaryWordOperation COMPLEMENT;
  public static final littlemangame.word.UnaryWordOperation NEGATE;
  public static final littlemangame.word.UnaryWordOperation LEFT_SHIFT;
  public static final littlemangame.word.UnaryWordOperation RIGHT_SHIFT_UNSIGNED;
  public static final littlemangame.word.UnaryWordOperation RIGHT_SHIFT_SIGNED;
  public static littlemangame.word.UnaryWordOperation[] values();
  public static littlemangame.word.UnaryWordOperation valueOf(java.lang.String);
  public void operate(littlemangame.word.WordContainer);
  static {};
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$1 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$1();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$2 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$2();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$3 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$3();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$4 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$4();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$5 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$5();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$6 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$6();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
final class littlemangame.word.UnaryWordOperation$7 implements littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  littlemangame.word.UnaryWordOperation$7();
  public void operate(littlemangame.word.WordContainer);
}
Compiled from "UnaryWordOperation.java"
interface littlemangame.word.UnaryWordOperation$UnaryWordOperator {
  public abstract void operate(littlemangame.word.WordContainer);
}
Compiled from "Word.java"
public class littlemangame.word.Word implements java.lang.Comparable<littlemangame.word.Word> {
  public static final int NUM_WORDS;
  public static final int NUM_DIGITS;
  public static final int BASE;
  public static final littlemangame.word.Word MIN_SIGNED;
  public static final littlemangame.word.Word MAX_SIGNED;
  public static final littlemangame.word.Word MAX_WORD;
  public static final littlemangame.word.Word ZERO_WORD;
  public static littlemangame.word.Word valueOfLastDigitsOfInteger(int);
  public static littlemangame.word.Word zeroWord();
  public static java.util.Iterator<littlemangame.word.Word> getIterator();
  public littlemangame.word.Word(littlemangame.word.Word);
  public littlemangame.word.Word incrementedWord();
  public littlemangame.word.Word decrementedWord();
  public littlemangame.word.Word plus(littlemangame.word.Word);
  public littlemangame.word.Word minus(littlemangame.word.Word);
  public littlemangame.word.Word getComplement();
  public littlemangame.word.Word getOpposite();
  public littlemangame.word.Word leftShift();
  public littlemangame.word.Word leftShift(littlemangame.word.Word);
  public littlemangame.word.Word rightShiftUnsigned();
  public littlemangame.word.Word rightShiftUnsigned(littlemangame.word.Word);
  public littlemangame.word.Word rightShiftSigned();
  public littlemangame.word.Word rightShiftSigned(littlemangame.word.Word);
  public littlemangame.word.Word digitwiseMax(littlemangame.word.Word);
  public littlemangame.word.Word digitwiseMin(littlemangame.word.Word);
  public littlemangame.word.Word unsignedMax(littlemangame.word.Word);
  public littlemangame.word.Word unsignedMin(littlemangame.word.Word);
  public boolean isNegative();
  public int getUnsignedValue();
  public int getSignedValue();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public int compareTo(littlemangame.word.Word);
  public int compareToUnsigned(littlemangame.word.Word);
  public int compareToSigned(littlemangame.word.Word);
  public java.lang.String toString();
  public java.lang.String toStringUnsigned();
  public java.lang.String toStringSigned();
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "Word.java"
final class littlemangame.word.Word$1 implements java.util.Iterator<littlemangame.word.Word> {
  littlemangame.word.Word$1();
  public boolean hasNext();
  public littlemangame.word.Word next();
  public void remove();
  public java.lang.Object next();
}
Compiled from "WordContainer.java"
public class littlemangame.word.WordContainer {
  public littlemangame.word.WordContainer(littlemangame.word.Word);
  public void increment();
  public void decrement();
  public void incrementBy(littlemangame.word.Word);
  public void decrementBy(littlemangame.word.Word);
  public void complement();
  public void invertSign();
  public void leftShift();
  public void leftShift(littlemangame.word.Word);
  public void rightShiftUnsigned();
  public void rightShiftUnsigned(littlemangame.word.Word);
  public void rightShiftSigned();
  public void rightShiftSigned(littlemangame.word.Word);
  public void digitwiseMax(littlemangame.word.Word);
  public void digitwiseMin(littlemangame.word.Word);
  public void unsignedMax(littlemangame.word.Word);
  public void unsignedMin(littlemangame.word.Word);
  public boolean isNegative();
  public int getUnsignedValue();
  public int getSignedValue();
  public int compareTo(littlemangame.word.Word);
  public int compareToUnsigned(littlemangame.word.Word);
  public int compareToSigned(littlemangame.word.Word);
  public java.lang.String toString();
  public java.lang.String toStringUnsigned();
  public java.lang.String toStringSigned();
  public littlemangame.word.Word getWord();
  public void setWord(littlemangame.word.Word);
  public void doUnaryOperation(littlemangame.word.UnaryWordOperation);
  public void doBinaryOperation(littlemangame.word.BinaryWordOperation, littlemangame.word.Word);
}
