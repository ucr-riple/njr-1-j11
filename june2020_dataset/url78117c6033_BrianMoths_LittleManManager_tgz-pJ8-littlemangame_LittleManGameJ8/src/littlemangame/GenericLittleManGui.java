/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package littlemangame;

import GameGui.BaseGameGui;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JLayeredPane;
import littlemangame.notebookdeveloper.GenericNotebookDeveloper;
import littlemangame.notebookdeveloper.gui.GenericNotebookDeveloperGui;
import littlemangame.notebookdeveloper.gui.NotebookEditorPanel;
import littlemangame.notebookdeveloper.speedcontroller.SpeedController;

/**
 *
 * @author brian
 * @param <T>
 * @param <U>
 * @param <V>
 */
public class GenericLittleManGui<T extends GenericNotebookDeveloperGui<?, ?, V>, U extends NotebookEditorPanel, V extends GenericNotebookDeveloper<?>>
        extends BaseGameGui {

    protected final T genericNotebookDeveloperGui;
    protected final U notebookEditorPanel;
    private V notebookDeveloper;

    /**
     * Creates new form LittleManGui
     *
     * @param notebookDeveloperGui
     * @param notebookEditorPanel
     */
    public GenericLittleManGui(T notebookDeveloperGui, U notebookEditorPanel) {
        super();
        initComponents();
        this.notebookEditorPanel = notebookEditorPanel;
        this.genericNotebookDeveloperGui = notebookDeveloperGui;
        initializeCustomLayout(notebookDeveloperGui, notebookEditorPanel);
        notebookEditorPanel.setSaveAction(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (notebookDeveloper != null) {
                    notebookDeveloper.setNotebookSolutionAttempt(GenericLittleManGui.this.notebookEditorPanel.getNotebook());
                }
                showNotebookDeveloperGui();
            }

        });
        genericNotebookDeveloperGui.setEditMemoryAction(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                GenericLittleManGui.this.notebookEditorPanel.setProblemDescription(notebookDeveloper.getCurrentProblemDescription());
                GenericLittleManGui.this.notebookEditorPanel.setMemory(notebookDeveloper.getNotebookSolutionAttempt());
                showNotebookEditor();
            }

        });
    }

    private void initializeCustomLayout(T notebookDeveloperGui, U memoryEditorPanel) {
        notebookDeveloperHolder.setLayout(new GridLayout());
        notebookDeveloperHolder.add(notebookDeveloperGui);
        memoryEditorHolder.setLayout(new GridLayout());
        memoryEditorHolder.add(memoryEditorPanel);
        jLayeredPane1.setLayer(notebookDeveloperHolder, JLayeredPane.DEFAULT_LAYER, 0);
        jLayeredPane1.setLayer(memoryEditorHolder, JLayeredPane.DEFAULT_LAYER, 1);
        memoryEditorHolder.setVisible(false);
    }

    public T getNotebookDeveloperGui() {
        return genericNotebookDeveloperGui;
    }

    public U getNotebookEditorPanel() {
        return notebookEditorPanel;
    }

    public void setNotebookDeveloper(V notebookDeveloper) {
        this.notebookDeveloper = notebookDeveloper;
        genericNotebookDeveloperGui.regsiterNotebookDeveloper(notebookDeveloper);
    }

    public void showNotebookEditor() {
        memoryEditorHolder.setVisible(true);
        notebookDeveloperHolder.setVisible(false);
    }

    public void showNotebookDeveloperGui() {
        memoryEditorHolder.setVisible(false);
        notebookDeveloperHolder.setVisible(true);
    }

    public void registerSpeedController(SpeedController speedController) {
        genericNotebookDeveloperGui.registerSpeedController(speedController);
    }

//    public void setProblemDescription(String problemDescription) {
//        notebookEditorPanel.setProblemDescription(problemDescription);
//    }
//    public void setMemorySaveAction(ActionListener actionListener) {
//        notebookEditorPanel.setSaveAction(actionListener);
//    }
//    public Notebook getNotebookEditorNotebook() {
//        return notebookEditorPanel.getNotebook();
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        memoryEditorHolder = new javax.swing.JPanel();
        notebookDeveloperHolder = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout memoryEditorHolderLayout = new javax.swing.GroupLayout(memoryEditorHolder);
        memoryEditorHolder.setLayout(memoryEditorHolderLayout);
        memoryEditorHolderLayout.setHorizontalGroup(
            memoryEditorHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 666, Short.MAX_VALUE)
        );
        memoryEditorHolderLayout.setVerticalGroup(
            memoryEditorHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout notebookDeveloperHolderLayout = new javax.swing.GroupLayout(notebookDeveloperHolder);
        notebookDeveloperHolder.setLayout(notebookDeveloperHolderLayout);
        notebookDeveloperHolderLayout.setHorizontalGroup(
            notebookDeveloperHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
        );
        notebookDeveloperHolderLayout.setVerticalGroup(
            notebookDeveloperHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 633, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notebookDeveloperHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memoryEditorHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(notebookDeveloperHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(memoryEditorHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane1.setLayer(memoryEditorHolder, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(notebookDeveloperHolder, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel memoryEditorHolder;
    private javax.swing.JPanel notebookDeveloperHolder;
    // End of variables declaration//GEN-END:variables
}
