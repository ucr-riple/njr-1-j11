Compiled from "$Gson$Preconditions.java"
public final class com.google.gsoncode.internal.$Gson$Preconditions {
  public com.google.gsoncode.internal.$Gson$Preconditions();
  public static <T> T checkNotNull(T);
  public static void checkArgument(boolean);
}
Compiled from "$Gson$Types.java"
public final class com.google.gsoncode.internal.$Gson$Types {
  static final java.lang.reflect.Type[] EMPTY_TYPE_ARRAY;
  public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type...);
  public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type);
  public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type);
  public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type);
  public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type);
  public static java.lang.Class<?> getRawType(java.lang.reflect.Type);
  static boolean equal(java.lang.Object, java.lang.Object);
  public static boolean equals(java.lang.reflect.Type, java.lang.reflect.Type);
  public static java.lang.String typeToString(java.lang.reflect.Type);
  static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.lang.Class<?>);
  static java.lang.reflect.Type getSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.lang.Class<?>);
  public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type);
  public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type, java.lang.Class<?>);
  public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type, java.lang.Class<?>);
  public static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);
  static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);
  static void access$000(java.lang.reflect.Type);
  static int access$100(java.lang.Object);
  static {};
}
Compiled from "$Gson$Types.java"
final class com.google.gsoncode.internal.$Gson$Types$GenericArrayTypeImpl implements java.lang.reflect.GenericArrayType,java.io.Serializable {
  public com.google.gsoncode.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type);
  public java.lang.reflect.Type getGenericComponentType();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
}
Compiled from "$Gson$Types.java"
final class com.google.gsoncode.internal.$Gson$Types$ParameterizedTypeImpl implements java.lang.reflect.ParameterizedType,java.io.Serializable {
  public com.google.gsoncode.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type...);
  public java.lang.reflect.Type[] getActualTypeArguments();
  public java.lang.reflect.Type getRawType();
  public java.lang.reflect.Type getOwnerType();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
}
Compiled from "$Gson$Types.java"
final class com.google.gsoncode.internal.$Gson$Types$WildcardTypeImpl implements java.lang.reflect.WildcardType,java.io.Serializable {
  public com.google.gsoncode.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[], java.lang.reflect.Type[]);
  public java.lang.reflect.Type[] getUpperBounds();
  public java.lang.reflect.Type[] getLowerBounds();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
}
Compiled from "ConstructorConstructor.java"
public final class com.google.gsoncode.internal.ConstructorConstructor {
  public com.google.gsoncode.internal.ConstructorConstructor();
  public com.google.gsoncode.internal.ConstructorConstructor(java.util.Map<java.lang.reflect.Type, com.google.gsoncode.internal.InstanceCreator<?>>);
  public <T> com.google.gsoncode.internal.ObjectConstructor<T> get(com.google.gsoncode.internal.TypeToken<T>);
  public java.lang.String toString();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$1 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.InstanceCreator val$typeCreator;
  final java.lang.reflect.Type val$type;
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$1(com.google.gsoncode.internal.ConstructorConstructor, com.google.gsoncode.internal.InstanceCreator, java.lang.reflect.Type);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$10 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$10(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$11 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final java.lang.Class val$rawType;
  final java.lang.reflect.Type val$type;
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$11(com.google.gsoncode.internal.ConstructorConstructor, java.lang.Class, java.lang.reflect.Type);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$2 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.InstanceCreator val$rawTypeCreator;
  final java.lang.reflect.Type val$type;
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$2(com.google.gsoncode.internal.ConstructorConstructor, com.google.gsoncode.internal.InstanceCreator, java.lang.reflect.Type);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$3 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final java.lang.reflect.Constructor val$constructor;
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$3(com.google.gsoncode.internal.ConstructorConstructor, java.lang.reflect.Constructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$4 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$4(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$5 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$5(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$6 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$6(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$7 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$7(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$8 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$8(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "ConstructorConstructor.java"
class com.google.gsoncode.internal.ConstructorConstructor$9 implements com.google.gsoncode.internal.ObjectConstructor<T> {
  final com.google.gsoncode.internal.ConstructorConstructor this$0;
  com.google.gsoncode.internal.ConstructorConstructor$9(com.google.gsoncode.internal.ConstructorConstructor);
  public T construct();
}
Compiled from "InstanceCreator.java"
public interface com.google.gsoncode.internal.InstanceCreator<T> {
  public abstract T createInstance(java.lang.reflect.Type);
}
Compiled from "LazilyParsedNumber.java"
public final class com.google.gsoncode.internal.LazilyParsedNumber extends java.lang.Number {
  public com.google.gsoncode.internal.LazilyParsedNumber(java.lang.String);
  public int intValue();
  public long longValue();
  public float floatValue();
  public double doubleValue();
  public java.lang.String toString();
}
Compiled from "LinkedTreeMap.java"
public class com.google.gsoncode.internal.LinkedTreeMap<K extends java.lang.Comparable<K>, V> extends java.util.AbstractMap<K, V> implements java.io.Serializable {
  public com.google.gsoncode.internal.LinkedTreeMap();
  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
  public boolean containsKey(K);
  public V get(K);
  public V put(K, V);
  public V remove(K);
  public int size();
  public java.lang.Object put(java.lang.Object, java.lang.Object);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$800(com.google.gsoncode.internal.LinkedTreeMap);
}
Compiled from "LinkedTreeMap.java"
class com.google.gsoncode.internal.LinkedTreeMap$1 {
}
Compiled from "LinkedTreeMap.java"
class com.google.gsoncode.internal.LinkedTreeMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>> {
  final com.google.gsoncode.internal.LinkedTreeMap this$0;
  com.google.gsoncode.internal.LinkedTreeMap$EntrySet(com.google.gsoncode.internal.LinkedTreeMap);
  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
  public int size();
}
Compiled from "LinkedTreeMap.java"
class com.google.gsoncode.internal.LinkedTreeMap$LinkedTreeIterator implements java.util.Iterator<java.util.Map$Entry<K, V>> {
  final com.google.gsoncode.internal.LinkedTreeMap this$0;
  public boolean hasNext();
  public java.util.Map$Entry<K, V> next();
  public final void remove();
  public java.lang.Object next();
  com.google.gsoncode.internal.LinkedTreeMap$LinkedTreeIterator(com.google.gsoncode.internal.LinkedTreeMap, com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$1);
}
Compiled from "LinkedTreeMap.java"
class com.google.gsoncode.internal.LinkedTreeMap$TreeNode<K extends java.lang.Comparable<K>, V> implements java.util.Map$Entry<K, V> {
  com.google.gsoncode.internal.LinkedTreeMap$TreeNode(com.google.gsoncode.internal.LinkedTreeMap$TreeNode<K, V>, com.google.gsoncode.internal.LinkedTreeMap$TreeNode<K, V>, K, V);
  public K getKey();
  public V getValue();
  public V setValue(V);
  public final boolean equals(java.lang.Object);
  public final int hashCode();
  public final java.lang.String toString();
  public java.lang.Object getKey();
  static java.lang.Comparable access$000(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$100(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$200(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$102(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$202(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$302(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static boolean access$402(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, boolean);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$500(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static boolean access$400(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$502(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static java.lang.Comparable access$002(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, java.lang.Comparable);
  static java.lang.Object access$602(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, java.lang.Object);
  static java.lang.Object access$600(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$300(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$700(com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
  static com.google.gsoncode.internal.LinkedTreeMap$TreeNode access$702(com.google.gsoncode.internal.LinkedTreeMap$TreeNode, com.google.gsoncode.internal.LinkedTreeMap$TreeNode);
}
Compiled from "ObjectConstructor.java"
public interface com.google.gsoncode.internal.ObjectConstructor<T> {
  public abstract T construct();
}
Compiled from "Primitives.java"
public final class com.google.gsoncode.internal.Primitives {
  public static boolean isPrimitive(java.lang.reflect.Type);
  public static boolean isWrapperType(java.lang.reflect.Type);
  public static <T> java.lang.Class<T> wrap(java.lang.Class<T>);
  public static <T> java.lang.Class<T> unwrap(java.lang.Class<T>);
  static {};
}
Compiled from "TypeToken.java"
public class com.google.gsoncode.internal.TypeToken<T> {
  final java.lang.Class<? super T> rawType;
  final java.lang.reflect.Type type;
  final int hashCode;
  protected com.google.gsoncode.internal.TypeToken();
  public com.google.gsoncode.internal.TypeToken(java.lang.reflect.Type);
  static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class<?>);
  public final java.lang.Class<? super T> getRawType();
  public final java.lang.reflect.Type getType();
  public boolean isAssignableFrom(java.lang.Class<?>);
  public boolean isAssignableFrom(java.lang.reflect.Type);
  public boolean isAssignableFrom(com.google.gsoncode.internal.TypeToken<?>);
  public final int hashCode();
  public final boolean equals(java.lang.Object);
  public final java.lang.String toString();
  public static com.google.gsoncode.internal.TypeToken<?> get(java.lang.reflect.Type);
  public static <T> com.google.gsoncode.internal.TypeToken<T> get(java.lang.Class<T>);
}
Compiled from "UnsafeAllocator.java"
public abstract class com.google.gsoncode.internal.UnsafeAllocator {
  public com.google.gsoncode.internal.UnsafeAllocator();
  public abstract <T> T newInstance(java.lang.Class<T>) throws java.lang.Exception;
  public static com.google.gsoncode.internal.UnsafeAllocator create();
}
Compiled from "UnsafeAllocator.java"
final class com.google.gsoncode.internal.UnsafeAllocator$1 extends com.google.gsoncode.internal.UnsafeAllocator {
  final java.lang.reflect.Method val$allocateInstance;
  final java.lang.Object val$unsafe;
  com.google.gsoncode.internal.UnsafeAllocator$1(java.lang.reflect.Method, java.lang.Object);
  public <T> T newInstance(java.lang.Class<T>) throws java.lang.Exception;
}
Compiled from "UnsafeAllocator.java"
final class com.google.gsoncode.internal.UnsafeAllocator$2 extends com.google.gsoncode.internal.UnsafeAllocator {
  final java.lang.reflect.Method val$newInstance;
  com.google.gsoncode.internal.UnsafeAllocator$2(java.lang.reflect.Method);
  public <T> T newInstance(java.lang.Class<T>) throws java.lang.Exception;
}
Compiled from "UnsafeAllocator.java"
final class com.google.gsoncode.internal.UnsafeAllocator$3 extends com.google.gsoncode.internal.UnsafeAllocator {
  final java.lang.reflect.Method val$newInstance;
  final int val$constructorId;
  com.google.gsoncode.internal.UnsafeAllocator$3(java.lang.reflect.Method, int);
  public <T> T newInstance(java.lang.Class<T>) throws java.lang.Exception;
}
Compiled from "UnsafeAllocator.java"
final class com.google.gsoncode.internal.UnsafeAllocator$4 extends com.google.gsoncode.internal.UnsafeAllocator {
  com.google.gsoncode.internal.UnsafeAllocator$4();
  public <T> T newInstance(java.lang.Class<T>);
}
Compiled from "ArrayTypeAdapterFactory.java"
final class org.jczh.appliedxml.ArrayTypeAdapterFactory implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.ArrayTypeAdapterFactory();
  org.jczh.appliedxml.ArrayTypeAdapterFactory(org.jczh.appliedxml.ContainerDefine);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "ArrayTypeAdapterFactory.java"
public final class org.jczh.appliedxml.ArrayTypeAdapterFactory$ArrayTypeAdapter<E> extends org.jczh.appliedxml.TypeAdapter<java.lang.Object> {
  final org.jczh.appliedxml.ArrayTypeAdapterFactory this$0;
  public org.jczh.appliedxml.ArrayTypeAdapterFactory$ArrayTypeAdapter(org.jczh.appliedxml.Serializer, org.jczh.appliedxml.TypeAdapter<E>, java.lang.Class<E>, org.jczh.appliedxml.ContainerDefine);
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "Attribute.java"
public class org.jczh.appliedxml.Attribute extends org.jczh.appliedxml.Node {
  public org.jczh.appliedxml.Attribute(java.lang.String, java.lang.String, java.lang.String, boolean);
  void setParentNode(org.jczh.appliedxml.Node);
  public java.lang.String getValue();
  public void setValue(java.lang.String);
  public org.jczh.appliedxml.Node getParentNode();
  public short getNodeType();
  public boolean isRequired();
  void setRequired(boolean);
}
Compiled from "ClassNamingStrategy.java"
public interface org.jczh.appliedxml.ClassNamingStrategy {
  public abstract java.lang.String translateName(java.lang.Class);
}
Compiled from "CollectionTypeAdapterFactory.java"
final class org.jczh.appliedxml.CollectionTypeAdapterFactory implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.CollectionTypeAdapterFactory(com.google.gsoncode.internal.ConstructorConstructor);
  public org.jczh.appliedxml.CollectionTypeAdapterFactory(com.google.gsoncode.internal.ConstructorConstructor, org.jczh.appliedxml.ContainerDefine);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "CollectionTypeAdapterFactory.java"
final class org.jczh.appliedxml.CollectionTypeAdapterFactory$Adapter<E> extends org.jczh.appliedxml.TypeAdapter<java.util.Collection<E>> {
  final org.jczh.appliedxml.CollectionTypeAdapterFactory this$0;
  public org.jczh.appliedxml.CollectionTypeAdapterFactory$Adapter(org.jczh.appliedxml.Serializer, java.lang.reflect.Type, org.jczh.appliedxml.TypeAdapter<E>, com.google.gsoncode.internal.ObjectConstructor<? extends java.util.Collection<E>>, org.jczh.appliedxml.ContainerDefine);
  public java.util.Collection<E> read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.Collection<E>) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "ContainerDefine.java"
public class org.jczh.appliedxml.ContainerDefine {
  public final org.jczh.appliedxml.ContainerDefine$ContainerType type;
  public final java.lang.String entry;
  public final java.lang.String key;
  public final java.lang.String value;
  public final boolean keyAsAttr;
  public final boolean valueAsText;
  org.jczh.appliedxml.ContainerDefine(org.jczh.appliedxml.ContainerDefine$ContainerType, java.lang.String, java.lang.String, java.lang.String, boolean, boolean);
}
Compiled from "ContainerDefine.java"
public final class org.jczh.appliedxml.ContainerDefine$ContainerType extends java.lang.Enum<org.jczh.appliedxml.ContainerDefine$ContainerType> {
  public static final org.jczh.appliedxml.ContainerDefine$ContainerType Array;
  public static final org.jczh.appliedxml.ContainerDefine$ContainerType List;
  public static final org.jczh.appliedxml.ContainerDefine$ContainerType Map;
  public static org.jczh.appliedxml.ContainerDefine$ContainerType[] values();
  public static org.jczh.appliedxml.ContainerDefine$ContainerType valueOf(java.lang.String);
  static {};
}
Compiled from "DateTypeAdapter.java"
final class org.jczh.appliedxml.DateTypeAdapter extends org.jczh.appliedxml.TypeAdapter<java.util.Date> {
  public static final org.jczh.appliedxml.TypeAdapterFactory FACTORY;
  org.jczh.appliedxml.DateTypeAdapter();
  public java.util.Date read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public synchronized void write(org.jczh.appliedxml.XmlWriter, java.util.Date) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
  static {};
}
Compiled from "DateTypeAdapter.java"
final class org.jczh.appliedxml.DateTypeAdapter$1 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.DateTypeAdapter$1();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "Document.java"
public class org.jczh.appliedxml.Document extends org.jczh.appliedxml.Element {
  public org.jczh.appliedxml.Document(java.lang.String);
  public org.jczh.appliedxml.Document();
  public org.jczh.appliedxml.Node getParentNode();
  public short getNodeType();
}
Compiled from "DocumentTreeBuilderFactory.java"
class org.jczh.appliedxml.DocumentTreeBuilderFactory implements org.jczh.appliedxml.ElementConstructorFactory {
  org.jczh.appliedxml.DocumentTreeBuilderFactory(org.jczh.appliedxml.Serializer);
  public <T> org.jczh.appliedxml.ElementConstructor<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  static org.jczh.appliedxml.Serializer access$000(org.jczh.appliedxml.DocumentTreeBuilderFactory);
  static java.lang.String[] access$100(org.jczh.appliedxml.DocumentTreeBuilderFactory);
}
Compiled from "DocumentTreeBuilderFactory.java"
class org.jczh.appliedxml.DocumentTreeBuilderFactory$DocumentTreeBuilder<T> implements org.jczh.appliedxml.ElementConstructor<T> {
  final org.jczh.appliedxml.DocumentTreeBuilderFactory this$0;
  org.jczh.appliedxml.DocumentTreeBuilderFactory$DocumentTreeBuilder(org.jczh.appliedxml.DocumentTreeBuilderFactory);
  public void buildChildNodes(org.jczh.appliedxml.Element, java.lang.Object);
  public org.jczh.appliedxml.Node buildChildNode(org.jczh.appliedxml.Element, java.lang.Object, java.lang.reflect.Field);
  public org.jczh.appliedxml.Element construct(T);
}
Compiled from "Element.java"
public class org.jczh.appliedxml.Element extends org.jczh.appliedxml.Node {
  public org.jczh.appliedxml.Element();
  public static org.jczh.appliedxml.Element createShell(java.lang.String);
  public org.jczh.appliedxml.Element(java.lang.String);
  public int depth();
  protected void setDepth(int);
  public java.util.List<org.jczh.appliedxml.Element$Namespace> getNamespaces();
  public void setNamespaces(java.util.List<org.jczh.appliedxml.Element$Namespace>);
  public boolean isText();
  public boolean isSerialized();
  public boolean isRequired();
  public void setRequired(boolean);
  public org.jczh.appliedxml.Node getParentNode();
  protected void setParentNode(org.jczh.appliedxml.Element);
  public java.util.Collection<org.jczh.appliedxml.Element> getChildElements();
  public java.util.Collection<org.jczh.appliedxml.Attribute> getAttributes();
  public boolean hasNamespaces();
  public boolean hasAttributes();
  public boolean hasChildElements();
  public org.jczh.appliedxml.Element findChildElement(java.lang.String);
  public org.jczh.appliedxml.Element getChildElement(int);
  public org.jczh.appliedxml.Attribute getAttribute(java.lang.String);
  public short getNodeType();
  public boolean isEmpty();
  public void addAttribute(org.jczh.appliedxml.Attribute);
  public void addChildElement(org.jczh.appliedxml.Element);
  public void addChildElements(java.util.Collection<org.jczh.appliedxml.Element>);
  public org.jczh.appliedxml.Element createChildElement(java.lang.String);
  public void removeChildElement(org.jczh.appliedxml.Element);
  public java.util.List<org.jczh.appliedxml.Element> removeChildElemnts();
  public org.jczh.appliedxml.Attribute removeAttribute(java.lang.String);
  public void addAttribute(java.lang.String, java.lang.String);
}
Compiled from "Element.java"
public class org.jczh.appliedxml.Element$Namespace {
  java.lang.String prefix;
  java.lang.String reference;
  public org.jczh.appliedxml.Element$Namespace(java.lang.String, java.lang.String);
  public java.lang.String getPrefix();
  public void setPrefix(java.lang.String);
  public java.lang.String getReference();
  public void setReference(java.lang.String);
}
Compiled from "ElementConstructor.java"
public interface org.jczh.appliedxml.ElementConstructor<T> {
  public abstract org.jczh.appliedxml.Element construct(T);
}
Compiled from "ElementConstructorFactory.java"
public interface org.jczh.appliedxml.ElementConstructorFactory {
  public abstract <T> org.jczh.appliedxml.ElementConstructor<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "ElementConstructorManager.java"
public class org.jczh.appliedxml.ElementConstructorManager {
  org.jczh.appliedxml.ElementConstructorManager(org.jczh.appliedxml.Serializer);
  org.jczh.appliedxml.ElementConstructor getConstructor(com.google.gsoncode.internal.TypeToken);
  public void registerConstructorFactory(java.lang.reflect.Type, org.jczh.appliedxml.ElementConstructor);
  public static <TT> org.jczh.appliedxml.ElementConstructorFactory newFactory(com.google.gsoncode.internal.TypeToken<TT>, org.jczh.appliedxml.ElementConstructor<TT>);
}
Compiled from "ElementConstructorManager.java"
final class org.jczh.appliedxml.ElementConstructorManager$1 implements org.jczh.appliedxml.ElementConstructorFactory {
  final com.google.gsoncode.internal.TypeToken val$type;
  final org.jczh.appliedxml.ElementConstructor val$typeAdapter;
  org.jczh.appliedxml.ElementConstructorManager$1(com.google.gsoncode.internal.TypeToken, org.jczh.appliedxml.ElementConstructor);
  public <T> org.jczh.appliedxml.ElementConstructor<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "ElementConstructorManager.java"
public class org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory implements org.jczh.appliedxml.ElementConstructorFactory {
  final org.jczh.appliedxml.ElementConstructorManager this$0;
  public org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory(org.jczh.appliedxml.ElementConstructorManager);
  public org.jczh.appliedxml.ElementConstructor create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken);
}
Compiled from "ElementConstructorManager.java"
public class org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory$CollectionElementConstructor implements org.jczh.appliedxml.ElementConstructor {
  final org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory this$1;
  public org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory$CollectionElementConstructor(org.jczh.appliedxml.ElementConstructorManager$CollectionElementFactory);
  public org.jczh.appliedxml.Element construct(java.lang.Object);
}
Compiled from "EventElement.java"
abstract class org.jczh.appliedxml.EventElement implements org.jczh.appliedxml.EventNode {
  org.jczh.appliedxml.EventElement();
  public void addEventAttribute(org.jczh.appliedxml.PullReader$EventAttribute);
  public java.util.ArrayList<org.jczh.appliedxml.PullReader$EventAttribute> getEventAttributes();
  public int getLine();
  public java.lang.String getValue();
  public boolean isEnd();
  public boolean isStart();
  public boolean isText();
  public boolean hasEventAttribute();
}
Compiled from "EventNode.java"
interface org.jczh.appliedxml.EventNode {
  public abstract int getLine();
  public abstract java.lang.String getName();
  public abstract java.lang.String getValue();
  public abstract java.lang.String getReference();
  public abstract java.lang.String getPrefix();
  public abstract java.lang.Object getSource();
  public abstract boolean isEnd();
  public abstract boolean isStart();
  public abstract boolean isText();
  public abstract int depth();
}
Compiled from "EventReader.java"
interface org.jczh.appliedxml.EventReader {
  public abstract org.jczh.appliedxml.EventNode next() throws java.lang.Exception;
  public abstract org.jczh.appliedxml.EventNode peek() throws java.lang.Exception;
}
Compiled from "EventToken.java"
abstract class org.jczh.appliedxml.EventToken implements org.jczh.appliedxml.EventNode {
  org.jczh.appliedxml.EventToken();
  public int getLine();
  public java.lang.String getName();
  public java.lang.String getValue();
  public java.lang.String getReference();
  public java.lang.String getPrefix();
  public java.lang.Object getSource();
  public java.util.Iterator<org.jczh.appliedxml.PullReader$EventAttribute> iterator();
  public boolean isEnd();
  public boolean isStart();
  public boolean isText();
}
Compiled from "Excluder.java"
public final class org.jczh.appliedxml.Excluder implements java.lang.Cloneable {
  public static final org.jczh.appliedxml.Excluder DEFAULT;
  public org.jczh.appliedxml.Excluder();
  protected org.jczh.appliedxml.Excluder clone();
  public org.jczh.appliedxml.Excluder withExclusionStrategy(org.jczh.appliedxml.ExclusionStrategy, boolean, boolean);
  public boolean excludeField(java.lang.reflect.Field, boolean);
  public boolean excludeClass(java.lang.Class<?>, boolean);
  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
  static {};
}
Compiled from "ExclusionStrategy.java"
public interface org.jczh.appliedxml.ExclusionStrategy {
  public abstract boolean shouldSkipField(org.jczh.appliedxml.FieldAttributes);
  public abstract boolean shouldSkipClass(java.lang.Class<?>);
}
Compiled from "FieldAttributes.java"
public final class org.jczh.appliedxml.FieldAttributes {
  public org.jczh.appliedxml.FieldAttributes(java.lang.reflect.Field);
  public java.lang.Class<?> getDeclaringClass();
  public java.lang.String getName();
  public java.lang.reflect.Type getDeclaredType();
  public java.lang.Class<?> getDeclaredClass();
  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
  public java.util.Collection<java.lang.annotation.Annotation> getAnnotations();
  public boolean hasModifier(int);
  java.lang.Object get(java.lang.Object) throws java.lang.IllegalAccessException;
  boolean isSynthetic();
}
Compiled from "FieldNamingStrategy.java"
public interface org.jczh.appliedxml.FieldNamingStrategy {
  public abstract java.lang.String translateName(java.lang.reflect.Field);
}
Compiled from "Format.java"
public class org.jczh.appliedxml.Format {
  public org.jczh.appliedxml.Format(int);
  public org.jczh.appliedxml.Format(java.lang.String);
  public org.jczh.appliedxml.Format(int, java.lang.String);
  public int getIndent();
  public java.lang.String getProlog();
}
Compiled from "Indenter.java"
class org.jczh.appliedxml.Indenter {
  public org.jczh.appliedxml.Indenter();
  public org.jczh.appliedxml.Indenter(org.jczh.appliedxml.Format);
  public java.lang.String top();
  public java.lang.String push();
  public java.lang.String pop();
}
Compiled from "Indenter.java"
class org.jczh.appliedxml.Indenter$Cache {
  public org.jczh.appliedxml.Indenter$Cache(int);
  public int size();
  public void set(int, java.lang.String);
  public java.lang.String get(int);
}
Compiled from "MapTypeAdapterFactory.java"
final class org.jczh.appliedxml.MapTypeAdapterFactory implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.MapTypeAdapterFactory(com.google.gsoncode.internal.ConstructorConstructor);
  public org.jczh.appliedxml.MapTypeAdapterFactory(com.google.gsoncode.internal.ConstructorConstructor, org.jczh.appliedxml.ContainerDefine);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "MapTypeAdapterFactory.java"
final class org.jczh.appliedxml.MapTypeAdapterFactory$Adapter<K, V> extends org.jczh.appliedxml.TypeAdapter<java.util.Map<K, V>> {
  final org.jczh.appliedxml.MapTypeAdapterFactory this$0;
  public org.jczh.appliedxml.MapTypeAdapterFactory$Adapter(org.jczh.appliedxml.Serializer, java.lang.reflect.Type, org.jczh.appliedxml.TypeAdapter<K>, java.lang.reflect.Type, org.jczh.appliedxml.TypeAdapter<V>, com.google.gsoncode.internal.ObjectConstructor<? extends java.util.Map<K, V>>, org.jczh.appliedxml.ContainerDefine);
  public java.util.Map<K, V> read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.Map<K, V>) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "Mode.java"
final class org.jczh.appliedxml.Mode extends java.lang.Enum<org.jczh.appliedxml.Mode> {
  public static final org.jczh.appliedxml.Mode DATA;
  public static final org.jczh.appliedxml.Mode ESCAPE;
  public static final org.jczh.appliedxml.Mode INHERIT;
  public static org.jczh.appliedxml.Mode[] values();
  public static org.jczh.appliedxml.Mode valueOf(java.lang.String);
  static {};
}
Compiled from "Node.java"
public abstract class org.jczh.appliedxml.Node {
  public static final short ELEMENT_NODE;
  public static final short ATTRIBUTE_NODE;
  public static final short DOCUMENT_NODE;
  public org.jczh.appliedxml.Node(java.lang.String);
  public org.jczh.appliedxml.Node();
  public java.lang.String getPrefix();
  public void setPrefix(java.lang.String);
  public void setName(java.lang.String);
  public abstract short getNodeType();
  public abstract org.jczh.appliedxml.Node getParentNode();
  public java.lang.String getName();
  public boolean isAttribute();
  public boolean isDocument();
  public boolean isElement();
}
Compiled from "NodeException.java"
public class org.jczh.appliedxml.NodeException extends java.lang.RuntimeException {
  public org.jczh.appliedxml.NodeException(java.lang.String);
  public org.jczh.appliedxml.NodeException();
  public org.jczh.appliedxml.NodeException(java.lang.String, java.lang.Throwable);
  public org.jczh.appliedxml.NodeException(java.lang.Throwable);
}
Compiled from "ObjectTypeAdapter.java"
final class org.jczh.appliedxml.ObjectTypeAdapter extends org.jczh.appliedxml.TypeAdapter<java.lang.Object> {
  public static final org.jczh.appliedxml.TypeAdapterFactory FACTORY;
  org.jczh.appliedxml.ObjectTypeAdapter(org.jczh.appliedxml.Serializer);
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
  static {};
}
Compiled from "ObjectTypeAdapter.java"
final class org.jczh.appliedxml.ObjectTypeAdapter$1 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.ObjectTypeAdapter$1();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "OutputBuffer.java"
class org.jczh.appliedxml.OutputBuffer {
  org.jczh.appliedxml.OutputBuffer();
  public void append(char);
  public void append(java.lang.String);
  public void append(char[]);
  public void append(char[], int, int);
  public void append(java.lang.String, int, int);
  public void write(java.io.Writer) throws java.io.IOException;
  public void clear();
}
Compiled from "Provider.java"
public interface org.jczh.appliedxml.Provider {
  public abstract org.jczh.appliedxml.XmlReader provide(java.io.InputStream) throws java.lang.Exception;
  public abstract org.jczh.appliedxml.XmlReader provide(java.io.Reader) throws java.lang.Exception;
}
Compiled from "ProviderFactory.java"
public final class org.jczh.appliedxml.ProviderFactory {
  public org.jczh.appliedxml.ProviderFactory();
  public static synchronized org.jczh.appliedxml.Provider getInstance();
  public static synchronized void registerProvider(org.jczh.appliedxml.Provider);
}
Compiled from "PullProvider.java"
class org.jczh.appliedxml.PullProvider implements org.jczh.appliedxml.Provider {
  org.jczh.appliedxml.PullProvider() throws org.xmlpull.v1.XmlPullParserException;
  public org.jczh.appliedxml.XmlReader provide(java.io.InputStream) throws java.lang.Exception;
  public org.jczh.appliedxml.XmlReader provide(java.io.Reader) throws java.lang.Exception;
}
Compiled from "PullReader.java"
class org.jczh.appliedxml.PullReader extends org.jczh.appliedxml.XmlReader {
  org.jczh.appliedxml.PullReader(org.xmlpull.v1.XmlPullParser);
  org.jczh.appliedxml.EventNode last();
  public org.jczh.appliedxml.EventNode peek() throws java.io.IOException;
  public org.jczh.appliedxml.EventNode next() throws java.io.IOException;
  boolean hasNext();
}
Compiled from "PullReader.java"
public class org.jczh.appliedxml.PullReader$End extends org.jczh.appliedxml.EventToken {
  public org.jczh.appliedxml.PullReader$End(org.xmlpull.v1.XmlPullParser, int);
  public boolean isEnd();
  public java.lang.String getName();
  public int depth();
  public boolean isText();
  public boolean isStart();
  public java.util.Iterator iterator();
  public java.lang.Object getSource();
  public java.lang.String getPrefix();
  public java.lang.String getReference();
  public java.lang.String getValue();
  public int getLine();
}
Compiled from "PullReader.java"
public class org.jczh.appliedxml.PullReader$EventAttribute {
  public org.jczh.appliedxml.PullReader$EventAttribute(org.xmlpull.v1.XmlPullParser, int);
  public java.lang.String getName();
  public java.lang.String getValue();
  public boolean isReserved();
  public java.lang.String getReference();
  public java.lang.String getPrefix();
  public java.lang.Object getSource();
}
Compiled from "PullReader.java"
public class org.jczh.appliedxml.PullReader$Start extends org.jczh.appliedxml.EventElement {
  public org.jczh.appliedxml.PullReader$Start(org.xmlpull.v1.XmlPullParser, int);
  public int getLine();
  public java.lang.String getName();
  public java.lang.String getReference();
  public java.lang.String getPrefix();
  public java.lang.Object getSource();
  public int depth();
  public boolean hasEventAttribute();
  public boolean isText();
  public boolean isStart();
  public boolean isEnd();
  public java.lang.String getValue();
  public java.util.ArrayList getEventAttributes();
  public void addEventAttribute(org.jczh.appliedxml.PullReader$EventAttribute);
}
Compiled from "PullReader.java"
public class org.jczh.appliedxml.PullReader$Text extends org.jczh.appliedxml.EventToken {
  public org.jczh.appliedxml.PullReader$Text(org.xmlpull.v1.XmlPullParser, int);
  public boolean isText();
  public java.lang.String getValue();
  public java.lang.Object getSource();
  public int depth();
  public boolean isStart();
  public boolean isEnd();
  public java.util.Iterator iterator();
  public java.lang.String getPrefix();
  public java.lang.String getReference();
  public java.lang.String getName();
  public int getLine();
}
Compiled from "ReflectiveTypeAdapterFactory.java"
final class org.jczh.appliedxml.ReflectiveTypeAdapterFactory implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.ReflectiveTypeAdapterFactory(com.google.gsoncode.internal.ConstructorConstructor);
  public boolean checkFieldSerialialbe(java.lang.reflect.Field, boolean);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  static com.google.gsoncode.internal.ConstructorConstructor access$100(org.jczh.appliedxml.ReflectiveTypeAdapterFactory);
}
Compiled from "ReflectiveTypeAdapterFactory.java"
class org.jczh.appliedxml.ReflectiveTypeAdapterFactory$1 {
}
Compiled from "ReflectiveTypeAdapterFactory.java"
public final class org.jczh.appliedxml.ReflectiveTypeAdapterFactory$Adapter<T> extends org.jczh.appliedxml.TypeAdapter<T> {
  final org.jczh.appliedxml.ReflectiveTypeAdapterFactory this$0;
  public T read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, T) throws java.io.IOException;
  org.jczh.appliedxml.ReflectiveTypeAdapterFactory$Adapter(org.jczh.appliedxml.ReflectiveTypeAdapterFactory, org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken, org.jczh.appliedxml.ReflectiveTypeAdapterFactory$1);
}
Compiled from "ReflectiveTypeAdapterFactory.java"
class org.jczh.appliedxml.ReflectiveTypeAdapterFactory$BoundField {
  java.lang.String name;
  java.lang.String prefix;
  com.google.gsoncode.internal.TypeToken<?> fieldType;
  boolean isElement;
  boolean isAttribute;
  boolean isRequired;
  java.lang.reflect.Field field;
  org.jczh.appliedxml.ContainerDefine containerDefine;
  org.jczh.appliedxml.TypeAdapter typeAdapter;
  java.util.ArrayList<org.jczh.appliedxml.Element$Namespace> namespaces;
  final boolean serialized;
  final boolean deserialized;
  protected org.jczh.appliedxml.ReflectiveTypeAdapterFactory$BoundField(org.jczh.appliedxml.Serializer, java.lang.reflect.Field, com.google.gsoncode.internal.TypeToken<?>, boolean, boolean);
  public java.lang.Object get(java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
}
Compiled from "Serializer.java"
public class org.jczh.appliedxml.Serializer {
  public org.jczh.appliedxml.Serializer();
  public java.lang.String toXml(java.lang.Object) throws java.io.IOException;
  public java.lang.String toXml(java.lang.Object, java.lang.reflect.Type) throws java.io.IOException;
  public void toXml(java.lang.Object, java.lang.reflect.Type, java.io.Writer) throws java.io.IOException;
  <T> org.jczh.appliedxml.TypeAdapter<T> getAdapter(java.lang.Class<T>);
  <T> org.jczh.appliedxml.TypeAdapter<T> getAdapter(com.google.gsoncode.internal.TypeToken<T>);
  public org.jczh.appliedxml.TypeAdapterManager getTypeAdapterManager();
  public org.jczh.appliedxml.Element toElementTree(java.lang.Object);
  public org.jczh.appliedxml.ElementConstructorManager getElementConstructorManager();
  public java.lang.String toXml(org.jczh.appliedxml.Element) throws java.io.IOException;
  public void toXml(org.jczh.appliedxml.Element, java.io.Writer) throws java.io.IOException;
  public java.lang.String toXml(org.jczh.appliedxml.Element, java.lang.Object) throws java.io.IOException;
  public void toXml(org.jczh.appliedxml.Element, java.lang.Object, java.io.Writer) throws java.io.IOException;
  boolean isNullValueSerializeRequired();
  org.jczh.appliedxml.FieldNamingStrategy getFieldNamingStrategy();
  public void setFieldNamingStrategy(org.jczh.appliedxml.FieldNamingStrategy);
  org.jczh.appliedxml.ClassNamingStrategy getClassNamingStrategy();
  public void setClassNamingStrategy(org.jczh.appliedxml.ClassNamingStrategy);
  java.lang.String getDefaultElementPrefix();
  public void setDefaultElementPrefix(java.lang.String);
  java.lang.String getDefaultAttributePrefix();
  public void setDefaultAttributePrefix(java.lang.String);
  public void setNullValueSerializeRequired(boolean);
  public void setFormatted(boolean);
  public boolean isAssociatedWithSuperClass();
  public void setAssociatedWithSuperClass(boolean);
  public <T> T fromXml(java.lang.String, java.lang.Class<T>);
  public <T> T fromXml(java.io.Reader, java.lang.reflect.Type);
  public <T> T fromXml(java.io.Reader, java.lang.Class<T>);
  public <T> T fromXml(java.lang.String, java.lang.reflect.Type);
}
Compiled from "Serializer.java"
class org.jczh.appliedxml.Serializer$1 implements org.jczh.appliedxml.FieldNamingStrategy {
  final org.jczh.appliedxml.Serializer this$0;
  org.jczh.appliedxml.Serializer$1(org.jczh.appliedxml.Serializer);
  public java.lang.String translateName(java.lang.reflect.Field);
}
Compiled from "Serializer.java"
class org.jczh.appliedxml.Serializer$2 implements org.jczh.appliedxml.ClassNamingStrategy {
  final org.jczh.appliedxml.Serializer this$0;
  org.jczh.appliedxml.Serializer$2(org.jczh.appliedxml.Serializer);
  public java.lang.String translateName(java.lang.Class);
}
Compiled from "SqlDateTypeAdapter.java"
final class org.jczh.appliedxml.SqlDateTypeAdapter extends org.jczh.appliedxml.TypeAdapter<java.sql.Date> {
  public static final org.jczh.appliedxml.TypeAdapterFactory FACTORY;
  org.jczh.appliedxml.SqlDateTypeAdapter();
  public synchronized java.sql.Date read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public synchronized void write(org.jczh.appliedxml.XmlWriter, java.sql.Date) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
  static {};
}
Compiled from "SqlDateTypeAdapter.java"
final class org.jczh.appliedxml.SqlDateTypeAdapter$1 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.SqlDateTypeAdapter$1();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TextElement.java"
public class org.jczh.appliedxml.TextElement extends org.jczh.appliedxml.Element {
  public org.jczh.appliedxml.TextElement(java.lang.String, java.lang.String);
  public org.jczh.appliedxml.TextElement();
  public boolean isText();
  public java.lang.String getText();
  public void setText(java.lang.String);
  public boolean isEmpty();
  public java.lang.String toString();
  public org.jczh.appliedxml.Element createChildElement(java.lang.String);
  public void addChildElement(org.jczh.appliedxml.Element);
}
Compiled from "TimeTypeAdapter.java"
final class org.jczh.appliedxml.TimeTypeAdapter extends org.jczh.appliedxml.TypeAdapter<java.sql.Time> {
  public static final org.jczh.appliedxml.TypeAdapterFactory FACTORY;
  org.jczh.appliedxml.TimeTypeAdapter();
  public synchronized java.sql.Time read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public synchronized void write(org.jczh.appliedxml.XmlWriter, java.sql.Time) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
  static {};
}
Compiled from "TimeTypeAdapter.java"
final class org.jczh.appliedxml.TimeTypeAdapter$1 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.TimeTypeAdapter$1();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TypeAdapter.java"
public abstract class org.jczh.appliedxml.TypeAdapter<T> {
  public org.jczh.appliedxml.TypeAdapter();
  abstract void write(org.jczh.appliedxml.XmlWriter, T) throws java.io.IOException;
  abstract T read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
}
Compiled from "TypeAdapterFactory.java"
public interface org.jczh.appliedxml.TypeAdapterFactory {
  public abstract <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TypeAdapterManager.java"
public class org.jczh.appliedxml.TypeAdapterManager {
  org.jczh.appliedxml.TypeAdapterManager(org.jczh.appliedxml.Serializer);
  public <T> void registerTypeAdapter(java.lang.reflect.Type, org.jczh.appliedxml.TypeAdapter);
  <T> org.jczh.appliedxml.TypeAdapter<T> getAdapter(com.google.gsoncode.internal.TypeToken<T>);
  org.jczh.appliedxml.TypeAdapterManager$DocumentAdapter getDocumentAdapter();
  org.jczh.appliedxml.TypeAdapter getContainerTypeAdater(com.google.gsoncode.internal.TypeToken<?>, org.jczh.appliedxml.ContainerDefine);
}
Compiled from "TypeAdapterManager.java"
class org.jczh.appliedxml.TypeAdapterManager$1 extends java.lang.ThreadLocal<java.util.Map<com.google.gsoncode.internal.TypeToken<?>, org.jczh.appliedxml.TypeAdapterManager$FutureTypeAdapter<?>>> {
  final org.jczh.appliedxml.TypeAdapterManager this$0;
  org.jczh.appliedxml.TypeAdapterManager$1(org.jczh.appliedxml.TypeAdapterManager);
  protected java.util.Map<com.google.gsoncode.internal.TypeToken<?>, org.jczh.appliedxml.TypeAdapterManager$FutureTypeAdapter<?>> initialValue();
  protected java.lang.Object initialValue();
}
Compiled from "TypeAdapterManager.java"
final class org.jczh.appliedxml.TypeAdapterManager$DocumentAdapter {
  final org.jczh.appliedxml.TypeAdapterManager this$0;
  org.jczh.appliedxml.TypeAdapterManager$DocumentAdapter(org.jczh.appliedxml.TypeAdapterManager);
  public void writeElement(org.jczh.appliedxml.XmlWriter, org.jczh.appliedxml.Element) throws java.io.IOException;
}
Compiled from "TypeAdapterManager.java"
class org.jczh.appliedxml.TypeAdapterManager$FutureTypeAdapter<T> extends org.jczh.appliedxml.TypeAdapter<T> {
  public void setDelegate(org.jczh.appliedxml.TypeAdapter<T>);
  public T read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, T) throws java.io.IOException;
  org.jczh.appliedxml.TypeAdapterManager$FutureTypeAdapter(org.jczh.appliedxml.TypeAdapterManager$1);
}
Compiled from "TypeAdapterRuntimeTypeWrapper.java"
final class org.jczh.appliedxml.TypeAdapterRuntimeTypeWrapper<T> extends org.jczh.appliedxml.TypeAdapter<T> {
  org.jczh.appliedxml.TypeAdapterRuntimeTypeWrapper(org.jczh.appliedxml.Serializer, org.jczh.appliedxml.TypeAdapter<T>, java.lang.reflect.Type);
  public T read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, T) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
public class org.jczh.appliedxml.TypeAdapters {
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Class> CLASS;
  public static final org.jczh.appliedxml.TypeAdapterFactory CLASS_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.util.BitSet> BIT_SET;
  public static final org.jczh.appliedxml.TypeAdapterFactory BIT_SET_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Boolean> BOOLEAN;
  public static final org.jczh.appliedxml.TypeAdapterFactory BOOLEAN_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> BYTE;
  public static final org.jczh.appliedxml.TypeAdapterFactory BYTE_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> SHORT;
  public static final org.jczh.appliedxml.TypeAdapterFactory SHORT_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> INTEGER;
  public static final org.jczh.appliedxml.TypeAdapterFactory INTEGER_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> LONG;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> FLOAT;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> DOUBLE;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Number> NUMBER;
  public static final org.jczh.appliedxml.TypeAdapterFactory NUMBER_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.Character> CHARACTER;
  public static final org.jczh.appliedxml.TypeAdapterFactory CHARACTER_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.String> STRING;
  public static final org.jczh.appliedxml.TypeAdapterFactory STRING_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.math.BigDecimal> BIG_DECIMAL;
  public static final org.jczh.appliedxml.TypeAdapter<java.math.BigInteger> BIG_INTEGER;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.StringBuilder> STRING_BUILDER;
  public static final org.jczh.appliedxml.TypeAdapterFactory STRING_BUILDER_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.lang.StringBuffer> STRING_BUFFER;
  public static final org.jczh.appliedxml.TypeAdapterFactory STRING_BUFFER_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.net.URL> URL;
  public static final org.jczh.appliedxml.TypeAdapterFactory URL_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.net.URI> URI;
  public static final org.jczh.appliedxml.TypeAdapterFactory URI_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.net.InetAddress> INET_ADDRESS;
  public static final org.jczh.appliedxml.TypeAdapterFactory INET_ADDRESS_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.util.UUID> UUID;
  public static final org.jczh.appliedxml.TypeAdapterFactory UUID_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapterFactory TIMESTAMP_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.util.Calendar> CALENDAR;
  public static final org.jczh.appliedxml.TypeAdapterFactory CALENDAR_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapter<java.util.Locale> LOCALE;
  public static final org.jczh.appliedxml.TypeAdapterFactory LOCALE_FACTORY;
  public static final org.jczh.appliedxml.TypeAdapterFactory ENUM_FACTORY;
  public org.jczh.appliedxml.TypeAdapters();
  public static <TT> org.jczh.appliedxml.TypeAdapterFactory newFactory(java.lang.Class<TT>, java.lang.Class<TT>, org.jczh.appliedxml.TypeAdapter<? super TT>);
  public static org.jczh.appliedxml.TypeAdapterFactory newEnumTypeHierarchyFactory();
  public static <TT> org.jczh.appliedxml.TypeAdapterFactory newFactory(com.google.gsoncode.internal.TypeToken<TT>, org.jczh.appliedxml.TypeAdapter<TT>);
  public static <TT> org.jczh.appliedxml.TypeAdapterFactory newFactory(java.lang.Class<TT>, org.jczh.appliedxml.TypeAdapter<TT>);
  public static <TT> org.jczh.appliedxml.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class<TT>, java.lang.Class<? extends TT>, org.jczh.appliedxml.TypeAdapter<? super TT>);
  public static <TT> org.jczh.appliedxml.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<TT>, org.jczh.appliedxml.TypeAdapter<TT>);
  static boolean access$000(org.jczh.appliedxml.PullReader$Text);
  static void access$100(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
  static {};
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$1 extends org.jczh.appliedxml.TypeAdapter<java.lang.Class> {
  org.jczh.appliedxml.TypeAdapters$1();
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Class) throws java.io.IOException;
  public java.lang.Class read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$10 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$10();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$11 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$11();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$12 extends org.jczh.appliedxml.TypeAdapter<java.lang.Character> {
  org.jczh.appliedxml.TypeAdapters$12();
  public java.lang.Character read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Character) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$13 extends org.jczh.appliedxml.TypeAdapter<java.lang.String> {
  org.jczh.appliedxml.TypeAdapters$13();
  public java.lang.String read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.String) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$14 extends org.jczh.appliedxml.TypeAdapter<java.math.BigDecimal> {
  org.jczh.appliedxml.TypeAdapters$14();
  public java.math.BigDecimal read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.math.BigDecimal) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$15 extends org.jczh.appliedxml.TypeAdapter<java.math.BigInteger> {
  org.jczh.appliedxml.TypeAdapters$15();
  public java.math.BigInteger read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.math.BigInteger) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$16 extends org.jczh.appliedxml.TypeAdapter<java.lang.StringBuilder> {
  org.jczh.appliedxml.TypeAdapters$16();
  public java.lang.StringBuilder read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.StringBuilder) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$17 extends org.jczh.appliedxml.TypeAdapter<java.lang.StringBuffer> {
  org.jczh.appliedxml.TypeAdapters$17();
  public java.lang.StringBuffer read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.StringBuffer) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$18 extends org.jczh.appliedxml.TypeAdapter<java.net.URL> {
  org.jczh.appliedxml.TypeAdapters$18();
  public java.net.URL read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.net.URL) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$19 extends org.jczh.appliedxml.TypeAdapter<java.net.URI> {
  org.jczh.appliedxml.TypeAdapters$19();
  public java.net.URI read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.net.URI) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$2 extends org.jczh.appliedxml.TypeAdapter<java.util.BitSet> {
  org.jczh.appliedxml.TypeAdapters$2();
  public java.util.BitSet read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.BitSet) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$20 extends org.jczh.appliedxml.TypeAdapter<java.net.InetAddress> {
  org.jczh.appliedxml.TypeAdapters$20();
  public java.net.InetAddress read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.net.InetAddress) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$21 extends org.jczh.appliedxml.TypeAdapter<java.util.UUID> {
  org.jczh.appliedxml.TypeAdapters$21();
  public java.util.UUID read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.UUID) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$22 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.TypeAdapters$22();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TypeAdapters.java"
class org.jczh.appliedxml.TypeAdapters$22$1 extends org.jczh.appliedxml.TypeAdapter<java.sql.Timestamp> {
  final org.jczh.appliedxml.TypeAdapter val$dateTypeAdapter;
  final org.jczh.appliedxml.TypeAdapters$22 this$0;
  org.jczh.appliedxml.TypeAdapters$22$1(org.jczh.appliedxml.TypeAdapters$22, org.jczh.appliedxml.TypeAdapter);
  public java.sql.Timestamp read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.sql.Timestamp) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$23 extends org.jczh.appliedxml.TypeAdapter<java.util.Calendar> {
  org.jczh.appliedxml.TypeAdapters$23();
  public java.util.Calendar read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.Calendar) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$24 extends org.jczh.appliedxml.TypeAdapter<java.util.Locale> {
  org.jczh.appliedxml.TypeAdapters$24();
  public java.util.Locale read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.util.Locale) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$25 implements org.jczh.appliedxml.TypeAdapterFactory {
  org.jczh.appliedxml.TypeAdapters$25();
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$26 implements org.jczh.appliedxml.TypeAdapterFactory {
  final com.google.gsoncode.internal.TypeToken val$type;
  final org.jczh.appliedxml.TypeAdapter val$typeAdapter;
  org.jczh.appliedxml.TypeAdapters$26(com.google.gsoncode.internal.TypeToken, org.jczh.appliedxml.TypeAdapter);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$27 implements org.jczh.appliedxml.TypeAdapterFactory {
  final java.lang.Class val$type;
  final org.jczh.appliedxml.TypeAdapter val$typeAdapter;
  org.jczh.appliedxml.TypeAdapters$27(java.lang.Class, org.jczh.appliedxml.TypeAdapter);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  public java.lang.String toString();
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$28 implements org.jczh.appliedxml.TypeAdapterFactory {
  final java.lang.Class val$base;
  final java.lang.Class val$sub;
  final org.jczh.appliedxml.TypeAdapter val$typeAdapter;
  org.jczh.appliedxml.TypeAdapters$28(java.lang.Class, java.lang.Class, org.jczh.appliedxml.TypeAdapter);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  public java.lang.String toString();
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$29 implements org.jczh.appliedxml.TypeAdapterFactory {
  final java.lang.Class val$clazz;
  final org.jczh.appliedxml.TypeAdapter val$typeAdapter;
  org.jczh.appliedxml.TypeAdapters$29(java.lang.Class, org.jczh.appliedxml.TypeAdapter);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  public java.lang.String toString();
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$3 extends org.jczh.appliedxml.TypeAdapter<java.lang.Boolean> {
  org.jczh.appliedxml.TypeAdapters$3();
  public java.lang.Boolean read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Boolean) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$4 implements org.jczh.appliedxml.TypeAdapterFactory {
  final java.lang.Class val$unboxed;
  final java.lang.Class val$boxed;
  final org.jczh.appliedxml.TypeAdapter val$typeAdapter;
  org.jczh.appliedxml.TypeAdapters$4(java.lang.Class, java.lang.Class, org.jczh.appliedxml.TypeAdapter);
  public <T> org.jczh.appliedxml.TypeAdapter<T> create(org.jczh.appliedxml.Serializer, com.google.gsoncode.internal.TypeToken<T>);
  public java.lang.String toString();
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$5 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$5();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$6 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$6();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$7 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$7();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$8 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$8();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$9 extends org.jczh.appliedxml.TypeAdapter<java.lang.Number> {
  org.jczh.appliedxml.TypeAdapters$9();
  public java.lang.Number read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Number) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "TypeAdapters.java"
final class org.jczh.appliedxml.TypeAdapters$EnumTypeAdapter<T extends java.lang.Enum<T>> extends org.jczh.appliedxml.TypeAdapter<T> {
  public org.jczh.appliedxml.TypeAdapters$EnumTypeAdapter(java.lang.Class<T>);
  public T read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, T) throws java.io.IOException;
  public java.lang.Object read(org.jczh.appliedxml.XmlReader) throws java.io.IOException;
  public void write(org.jczh.appliedxml.XmlWriter, java.lang.Object) throws java.io.IOException;
}
Compiled from "UnSerializedElement.java"
public class org.jczh.appliedxml.UnSerializedElement extends org.jczh.appliedxml.Element {
  org.jczh.appliedxml.UnSerializedElement(java.lang.String, java.lang.reflect.Type, java.lang.Object);
  public java.lang.reflect.Type getUnSerializedChildType();
  public void setUnSerializedChildType(java.lang.reflect.Type);
  public java.lang.Object getUnSerializedChildValue();
  void setUnSerializedChildValue(java.lang.Object);
  public boolean isSerialized();
  public boolean isEmpty();
  public org.jczh.appliedxml.Element createChildElement(java.lang.String);
  public void addChildElement(org.jczh.appliedxml.Element);
  public org.jczh.appliedxml.ContainerDefine getContainerDefine();
  public void setContainerDefine(org.jczh.appliedxml.ContainerDefine);
  public boolean isContainer();
}
Compiled from "XmlReader.java"
abstract class org.jczh.appliedxml.XmlReader {
  org.jczh.appliedxml.XmlReader();
  abstract org.jczh.appliedxml.EventNode next() throws java.io.IOException;
  abstract org.jczh.appliedxml.EventNode peek() throws java.io.IOException;
  abstract org.jczh.appliedxml.EventNode last();
  abstract boolean hasNext();
}
Compiled from "XmlWriter.java"
public class org.jczh.appliedxml.XmlWriter {
  org.jczh.appliedxml.XmlWriter(java.io.Writer, org.jczh.appliedxml.Format);
  public void writeProlog() throws java.io.IOException;
  public void writeComment(java.lang.String);
  public void writeStart(java.lang.String, java.lang.String) throws java.io.IOException;
  public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
  public void writeNamespace(java.lang.String, java.lang.String) throws java.io.IOException;
  public void writeText(java.lang.String) throws java.io.IOException;
  public void writeText(java.lang.String, org.jczh.appliedxml.Mode) throws java.io.IOException;
  public void writeEnd(java.lang.String, java.lang.String) throws java.io.IOException;
  public void flush() throws java.io.IOException;
  static {};
}
Compiled from "XmlWriter.java"
final class org.jczh.appliedxml.XmlWriter$Tag extends java.lang.Enum<org.jczh.appliedxml.XmlWriter$Tag> {
  public static final org.jczh.appliedxml.XmlWriter$Tag COMMENT;
  public static final org.jczh.appliedxml.XmlWriter$Tag START;
  public static final org.jczh.appliedxml.XmlWriter$Tag TEXT;
  public static final org.jczh.appliedxml.XmlWriter$Tag END;
  public static org.jczh.appliedxml.XmlWriter$Tag[] values();
  public static org.jczh.appliedxml.XmlWriter$Tag valueOf(java.lang.String);
  static {};
}
Compiled from "Attribute.java"
public interface org.jczh.appliedxml.annotation.Attribute extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
  public abstract java.lang.String prefix();
  public abstract boolean required();
}
Compiled from "Document.java"
public interface org.jczh.appliedxml.annotation.Document extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
  public abstract java.lang.String prefix();
}
Compiled from "Element.java"
public interface org.jczh.appliedxml.annotation.Element extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
  public abstract boolean required();
  public abstract java.lang.String prefix();
}
Compiled from "ElementArray.java"
public interface org.jczh.appliedxml.annotation.ElementArray extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
  public abstract java.lang.String entry();
  public abstract java.lang.String prefix();
  public abstract boolean required();
}
Compiled from "ElementList.java"
public interface org.jczh.appliedxml.annotation.ElementList extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
  public abstract java.lang.String prefix();
  public abstract java.lang.String entry();
  public abstract boolean required();
}
Compiled from "ElementMap.java"
public interface org.jczh.appliedxml.annotation.ElementMap extends java.lang.annotation.Annotation {
  public abstract java.lang.String prefix();
  public abstract java.lang.String name();
  public abstract java.lang.String entry();
  public abstract java.lang.String value();
  public abstract java.lang.String key();
  public abstract boolean hideEntry();
  public abstract boolean keyAsAttribute();
  public abstract boolean valueAsText();
  public abstract boolean required();
}
Compiled from "Namespace.java"
public interface org.jczh.appliedxml.annotation.Namespace extends java.lang.annotation.Annotation {
  public abstract java.lang.String reference();
  public abstract java.lang.String prefix();
}
Compiled from "NamespaceList.java"
public interface org.jczh.appliedxml.annotation.NamespaceList extends java.lang.annotation.Annotation {
  public abstract org.jczh.appliedxml.annotation.Namespace[] value();
}
Compiled from "Serializable.java"
public interface org.jczh.appliedxml.annotation.Serializable extends java.lang.annotation.Annotation {
  public abstract boolean value();
}
Compiled from "Transient.java"
public interface org.jczh.appliedxml.annotation.Transient extends java.lang.annotation.Annotation {
}
Compiled from "ReflectUtil.java"
public class org.jczh.appliedxml.utils.ReflectUtil {
  public org.jczh.appliedxml.utils.ReflectUtil();
  public static java.util.ArrayList<org.jczh.appliedxml.Element$Namespace> extractNamespaces(java.lang.Class);
  public static java.util.ArrayList<org.jczh.appliedxml.Element$Namespace> extractNamespaces(java.lang.reflect.Field);
}
Compiled from "StringUtil.java"
public class org.jczh.appliedxml.utils.StringUtil {
  public org.jczh.appliedxml.utils.StringUtil();
  public static boolean isEmpty(java.lang.String);
}
Compiled from "TextTypeUtil.java"
public class org.jczh.appliedxml.utils.TextTypeUtil {
  public org.jczh.appliedxml.utils.TextTypeUtil();
  public static boolean isTextType(java.lang.reflect.Type);
  public static java.lang.Object convert(java.lang.reflect.Type, java.lang.Object);
}
Compiled from "SonBean.java"
public class test.extendsuper.SonBean extends test.extendsuper.SuperBean {
  public test.extendsuper.SonBean();
  public java.lang.String getSon1();
  public void setSon1(java.lang.String);
  public java.lang.String getSon2();
  public void setSon2(java.lang.String);
}
Compiled from "SuperBean.java"
public class test.extendsuper.SuperBean {
  public test.extendsuper.SuperBean();
  public java.lang.String getSuper1();
  public void setSuper1(java.lang.String);
  public java.lang.String getSuper2();
  public void setSuper2(java.lang.String);
}
Compiled from "Test.java"
public class test.extendsuper.Test {
  public test.extendsuper.Test();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "Test.java"
class test.fromlist.Qw {
  test.fromlist.Qw();
  public java.lang.String getHasimg();
  public void setHasimg(java.lang.String);
  public java.lang.String getEid();
  public void setEid(java.lang.String);
  public java.lang.String getSid();
  public void setSid(java.lang.String);
  public java.lang.String getPid();
  public void setPid(java.lang.String);
  public java.lang.String getQid();
  public void setQid(java.lang.String);
  public java.lang.String getQs();
  public void setQs(java.lang.String);
  public java.lang.String getUa();
  public void setUa(java.lang.String);
  public java.lang.String getQt();
  public void setQt(java.lang.String);
  public java.lang.String getT();
  public void setT(java.lang.String);
  public java.lang.String getS();
  public void setS(java.lang.String);
  public java.lang.String getAn();
  public void setAn(java.lang.String);
  public java.lang.String getP();
  public void setP(java.lang.String);
  public java.lang.String getR();
  public void setR(java.lang.String);
  public java.util.HashMap<java.lang.String, java.lang.String> getOps();
  public void setOps(java.util.HashMap<java.lang.String, java.lang.String>);
  public java.lang.String toString();
}
Compiled from "Test.java"
public class test.fromlist.Test {
  java.util.ArrayList<test.fromlist.Qw> qws;
  public test.fromlist.Test();
  public static void main(java.lang.String[]) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException;
}
Compiled from "Test.java"
final class test.fromlist.Test$1 extends com.google.gsoncode.internal.TypeToken<java.util.ArrayList<test.fromlist.Qw>> {
  test.fromlist.Test$1();
}
Compiled from "Test.java"
final class test.fromlist.Test$2 implements org.jczh.appliedxml.ClassNamingStrategy {
  test.fromlist.Test$2();
  public java.lang.String translateName(java.lang.Class);
}
Compiled from "BeanTest.java"
public class test.helloworld.BeanTest {
  public java.lang.String getVersion();
  public void setVersion(java.lang.String);
  public java.lang.String getAttr1();
  public void setAttr1(java.lang.String);
  public java.lang.String getElement1();
  public void setElement1(java.lang.String);
  public java.lang.String getElement2();
  public void setElement2(java.lang.String);
  public java.lang.String[] getTestKeys();
  public void setTestKeys(java.lang.String[]);
  public test.helloworld.BeanTest$JavaBean getJavabean();
  public void setJavabean(test.helloworld.BeanTest$JavaBean);
  public test.helloworld.BeanTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "BeanTest.java"
public class test.helloworld.BeanTest$JavaBean {
  java.lang.String bean1;
  java.lang.String bean2;
  public test.helloworld.BeanTest$JavaBean();
  public java.lang.String getBean1();
  public void setBean1(java.lang.String);
  public java.lang.String getBean2();
  public void setBean2(java.lang.String);
  public java.lang.String toString();
}
Compiled from "ListTest.java"
public class test.helloworld.ListTest {
  public test.helloworld.ListTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "MapTest.java"
public class test.helloworld.MapTest {
  public test.helloworld.MapTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "An.java"
public class test.request.An {
  public test.request.An();
  public static void main(java.lang.String[]);
  public java.lang.String getId();
  public void setId(java.lang.String);
  public java.lang.String getTime();
  public void setTime(java.lang.String);
  public java.util.ArrayList<test.request.Q> getQs();
  public void addQ(test.request.Q);
  public org.jczh.appliedxml.Element toElement(org.jczh.appliedxml.Serializer);
}
Compiled from "Ans.java"
public class test.request.Ans {
  public test.request.Ans();
  public int getFlag();
  public void setFlag(int);
  public java.util.ArrayList<test.request.An> getAns();
  public void addAn(test.request.An);
  public java.lang.String toXml(org.jczh.appliedxml.Serializer) throws java.io.IOException;
}
Compiled from "Q.java"
public class test.request.Q {
  public test.request.Q();
  public java.lang.String getQid();
  public void setQid(java.lang.String);
  public java.lang.String getQr();
  public void setQr(java.lang.String);
  public java.lang.String getUa();
  public void setUa(java.lang.String);
  public java.lang.String getQt();
  public void setQt(java.lang.String);
}
Compiled from "Test.java"
public class test.request.Test {
  public test.request.Test();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "Exam.java"
public class test.simples.Exam {
  public test.simples.Exam();
  public java.lang.String getID();
  public void setID(java.lang.String);
  public java.lang.String getExamTypeID();
  public void setExamTypeID(java.lang.String);
  public java.lang.String getExamName();
  public void setExamName(java.lang.String);
  public java.lang.String toString();
}
Compiled from "ExamType.java"
public class test.simples.ExamType {
  public test.simples.ExamType();
  public java.lang.String getID();
  public void setID(java.lang.String);
  public java.lang.String getDictName();
  public void setDictName(java.lang.String);
  public java.lang.String toString();
}
Compiled from "Service.java"
public class test.simples.Service {
  public test.simples.Service();
  public java.util.ArrayList<test.simples.Exam> getExams();
  public void setExams(java.util.ArrayList<test.simples.Exam>);
  public java.util.ArrayList<test.simples.ExamType> getExamTypes();
  public void setExamTypes(java.util.ArrayList<test.simples.ExamType>);
  public java.util.ArrayList<test.simples.Subject> getSubjects();
  public void setSubjects(java.util.ArrayList<test.simples.Subject>);
  public int getNo();
  public void setNo(int);
  public int getErrno();
  public void setErrno(int);
  public int getVer();
  public void setVer(int);
  public java.lang.String toString();
}
Compiled from "Subject.java"
public class test.simples.Subject {
  public test.simples.Subject();
  public java.lang.String getID();
  public void setID(java.lang.String);
  public java.lang.String getExamID();
  public void setExamID(java.lang.String);
  public java.lang.String getSubjectName();
  public void setSubjectName(java.lang.String);
  public java.lang.String toString();
}
Compiled from "Test.java"
public class test.simples.Test {
  org.jczh.appliedxml.Serializer serializer;
  public test.simples.Test();
  public static void main(java.lang.String[]) throws java.io.IOException;
  public java.lang.String service2Xml() throws java.io.IOException;
  public test.simples.Service xml2Service() throws java.io.IOException;
}
Compiled from "Test.java"
class test.simples.Test$1 implements org.jczh.appliedxml.ClassNamingStrategy {
  final test.simples.Test this$0;
  test.simples.Test$1(test.simples.Test);
  public java.lang.String translateName(java.lang.Class);
}
Compiled from "Test.java"
class test.simples.Test$2 implements org.jczh.appliedxml.FieldNamingStrategy {
  final test.simples.Test this$0;
  test.simples.Test$2(test.simples.Test);
  public java.lang.String translateName(java.lang.reflect.Field);
}
