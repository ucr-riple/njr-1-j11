Compiled from "AbstractNpc.java"
public abstract class NPC.AbstractNpc implements NPC.Npc {
  public NPC.AbstractNpc(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
  public void setStatement(java.lang.String);
  public java.lang.String getStatement();
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
}
Compiled from "AbstractNpcKillable.java"
public abstract class NPC.AbstractNpcKillable implements NPC.Killable {
  public NPC.AbstractNpcKillable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int);
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public void setStatement(java.lang.String);
  public java.lang.String getStatement();
  public java.lang.String getShortC();
  public void setNbLives(int);
  public int getNbLives();
}
Compiled from "AbstractNpcKillable1.java"
public abstract class NPC.AbstractNpcKillable1 implements NPC.Killable1 {
  public NPC.AbstractNpcKillable1(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int);
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public void setStatement(java.lang.String);
  public java.lang.String getStatement();
  public java.lang.String getShortC();
  public void setNbLives(int);
  public int getNbLives();
}
Compiled from "AbstractNpcKillable2.java"
public abstract class NPC.AbstractNpcKillable2 implements NPC.Killable2 {
  public NPC.AbstractNpcKillable2(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int);
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public void setStatement(java.lang.String);
  public java.lang.String getStatement();
  public java.lang.String getShortC();
  public void setNbLives(int);
  public int getNbLives();
}
Compiled from "AbstractNpcKillable3.java"
public abstract class NPC.AbstractNpcKillable3 implements NPC.Killable3 {
  public NPC.AbstractNpcKillable3(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int);
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public void setStatement(java.lang.String);
  public java.lang.String getStatement();
  public java.lang.String getShortC();
  public void setNbLives(int);
  public int getNbLives();
}
Compiled from "Aela.java"
public class NPC.Aela extends NPC.AbstractNpc {
  public NPC.Aela();
  public NPC.Aela(java.lang.String);
  public NPC.Aela(java.lang.String, java.lang.String);
  public commands.GameState action(commands.Game);
}
Compiled from "Dragon.java"
public class NPC.Dragon extends NPC.AbstractNpcKillable3 {
  public NPC.Dragon();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Draugr.java"
public class NPC.Draugr extends NPC.AbstractNpcKillable1 {
  public NPC.Draugr();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Eorlund.java"
public class NPC.Eorlund extends NPC.AbstractNpc {
  public NPC.Eorlund();
  public commands.GameState action(commands.Game);
}
Compiled from "Farkas.java"
public class NPC.Farkas extends NPC.AbstractNpc {
  public NPC.Farkas();
  public commands.GameState action(commands.Game);
}
Compiled from "Kill.java"
public interface NPC.Kill extends NPC.Npc {
  public abstract void setNbLives(int);
  public abstract int getNbLives();
}
Compiled from "Killable.java"
public interface NPC.Killable extends NPC.Kill {
}
Compiled from "Killable1.java"
public interface NPC.Killable1 extends NPC.Kill {
}
Compiled from "Killable2.java"
public interface NPC.Killable2 extends NPC.Kill {
}
Compiled from "Killable3.java"
public interface NPC.Killable3 extends NPC.Kill {
}
Compiled from "KodlakWhitemane.java"
public class NPC.KodlakWhitemane extends NPC.AbstractNpc {
  public NPC.KodlakWhitemane();
  public commands.GameState action(commands.Game);
}
Compiled from "Npc.java"
public interface NPC.Npc extends commands.Named {
  public abstract void setStatement(java.lang.String);
  public abstract java.lang.String getStatement();
  public abstract void setName(java.lang.String);
  public abstract void setDescription(java.lang.String);
  public abstract java.lang.String toString();
  public abstract java.util.List<items.Item> getItems();
  public abstract commands.GameState action(commands.Game);
  public abstract void addItem(items.Item);
}
Compiled from "Ria.java"
public class NPC.Ria extends NPC.AbstractNpc {
  public NPC.Ria();
  public commands.GameState action(commands.Game);
}
Compiled from "Samoth.java"
public class NPC.Samoth extends NPC.AbstractNpc {
  public NPC.Samoth();
  public commands.GameState action(commands.Game);
}
Compiled from "Skeever.java"
public class NPC.Skeever extends NPC.AbstractNpcKillable2 {
  public NPC.Skeever();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Skeleton.java"
public class NPC.Skeleton extends NPC.AbstractNpcKillable {
  public NPC.Skeleton();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Skjor.java"
public class NPC.Skjor extends NPC.AbstractNpc {
  public NPC.Skjor();
  public commands.GameState action(commands.Game);
}
Compiled from "StrawDummy.java"
public class NPC.StrawDummy extends NPC.AbstractNpcKillable {
  public NPC.StrawDummy();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Vilkas.java"
public class NPC.Vilkas extends NPC.AbstractNpc {
  public NPC.Vilkas();
  public commands.GameState action(commands.Game);
}
Compiled from "WereWolfAela.java"
public class NPC.WereWolfAela extends NPC.AbstractNpcKillable {
  public NPC.WereWolfAela();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "WerewolfKodlakWhitemane.java"
public class NPC.WerewolfKodlakWhitemane extends NPC.AbstractNpcKillable3 {
  public NPC.WerewolfKodlakWhitemane();
  public java.util.List<items.Item> getItems();
  public commands.GameState action(commands.Game);
  public void addItem(items.Item);
}
Compiled from "Zrogezrg.java"
public class NPC.Zrogezrg extends NPC.AbstractNpc {
  public NPC.Zrogezrg();
  public commands.GameState action(commands.Game);
}
Compiled from "Main.java"
public class adventure.Main {
  public adventure.Main();
  public static void main(java.lang.String[]);
}
Compiled from "AbstractCommand.java"
public abstract class commands.AbstractCommand implements commands.Command {
  public commands.AbstractCommand(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
}
Compiled from "BackPack.java"
public interface commands.BackPack {
  public abstract int getCapacity();
  public abstract int getCount();
  public abstract boolean add(items.Item);
  public abstract items.Item remove(java.lang.String);
  public abstract items.Item getItem(java.lang.String);
  public abstract java.util.List<items.Item> getItems();
  public abstract void setCapacity(int);
}
Compiled from "BackPackImpl.java"
public class commands.BackPackImpl implements commands.BackPack {
  public commands.BackPackImpl(int);
  public int getCapacity();
  public int getCount();
  public boolean add(items.Item);
  public items.Item remove(java.lang.String);
  public items.Item getItem(java.lang.String);
  public java.util.List<items.Item> getItems();
  public void setCapacity(int);
}
Compiled from "Command.java"
public interface commands.Command extends commands.Named {
  public abstract void execute(commands.Game, java.lang.String);
}
Compiled from "Commands.java"
public class commands.Commands extends commands.AbstractCommand {
  public commands.Commands();
  public void execute(commands.Game, java.lang.String);
  public void addCommands(commands.Command);
}
Compiled from "Drop.java"
public class commands.Drop extends commands.AbstractCommand {
  public commands.Drop();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "East.java"
public class commands.East extends commands.AbstractCommand {
  public commands.East();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "End.java"
public class commands.End extends commands.AbstractCommand {
  public commands.End();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Examine.java"
public class commands.Examine extends commands.AbstractCommand {
  boolean contains;
  boolean containsNpc;
  public commands.Examine();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Game.java"
public interface commands.Game {
  public abstract commands.GameState getGameState();
  public abstract void setGameState(java.lang.String);
  public abstract void processCommand(java.lang.String);
  public abstract void start();
  public abstract void init();
  public abstract rooms.Room getCurrentRoom();
  public abstract void setCurrentRoom(rooms.Room);
  public abstract void setCurrentGame(commands.Game);
  public abstract commands.BackPack getBackPack();
  public abstract void setBackPack(int);
}
Compiled from "GameImpl.java"
public class commands.GameImpl implements commands.Game {
  public commands.GameImpl();
  public commands.GameState getGameState();
  public void setGameState(java.lang.String);
  public void processCommand(java.lang.String);
  public void start();
  public void init();
  public rooms.Room getCurrentRoom();
  public void setCurrentRoom(rooms.Room);
  public commands.Game getCurrentGame();
  public void setCurrentGame(commands.Game);
  public commands.BackPack getBackPack();
  public void setBackPack(int);
}
Compiled from "GameState.java"
public final class commands.GameState extends java.lang.Enum<commands.GameState> {
  public static final commands.GameState PLAYING;
  public static final commands.GameState GAMEOVER;
  public static final commands.GameState SOLVED;
  public static commands.GameState[] values();
  public static commands.GameState valueOf(java.lang.String);
  public java.lang.String toString();
  static {};
}
Compiled from "History.java"
public class commands.History {
  public static commands.History getHistory();
  public void add(java.lang.String);
  public void clear();
  public void save(java.lang.String);
  public java.util.List<java.lang.String> load(java.lang.String);
  public boolean isLoaded();
  public void setLoaded();
}
Compiled from "Inventory.java"
public class commands.Inventory extends commands.AbstractCommand {
  public commands.Inventory();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Load.java"
public class commands.Load extends commands.AbstractCommand {
  public commands.Load();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Look.java"
public class commands.Look extends commands.AbstractCommand {
  public commands.Look();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Menu.java"
public class commands.Menu extends commands.AbstractCommand {
  public commands.Menu();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Named.java"
public interface commands.Named {
  public abstract java.lang.String getName();
  public abstract java.lang.String getDescription();
  public abstract java.lang.String getShortC();
}
Compiled from "North.java"
public class commands.North extends commands.AbstractCommand {
  public commands.North();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Parser.java"
public interface commands.Parser {
  public abstract commands.Command getCommand(java.lang.String);
}
Compiled from "ParserImpl.java"
public class commands.ParserImpl implements commands.Parser {
  public commands.ParserImpl();
  public commands.Command getCommand(java.lang.String);
}
Compiled from "Pick.java"
public class commands.Pick extends commands.AbstractCommand {
  public commands.Pick();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Quit.java"
public class commands.Quit extends commands.AbstractCommand {
  public commands.Quit();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Save.java"
public class commands.Save extends commands.AbstractCommand {
  public commands.Save();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "South.java"
public class commands.South extends commands.AbstractCommand {
  public commands.South();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Talk.java"
public class commands.Talk extends commands.AbstractCommand {
  public commands.Talk();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "Textual.java"
public class commands.Textual implements commands.UserInterface {
  public commands.Textual();
  public void println(java.lang.String);
  public void loop(commands.Game);
  public void print(java.lang.String);
}
Compiled from "Use.java"
public class commands.Use extends commands.AbstractCommand {
  public commands.Use();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "UserInterface.java"
public interface commands.UserInterface {
  public abstract void loop(commands.Game);
  public abstract void print(java.lang.String);
  public abstract void println(java.lang.String);
}
Compiled from "Version.java"
public class commands.Version extends commands.AbstractCommand {
  public commands.Version();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "West.java"
public class commands.West extends commands.AbstractCommand {
  public commands.West();
  public void execute(commands.Game, java.lang.String);
}
Compiled from "AbstractItem.java"
public abstract class items.AbstractItem implements items.Item {
  public items.AbstractItem(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String toString();
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public void setShortC(java.lang.String);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
}
Compiled from "AbstractItemMovable.java"
public abstract class items.AbstractItemMovable implements items.Useable,items.Moveable {
  public items.AbstractItemMovable(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String toString();
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public void setShortC(java.lang.String);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
}
Compiled from "AbstractItemUseable.java"
public abstract class items.AbstractItemUseable implements items.Useable {
  public items.AbstractItemUseable(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String toString();
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public void setShortC(java.lang.String);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
}
Compiled from "AbstractWeapon.java"
public abstract class items.AbstractWeapon extends items.AbstractItemMovable {
  public items.AbstractWeapon(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "Apple.java"
public class items.Apple extends items.AbstractItemMovable {
  public items.Apple();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "BlackKey.java"
public class items.BlackKey extends items.Key {
  public items.BlackKey();
  public commands.GameState use(commands.Game);
}
Compiled from "Chest.java"
public interface items.Chest extends items.Item {
  public abstract void openChest();
  public abstract void closeChest();
  public abstract boolean openedChest();
}
Compiled from "ChestChangeState.java"
public interface items.ChestChangeState {
  public abstract void setState(items.ChestStatelike);
  public abstract items.ChestStatelike getState();
  public abstract items.ChestStatelike getClosedChest();
  public abstract items.ChestStatelike getOpenedChest();
}
Compiled from "ChestCreator.java"
public class items.ChestCreator {
  public items.ChestCreator();
  public static items.Chest createChest();
}
Compiled from "ChestStateContext.java"
public class items.ChestStateContext implements items.ChestChangeState,items.Chest {
  public items.ChestStateContext();
  public void setState(items.ChestStatelike);
  public void openChest();
  public void closeChest();
  public boolean openedChest();
  public void setName(java.lang.String);
  public void setDescription(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.lang.String getName();
  public java.lang.String getDescription();
  public java.lang.String getShortC();
  public items.ChestStatelike getState();
  public items.ChestStatelike getClosedChest();
  public items.ChestStatelike getOpenedChest();
  public void removeItem(items.Item);
  public void setShortC(java.lang.String);
}
Compiled from "ChestStatelike.java"
public interface items.ChestStatelike {
  public abstract void openChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
  public abstract void closeChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "ClosedChest.java"
public class items.ClosedChest implements items.ChestStatelike {
  public items.ClosedChest();
  public void openChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
  public void closeChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "CompanionsRing.java"
public class items.CompanionsRing extends items.AbstractItemMovable {
  public items.CompanionsRing();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "CompanionsSword.java"
public class items.CompanionsSword extends items.AbstractWeapon {
  public items.CompanionsSword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "DiamondCompanionsSword.java"
public class items.DiamondCompanionsSword extends items.AbstractWeapon {
  public items.DiamondCompanionsSword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "DragonBody.java"
public class items.DragonBody extends items.ChestStateContext {
  public items.DragonBody();
}
Compiled from "DragonHead.java"
public class items.DragonHead extends items.AbstractItemMovable {
  public items.DragonHead();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "DustmansCairnKey.java"
public class items.DustmansCairnKey extends items.AbstractItemMovable {
  public items.DustmansCairnKey();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "FriedChicken.java"
public class items.FriedChicken extends items.AbstractItemMovable {
  public items.FriedChicken();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "GoalBook.java"
public class items.GoalBook extends items.AbstractItemMovable {
  public items.GoalBook(int);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
  public java.lang.String getGoal();
  public void setGoal(java.lang.String);
}
Compiled from "IronCompanionsSword.java"
public class items.IronCompanionsSword extends items.AbstractWeapon {
  public items.IronCompanionsSword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "Item.java"
public interface items.Item extends commands.Named {
  public abstract void setName(java.lang.String);
  public abstract void setDescription(java.lang.String);
  public abstract void setShortC(java.lang.String);
  public abstract java.lang.String toString();
  public abstract java.util.List<items.Item> getItems();
  public abstract commands.GameState use(commands.Game);
  public abstract void addItem(items.Item);
  public abstract void removeItem(items.Item);
}
Compiled from "Key.java"
public class items.Key extends items.AbstractItemMovable {
  public items.Key();
  public commands.GameState use(commands.Game);
  public java.util.List<items.Item> getItems();
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Lever.java"
public class items.Lever extends items.AbstractItemUseable {
  public items.Lever();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Moveable.java"
public interface items.Moveable extends items.Item {
  public abstract void setName(java.lang.String);
  public abstract void setDescription(java.lang.String);
  public abstract java.lang.String toString();
}
Compiled from "OpenedChest.java"
public class items.OpenedChest implements items.ChestStatelike {
  public items.OpenedChest();
  public void closeChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
  public void openChest(items.ChestChangeState, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "RottenApple.java"
public class items.RottenApple extends items.AbstractItemMovable {
  public items.RottenApple();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "RottenFriedChicken.java"
public class items.RottenFriedChicken extends items.AbstractItemMovable {
  public items.RottenFriedChicken();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Scroll.java"
public class items.Scroll extends items.AbstractItemMovable {
  public items.Scroll(int);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "ScrollOfSigning.java"
public class items.ScrollOfSigning extends items.AbstractItemMovable {
  public items.ScrollOfSigning();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Shield.java"
public class items.Shield extends items.AbstractWeapon {
  public items.Shield();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "SilverCompanionsSword.java"
public class items.SilverCompanionsSword extends items.AbstractWeapon {
  public items.SilverCompanionsSword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "SteelCompanionsSword.java"
public class items.SteelCompanionsSword extends items.AbstractWeapon {
  public items.SteelCompanionsSword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "Sword.java"
public class items.Sword extends items.AbstractWeapon {
  public items.Sword();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public java.util.List<items.Item> getItems();
  public void removeItem(items.Item);
}
Compiled from "TransformBackSpellBook.java"
public class items.TransformBackSpellBook extends items.AbstractItemMovable {
  public items.TransformBackSpellBook();
  public java.lang.String getSpell();
  public void setSpell(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "UnlockSpellBook.java"
public class items.UnlockSpellBook extends items.AbstractItemMovable {
  public items.UnlockSpellBook();
  public java.lang.String getSpell();
  public void setSpell(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "UnlockSpellBookMagic.java"
public class items.UnlockSpellBookMagic extends items.AbstractItemMovable {
  public items.UnlockSpellBookMagic();
  public java.lang.String getSpell();
  public void setSpell(java.lang.String);
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Useable.java"
public interface items.Useable extends items.Moveable {
}
Compiled from "WoodenSword.java"
public class items.WoodenSword extends items.AbstractItemMovable {
  public items.WoodenSword();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "WuuthradFragment.java"
public class items.WuuthradFragment extends items.AbstractItemMovable {
  public items.WuuthradFragment();
  public java.util.List<items.Item> getItems();
  public commands.GameState use(commands.Game);
  public void addItem(items.Item);
  public void removeItem(items.Item);
}
Compiled from "Cave.java"
public class rooms.Cave extends rooms.RoomImpl {
  public rooms.Cave(java.lang.String, java.lang.String);
  public void activate(commands.Game, rooms.Room);
}
Compiled from "LockedRoom.java"
public class rooms.LockedRoom extends rooms.RoomImpl {
  public rooms.LockedRoom(java.lang.String, java.lang.String);
  public void activate(commands.Game, rooms.Room);
}
Compiled from "MagicRoom.java"
public class rooms.MagicRoom extends rooms.RoomImpl {
  public rooms.MagicRoom(java.lang.String, java.lang.String);
  public void activate(commands.Game, rooms.Room);
}
Compiled from "NormalRoom.java"
public class rooms.NormalRoom extends rooms.RoomImpl {
  public rooms.NormalRoom(java.lang.String, java.lang.String);
  public void activate(commands.Game, rooms.Room);
}
Compiled from "Room.java"
public interface rooms.Room extends commands.Named {
  public abstract void addItem(items.Item);
  public abstract void addNpc(NPC.Npc);
  public abstract NPC.Npc getNpc(java.lang.String);
  public abstract java.util.List getNpcs();
  public abstract void removeNpcs(NPC.Npc);
  public abstract items.Item getItem(java.lang.String);
  public abstract java.util.List getItems();
  public abstract rooms.Room getEast();
  public abstract rooms.Room getNorth();
  public abstract rooms.Room getSouth();
  public abstract rooms.Room getWest();
  public abstract void removeItem(items.Item);
  public abstract void setDescription(java.lang.String);
  public abstract void setExits(rooms.Room, rooms.Room, rooms.Room, rooms.Room);
  public abstract void show();
  public abstract void activate(commands.Game, rooms.Room);
  public abstract void setNorth(rooms.Room);
  public abstract void setSouth(rooms.Room);
  public abstract void setEast(rooms.Room);
  public abstract void setWest(rooms.Room);
  public abstract void setSecretExit(commands.Game, rooms.Room);
  public abstract rooms.Room getSecretExit();
}
Compiled from "RoomImpl.java"
public abstract class rooms.RoomImpl implements rooms.Room {
  public rooms.RoomImpl(java.lang.String, java.lang.String);
  public void addItem(items.Item);
  public items.Item getItem(java.lang.String);
  public java.util.List getItems();
  public void removeItem(items.Item);
  public void setDescription(java.lang.String);
  public void setExits(rooms.Room, rooms.Room, rooms.Room, rooms.Room);
  public void show();
  public java.lang.String getName();
  public java.lang.String getDescription();
  public void setNorth(rooms.Room);
  public void setSouth(rooms.Room);
  public void setEast(rooms.Room);
  public void setWest(rooms.Room);
  public void setName(java.lang.String);
  public java.lang.String getDescr();
  public void setDescr(java.lang.String);
  public int getCounter();
  public void setCounter(int);
  public rooms.Room getNorth();
  public rooms.Room getSouth();
  public rooms.Room getEast();
  public rooms.Room getWest();
  public java.lang.String getShortC();
  public void addNpc(NPC.Npc);
  public NPC.Npc getNpc(java.lang.String);
  public java.util.List getNpcs();
  public void removeNpcs(NPC.Npc);
  public void activate(commands.Game, rooms.Room);
  public void setSecretExit(commands.Game, rooms.Room);
  public rooms.Room getSecretExit();
}
