Compiled from "Citizen.java"
public class edu.clients.Citizen implements edu.clients.DocumentCreator,edu.communications.Emailable {
  public edu.clients.Citizen();
  public edu.clients.Citizen(edu.clients.FullName);
  public edu.clients.Citizen(java.lang.String, java.lang.String, java.lang.String);
  public void addRequest(edu.services.docs.IncomingDocument);
  public java.util.ArrayList<edu.services.docs.IncomingDocument> getRequests();
  public java.lang.String getRequestsString();
  public edu.clients.FullName getFullName();
  public java.lang.String getFullNameString();
  public java.lang.String getEmailAddress();
  public void setEmailAddress(java.lang.String);
  public edu.communications.Address getAddress();
  public java.lang.String getAddressString();
  public void setAddress(edu.communications.Address);
  public long getId();
  public java.lang.String getName();
  public java.lang.String getOfficialId();
  public void setOfficialId(java.lang.String);
  public java.util.ArrayList<edu.services.docs.OutcomingDocument> getResponses();
  public java.lang.String getResponsesString();
  public void addResponse(edu.services.docs.OutcomingDocument);
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public long getCitizenId();
  public int compareTo(edu.clients.Citizen);
  public boolean isRequesterOfficialIdValid(edu.services.orgs.OfficialIDsHolder);
}
Compiled from "CitizenFieldsTest.java"
public class edu.clients.CitizenFieldsTest {
  edu.clients.Citizen citizen;
  public edu.clients.CitizenFieldsTest();
  public void createCitizen();
  public void GetFullNameTest() throws java.lang.Exception;
  public void testGetFullNameString() throws java.lang.Exception;
  public void testGetEmailAddress() throws java.lang.Exception;
  public void testGetEmailAddressNull() throws java.lang.Exception;
  public void testSetEmailAddress() throws java.lang.Exception;
  public void testGetAddress_whenNull() throws java.lang.Exception;
  public void testGetAddress() throws java.lang.Exception;
  public void testGetAddressString() throws java.lang.Exception;
  public void shouldSetAddress() throws java.lang.Exception;
  public void shoundGetOfficialIdWhenNull() throws java.lang.Exception;
  public void shouldGetOfficialId() throws java.lang.Exception;
  public void shouldGetName() throws java.lang.Exception;
  public void ShouldGetNameWhenItIsNull() throws java.lang.Exception;
  public void shouldSetOfficialId() throws java.lang.Exception;
  public void shouldGetOfficialIdWhenItNotDefined() throws java.lang.Exception;
  public void shouldToString() throws java.lang.Exception;
  public void shouldToStringWhenNoNameDefined() throws java.lang.Exception;
}
Compiled from "CitizenRequestsTest.java"
public class edu.clients.CitizenRequestsTest extends edu.clients.CitizenTestsBasics {
  edu.services.docs.IncomingDocument infoRequest;
  public edu.clients.CitizenRequestsTest();
  public void createInfoReqDocType_Citizen_PubService();
  public void shouldBeTwoRequestsWhenFirstAddRequestSeparatelyOfConstructor() throws java.lang.Exception;
  public void shouldIncreaseRequestsNumberWhenAddRequest() throws java.lang.Exception;
  public void shouldBeNotEmptyStringWhenGetRequestsString() throws java.lang.Exception;
  public void shouldGetNotEmptyStringWhenGetTextOfRequest() throws java.lang.Exception;
  public void shouldGetValidityString() throws java.lang.Exception;
  public void shouldGetNotEmptyStringWhenGetRequestsString() throws java.lang.Exception;
  public void shouldGetCitizenId() throws java.lang.Exception;
}
Compiled from "CitizenResponsesTest.java"
public class edu.clients.CitizenResponsesTest extends edu.clients.CitizenTestsBasics {
  edu.services.docs.OutcomingDocument outcomingDocument;
  public edu.clients.CitizenResponsesTest();
  public void createInfoReqDocType_Citizen_PubService();
  public void shouldGetResponses() throws java.lang.Exception;
  public void shouldGetValidityString() throws java.lang.Exception;
  public void shouldResponseText() throws java.lang.Exception;
  public void shouldGetResponsesString() throws java.lang.Exception;
  public void shouldAddResponse() throws java.lang.Exception;
}
Compiled from "CitizenTestsBasics.java"
public class edu.clients.CitizenTestsBasics {
  edu.clients.Citizen citizen;
  edu.services.orgs.PublicService publicService;
  public edu.clients.CitizenTestsBasics();
  public void initCitizenAndPublicService();
  public void shouldBeNotNullCitizenWhenConstructed();
  public void shouldBeNotNullPublicServiceWhenConstructed();
}
Compiled from "ClientsDefaults.java"
public class edu.clients.ClientsDefaults {
  public static final java.lang.String NO_ADDRESS;
  public static final java.lang.String NO_REQUESTS;
  public static final java.lang.String REQUESTS_ARRAY_IS_NULL;
  public edu.clients.ClientsDefaults();
}
Compiled from "DocumentCreator.java"
public interface edu.clients.DocumentCreator extends edu.communications.Emailable {
  public abstract long getId();
  public abstract void setOfficialId(java.lang.String);
  public abstract java.lang.String getOfficialId();
  public abstract java.lang.String getName();
  public abstract java.lang.String getFullNameString();
  public abstract void addRequest(edu.services.docs.IncomingDocument);
  public abstract java.lang.String getRequestsString();
  public abstract void addResponse(edu.services.docs.OutcomingDocument);
  public abstract java.lang.String getResponsesString();
  public abstract edu.communications.Address getAddress();
  public abstract java.lang.String getAddressString();
  public abstract void setAddress(edu.communications.Address);
  public abstract boolean isRequesterOfficialIdValid(edu.services.orgs.OfficialIDsHolder);
}
Compiled from "DocumentCreatorTest.java"
public class edu.clients.DocumentCreatorTest {
  edu.clients.DocumentCreator documentCreator;
  public edu.clients.DocumentCreatorTest();
  public void shouldReturnTrue_WhenInvokedIsRequesterOfficialIdValid() throws java.lang.Exception;
}
Compiled from "FullName.java"
public class edu.clients.FullName {
  public edu.clients.FullName(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String getName();
}
Compiled from "FullNameTest.java"
public class edu.clients.FullNameTest {
  public edu.clients.FullNameTest();
  public void shouldToString() throws java.lang.Exception;
  public void shouldToStringWhenEmptyValues() throws java.lang.Exception;
  public void shouldFullNameConstructor() throws java.lang.Exception;
}
Compiled from "SearchableCitizen.java"
public class edu.clients.SearchableCitizen extends edu.clients.Citizen {
  public edu.clients.SearchableCitizen(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String getHobbies();
  public void setHobbies(java.lang.String);
  public java.util.HashSet<java.lang.String> splitToWords(java.lang.String);
}
Compiled from "Address.java"
public class edu.communications.Address {
  java.lang.String apartment;
  java.lang.String building;
  java.lang.String street;
  java.lang.String cityArea;
  java.lang.String city;
  java.lang.String region;
  java.lang.String country;
  java.lang.String zipCode;
  public edu.communications.Address();
  public java.lang.String toString();
  public void setApartment(java.lang.String);
  public void setBuilding(java.lang.String);
  public void setStreet(java.lang.String);
  public void setCityArea(java.lang.String);
  public void setCity(java.lang.String);
  public void setRegion(java.lang.String);
  public void setCountry(java.lang.String);
  public void setZipCode(java.lang.String);
  public java.lang.String getCityArea();
  public java.lang.String getRegion();
  public boolean equals(java.lang.Object);
  public int hashCode();
}
Compiled from "AddressTest.java"
public class edu.communications.AddressTest {
  java.lang.String apartment;
  java.lang.String building;
  java.lang.String street;
  java.lang.String cityArea;
  java.lang.String city;
  java.lang.String region;
  java.lang.String country;
  java.lang.String zipCode;
  edu.communications.Address citizenAddress;
  public edu.communications.AddressTest();
  public void setUp() throws java.lang.Exception;
  public void shouldToString() throws java.lang.Exception;
  public void shouldSetRegionTest() throws java.lang.Exception;
  public void shouldSetCityArea() throws java.lang.Exception;
}
Compiled from "EmailSender.java"
public interface edu.communications.EmailSender {
  public abstract boolean sendEmail(edu.services.docs.Email);
}
Compiled from "Emailable.java"
public interface edu.communications.Emailable {
  public abstract java.lang.String getEmailAddress();
  public abstract void setEmailAddress(java.lang.String);
}
Compiled from "AccessModifiersTests.java"
public class edu.sandbox.AccessModifiersTests {
  public edu.sandbox.AccessModifiersTests();
  public static void main(java.lang.String[]);
}
Compiled from "EqualsAndHashCode.java"
public class edu.sandbox.EqualsAndHashCode {
  int intVal;
  java.lang.String stringVal;
  edu.communications.Address address;
  public edu.sandbox.EqualsAndHashCode();
  public edu.sandbox.EqualsAndHashCode(int, java.lang.String, edu.communications.Address);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public int getIntVal();
  public void setIntVal(int);
  public java.lang.String getStringVal();
  public void setStringVal(java.lang.String);
  public edu.communications.Address getAddress();
  public void setAddress(edu.communications.Address);
}
Compiled from "EqualsTests.java"
public class edu.sandbox.EqualsTests {
  edu.sandbox.EqualsAndHashCode instance;
  edu.sandbox.EqualsAndHashCode equalInstance;
  edu.communications.Address address;
  public edu.sandbox.EqualsTests();
  public void initObjects();
  public void shouldBeReflective();
  public void shouldBeSymmetric();
  public void shouldBeTransitive();
  public synchronized void shouldBeConsistent() throws java.lang.InterruptedException;
  public void shouldBeFalseWhenNull();
  public void shouldBeTrueWhenSameAddress();
  public void shouldBeFalseWhenAddressDiffers();
}
Compiled from "ImmutableObject.java"
public final class edu.sandbox.ImmutableObject implements java.lang.Cloneable {
  public edu.sandbox.ImmutableObject(int, java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.StringBuffer>);
  public final int getAnInt();
  public final java.util.ArrayList<java.lang.String> getStrings();
  public final java.util.ArrayList<java.lang.StringBuffer> getStringBuffers();
  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
  public edu.sandbox.ImmutableObject deepCopy() throws java.lang.CloneNotSupportedException;
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public static void main(java.lang.String[]);
}
Compiled from "ParentClass.java"
public class edu.sandbox.accessmodifiers.ParentClass {
  int packageInt;
  protected int protectedInt;
  public int publicInt;
  public edu.sandbox.accessmodifiers.ParentClass();
  protected int getPackageInt();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SamePackageClass.java"
public class edu.sandbox.accessmodifiers.SamePackageClass {
  public edu.sandbox.accessmodifiers.SamePackageClass();
  public static void printParentClassFields();
}
Compiled from "ChildClass.java"
public class edu.sandbox.accessmodifiers.subpackage.ChildClass extends edu.sandbox.accessmodifiers.ParentClass {
  public edu.sandbox.accessmodifiers.subpackage.ChildClass();
  public java.lang.String toString();
}
Compiled from "CollectionsTests.java"
public class edu.sandbox.collectionsandthreads.CollectionsTests {
  static final int COUNT;
  static long lStartTime;
  static long lFinishTime;
  static edu.sandbox.collectionsandthreads.SynchroHTML synchroHTMLFile;
  static final java.lang.String outHTMLFilePath;
  public static final int MAX_ITERATIONS;
  public edu.sandbox.collectionsandthreads.CollectionsTests();
  public static void main(java.lang.String[]);
  static void hashMapTests();
  static void treeTreadsToStackHTMLDemo();
  static java.lang.Thread startThread(int, edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack);
  static void interruptThread(java.lang.Thread);
  void collectionsAddGetRemoveTests();
  void equalsTests();
  static void arrayStackTests(int, edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack);
  static void addHeaderToHTMLFile(edu.sandbox.collectionsandthreads.SynchroHTML);
  static void addFooterToHTMLFile(edu.sandbox.collectionsandthreads.SynchroHTML);
  static java.lang.Thread startHTMLThread(int, edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack, edu.sandbox.collectionsandthreads.SynchroHTML);
  static synchronized java.lang.String HTMLString(java.lang.String, java.lang.String);
  static void HTMLArrayStackTests(int, edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack, edu.sandbox.collectionsandthreads.SynchroHTML);
}
Compiled from "CollectionsTests.java"
final class edu.sandbox.collectionsandthreads.CollectionsTests$1 implements java.lang.Runnable {
  final int val$i;
  final edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack val$arrayStack;
  edu.sandbox.collectionsandthreads.CollectionsTests$1(int, edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack);
  public void run();
}
Compiled from "CollectionsTests.java"
final class edu.sandbox.collectionsandthreads.CollectionsTests$2 implements java.lang.Runnable {
  final int val$i;
  final edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack val$arrayStack;
  final edu.sandbox.collectionsandthreads.SynchroHTML val$synchroHTMLFile;
  edu.sandbox.collectionsandthreads.CollectionsTests$2(int, edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack, edu.sandbox.collectionsandthreads.SynchroHTML);
  public void run();
}
Compiled from "CollectionsTests.java"
class edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack implements edu.sandbox.collectionsandthreads.CollectionsTests$Stack {
  public edu.sandbox.collectionsandthreads.CollectionsTests$ArrayStack();
  public synchronized void push(int);
  public synchronized int pop();
  public synchronized boolean isEmpty();
  public synchronized int getIndex();
  public synchronized java.lang.String toString();
}
Compiled from "CollectionsTests.java"
class edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack implements edu.sandbox.collectionsandthreads.CollectionsTests$HTMLStack {
  public edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack();
  public synchronized void push(java.lang.String);
  public synchronized java.lang.String pop();
  public synchronized boolean isEmpty();
  public synchronized int getIndex();
  public synchronized java.lang.String toString();
}
Compiled from "CollectionsTests.java"
interface edu.sandbox.collectionsandthreads.CollectionsTests$HTMLStack {
  public abstract void push(java.lang.String);
  public abstract java.lang.String pop();
  public abstract boolean isEmpty();
}
Compiled from "CollectionsTests.java"
public class edu.sandbox.collectionsandthreads.CollectionsTests$HTMLThread extends java.lang.Thread {
  edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack arrayStack;
  int threadNumber;
  public edu.sandbox.collectionsandthreads.CollectionsTests$HTMLThread(int, edu.sandbox.collectionsandthreads.CollectionsTests$HTMLArrayStack, edu.sandbox.collectionsandthreads.SynchroHTML);
  public void run();
}
Compiled from "CollectionsTests.java"
interface edu.sandbox.collectionsandthreads.CollectionsTests$Stack {
  public abstract void push(int);
  public abstract int pop();
  public abstract boolean isEmpty();
}
Compiled from "CollectionsTests.java"
public class edu.sandbox.collectionsandthreads.CollectionsTests$StringsList extends java.util.ArrayList<java.lang.String> {
  int count;
  public edu.sandbox.collectionsandthreads.CollectionsTests$StringsList();
  public boolean add(java.lang.String);
  public boolean equals(java.lang.Object);
  public boolean add(java.lang.Object);
}
Compiled from "CollectionsTests.java"
public class edu.sandbox.collectionsandthreads.CollectionsTests$Synchro {
  public edu.sandbox.collectionsandthreads.CollectionsTests$Synchro(java.lang.String) throws java.io.IOException;
  public void close();
  public synchronized void writing(java.lang.String, int);
}
Compiled from "SynchroHTML.java"
public class edu.sandbox.collectionsandthreads.SynchroHTML {
  public edu.sandbox.collectionsandthreads.SynchroHTML(java.lang.String) throws java.io.IOException;
  public void close();
  public synchronized void writingHTML(java.lang.String, int);
}
Compiled from "Account.java"
public class edu.sandbox.concurrency.Account {
  public edu.sandbox.concurrency.Account(int);
  public void withdraw(int);
  public void deposit(int);
  public int getBalance();
  public java.util.concurrent.locks.Lock getLock();
}
Compiled from "CallableAndFutureTask.java"
public class edu.sandbox.concurrency.CallableAndFutureTask implements java.util.concurrent.Callable<java.lang.Integer> {
  int step;
  public edu.sandbox.concurrency.CallableAndFutureTask(int);
  public java.lang.Integer call();
  public static void main(java.lang.String[]);
  public java.lang.Object call() throws java.lang.Exception;
}
Compiled from "Operation.java"
public class edu.sandbox.concurrency.Operation {
  public edu.sandbox.concurrency.Operation();
  public static void main(java.lang.String[]);
  static void transfer(edu.sandbox.concurrency.Account, edu.sandbox.concurrency.Account, int) throws javax.naming.InsufficientResourcesException;
}
Compiled from "Operation.java"
final class edu.sandbox.concurrency.Operation$1 implements java.lang.Runnable {
  final edu.sandbox.concurrency.Account val$a;
  final edu.sandbox.concurrency.Account val$b;
  edu.sandbox.concurrency.Operation$1(edu.sandbox.concurrency.Account, edu.sandbox.concurrency.Account);
  public void run();
}
Compiled from "HobbieSearchEngine.java"
public class edu.sandbox.peoplecooperation.HobbieSearchEngine extends edu.sandbox.peoplecooperation.SearchEngine {
  java.util.List<edu.clients.SearchableCitizen> citizensToSearch;
  public edu.sandbox.peoplecooperation.HobbieSearchEngine(java.util.List<edu.clients.SearchableCitizen>);
  public edu.sandbox.peoplecooperation.SearchResults findByHobbie(edu.clients.SearchableCitizen);
}
Compiled from "PeopleCooperationAppTests.java"
public class edu.sandbox.peoplecooperation.PeopleCooperationAppTests {
  public edu.sandbox.peoplecooperation.PeopleCooperationAppTests();
  public void SearchResultsMustExcludeTheSearchedCitizen();
  public void MustFindPersonWithSameHobbie();
  public void MustFindPersonWithSameOneOfSeveralHobbies();
  public void MustNotFindPersonWithNoSameOneOfSeveralHobbies();
  public void MustRateSearchResultsInRightWay();
}
Compiled from "SearchEngine.java"
public abstract class edu.sandbox.peoplecooperation.SearchEngine {
  public edu.sandbox.peoplecooperation.SearchEngine();
  public abstract edu.sandbox.peoplecooperation.SearchResults findByHobbie(edu.clients.SearchableCitizen);
}
Compiled from "SearchResultItem.java"
public class edu.sandbox.peoplecooperation.SearchResultItem {
  public edu.sandbox.peoplecooperation.SearchResultItem();
  public edu.clients.SearchableCitizen getFoundCitizen();
  public void setFoundCitizen(edu.clients.SearchableCitizen);
  public int getSameHobbiesCount();
  public void setSameHobbiesCount(int);
  public java.lang.String toString();
}
Compiled from "SearchResults.java"
public class edu.sandbox.peoplecooperation.SearchResults {
  public edu.sandbox.peoplecooperation.SearchResults();
  public boolean containsCitizen(edu.clients.SearchableCitizen);
  public void add(edu.sandbox.peoplecooperation.SearchResultItem);
  public void setFinalized();
  public java.lang.String toString();
  public edu.sandbox.peoplecooperation.SearchResultItem get(int);
  public void sortByHobbiesCount();
}
Compiled from "SearchResults.java"
public class edu.sandbox.peoplecooperation.SearchResults$SortedByHobbiesCount implements java.util.Comparator<edu.sandbox.peoplecooperation.SearchResultItem> {
  public edu.sandbox.peoplecooperation.SearchResults$SortedByHobbiesCount();
  public int compare(edu.sandbox.peoplecooperation.SearchResultItem, edu.sandbox.peoplecooperation.SearchResultItem);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "PublicServiceDemo.java"
public class edu.services.PublicServiceDemo {
  static int statusNumber;
  static edu.services.execution.ExecutionEnvironment testEnvironment;
  public edu.services.PublicServiceDemo();
  public static void main(java.lang.String[]);
  public static edu.services.docs.OutcomingDocument createOutcomingDocument(edu.services.docs.DocumentType, edu.services.orgs.PublicService, edu.services.docs.InformationRequest, edu.services.servants.InformationResponsible);
  public static edu.services.orgs.PublicService createValidPublicService(edu.services.execution.ExecutionEnvironment);
  public static edu.clients.DocumentCreator createValidCitizenRequester();
  public static edu.services.docs.InformationRequest createTestInformationRequest();
  public static edu.services.docs.InformationRequest createInformationRequest(edu.services.docs.DocumentType, edu.clients.DocumentCreator, edu.services.orgs.PublicService);
  public static edu.services.orgs.PublicService createPublicService(edu.services.execution.ExecutionEnvironment);
  public static edu.communications.Address createPubServiceAddress();
  public static edu.clients.DocumentCreator createRequesterCitizen();
  public static edu.communications.Address createCitizenAddress();
  public static edu.services.docs.DocumentType createOutcomingDocType();
  public static edu.services.docs.DocumentType createInfoRequestDocType();
  public static edu.services.docs.DocumentLifecycle createLinearLifecycleFinalized(java.lang.String...);
  public static java.util.Map<java.lang.String, edu.services.orgs.PublicServiceDepartment> createDocsToDepartmentsDispatchingTable(edu.services.orgs.PublicServiceDepartment...);
  static void printStatusAndAssignee(edu.services.docs.OrganizationDocument, java.lang.String);
  public static void setupEnvironment(edu.services.execution.ExecutionEnvironment);
  static {};
}
Compiled from "DocDefaults.java"
public class edu.services.docs.DocDefaults {
  public static final java.lang.String NONE;
  public static final java.lang.String VALID;
  public static final java.lang.String DOC_NAME_IS_NULL;
  public static final java.lang.String DOC_NAME_IS_EMPTY;
  public static final java.lang.String DOC_ID_SUBZERO;
  public static final java.lang.String DOC_CREATION_DATE_IS_NULL;
  public static final java.lang.String DOC_CREATION_DATE_NOT_AFTER_2014_0_0;
  public static final java.lang.String DOC_CREATION_DATE_IS_NOT_BEFORE_NOW;
  public static final java.lang.String DOC_TYPE_IS_NULL;
  public static final java.lang.String DOC_TYPE_IS_NULL_ORZERO_LENGTH;
  public static final java.lang.String DOC_STATUS_IS_NULL;
  public static final java.lang.String DOC_ORG_ID_IS_SUBZERO;
  public static final java.lang.String DOC_AUTHOR_IS_NULL;
  public static final java.lang.String DOC_AUTHOR_IDS_ARE_DIFFERENT;
  public static final java.lang.String DOC_AUTHOR_ID_IS_SUBZERO;
  public static final java.lang.String NO_NAME;
  public static final java.lang.String NO_SECOND_NAME;
  public static final java.lang.String NO_SURNAME;
  public static final java.lang.String COMMA_SPACE;
  public static final java.lang.String COMMA_STREET;
  public static final java.lang.String COMMA_BUILDING;
  public static final java.lang.String COMMA_APPARTMENT;
  public static final java.lang.String EMAIL_IS_SENT;
  public static final java.lang.String DOC_IS_FINALIZED;
  public static final java.lang.String DOC_NOT_SENT_VIA_EMAIL;
  public static final java.lang.String LIFECYCLE_IN_USE_OR_FINALIZED;
  public edu.services.docs.DocDefaults();
}
Compiled from "DocsTestsBasics.java"
public class edu.services.docs.DocsTestsBasics {
  edu.clients.DocumentCreator documentCreator;
  edu.services.docs.DocumentType infoRequestDocType;
  edu.services.orgs.PublicService publicService;
  edu.services.orgs.PublicServiceDepartment infoRequestsDep;
  edu.services.servants.InformationResponsible informationResponsibleServant;
  public edu.services.docs.DocsTestsBasics();
  public void shouldBeAssignedNotNullDocumentLifecycle();
}
Compiled from "DocumentLifecycle.java"
public class edu.services.docs.DocumentLifecycle extends java.util.ArrayList<java.lang.String> {
  public edu.services.docs.DocumentLifecycle(java.lang.String[]);
  public int getNextStatusIndex(int);
  public int getStartStatusIndex();
  public void setStartStatusIndex(int);
  public void setFinalStatusIndex(int);
  public boolean isInUse();
  public void setInUse(boolean);
  public boolean isFinalized();
  public void setFinalized(boolean);
  public void trimToSize();
  public java.lang.String set(int, java.lang.String);
  protected void removeRange(int, int);
  public void ensureCapacity(int);
  public boolean add(java.lang.String);
  public void add(int, java.lang.String);
  public java.lang.String remove(int);
  public boolean remove(java.lang.Object);
  public void clear();
  public boolean addAll(java.util.Collection<? extends java.lang.String>);
  public boolean addAll(int, java.util.Collection<? extends java.lang.String>);
  public boolean removeAll(java.util.Collection<?>);
  public boolean retainAll(java.util.Collection<?>);
  public java.lang.Object remove(int);
  public void add(int, java.lang.Object);
  public boolean add(java.lang.Object);
  public java.lang.Object set(int, java.lang.Object);
}
Compiled from "DocumentLifecycleTest.java"
public class edu.services.docs.DocumentLifecycleTest {
  edu.services.docs.DocumentLifecycle infoRequestLifecycle;
  public edu.services.docs.DocumentLifecycleTest();
  public void createLinearLifecycleFinalized();
  public void shouldExceptionWhenInUseAndTryingToSetSomething();
  public void shouldReturnTrueWhenIsInUse() throws java.lang.Exception;
  public void shouldReturnTrueWhenIsFinalized() throws java.lang.Exception;
  public void shouldReturnFalseWhenNotFinalized() throws java.lang.Exception;
}
Compiled from "DocumentStatus.java"
public class edu.services.docs.DocumentStatus {
  public edu.services.docs.DocumentStatus(edu.services.docs.DocumentLifecycle);
  public java.lang.String getCurrentDocumentStatus();
  public java.util.GregorianCalendar getZeroStatusDate();
  public void setNextDocumentStatus();
  public void setPreviousDocumentStatus();
  public java.lang.String getDocumentStatusesHistoryString();
}
Compiled from "DocumentType.java"
public class edu.services.docs.DocumentType {
  boolean isDocTypeInUse;
  boolean isFinalized;
  public edu.services.docs.DocumentType(java.lang.String, java.lang.String, edu.services.docs.DocumentLifecycle);
  public java.lang.String getDocTypeName();
  public void setDocTypeName(java.lang.String);
  public java.lang.String getDocTypeShortName();
  public void setDocTypeShortName(java.lang.String);
  public edu.services.docs.DocumentLifecycle getDocumentLifecycle();
  public void setDocumentLifecycle(edu.services.docs.DocumentLifecycle);
  public void setDocTypeInUse(boolean);
  public boolean isFinalized();
  public void setFinalized(boolean);
}
Compiled from "Email.java"
public final class edu.services.docs.Email extends edu.services.docs.Text {
  public edu.services.docs.Email(java.lang.String, java.lang.String, java.lang.String);
  public void sendEmail();
  public java.lang.String getEmailFromAddress();
  public void setEmailFromAddress(java.lang.String);
  public java.lang.String getEmailToAddresses();
  public void setEmailToAddresses(java.lang.String);
  public java.lang.String getEmailCCAddresses();
  public void setEmailCCAddresses(java.lang.String);
  public java.lang.String getEmailBCCAddresses();
  public void setEmailBCCAddresses(java.lang.String);
  public java.lang.String getText();
  public void setText(java.lang.String);
  public java.util.GregorianCalendar getEmailSentDate();
  public edu.communications.EmailSender getEmailSender();
  public void setEmailSender(edu.communications.EmailSender);
}
Compiled from "EmailTest.java"
public class edu.services.docs.EmailTest {
  edu.services.docs.Email email;
  public edu.services.docs.EmailTest();
  public void createEmail();
  public void shouldEmailSentDateWhenSendEmail() throws java.lang.Exception;
  public void shouldIsFinalizedWhenSendEmail() throws java.lang.Exception;
  public void shouldSetEmailCCAddresses() throws java.lang.Exception;
  public void shouldSetEmailBCCAddresses() throws java.lang.Exception;
  public void shouldGetEmailSentDateAfterSending() throws java.lang.Exception;
  public void shouldSetFinalized() throws java.lang.Exception;
  public void shouldGetEmailFromAddressWhenSetFinalized() throws java.lang.Exception;
  public void shouldSendEmailThrougEmailService() throws java.lang.Exception;
}
Compiled from "IncomingDocument.java"
public class edu.services.docs.IncomingDocument extends edu.services.docs.OrganizationDocument {
  public edu.services.docs.IncomingDocument(edu.services.docs.DocumentType, edu.clients.DocumentCreator, edu.services.orgs.PublicService);
  public java.lang.String getValidityString();
  public edu.services.servants.PublicServant getIncomingDocResponsible();
  public java.lang.String getIncomingDocResponsibleName();
  public void setIncomingDocResponsible(edu.services.servants.PublicServant);
  public edu.services.docs.OrganizationDocument getReactionDocument();
  public void setReactionDocument(edu.services.docs.OrganizationDocument);
  public boolean isReceivedByPublicService();
  public void setReceivedByPublicService(boolean);
  public void setText(java.lang.String);
  public java.lang.String getReactionDocumentNumber();
  public java.lang.String toString();
}
Compiled from "InformationRequest.java"
public final class edu.services.docs.InformationRequest extends edu.services.docs.IncomingDocument {
  public edu.services.docs.InformationRequest(edu.services.docs.DocumentType, edu.clients.DocumentCreator, edu.services.orgs.PublicService);
  public java.lang.String getValidityString();
  public java.lang.String getAddressForReply();
  public void setAddressForReply(java.lang.String);
  public java.lang.String getEmailForReply();
  public void setEmailForReply(java.lang.String);
  public boolean isToSendReplyToPostAddress();
  public void setToSendReplyToPostAddress(boolean);
  public boolean isToSendReplyToEmail();
  public void setToSendReplyToEmail(boolean);
  public java.lang.String toString();
}
Compiled from "OrganizationDocument.java"
public class edu.services.docs.OrganizationDocument extends edu.services.docs.Text {
  public edu.services.docs.OrganizationDocument();
  public edu.services.docs.OrganizationDocument(edu.services.docs.DocumentType, edu.clients.DocumentCreator, edu.services.orgs.PublicService);
  public java.lang.String getValidityString();
  public long getDocumentId();
  public java.lang.String getDocumentName();
  public void setDocumentName(java.lang.String);
  public long getDocumentAuthorId();
  public void setDocumentAuthorId(long);
  public java.util.GregorianCalendar getDocumentCreationDate();
  public void setDocumentCreationDate(java.util.GregorianCalendar);
  public edu.services.docs.DocumentType getDocumentType();
  public java.lang.String getDocumentNumber();
  public void setDocumentNumber(java.lang.String);
  public edu.services.docs.DocumentStatus getDocumentStatus();
  public java.lang.String getDocumentStatusString();
  public void setNextDocumentStatus();
  public void setPreviousDocumentStatus();
  public java.lang.String getStatusesHistoryString();
  public long getOrgId();
  public java.lang.String getText();
  public void setText(java.lang.String);
  public java.lang.String toString();
  public java.lang.String getDocumentTypeName();
  public edu.clients.DocumentCreator getAuthor();
  public java.lang.String getAuthorName();
  public edu.services.orgs.PublicServiceDepartment getCurrentPublicServiceDepartment();
  public void setCurrentPublicServiceDepartment(edu.services.orgs.PublicServiceDepartment);
}
Compiled from "OrganizationDocumentTest.java"
public class edu.services.docs.OrganizationDocumentTest extends edu.services.docs.DocsTestsBasics {
  public edu.services.docs.OrganizationDocumentTest();
  public void shouldGetDocumentCreationDate() throws java.lang.Exception;
}
Compiled from "OutcomingDocument.java"
public class edu.services.docs.OutcomingDocument extends edu.services.docs.OrganizationDocument {
  public java.lang.String getValidityString();
  public void setDocSentEmail(edu.services.docs.Email);
  public java.util.GregorianCalendar getDocSentEmailDate();
  public java.lang.String getDocSentEmailAddress();
  public void setDocSentAddress(edu.communications.Address);
  public edu.communications.Address getDocSentAddress();
  public java.util.GregorianCalendar getDocSentAddressDate();
  public void setDocSentAddressDate(java.util.GregorianCalendar);
  public edu.services.docs.OutcomingDocument(edu.services.docs.DocumentType, edu.services.servants.PublicServant, edu.services.orgs.PublicService);
  public void publishToRequester(edu.clients.DocumentCreator);
  public long getInitiatingDocId();
  public edu.services.docs.OrganizationDocument getInitiatingDocument();
  public void setInitiatingDocument(edu.services.docs.OrganizationDocument);
  public java.lang.String getInitiatingDocumentNumber();
  public java.lang.String toString();
  public boolean isSentViaPost();
  public void setSentViaPost(boolean);
  public boolean isEmailed();
  public void setEmailed(boolean);
}
Compiled from "OutcomingDocumentTest.java"
public class edu.services.docs.OutcomingDocumentTest extends edu.services.docs.DocsTestsBasics {
  edu.services.docs.IncomingDocument incomingDoc;
  edu.services.docs.OutcomingDocument outcomingDoc;
  public edu.services.docs.OutcomingDocumentTest();
  public void createDocsForTests();
  public void shouldGetInitiatingDocIdAppropriateValue() throws java.lang.Exception;
  public void shouldGetInitiatingDocumentSameObject() throws java.lang.Exception;
}
Compiled from "Text.java"
public abstract class edu.services.docs.Text {
  java.lang.String text;
  boolean isFinalized;
  public edu.services.docs.Text();
  public abstract java.lang.String getText();
  public abstract void setText(java.lang.String);
  public boolean isFinalized();
  public void setFinalized(boolean);
}
Compiled from "DepartmentsTasksDispatcher.java"
public class edu.services.execution.DepartmentsTasksDispatcher {
  public edu.services.execution.DepartmentsTasksDispatcher(edu.services.orgs.PublicService);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public edu.services.orgs.PublicService getPublicService();
  public java.util.Map<java.lang.String, edu.services.orgs.PublicServiceDepartment> getDocsToDepartmentsDispatchingTable();
  public void setDocsToDepartmentsDispatchingTable(java.util.Map<java.lang.String, edu.services.orgs.PublicServiceDepartment>);
}
Compiled from "DepartmentsTasksDispatcherTest.java"
public class edu.services.execution.DepartmentsTasksDispatcherTest {
  public edu.services.execution.DepartmentsTasksDispatcherTest();
  public void createInstances();
  public void testSetDocsDispatchingTable() throws java.lang.Exception;
  public void testAddDocumentToProcess() throws java.lang.Exception;
  public void testGetPublicService() throws java.lang.Exception;
}
Compiled from "ExecutionDefaults.java"
public class edu.services.execution.ExecutionDefaults {
  public static final java.lang.String DOCS_DISPATCHING_TABLE_IS_EMPTY;
  public static final java.lang.String NO_DOCS_DISPATCHING_TABLE;
  public static final short MAX_SERVANTS_PER_DEP;
  public static final short REQUESTER_OFFICIAL_ID_LENGTH;
  public static final java.lang.String REQUESTER_OFFICIAL_ID_IS_INVALID;
  public static final java.lang.String DEP_IS_NULL;
  public static final java.lang.String DEPS_DISPATCHING_TABLE_IS_EMPTY;
  public static final java.lang.String NO_DEPS_DISPATCHING_TABLE;
  public static final java.lang.String OUTCOMING_DOC_NAME;
  public static final java.lang.String ENVIRONMENT_IS_NULL;
  public static final java.lang.String DEPARTMENT_IS_NULL;
  public static final java.lang.String EMAIL_WAS_NOT_SENT;
  public static final java.lang.String EMAIL_SENDER_IS_NOT_SET;
  public edu.services.execution.ExecutionDefaults();
}
Compiled from "ExecutionEnvironment.java"
public class edu.services.execution.ExecutionEnvironment {
  edu.services.orgs.PublicService publicService;
  edu.services.orgs.PublicServiceDepartment infoRequestsDepartment;
  public edu.services.execution.ExecutionEnvironment();
  public edu.communications.EmailSender getEmailSender();
  public void setEmailSender(edu.communications.EmailSender);
  public edu.services.docs.DocumentType getInfoRequestDocType();
  public void setInfoRequestDocType(edu.services.docs.DocumentType);
  public edu.clients.DocumentCreator getDocumentCreator();
  public void setDocumentCreator(edu.clients.DocumentCreator);
  public edu.services.orgs.PublicService getPublicService();
  public void setPublicService(edu.services.orgs.PublicService);
  public edu.services.docs.DocumentType getOutcomingDocType();
  public void setOutcomingDocType(edu.services.docs.DocumentType);
  public edu.services.orgs.PublicServiceDepartment getInfoRequestsDepartment();
  public void setInfoRequestsDepartment(edu.services.orgs.PublicServiceDepartment);
}
Compiled from "ServantsLoadBalancer.java"
public class edu.services.execution.ServantsLoadBalancer extends edu.services.servants.PublicServant {
  short nextServantIndex;
  java.util.List<edu.services.servants.PublicServant> publicServants;
  public edu.services.execution.ServantsLoadBalancer();
  public void addServant(edu.services.servants.PublicServant);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public java.lang.String toString();
}
Compiled from "ServantsTasksDispatcher.java"
public class edu.services.execution.ServantsTasksDispatcher {
  public edu.services.execution.ServantsTasksDispatcher(edu.services.orgs.PublicServiceDepartment);
  public void setDocsToServantsDispatchingTable(java.util.Map<java.lang.String, edu.services.servants.PublicServant>);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public edu.services.orgs.PublicServiceDepartment getPublicServiceDepartment();
}
Compiled from "StubEmailSender.java"
public class edu.services.execution.StubEmailSender implements edu.communications.EmailSender {
  public edu.services.execution.StubEmailSender();
  public boolean sendEmail(edu.services.docs.Email);
}
Compiled from "TasksDispatcher.java"
public interface edu.services.execution.TasksDispatcher {
  public abstract edu.services.docs.OrganizationDocument chooseDocument();
  public abstract edu.services.servants.PublicServant choosePublicServant();
}
Compiled from "OfficialIDsHolder.java"
public interface edu.services.orgs.OfficialIDsHolder {
  public abstract boolean ifOfficialIDExists(java.lang.String);
}
Compiled from "PublicService.java"
public class edu.services.orgs.PublicService implements edu.communications.Emailable {
  public edu.services.orgs.PublicService();
  public void setOrgId();
  public edu.services.orgs.PublicService(java.lang.String, edu.services.execution.ExecutionEnvironment);
  public java.lang.String getEmailAddress();
  public void setEmailAddress(java.lang.String);
  public java.lang.Long getOrgId();
  public void setOrgId(java.lang.Long);
  public java.lang.String getOrgName();
  public void setOrgName(java.lang.String);
  public edu.communications.Address getAddress();
  public void setAddress(edu.communications.Address);
  public int getHierarchyLevel();
  public void setHierarchyLevel(int);
  public java.lang.Long getParentOrgId();
  public void setParentOrgId(java.lang.Long);
  public void sendDocumentToAddress(edu.services.docs.OutcomingDocument, edu.communications.Address);
  public java.lang.String toString();
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public edu.services.execution.DepartmentsTasksDispatcher getDepartmentsTasksDispatcher();
  public void setDepartmentsTasksDispatcher(edu.services.execution.DepartmentsTasksDispatcher);
  public edu.services.execution.ExecutionEnvironment getEnvironment();
}
Compiled from "PublicServiceDepartment.java"
public class edu.services.orgs.PublicServiceDepartment implements edu.communications.Emailable {
  public edu.services.orgs.PublicServiceDepartment();
  public edu.services.orgs.PublicServiceDepartment(edu.services.orgs.PublicService, java.lang.String);
  public java.lang.String getEmailAddress();
  public void setEmailAddress(java.lang.String);
  public void addPublicServant(edu.services.servants.PublicServant);
  public java.util.concurrent.BlockingQueue<edu.services.servants.PublicServant> getPublicServants();
  public void addDocToProcess(edu.services.docs.IncomingDocument);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public edu.services.execution.ServantsTasksDispatcher getServantsTasksDispatcher();
  public void setServantsTasksDispatcher(edu.services.execution.ServantsTasksDispatcher);
  public edu.services.orgs.PublicService getPublicService();
  public void setPublicService(edu.services.orgs.PublicService);
  public edu.services.execution.ExecutionEnvironment getEnvironment();
  public void sendDocumentToAddress(edu.services.docs.OutcomingDocument, edu.communications.Address);
  public edu.communications.EmailSender getEmailSender();
  public void setEmailSender(edu.communications.EmailSender);
  static {};
}
Compiled from "PublicServiceDepartmentTest.java"
public class edu.services.orgs.PublicServiceDepartmentTest {
  edu.services.orgs.PublicServiceDepartment infoRequestsDep;
  edu.services.orgs.PublicService publicService;
  public edu.services.orgs.PublicServiceDepartmentTest();
  public void createEntities();
  public void testGetEmailAddress() throws java.lang.Exception;
  public void testSetEmailAddress() throws java.lang.Exception;
  public void testAddPublicServant() throws java.lang.Exception;
  public void testAddDocToProcess() throws java.lang.Exception;
  public void testGetName() throws java.lang.Exception;
  public void testToString() throws java.lang.Exception;
  public void testEquals() throws java.lang.Exception;
  public void testHashCode() throws java.lang.Exception;
}
Compiled from "StubOfficialIDsHolder.java"
public class edu.services.orgs.StubOfficialIDsHolder extends edu.services.orgs.PublicService implements edu.services.orgs.OfficialIDsHolder {
  public edu.services.orgs.StubOfficialIDsHolder();
  public boolean ifOfficialIDExists(java.lang.String);
}
Compiled from "IncomingDocServant.java"
public abstract class edu.services.servants.IncomingDocServant extends edu.services.servants.PublicServant {
  public edu.services.servants.IncomingDocServant(edu.services.orgs.PublicServiceDepartment, java.lang.String, java.lang.String, java.lang.String);
  public edu.services.servants.IncomingDocServant(edu.services.orgs.PublicServiceDepartment, edu.clients.FullName);
  public java.lang.String getInformationResponsibleName();
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public int compareTo(edu.services.servants.PublicServant);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public abstract edu.services.docs.OutcomingDocument createOutcomingDocBasedOnInfoRequest(edu.services.docs.InformationRequest);
  public abstract void processDocument(edu.services.docs.InformationRequest);
  public abstract void replyByEmail(edu.services.docs.InformationRequest, edu.services.docs.OutcomingDocument);
  public abstract edu.services.docs.OutcomingDocument createOutcomingDocument(edu.services.docs.IncomingDocument);
}
Compiled from "InformationResponsible.java"
public class edu.services.servants.InformationResponsible extends edu.services.servants.IncomingDocServant {
  java.lang.String informationForReply;
  public edu.services.servants.InformationResponsible(edu.services.orgs.PublicServiceDepartment, java.lang.String, java.lang.String, java.lang.String);
  public edu.services.servants.InformationResponsible(edu.services.orgs.PublicServiceDepartment, edu.clients.FullName);
  public java.lang.String getInformationForReply();
  public void setInformationForReply(java.lang.String);
  public edu.services.docs.OutcomingDocument createOutcomingDocument(edu.services.docs.IncomingDocument);
  public void replyByEmail(edu.services.docs.InformationRequest, edu.services.docs.OutcomingDocument);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public void processDocument(edu.services.docs.InformationRequest);
  public edu.services.docs.OutcomingDocument createOutcomingDocBasedOnInfoRequest(edu.services.docs.InformationRequest);
}
Compiled from "InformationResponsibleTest.java"
public class edu.services.servants.InformationResponsibleTest {
  edu.services.servants.InformationResponsible informationResponsibleServant;
  edu.services.orgs.PublicService publicService;
  edu.services.orgs.PublicServiceDepartment infoRequestsDep;
  public edu.services.servants.InformationResponsibleTest();
  public void setUp();
  public void shouldReturnNullWhenGetInformationForReplyNotSet() throws java.lang.Exception;
  public void shouldGetInformationForReplyWhenItIsSet() throws java.lang.Exception;
  public void shouldSetInformationForReply() throws java.lang.Exception;
  public void testGetInformationResponsibleName() throws java.lang.Exception;
  public void testToString() throws java.lang.Exception;
}
Compiled from "ProcessInfoRequests.java"
public class edu.services.servants.ProcessInfoRequests extends edu.services.servants.PublicServantResponsibilities {
  java.lang.String informationForReply;
  public edu.services.servants.ProcessInfoRequests(edu.services.servants.PublicServant);
  public void doMainResponsibility();
  public void doBonusedResponsibility();
  public java.lang.String getInformationForReply();
  public void setInformationForReply(java.lang.String);
  public edu.services.docs.OutcomingDocument createOutcomingDocument(edu.services.docs.IncomingDocument);
  public void replyByEmail(edu.services.docs.InformationRequest, edu.services.docs.OutcomingDocument);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public void processDocument(edu.services.docs.InformationRequest);
  public edu.services.docs.OutcomingDocument createOutcomingDocBasedOnInfoRequest(edu.services.docs.InformationRequest);
}
Compiled from "ProcessThanksAndClaims.java"
public class edu.services.servants.ProcessThanksAndClaims extends edu.services.servants.PublicServantResponsibilities {
  java.lang.String replyToThank;
  java.lang.String replyToClaim;
  public edu.services.servants.ProcessThanksAndClaims(edu.services.servants.PublicServant);
  public void doMainResponsibility();
  public void doBonusedResponsibility();
  public java.lang.String getReplyToThank();
  public void setReplyToThank(java.lang.String);
  public java.lang.String getReplyToClaim();
  public void setReplyToClaim(java.lang.String);
}
Compiled from "PublicServant.java"
public class edu.services.servants.PublicServant extends edu.clients.Citizen {
  protected edu.services.servants.PublicServant();
  public void doMainResponsibility();
  public void doBonusedResponsibility();
  public edu.services.servants.PublicServant(edu.services.orgs.PublicServiceDepartment, edu.clients.FullName);
  public edu.services.servants.PublicServant(edu.services.orgs.PublicServiceDepartment, java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.util.ArrayList<edu.services.docs.OrganizationDocument> getDocumentsToProcess();
  public int compareTo(edu.services.servants.PublicServant);
  public edu.services.execution.ExecutionEnvironment getEnvironment();
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public edu.services.orgs.PublicServiceDepartment getDepartment();
}
Compiled from "PublicServantResponsibilities.java"
public class edu.services.servants.PublicServantResponsibilities extends edu.services.servants.PublicServant {
  protected edu.services.servants.PublicServant decoratedPublicServant;
  public edu.services.servants.PublicServantResponsibilities(edu.services.servants.PublicServant);
}
Compiled from "PublicServantTest.java"
public class edu.services.servants.PublicServantTest {
  public edu.services.servants.PublicServantTest();
  public void testToString() throws java.lang.Exception;
}
Compiled from "ThanksAndClaimsResponsible.java"
public class edu.services.servants.ThanksAndClaimsResponsible extends edu.services.servants.PublicServant {
  java.lang.String replyToThank;
  java.lang.String replyToClaim;
  public edu.services.servants.ThanksAndClaimsResponsible(edu.services.orgs.PublicServiceDepartment, java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String getReplyToThank();
  public void setReplyToThank(java.lang.String);
  public java.lang.String getReplyToClaim();
  public void setReplyToClaim(java.lang.String);
  public edu.services.docs.OutcomingDocument createOutcomingDocument(edu.services.docs.IncomingDocument);
  public void replyByEmail(edu.services.docs.InformationRequest, edu.services.docs.OutcomingDocument);
  public void addDocumentToProcess(edu.services.docs.IncomingDocument);
  public void processDocument(edu.services.docs.InformationRequest);
  public edu.services.docs.OutcomingDocument createOutcomingDocBasedOnInfoRequest(edu.services.docs.InformationRequest);
}
Compiled from "WorkingPublicServant.java"
public class edu.services.servants.WorkingPublicServant extends edu.services.servants.PublicServant {
  public edu.services.servants.WorkingPublicServant(edu.services.orgs.PublicServiceDepartment, edu.clients.FullName);
  public edu.services.servants.WorkingPublicServant(edu.services.orgs.PublicServiceDepartment, java.lang.String, java.lang.String, java.lang.String);
  public void doMainResponsibility();
  public void doBonusedResponsibility();
}
Compiled from "WorkingPublicServantTests.java"
public class edu.services.servants.WorkingPublicServantTests {
  public edu.services.servants.WorkingPublicServantTests();
  public void MustCreateInstanceOfWorkingPublicServant();
  public void MustDecorateWorkingPublicServantWithResponsibility();
  public void MustFailWnenNotDecorated() throws java.lang.ClassCastException;
  public void MustSetReplyForThankWnenDecoratedTwice();
  public void MustSetReplyForClaimWnenDecoratedTwice();
  public void MustFailWnenNotDecoratedTwice() throws java.lang.ClassCastException;
}
Compiled from "BinaryTreeNode.java"
public class edu.utils.BinaryTreeNode {
  java.lang.String data;
  edu.utils.BinaryTreeNode childNodeRight;
  edu.utils.BinaryTreeNode childNodeLeft;
  int parentsCount;
  public edu.utils.BinaryTreeNode(java.lang.String);
  public void addNode(java.lang.String);
  public int getHeight();
  public int size();
  public java.lang.String toString();
  public edu.utils.BinaryTreeNode getChildNodeRight();
  public edu.utils.BinaryTreeNode getChildNodeLeft();
  public void setParentsCount(int);
}
Compiled from "BinaryTreeNodeTest.java"
public class edu.utils.BinaryTreeNodeTest {
  public edu.utils.BinaryTreeNodeTest();
  public void shouldHaveAtLeastOneElement();
  public void shouldExceptionWhenNoDataGivenForConstructor();
  public void shouldHaveSizeOfOneWhenNoChildren();
  public void shouldAddNodeAndRizeSizeByOne();
  public void shouldHaveProperSizeWhenSeveralChildrenAdded();
  public void shouldGetTreeNodeHeightOfOneWhenNoChildren();
  public void shouldGetTreeNodeHeightOfTwoWhenFirstChildAdded();
  public void shouldIncrementHeightWhenAddedLessThanTwoChildren();
  public void shouldGetProperTreeNodeHeightWhenSeveralChildrenAddedToOneSide();
  public void shouldRiseHeightByTwoWhenAddedMoreThanTwoNodesPerChildrenNode();
  public void shouldGetString();
  public void shouldAddLeftNode();
  public void shouldAddRightNode();
}
Compiled from "HierarchyTreeNode.java"
public class edu.utils.HierarchyTreeNode {
  java.lang.String data;
  edu.utils.HierarchyTreeNode parentNode;
  java.util.List<edu.utils.HierarchyTreeNode> childNodes;
  public edu.utils.HierarchyTreeNode(java.lang.String, edu.utils.HierarchyTreeNode);
  public void addNode(java.lang.String);
  public int getHeight();
  public int[] getSortedHeights(java.util.List<edu.utils.HierarchyTreeNode>);
  public int size();
  public int getChildrenCount();
  public int getMaxChildrenCount();
}
Compiled from "HierarchyTreeNodeTest.java"
public class edu.utils.HierarchyTreeNodeTest {
  public edu.utils.HierarchyTreeNodeTest();
  public void shouldHaveAtLeastOneElement();
  public void shouldAddNode();
  public void shouldGetProperSizeAfterAddingFiveNode();
  public void shouldGetTreeNodeHeight();
  public void shouldGetProperTreeNodeHeight();
  public void shouldHaveProperNumOfChildren();
  public void shouldRiseHeightWhenAddedMoreThanMaxChildrenPerNode();
  public void shouldHaveSameHeightWhenAddedLessThanMaxChildrenPerNode();
}
Compiled from "PublicRequestsUtils.java"
public class edu.utils.PublicRequestsUtils {
  public edu.utils.PublicRequestsUtils();
  public static java.lang.String toTimeAndDateString(java.util.GregorianCalendar);
  public static java.util.GregorianCalendar nowPlusTenMinutes();
  public static java.util.GregorianCalendar nowMinusTenMinutes();
}
