Compiled from "CompositeTest.java"
public class yeah.cstriker1407.design_patterns.Composite.CompositeTest {
  public yeah.cstriker1407.design_patterns.Composite.CompositeTest();
  public static void test();
}
Compiled from "CompositeTest.java"
abstract class yeah.cstriker1407.design_patterns.Composite.Crop {
  public yeah.cstriker1407.design_patterns.Composite.Crop(java.lang.String);
  public java.util.List<yeah.cstriker1407.design_patterns.Composite.Crop> getCropList();
  public yeah.cstriker1407.design_patterns.Composite.Crop addCrop(yeah.cstriker1407.design_patterns.Composite.Crop);
  public abstract java.lang.String oper();
  public void info();
}
Compiled from "CompositeTest.java"
class yeah.cstriker1407.design_patterns.Composite.Leader extends yeah.cstriker1407.design_patterns.Composite.Crop {
  public yeah.cstriker1407.design_patterns.Composite.Leader(java.lang.String);
  public java.lang.String oper();
}
Compiled from "CompositeTest.java"
class yeah.cstriker1407.design_patterns.Composite.Leaf extends yeah.cstriker1407.design_patterns.Composite.Crop {
  public yeah.cstriker1407.design_patterns.Composite.Leaf(java.lang.String);
  public java.lang.String oper();
}
Compiled from "Main.java"
public class yeah.cstriker1407.design_patterns.Main {
  public yeah.cstriker1407.design_patterns.Main();
  public static void main(java.lang.String[]);
}
Compiled from "Main.java"
class yeah.cstriker1407.design_patterns.Main$Person {
  public int id;
  public java.util.List<java.lang.Integer> datiqingkuang;
  public int success;
  public int fails;
  public int score;
  public int paiming;
  final yeah.cstriker1407.design_patterns.Main this$0;
  yeah.cstriker1407.design_patterns.Main$Person(yeah.cstriker1407.design_patterns.Main);
}
Compiled from "BridgeTest.java"
public class yeah.cstriker1407.design_patterns.bridge.BridgeTest {
  public yeah.cstriker1407.design_patterns.bridge.BridgeTest();
  public static void test();
}
Compiled from "Factory.java"
public abstract class yeah.cstriker1407.design_patterns.bridge.abstraction.Factory {
  public yeah.cstriker1407.design_patterns.bridge.abstraction.Factory(yeah.cstriker1407.design_patterns.bridge.implementor.Product);
  public void makeMoney();
}
Compiled from "HouseFactory.java"
public class yeah.cstriker1407.design_patterns.bridge.abstraction.HouseFactory extends yeah.cstriker1407.design_patterns.bridge.abstraction.Factory {
  public yeah.cstriker1407.design_patterns.bridge.abstraction.HouseFactory(yeah.cstriker1407.design_patterns.bridge.implementor.House);
  public void makeMoney();
}
Compiled from "SanzaiFactory.java"
public class yeah.cstriker1407.design_patterns.bridge.abstraction.SanzaiFactory extends yeah.cstriker1407.design_patterns.bridge.abstraction.Factory {
  public yeah.cstriker1407.design_patterns.bridge.abstraction.SanzaiFactory(yeah.cstriker1407.design_patterns.bridge.implementor.Product);
  public void makeMoney();
}
Compiled from "House.java"
public class yeah.cstriker1407.design_patterns.bridge.implementor.House extends yeah.cstriker1407.design_patterns.bridge.implementor.Product {
  public yeah.cstriker1407.design_patterns.bridge.implementor.House();
  public void beProducted();
  public void beSelled();
}
Compiled from "IPod.java"
public class yeah.cstriker1407.design_patterns.bridge.implementor.IPod extends yeah.cstriker1407.design_patterns.bridge.implementor.Product {
  public yeah.cstriker1407.design_patterns.bridge.implementor.IPod();
  public void beProducted();
  public void beSelled();
}
Compiled from "Mp3.java"
public class yeah.cstriker1407.design_patterns.bridge.implementor.Mp3 extends yeah.cstriker1407.design_patterns.bridge.implementor.Product {
  public yeah.cstriker1407.design_patterns.bridge.implementor.Mp3();
  public void beProducted();
  public void beSelled();
}
Compiled from "Product.java"
public abstract class yeah.cstriker1407.design_patterns.bridge.implementor.Product {
  public yeah.cstriker1407.design_patterns.bridge.implementor.Product();
  public abstract void beProducted();
  public abstract void beSelled();
}
Compiled from "BuilderTest.java"
class yeah.cstriker1407.design_patterns.builder.ACar extends yeah.cstriker1407.design_patterns.builder.CarModel {
  yeah.cstriker1407.design_patterns.builder.ACar();
  protected void start();
  protected void stop();
  protected void alarm();
}
Compiled from "BuilderTest.java"
class yeah.cstriker1407.design_patterns.builder.ACarBuilder extends yeah.cstriker1407.design_patterns.builder.CarBuilder {
  yeah.cstriker1407.design_patterns.builder.ACarBuilder();
  public void setAlarm(boolean);
  public yeah.cstriker1407.design_patterns.builder.CarModel getCar();
}
Compiled from "BuilderTest.java"
class yeah.cstriker1407.design_patterns.builder.BCar extends yeah.cstriker1407.design_patterns.builder.CarModel {
  yeah.cstriker1407.design_patterns.builder.BCar();
  protected void start();
  protected void stop();
  protected void alarm();
}
Compiled from "BuilderTest.java"
class yeah.cstriker1407.design_patterns.builder.BCarBuilder extends yeah.cstriker1407.design_patterns.builder.CarBuilder {
  yeah.cstriker1407.design_patterns.builder.BCarBuilder();
  public void setAlarm(boolean);
  public yeah.cstriker1407.design_patterns.builder.CarModel getCar();
}
Compiled from "BuilderTest.java"
class yeah.cstriker1407.design_patterns.builder.BuilderDirector {
  yeah.cstriker1407.design_patterns.builder.BuilderDirector();
  public yeah.cstriker1407.design_patterns.builder.ACar getACar();
  public yeah.cstriker1407.design_patterns.builder.BCar getBCar();
}
Compiled from "BuilderTest.java"
public class yeah.cstriker1407.design_patterns.builder.BuilderTest {
  public yeah.cstriker1407.design_patterns.builder.BuilderTest();
  public static void test();
}
Compiled from "BuilderTest.java"
abstract class yeah.cstriker1407.design_patterns.builder.CarBuilder {
  yeah.cstriker1407.design_patterns.builder.CarBuilder();
  public abstract void setAlarm(boolean);
  public abstract yeah.cstriker1407.design_patterns.builder.CarModel getCar();
}
Compiled from "BuilderTest.java"
abstract class yeah.cstriker1407.design_patterns.builder.CarModel {
  yeah.cstriker1407.design_patterns.builder.CarModel();
  protected abstract void start();
  protected abstract void stop();
  protected abstract void alarm();
  public final void run();
  public final void setAlarm(boolean);
}
Compiled from "DecoratorTest.java"
abstract class yeah.cstriker1407.design_patterns.decorator.DecoratorSchoolReport extends yeah.cstriker1407.design_patterns.decorator.SchoolReport {
  public yeah.cstriker1407.design_patterns.decorator.DecoratorSchoolReport(yeah.cstriker1407.design_patterns.decorator.SchoolReport);
  public void report();
  public void sign();
}
Compiled from "DecoratorTest.java"
public class yeah.cstriker1407.design_patterns.decorator.DecoratorTest {
  public yeah.cstriker1407.design_patterns.decorator.DecoratorTest();
  public static void test();
}
Compiled from "DecoratorTest.java"
class yeah.cstriker1407.design_patterns.decorator.FinalTestReport extends yeah.cstriker1407.design_patterns.decorator.SchoolReport {
  yeah.cstriker1407.design_patterns.decorator.FinalTestReport();
  public void report();
  public void sign();
}
Compiled from "DecoratorTest.java"
class yeah.cstriker1407.design_patterns.decorator.HighScoreDecorator extends yeah.cstriker1407.design_patterns.decorator.DecoratorSchoolReport {
  public yeah.cstriker1407.design_patterns.decorator.HighScoreDecorator(yeah.cstriker1407.design_patterns.decorator.SchoolReport);
  public void report();
}
Compiled from "DecoratorTest.java"
abstract class yeah.cstriker1407.design_patterns.decorator.SchoolReport {
  yeah.cstriker1407.design_patterns.decorator.SchoolReport();
  public abstract void report();
  public abstract void sign();
}
Compiled from "DecoratorTest.java"
class yeah.cstriker1407.design_patterns.decorator.SortDecorator extends yeah.cstriker1407.design_patterns.decorator.DecoratorSchoolReport {
  public yeah.cstriker1407.design_patterns.decorator.SortDecorator(yeah.cstriker1407.design_patterns.decorator.SchoolReport);
  public void report();
}
Compiled from "FacadeTest.java"
public class yeah.cstriker1407.design_patterns.facade.FacadeTest {
  public yeah.cstriker1407.design_patterns.facade.FacadeTest();
  public static void test();
}
Compiled from "FacadeTest.java"
interface yeah.cstriker1407.design_patterns.facade.LetterPost {
  public abstract void write(java.lang.String);
  public abstract void send(java.lang.String);
}
Compiled from "FacadeTest.java"
class yeah.cstriker1407.design_patterns.facade.Person implements yeah.cstriker1407.design_patterns.facade.LetterPost {
  yeah.cstriker1407.design_patterns.facade.Person();
  public void write(java.lang.String);
  public void send(java.lang.String);
}
Compiled from "FacadeTest.java"
class yeah.cstriker1407.design_patterns.facade.PostOffice {
  yeah.cstriker1407.design_patterns.facade.PostOffice();
  public void sendLetter(java.lang.String, java.lang.String);
}
Compiled from "FacadeTest.java"
class yeah.cstriker1407.design_patterns.facade.PostOffice$1 implements yeah.cstriker1407.design_patterns.facade.LetterPost {
  final yeah.cstriker1407.design_patterns.facade.PostOffice this$0;
  yeah.cstriker1407.design_patterns.facade.PostOffice$1(yeah.cstriker1407.design_patterns.facade.PostOffice);
  public void write(java.lang.String);
  public void send(java.lang.String);
}
Compiled from "AbstractFactory1.java"
public class yeah.cstriker1407.design_patterns.factory.abstractfactory.AbstractFactory1 {
  public yeah.cstriker1407.design_patterns.factory.abstractfactory.AbstractFactory1();
  public static void test();
}
Compiled from "AbstractFactory1.java"
class yeah.cstriker1407.design_patterns.factory.abstractfactory.Linux implements yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun {
  yeah.cstriker1407.design_patterns.factory.abstractfactory.Linux();
  public void draw();
  public void write();
}
Compiled from "AbstractFactory1.java"
class yeah.cstriker1407.design_patterns.factory.abstractfactory.LinuxProvider implements yeah.cstriker1407.design_patterns.factory.abstractfactory.Provider {
  yeah.cstriker1407.design_patterns.factory.abstractfactory.LinuxProvider();
  public yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun produce();
}
Compiled from "AbstractFactory1.java"
interface yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun {
  public abstract void draw();
  public abstract void write();
}
Compiled from "AbstractFactory1.java"
interface yeah.cstriker1407.design_patterns.factory.abstractfactory.Provider {
  public abstract yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun produce();
}
Compiled from "AbstractFactory1.java"
class yeah.cstriker1407.design_patterns.factory.abstractfactory.Win implements yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun {
  yeah.cstriker1407.design_patterns.factory.abstractfactory.Win();
  public void draw();
  public void write();
}
Compiled from "AbstractFactory1.java"
class yeah.cstriker1407.design_patterns.factory.abstractfactory.WinProvider implements yeah.cstriker1407.design_patterns.factory.abstractfactory.Provider {
  yeah.cstriker1407.design_patterns.factory.abstractfactory.WinProvider();
  public yeah.cstriker1407.design_patterns.factory.abstractfactory.OperateFun produce();
}
Compiled from "Simplefactory1.java"
class yeah.cstriker1407.design_patterns.factory.simplefactory.MailSender implements yeah.cstriker1407.design_patterns.factory.simplefactory.onSender {
  yeah.cstriker1407.design_patterns.factory.simplefactory.MailSender();
  public void Sender();
}
Compiled from "Simplefactory1.java"
class yeah.cstriker1407.design_patterns.factory.simplefactory.SMSSender implements yeah.cstriker1407.design_patterns.factory.simplefactory.onSender {
  yeah.cstriker1407.design_patterns.factory.simplefactory.SMSSender();
  public void Sender();
}
Compiled from "Simplefactory1.java"
public class yeah.cstriker1407.design_patterns.factory.simplefactory.Simplefactory1 {
  public yeah.cstriker1407.design_patterns.factory.simplefactory.Simplefactory1();
  public static yeah.cstriker1407.design_patterns.factory.simplefactory.onSender createOnSender(java.lang.String);
  public static yeah.cstriker1407.design_patterns.factory.simplefactory.onSender createMail();
  public static yeah.cstriker1407.design_patterns.factory.simplefactory.onSender createSMS();
}
Compiled from "Simplefactory1.java"
interface yeah.cstriker1407.design_patterns.factory.simplefactory.onSender {
  public abstract void Sender();
}
Compiled from "InterpreterTest.java"
class yeah.cstriker1407.design_patterns.interpreter.AddExpression extends yeah.cstriker1407.design_patterns.interpreter.SymbolExpression {
  public yeah.cstriker1407.design_patterns.interpreter.AddExpression(yeah.cstriker1407.design_patterns.interpreter.Expression, yeah.cstriker1407.design_patterns.interpreter.Expression);
  public int interpreter(java.util.HashMap<java.lang.String, java.lang.Integer>);
}
Compiled from "InterpreterTest.java"
class yeah.cstriker1407.design_patterns.interpreter.Calculator {
  yeah.cstriker1407.design_patterns.interpreter.Calculator();
  public static int cal(java.lang.String, java.util.HashMap<java.lang.String, java.lang.Integer>);
}
Compiled from "InterpreterTest.java"
abstract class yeah.cstriker1407.design_patterns.interpreter.Expression {
  yeah.cstriker1407.design_patterns.interpreter.Expression();
  public abstract int interpreter(java.util.HashMap<java.lang.String, java.lang.Integer>);
}
Compiled from "InterpreterTest.java"
public class yeah.cstriker1407.design_patterns.interpreter.InterpreterTest {
  public yeah.cstriker1407.design_patterns.interpreter.InterpreterTest();
  public static void test();
}
Compiled from "InterpreterTest.java"
class yeah.cstriker1407.design_patterns.interpreter.SubExpression extends yeah.cstriker1407.design_patterns.interpreter.SymbolExpression {
  public yeah.cstriker1407.design_patterns.interpreter.SubExpression(yeah.cstriker1407.design_patterns.interpreter.Expression, yeah.cstriker1407.design_patterns.interpreter.Expression);
  public int interpreter(java.util.HashMap<java.lang.String, java.lang.Integer>);
}
Compiled from "InterpreterTest.java"
abstract class yeah.cstriker1407.design_patterns.interpreter.SymbolExpression extends yeah.cstriker1407.design_patterns.interpreter.Expression {
  protected yeah.cstriker1407.design_patterns.interpreter.Expression left;
  protected yeah.cstriker1407.design_patterns.interpreter.Expression right;
  public yeah.cstriker1407.design_patterns.interpreter.SymbolExpression(yeah.cstriker1407.design_patterns.interpreter.Expression, yeah.cstriker1407.design_patterns.interpreter.Expression);
}
Compiled from "InterpreterTest.java"
class yeah.cstriker1407.design_patterns.interpreter.VarExpression extends yeah.cstriker1407.design_patterns.interpreter.Expression {
  public yeah.cstriker1407.design_patterns.interpreter.VarExpression(java.lang.String);
  public int interpreter(java.util.HashMap<java.lang.String, java.lang.Integer>);
}
Compiled from "AbstractColleague.java"
public abstract class yeah.cstriker1407.design_patterns.mediator.AbstractColleague {
  protected yeah.cstriker1407.design_patterns.mediator.AbstractMediator mediator;
  public yeah.cstriker1407.design_patterns.mediator.AbstractColleague(yeah.cstriker1407.design_patterns.mediator.AbstractMediator);
}
Compiled from "AbstractMediator.java"
public abstract class yeah.cstriker1407.design_patterns.mediator.AbstractMediator {
  protected yeah.cstriker1407.design_patterns.mediator.Purchase purchase;
  protected yeah.cstriker1407.design_patterns.mediator.Sale sale;
  protected yeah.cstriker1407.design_patterns.mediator.Stock stock;
  public yeah.cstriker1407.design_patterns.mediator.AbstractMediator();
  public void setPurchase(yeah.cstriker1407.design_patterns.mediator.Purchase);
  public void setSale(yeah.cstriker1407.design_patterns.mediator.Sale);
  public void setStock(yeah.cstriker1407.design_patterns.mediator.Stock);
  public abstract void execute(java.lang.String, java.lang.Object...);
}
Compiled from "AbstractMediator.java"
class yeah.cstriker1407.design_patterns.mediator.Mediator extends yeah.cstriker1407.design_patterns.mediator.AbstractMediator {
  yeah.cstriker1407.design_patterns.mediator.Mediator();
  public void execute(java.lang.String, java.lang.Object...);
}
Compiled from "MediatorTest.java"
public class yeah.cstriker1407.design_patterns.mediator.MediatorTest {
  public yeah.cstriker1407.design_patterns.mediator.MediatorTest();
  public static void test();
}
Compiled from "AbstractColleague.java"
class yeah.cstriker1407.design_patterns.mediator.Purchase extends yeah.cstriker1407.design_patterns.mediator.AbstractColleague {
  public yeah.cstriker1407.design_patterns.mediator.Purchase(yeah.cstriker1407.design_patterns.mediator.AbstractMediator);
  public void buyIBMcomputer(int);
  public void refuseBuyIBM();
}
Compiled from "AbstractColleague.java"
class yeah.cstriker1407.design_patterns.mediator.Sale extends yeah.cstriker1407.design_patterns.mediator.AbstractColleague {
  public yeah.cstriker1407.design_patterns.mediator.Sale(yeah.cstriker1407.design_patterns.mediator.AbstractMediator);
  public void sellIBMComputer(int);
  public int getSaleStatus();
  public void offSale();
}
Compiled from "AbstractColleague.java"
class yeah.cstriker1407.design_patterns.mediator.Stock extends yeah.cstriker1407.design_patterns.mediator.AbstractColleague {
  public yeah.cstriker1407.design_patterns.mediator.Stock(yeah.cstriker1407.design_patterns.mediator.AbstractMediator);
  public void increase(int);
  public void decrease(int);
  public int getStockNumber();
  public void clearStock();
  static {};
}
Compiled from "ObserveTest.java"
class yeah.cstriker1407.design_patterns.observe.MyObservable extends java.util.Observable {
  public java.lang.String str;
  yeah.cstriker1407.design_patterns.observe.MyObservable();
  public void changed();
}
Compiled from "ObserveTest.java"
class yeah.cstriker1407.design_patterns.observe.MyObserver implements java.util.Observer {
  public yeah.cstriker1407.design_patterns.observe.MyObserver(java.lang.String);
  public void update(java.util.Observable, java.lang.Object);
}
Compiled from "ObserveTest.java"
public class yeah.cstriker1407.design_patterns.observe.ObserveTest {
  public yeah.cstriker1407.design_patterns.observe.ObserveTest();
  public static void test();
}
Compiled from "ResponsechainTest.java"
abstract class yeah.cstriker1407.design_patterns.responsechain.ChainHandler {
  protected yeah.cstriker1407.design_patterns.responsechain.ChainHandler(int);
  public void setNext(yeah.cstriker1407.design_patterns.responsechain.ChainHandler);
  protected abstract void showInfo(int);
  public final void process(int);
}
Compiled from "ResponsechainTest.java"
class yeah.cstriker1407.design_patterns.responsechain.ChainHandler0 extends yeah.cstriker1407.design_patterns.responsechain.ChainHandler {
  public yeah.cstriker1407.design_patterns.responsechain.ChainHandler0();
  protected void showInfo(int);
}
Compiled from "ResponsechainTest.java"
class yeah.cstriker1407.design_patterns.responsechain.ChainHandler1 extends yeah.cstriker1407.design_patterns.responsechain.ChainHandler {
  public yeah.cstriker1407.design_patterns.responsechain.ChainHandler1();
  protected void showInfo(int);
}
Compiled from "ResponsechainTest.java"
class yeah.cstriker1407.design_patterns.responsechain.ChainHandler2 extends yeah.cstriker1407.design_patterns.responsechain.ChainHandler {
  public yeah.cstriker1407.design_patterns.responsechain.ChainHandler2();
  protected void showInfo(int);
}
Compiled from "ResponsechainTest.java"
public class yeah.cstriker1407.design_patterns.responsechain.ResponsechainTest {
  public yeah.cstriker1407.design_patterns.responsechain.ResponsechainTest();
  public static void test();
}
Compiled from "Singleton_doublecheck.java"
public class yeah.cstriker1407.design_patterns.singleton.Singleton_doublecheck {
  public static yeah.cstriker1407.design_patterns.singleton.Singleton_doublecheck getInstance();
  public void sayHello();
  static {};
}
Compiled from "Singleton_enum.java"
public final class yeah.cstriker1407.design_patterns.singleton.Singleton_enum extends java.lang.Enum<yeah.cstriker1407.design_patterns.singleton.Singleton_enum> {
  public static final yeah.cstriker1407.design_patterns.singleton.Singleton_enum INSTANCE;
  public static yeah.cstriker1407.design_patterns.singleton.Singleton_enum[] values();
  public static yeah.cstriker1407.design_patterns.singleton.Singleton_enum valueOf(java.lang.String);
  public void sayHello();
  static {};
}
Compiled from "Singleton_hungry.java"
public class yeah.cstriker1407.design_patterns.singleton.Singleton_hungry {
  public static yeah.cstriker1407.design_patterns.singleton.Singleton_hungry getInstance();
  public void sayHello();
  static {};
}
Compiled from "Singleton_lazy.java"
public class yeah.cstriker1407.design_patterns.singleton.Singleton_lazy {
  public static yeah.cstriker1407.design_patterns.singleton.Singleton_lazy getInstance();
  public void sayHello();
  public static void donth();
  yeah.cstriker1407.design_patterns.singleton.Singleton_lazy(yeah.cstriker1407.design_patterns.singleton.Singleton_lazy$1);
  static {};
}
Compiled from "Singleton_lazy.java"
class yeah.cstriker1407.design_patterns.singleton.Singleton_lazy$1 {
}
Compiled from "Singleton_lazy.java"
class yeah.cstriker1407.design_patterns.singleton.Singleton_lazy$Singleton_lazy_Holder {
  static yeah.cstriker1407.design_patterns.singleton.Singleton_lazy access$100();
  static {};
}
Compiled from "LiftClose.java"
public class yeah.cstriker1407.design_patterns.state.LiftClose implements yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState {
  public yeah.cstriker1407.design_patterns.state.LiftClose();
  public void open();
  public void close();
  public void run();
  public void stop();
}
Compiled from "LiftOpen.java"
public class yeah.cstriker1407.design_patterns.state.LiftOpen implements yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState {
  public yeah.cstriker1407.design_patterns.state.LiftOpen();
  public void open();
  public void close();
  public void run();
  public void stop();
}
Compiled from "LiftRun.java"
public class yeah.cstriker1407.design_patterns.state.LiftRun implements yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState {
  public yeah.cstriker1407.design_patterns.state.LiftRun();
  public void open();
  public void close();
  public void run();
  public void stop();
}
Compiled from "LiftStates.java"
public class yeah.cstriker1407.design_patterns.state.LiftStates {
  public static final yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState OpenState;
  public static final yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState CloseState;
  public static final yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState RunState;
  public static final yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState StopState;
  public static yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState currentLiftState;
  public yeah.cstriker1407.design_patterns.state.LiftStates();
  public static void normal();
  public static void test();
  static {};
}
Compiled from "LiftStates.java"
public interface yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState {
  public abstract void open();
  public abstract void close();
  public abstract void run();
  public abstract void stop();
}
Compiled from "LiftStop.java"
public class yeah.cstriker1407.design_patterns.state.LiftStop implements yeah.cstriker1407.design_patterns.state.LiftStates$ILiftState {
  public yeah.cstriker1407.design_patterns.state.LiftStop();
  public void open();
  public void close();
  public void run();
  public void stop();
}
Compiled from "TemplateTest.java"
class yeah.cstriker1407.design_patterns.template.ACar extends yeah.cstriker1407.design_patterns.template.CarModel {
  yeah.cstriker1407.design_patterns.template.ACar();
  protected void start();
  protected void stop();
  protected void alarm();
  protected boolean isAlarm();
}
Compiled from "TemplateTest.java"
class yeah.cstriker1407.design_patterns.template.BCar extends yeah.cstriker1407.design_patterns.template.CarModel {
  yeah.cstriker1407.design_patterns.template.BCar();
  protected void start();
  protected void stop();
  protected void alarm();
  protected boolean isAlarm();
}
Compiled from "TemplateTest.java"
abstract class yeah.cstriker1407.design_patterns.template.CarModel {
  yeah.cstriker1407.design_patterns.template.CarModel();
  protected abstract void start();
  protected abstract void stop();
  protected abstract void alarm();
  public final void run();
  protected boolean isAlarm();
}
Compiled from "TemplateTest.java"
public class yeah.cstriker1407.design_patterns.template.TemplateTest {
  public yeah.cstriker1407.design_patterns.template.TemplateTest();
  public static void test();
}
