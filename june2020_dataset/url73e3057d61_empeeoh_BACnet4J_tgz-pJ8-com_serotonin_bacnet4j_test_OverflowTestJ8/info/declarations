Compiled from "BacnetTest.java"
public class BacnetTest {
  static com.serotonin.bacnet4j.LocalDevice localDevice;
  public BacnetTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static void getExtendedDeviceInformation(com.serotonin.bacnet4j.RemoteDevice) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "BacnetTest.java"
class BacnetTest$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  BacnetTest$Listener();
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
}
Compiled from "LocalDevice.java"
public class com.serotonin.bacnet4j.LocalDevice {
  public com.serotonin.bacnet4j.LocalDevice(int, com.serotonin.bacnet4j.transport.Transport);
  public com.serotonin.bacnet4j.LocalDevice(int, int, com.serotonin.bacnet4j.transport.Transport);
  public java.util.concurrent.ExecutorService getExecutorService();
  public void setExecutorService(java.util.concurrent.ExecutorService);
  public com.serotonin.bacnet4j.npdu.NetworkIdentifier getNetworkIdentifier();
  public boolean isStrict();
  public void setStrict(boolean);
  public synchronized void initialize() throws java.lang.Exception;
  public synchronized void terminate();
  public boolean isInitialized();
  public com.serotonin.bacnet4j.obj.BACnetObject getConfiguration();
  public com.serotonin.bacnet4j.event.DeviceEventHandler getEventHandler();
  public java.lang.String getPassword();
  public void setPassword(java.lang.String);
  public com.serotonin.bacnet4j.obj.BACnetObject getObjectRequired(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public java.util.List<com.serotonin.bacnet4j.obj.BACnetObject> getLocalObjects();
  public com.serotonin.bacnet4j.obj.BACnetObject getObject(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public com.serotonin.bacnet4j.obj.BACnetObject getObject(java.lang.String);
  public void addObject(com.serotonin.bacnet4j.obj.BACnetObject) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getNextInstanceObjectIdentifier(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public void removeObject(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.constructed.ServicesSupported getServicesSupported() throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.enums.MaxApduLength, com.serotonin.bacnet4j.type.enumerated.Segmentation, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.enums.MaxApduLength, com.serotonin.bacnet4j.type.enumerated.Segmentation, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendUnconfirmed(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendUnconfirmed(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendLocalBroadcast(com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendGlobalBroadcast(com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendBroadcast(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.RemoteDevice getRemoteDevice(int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.RemoteDevice getRemoteDevice(int, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.RemoteDevice getRemoteDeviceCreate(int, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void addRemoteDevice(com.serotonin.bacnet4j.RemoteDevice);
  public java.util.List<com.serotonin.bacnet4j.RemoteDevice> getRemoteDevices();
  public com.serotonin.bacnet4j.RemoteDevice getRemoteDevice(com.serotonin.bacnet4j.type.constructed.Address);
  public com.serotonin.bacnet4j.RemoteDevice getRemoteDeviceByUserData(java.lang.Object);
  public java.util.List<com.serotonin.bacnet4j.exception.BACnetException> sendIntrinsicEvent(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, int, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.Address[] getAllLocalAddresses();
  public com.serotonin.bacnet4j.service.unconfirmed.IAmRequest getIAm();
  public com.serotonin.bacnet4j.RemoteDevice findRemoteDevice(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  static {};
}
Compiled from "RemoteDevice.java"
public class com.serotonin.bacnet4j.RemoteDevice implements java.io.Serializable {
  public com.serotonin.bacnet4j.RemoteDevice(int, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public java.lang.String toString();
  public java.lang.String toExtendedString();
  public void setObject(com.serotonin.bacnet4j.RemoteObject);
  public com.serotonin.bacnet4j.RemoteObject getObject(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public java.util.List<com.serotonin.bacnet4j.RemoteObject> getObjects();
  public void clearObjects();
  public com.serotonin.bacnet4j.type.constructed.Address getAddress();
  public com.serotonin.bacnet4j.type.primitive.OctetString getLinkService();
  public int getMaxAPDULengthAccepted();
  public void setMaxAPDULengthAccepted(int);
  public com.serotonin.bacnet4j.type.enumerated.Segmentation getSegmentationSupported();
  public void setSegmentationSupported(com.serotonin.bacnet4j.type.enumerated.Segmentation);
  public int getVendorId();
  public void setVendorId(int);
  public java.lang.String getVendorName();
  public void setVendorName(java.lang.String);
  public java.lang.String getFirmwareRevision();
  public void setFirmwareRevision(java.lang.String);
  public java.lang.String getApplicationSoftwareVersion();
  public void setApplicationSoftwareVersion(java.lang.String);
  public int getInstanceNumber();
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.lang.String getModelName();
  public void setModelName(java.lang.String);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getProtocolVersion();
  public void setProtocolVersion(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getProtocolRevision();
  public void setProtocolRevision(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.constructed.ServicesSupported getServicesSupported();
  public void setServicesSupported(com.serotonin.bacnet4j.type.constructed.ServicesSupported);
  public java.lang.Object getUserData();
  public void setUserData(java.lang.Object);
  public int getMaxReadMultipleReferences();
  public void reduceMaxReadMultipleReferences();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "RemoteObject.java"
public class com.serotonin.bacnet4j.RemoteObject implements java.io.Serializable {
  public com.serotonin.bacnet4j.RemoteObject(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public void setObjectName(java.lang.String);
  public java.lang.String getObjectName();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "APDU.java"
public abstract class com.serotonin.bacnet4j.apdu.APDU implements java.io.Serializable {
  public com.serotonin.bacnet4j.apdu.APDU();
  public static com.serotonin.bacnet4j.apdu.APDU createAPDU(com.serotonin.bacnet4j.type.constructed.ServicesSupported, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public abstract byte getPduType();
  public abstract void write(org.free.bacnet4j.util.ByteQueue);
  protected int getShiftedTypeId(byte);
  public abstract boolean expectsReply();
}
Compiled from "Abort.java"
public class com.serotonin.bacnet4j.apdu.Abort extends com.serotonin.bacnet4j.apdu.AckAPDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.Abort(boolean, byte, int);
  public byte getPduType();
  public boolean isServer();
  public int getAbortReason();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.apdu.Abort(org.free.bacnet4j.util.ByteQueue);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  public boolean expectsReply();
}
Compiled from "AckAPDU.java"
public abstract class com.serotonin.bacnet4j.apdu.AckAPDU extends com.serotonin.bacnet4j.apdu.APDU {
  protected byte originalInvokeId;
  public com.serotonin.bacnet4j.apdu.AckAPDU();
  public byte getOriginalInvokeId();
  public boolean isServer();
}
Compiled from "ComplexACK.java"
public class com.serotonin.bacnet4j.apdu.ComplexACK extends com.serotonin.bacnet4j.apdu.AckAPDU implements com.serotonin.bacnet4j.apdu.Segmentable {
  public static final byte TYPE_ID;
  public static int getHeaderSize(boolean);
  public com.serotonin.bacnet4j.apdu.ComplexACK(boolean, boolean, byte, int, int, com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService);
  public com.serotonin.bacnet4j.apdu.ComplexACK(boolean, boolean, byte, int, int, byte, org.free.bacnet4j.util.ByteQueue);
  public byte getPduType();
  public boolean isMoreFollows();
  public int getProposedWindowSize();
  public boolean isSegmentedMessage();
  public int getSequenceNumber();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService getService();
  public void appendServiceData(org.free.bacnet4j.util.ByteQueue);
  public org.free.bacnet4j.util.ByteQueue getServiceData();
  public byte getInvokeId();
  public java.lang.String toString();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.apdu.ComplexACK(org.free.bacnet4j.util.ByteQueue);
  public void parseServiceData() throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.APDU clone(boolean, int, int, org.free.bacnet4j.util.ByteQueue);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "ConfirmedRequest.java"
public class com.serotonin.bacnet4j.apdu.ConfirmedRequest extends com.serotonin.bacnet4j.apdu.APDU implements com.serotonin.bacnet4j.apdu.Segmentable {
  public static final byte TYPE_ID;
  public static int getHeaderSize(boolean);
  public com.serotonin.bacnet4j.apdu.ConfirmedRequest(boolean, boolean, boolean, com.serotonin.bacnet4j.enums.MaxSegments, com.serotonin.bacnet4j.enums.MaxApduLength, byte, int, int, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService);
  public com.serotonin.bacnet4j.apdu.ConfirmedRequest(boolean, boolean, boolean, com.serotonin.bacnet4j.enums.MaxSegments, com.serotonin.bacnet4j.enums.MaxApduLength, byte, int, int, byte, org.free.bacnet4j.util.ByteQueue);
  public byte getPduType();
  public byte getInvokeId();
  public int getSequenceNumber();
  public com.serotonin.bacnet4j.enums.MaxApduLength getMaxApduLengthAccepted();
  public com.serotonin.bacnet4j.enums.MaxSegments getMaxSegmentsAccepted();
  public boolean isMoreFollows();
  public int getProposedWindowSize();
  public boolean isSegmentedMessage();
  public boolean isSegmentedResponseAccepted();
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService getServiceRequest();
  public void appendServiceData(org.free.bacnet4j.util.ByteQueue);
  public org.free.bacnet4j.util.ByteQueue getServiceData();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.apdu.ConfirmedRequest(com.serotonin.bacnet4j.type.constructed.ServicesSupported, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void parseServiceData() throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.APDU clone(boolean, int, int, org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "Error.java"
public class com.serotonin.bacnet4j.apdu.Error extends com.serotonin.bacnet4j.apdu.AckAPDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.Error(byte, com.serotonin.bacnet4j.type.error.BaseError);
  public byte getPduType();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.apdu.Error(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.error.BaseError getError();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "Reject.java"
public class com.serotonin.bacnet4j.apdu.Reject extends com.serotonin.bacnet4j.apdu.AckAPDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.Reject(byte, com.serotonin.bacnet4j.type.enumerated.RejectReason);
  public byte getPduType();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.apdu.Reject(org.free.bacnet4j.util.ByteQueue);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  public boolean expectsReply();
}
Compiled from "SegmentACK.java"
public class com.serotonin.bacnet4j.apdu.SegmentACK extends com.serotonin.bacnet4j.apdu.AckAPDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.SegmentACK(boolean, boolean, byte, int, int, boolean);
  public byte getPduType();
  public int getActualWindowSize();
  public boolean isNegativeAck();
  public int getSequenceNumber();
  public boolean isServer();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.apdu.SegmentACK(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "Segmentable.java"
public interface com.serotonin.bacnet4j.apdu.Segmentable {
  public abstract byte getInvokeId();
  public abstract boolean isSegmentedMessage();
  public abstract boolean isMoreFollows();
  public abstract int getSequenceNumber();
  public abstract int getProposedWindowSize();
  public abstract void appendServiceData(org.free.bacnet4j.util.ByteQueue);
  public abstract void parseServiceData() throws com.serotonin.bacnet4j.exception.BACnetException;
  public abstract org.free.bacnet4j.util.ByteQueue getServiceData();
  public abstract com.serotonin.bacnet4j.apdu.APDU clone(boolean, int, int, org.free.bacnet4j.util.ByteQueue);
}
Compiled from "SimpleACK.java"
public class com.serotonin.bacnet4j.apdu.SimpleACK extends com.serotonin.bacnet4j.apdu.AckAPDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.SimpleACK(byte, int);
  public byte getPduType();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.apdu.SimpleACK(org.free.bacnet4j.util.ByteQueue);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "UnconfirmedRequest.java"
public class com.serotonin.bacnet4j.apdu.UnconfirmedRequest extends com.serotonin.bacnet4j.apdu.APDU {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.apdu.UnconfirmedRequest(com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService);
  public byte getPduType();
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService getService();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.apdu.UnconfirmedRequest(com.serotonin.bacnet4j.type.constructed.ServicesSupported, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  public boolean expectsReply();
}
Compiled from "BACnetUtils.java"
public class com.serotonin.bacnet4j.base.BACnetUtils {
  public com.serotonin.bacnet4j.base.BACnetUtils();
  public static void pushShort(org.free.bacnet4j.util.ByteQueue, long);
  public static void pushInt(org.free.bacnet4j.util.ByteQueue, long);
  public static void pushLong(org.free.bacnet4j.util.ByteQueue, long);
  public static int popShort(org.free.bacnet4j.util.ByteQueue);
  public static int popInt(org.free.bacnet4j.util.ByteQueue);
  public static long popLong(org.free.bacnet4j.util.ByteQueue);
  public static int toInt(byte);
  public static long toLong(byte);
  public static byte[] convertToBytes(boolean[]);
  public static boolean[] convertToBooleans(byte[], int);
  public static byte[] dottedStringToBytes(java.lang.String) throws java.lang.NumberFormatException;
  public static java.lang.String bytesToDottedString(byte[]);
}
Compiled from "MstpObjectList.java"
public class com.serotonin.bacnet4j.discovery.MstpObjectList {
  static com.serotonin.bacnet4j.LocalDevice localDevice;
  static boolean whoIsReceived;
  public com.serotonin.bacnet4j.discovery.MstpObjectList();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static void getObjectList(com.serotonin.bacnet4j.RemoteDevice) throws com.serotonin.bacnet4j.exception.BACnetException;
  static void addPropertyReferences(com.serotonin.bacnet4j.util.PropertyReferences, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
}
Compiled from "MstpObjectList.java"
final class com.serotonin.bacnet4j.discovery.MstpObjectList$1 implements com.serotonin.bacnet4j.util.RequestListener {
  com.serotonin.bacnet4j.discovery.MstpObjectList$1();
  public boolean requestProgress(double, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
}
Compiled from "MstpObjectList.java"
class com.serotonin.bacnet4j.discovery.MstpObjectList$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  com.serotonin.bacnet4j.discovery.MstpObjectList$Listener();
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
}
Compiled from "MstpObjectList.java"
class com.serotonin.bacnet4j.discovery.MstpObjectList$Listener$1 implements java.lang.Runnable {
  final com.serotonin.bacnet4j.RemoteDevice val$d;
  final com.serotonin.bacnet4j.discovery.MstpObjectList$Listener this$0;
  com.serotonin.bacnet4j.discovery.MstpObjectList$Listener$1(com.serotonin.bacnet4j.discovery.MstpObjectList$Listener, com.serotonin.bacnet4j.RemoteDevice);
  public void run();
}
Compiled from "WhoIs.java"
public class com.serotonin.bacnet4j.discovery.WhoIs {
  public com.serotonin.bacnet4j.discovery.WhoIs();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "DayOfWeek.java"
public final class com.serotonin.bacnet4j.enums.DayOfWeek extends java.lang.Enum<com.serotonin.bacnet4j.enums.DayOfWeek> {
  public static final com.serotonin.bacnet4j.enums.DayOfWeek MONDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek TUESDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek WEDNESDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek THURSDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek FRIDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek SATURDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek SUNDAY;
  public static final com.serotonin.bacnet4j.enums.DayOfWeek UNSPECIFIED;
  public static com.serotonin.bacnet4j.enums.DayOfWeek[] values();
  public static com.serotonin.bacnet4j.enums.DayOfWeek valueOf(java.lang.String);
  public byte getId();
  public static com.serotonin.bacnet4j.enums.DayOfWeek valueOf(byte);
  static {};
}
Compiled from "MaxApduLength.java"
public final class com.serotonin.bacnet4j.enums.MaxApduLength extends java.lang.Enum<com.serotonin.bacnet4j.enums.MaxApduLength> {
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_50;
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_128;
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_206;
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_480;
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_1024;
  public static final com.serotonin.bacnet4j.enums.MaxApduLength UP_TO_1476;
  public static com.serotonin.bacnet4j.enums.MaxApduLength[] values();
  public static com.serotonin.bacnet4j.enums.MaxApduLength valueOf(java.lang.String);
  public byte getId();
  public int getMaxLength();
  public static com.serotonin.bacnet4j.enums.MaxApduLength valueOf(byte);
  static {};
}
Compiled from "MaxSegments.java"
public final class com.serotonin.bacnet4j.enums.MaxSegments extends java.lang.Enum<com.serotonin.bacnet4j.enums.MaxSegments> {
  public static final com.serotonin.bacnet4j.enums.MaxSegments UNSPECIFIED;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_2;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_4;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_8;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_16;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_32;
  public static final com.serotonin.bacnet4j.enums.MaxSegments UP_TO_64;
  public static final com.serotonin.bacnet4j.enums.MaxSegments MORE_THAN_64;
  public static com.serotonin.bacnet4j.enums.MaxSegments[] values();
  public static com.serotonin.bacnet4j.enums.MaxSegments valueOf(java.lang.String);
  public byte getId();
  public int getMaxSegments();
  public static com.serotonin.bacnet4j.enums.MaxSegments valueOf(byte);
  static {};
}
Compiled from "Month.java"
public final class com.serotonin.bacnet4j.enums.Month extends java.lang.Enum<com.serotonin.bacnet4j.enums.Month> {
  public static final com.serotonin.bacnet4j.enums.Month JANUARY;
  public static final com.serotonin.bacnet4j.enums.Month FEBRUARY;
  public static final com.serotonin.bacnet4j.enums.Month MARCH;
  public static final com.serotonin.bacnet4j.enums.Month APRIL;
  public static final com.serotonin.bacnet4j.enums.Month MAY;
  public static final com.serotonin.bacnet4j.enums.Month JUNE;
  public static final com.serotonin.bacnet4j.enums.Month JULY;
  public static final com.serotonin.bacnet4j.enums.Month AUGUST;
  public static final com.serotonin.bacnet4j.enums.Month SEPTEMBER;
  public static final com.serotonin.bacnet4j.enums.Month OCTOBER;
  public static final com.serotonin.bacnet4j.enums.Month NOVEMBER;
  public static final com.serotonin.bacnet4j.enums.Month DECEMBER;
  public static final com.serotonin.bacnet4j.enums.Month ODD_MONTHS;
  public static final com.serotonin.bacnet4j.enums.Month EVEN_MONTHS;
  public static final com.serotonin.bacnet4j.enums.Month UNSPECIFIED;
  public static com.serotonin.bacnet4j.enums.Month[] values();
  public static com.serotonin.bacnet4j.enums.Month valueOf(java.lang.String);
  public byte getId();
  public static com.serotonin.bacnet4j.enums.Month valueOf(byte);
  static {};
}
Compiled from "DefaultExceptionListener.java"
public class com.serotonin.bacnet4j.event.DefaultExceptionListener implements com.serotonin.bacnet4j.event.ExceptionListener {
  public com.serotonin.bacnet4j.event.DefaultExceptionListener();
  public void unimplementedVendorService(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, org.free.bacnet4j.util.ByteQueue);
  public void receivedException(java.lang.Exception);
  public void receivedThrowable(java.lang.Throwable);
}
Compiled from "DeviceEventAdapter.java"
public class com.serotonin.bacnet4j.event.DeviceEventAdapter implements com.serotonin.bacnet4j.event.DeviceEventListener {
  public com.serotonin.bacnet4j.event.DeviceEventAdapter();
  public void listenerException(java.lang.Throwable);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "DeviceEventAdapterAsync.java"
public class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync implements com.serotonin.bacnet4j.event.DeviceEventListener {
  public com.serotonin.bacnet4j.event.DeviceEventAdapterAsync();
  public com.serotonin.bacnet4j.event.DeviceEventAdapterAsync(java.util.concurrent.ExecutorService);
  public java.util.concurrent.ExecutorService getDispatchService();
  public void setDispatchService(java.util.concurrent.ExecutorService);
  public void listenerException(java.lang.Throwable);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public void iAmReceivedAsync(com.serotonin.bacnet4j.RemoteDevice);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void propertyWrittenAsync(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void iHaveReceivedAsync(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void covNotificationReceivedASync(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void eventNotificationReceivedAsyn(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void textMessageReceivedAsync(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void privateTransferReceivedAsync(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void reinitializeDeviceAsync(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
  public void synchronizeTimeAsync(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$1 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.RemoteDevice val$d;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$1(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.RemoteDevice);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$2 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.obj.BACnetObject val$obj;
  final com.serotonin.bacnet4j.type.constructed.PropertyValue val$pv;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$2(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$3 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.RemoteDevice val$d;
  final com.serotonin.bacnet4j.RemoteObject val$o;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$3(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$4 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$subscriberProcessIdentifier;
  final com.serotonin.bacnet4j.RemoteDevice val$initiatingDevice;
  final com.serotonin.bacnet4j.type.primitive.ObjectIdentifier val$monitoredObjectIdentifier;
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$timeRemaining;
  final com.serotonin.bacnet4j.type.constructed.SequenceOf val$listOfValues;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$4(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$5 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$processIdentifier;
  final com.serotonin.bacnet4j.RemoteDevice val$initiatingDevice;
  final com.serotonin.bacnet4j.type.primitive.ObjectIdentifier val$eventObjectIdentifier;
  final com.serotonin.bacnet4j.type.constructed.TimeStamp val$timeStamp;
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$notificationClass;
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$priority;
  final com.serotonin.bacnet4j.type.enumerated.EventType val$eventType;
  final com.serotonin.bacnet4j.type.primitive.CharacterString val$messageText;
  final com.serotonin.bacnet4j.type.enumerated.NotifyType val$notifyType;
  final com.serotonin.bacnet4j.type.primitive.Boolean val$ackRequired;
  final com.serotonin.bacnet4j.type.enumerated.EventState val$fromState;
  final com.serotonin.bacnet4j.type.enumerated.EventState val$toState;
  final com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters val$eventValues;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$5(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$6 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.RemoteDevice val$textMessageSourceDevice;
  final com.serotonin.bacnet4j.type.constructed.Choice val$messageClass;
  final com.serotonin.bacnet4j.type.enumerated.MessagePriority val$messagePriority;
  final com.serotonin.bacnet4j.type.primitive.CharacterString val$message;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$6(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$7 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$vendorId;
  final com.serotonin.bacnet4j.type.primitive.UnsignedInteger val$serviceNumber;
  final com.serotonin.bacnet4j.type.Encodable val$serviceParameters;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$7(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$8 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice val$reinitializedStateOfDevice;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$8(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$9 implements com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  final com.serotonin.bacnet4j.type.constructed.DateTime val$dateTime;
  final boolean val$utc;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$9(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
  public void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
interface com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback {
  public abstract void dispatch();
}
Compiled from "DeviceEventAdapterAsync.java"
class com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$EventDispatcher implements java.lang.Runnable {
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback callback;
  final com.serotonin.bacnet4j.event.DeviceEventAdapterAsync this$0;
  com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$EventDispatcher(com.serotonin.bacnet4j.event.DeviceEventAdapterAsync, com.serotonin.bacnet4j.event.DeviceEventAdapterAsync$DispatchCallback);
  public void run();
}
Compiled from "DeviceEventHandler.java"
public class com.serotonin.bacnet4j.event.DeviceEventHandler {
  final java.util.concurrent.ConcurrentLinkedQueue<com.serotonin.bacnet4j.event.DeviceEventListener> listeners;
  public com.serotonin.bacnet4j.event.DeviceEventHandler();
  public void addListener(com.serotonin.bacnet4j.event.DeviceEventListener);
  public void removeListener(com.serotonin.bacnet4j.event.DeviceEventListener);
  public int getListenerCount();
  public boolean checkAllowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void fireIAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void fireIHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void fireCovNotification(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void fireEventNotification(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void fireTextMessage(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void firePrivateTransfer(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "DeviceEventListener.java"
public interface com.serotonin.bacnet4j.event.DeviceEventListener {
  public abstract void listenerException(java.lang.Throwable);
  public abstract void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public abstract boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public abstract void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public abstract void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public abstract void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public abstract void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public abstract void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public abstract void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public abstract void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public abstract void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "ExceptionDispatch.java"
public class com.serotonin.bacnet4j.event.ExceptionDispatch {
  public com.serotonin.bacnet4j.event.ExceptionDispatch();
  public static void addListener(com.serotonin.bacnet4j.event.ExceptionListener);
  public static void removeListener(com.serotonin.bacnet4j.event.ExceptionListener);
  public void removeDefaultExceptionListener();
  public static void fireUnimplementedVendorService(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, org.free.bacnet4j.util.ByteQueue);
  public static void fireReceivedException(java.lang.Exception);
  public static void fireReceivedThrowable(java.lang.Throwable);
  static {};
}
Compiled from "ExceptionListener.java"
public interface com.serotonin.bacnet4j.event.ExceptionListener {
  public abstract void unimplementedVendorService(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, org.free.bacnet4j.util.ByteQueue);
  public abstract void receivedException(java.lang.Exception);
  public abstract void receivedThrowable(java.lang.Throwable);
}
Compiled from "AbortAPDUException.java"
public class com.serotonin.bacnet4j.exception.AbortAPDUException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.AbortAPDUException(com.serotonin.bacnet4j.apdu.Abort);
  public com.serotonin.bacnet4j.apdu.Abort getApdu();
}
Compiled from "BACnetErrorException.java"
public class com.serotonin.bacnet4j.exception.BACnetErrorException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.BACnetErrorException(byte, com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public com.serotonin.bacnet4j.exception.BACnetErrorException(byte, com.serotonin.bacnet4j.exception.BACnetServiceException);
  public com.serotonin.bacnet4j.exception.BACnetErrorException(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public com.serotonin.bacnet4j.exception.BACnetErrorException(com.serotonin.bacnet4j.exception.BACnetServiceException);
  public com.serotonin.bacnet4j.exception.BACnetErrorException(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode, java.lang.String);
  public com.serotonin.bacnet4j.exception.BACnetErrorException(com.serotonin.bacnet4j.type.error.BaseError);
  public com.serotonin.bacnet4j.type.error.BaseError getError();
}
Compiled from "BACnetException.java"
public class com.serotonin.bacnet4j.exception.BACnetException extends java.lang.Exception {
  public com.serotonin.bacnet4j.exception.BACnetException();
  public com.serotonin.bacnet4j.exception.BACnetException(java.lang.String, java.lang.Throwable);
  public com.serotonin.bacnet4j.exception.BACnetException(java.lang.String);
  public com.serotonin.bacnet4j.exception.BACnetException(java.lang.Throwable);
}
Compiled from "BACnetRejectException.java"
public class com.serotonin.bacnet4j.exception.BACnetRejectException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.BACnetRejectException(com.serotonin.bacnet4j.type.enumerated.RejectReason);
  public com.serotonin.bacnet4j.type.enumerated.RejectReason getRejectReason();
}
Compiled from "BACnetRuntimeException.java"
public class com.serotonin.bacnet4j.exception.BACnetRuntimeException extends java.lang.RuntimeException {
  public com.serotonin.bacnet4j.exception.BACnetRuntimeException();
  public com.serotonin.bacnet4j.exception.BACnetRuntimeException(java.lang.String, java.lang.Throwable);
  public com.serotonin.bacnet4j.exception.BACnetRuntimeException(java.lang.String);
  public com.serotonin.bacnet4j.exception.BACnetRuntimeException(java.lang.Throwable);
}
Compiled from "BACnetServiceException.java"
public class com.serotonin.bacnet4j.exception.BACnetServiceException extends java.lang.Exception {
  public com.serotonin.bacnet4j.exception.BACnetServiceException(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public com.serotonin.bacnet4j.exception.BACnetServiceException(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode, java.lang.String);
  public com.serotonin.bacnet4j.type.enumerated.ErrorClass getErrorClass();
  public com.serotonin.bacnet4j.type.enumerated.ErrorCode getErrorCode();
  public boolean equals(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public java.lang.String getMessage();
}
Compiled from "BACnetTimeoutException.java"
public class com.serotonin.bacnet4j.exception.BACnetTimeoutException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.BACnetTimeoutException();
  public com.serotonin.bacnet4j.exception.BACnetTimeoutException(java.lang.String);
}
Compiled from "ConfirmedRequestParseException.java"
public class com.serotonin.bacnet4j.exception.ConfirmedRequestParseException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.ConfirmedRequestParseException(int);
  public com.serotonin.bacnet4j.exception.ConfirmedRequestParseException(int, java.lang.Throwable);
  public int getOriginalInvokeId();
}
Compiled from "ErrorAPDUException.java"
public class com.serotonin.bacnet4j.exception.ErrorAPDUException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.ErrorAPDUException(com.serotonin.bacnet4j.apdu.Error);
  public com.serotonin.bacnet4j.apdu.Error getApdu();
  public com.serotonin.bacnet4j.type.constructed.BACnetError getBACnetError();
}
Compiled from "IllegalPduTypeException.java"
public class com.serotonin.bacnet4j.exception.IllegalPduTypeException extends com.serotonin.bacnet4j.exception.BACnetRuntimeException {
  public com.serotonin.bacnet4j.exception.IllegalPduTypeException(java.lang.String);
}
Compiled from "NotImplementedException.java"
public class com.serotonin.bacnet4j.exception.NotImplementedException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.NotImplementedException();
}
Compiled from "PropertyValueException.java"
public class com.serotonin.bacnet4j.exception.PropertyValueException extends java.lang.Exception {
  public com.serotonin.bacnet4j.exception.PropertyValueException(com.serotonin.bacnet4j.type.constructed.BACnetError);
  public com.serotonin.bacnet4j.type.constructed.BACnetError getError();
}
Compiled from "ReflectionException.java"
public class com.serotonin.bacnet4j.exception.ReflectionException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.ReflectionException(java.lang.Throwable);
}
Compiled from "RejectAPDUException.java"
public class com.serotonin.bacnet4j.exception.RejectAPDUException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.RejectAPDUException(com.serotonin.bacnet4j.apdu.Reject);
  public com.serotonin.bacnet4j.apdu.Reject getApdu();
}
Compiled from "SegmentedMessageAbortedException.java"
public class com.serotonin.bacnet4j.exception.SegmentedMessageAbortedException extends com.serotonin.bacnet4j.exception.BACnetException {
  public com.serotonin.bacnet4j.exception.SegmentedMessageAbortedException(com.serotonin.bacnet4j.apdu.Abort);
  public com.serotonin.bacnet4j.apdu.Abort getAbort();
}
Compiled from "IncomingRequestParser.java"
public abstract class com.serotonin.bacnet4j.npdu.IncomingRequestParser {
  protected final org.free.bacnet4j.util.ByteQueue originalQueue;
  protected final org.free.bacnet4j.util.ByteQueue queue;
  protected com.serotonin.bacnet4j.type.constructed.Address from;
  protected com.serotonin.bacnet4j.type.primitive.OctetString linkService;
  protected com.serotonin.bacnet4j.type.constructed.ServicesSupported servicesSupported;
  protected com.serotonin.bacnet4j.npdu.IncomingRequestParser(com.serotonin.bacnet4j.npdu.Network, org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void run();
  protected abstract void parseFrame() throws com.serotonin.bacnet4j.npdu.MessageValidationAssertionException;
  public com.serotonin.bacnet4j.apdu.APDU parseApdu() throws java.lang.Exception;
}
Compiled from "IncomingRequestProcessor.java"
public class com.serotonin.bacnet4j.npdu.IncomingRequestProcessor {
  public static com.serotonin.bacnet4j.npdu.IncomingRequestProcessor getIncomingRequestProcessor();
  public void submit(com.serotonin.bacnet4j.npdu.IncomingRequestParser);
  static {};
}
Compiled from "IncomingRequestProcessor.java"
class com.serotonin.bacnet4j.npdu.IncomingRequestProcessor$1 implements java.lang.Runnable {
  final com.serotonin.bacnet4j.npdu.IncomingRequestParser val$irp;
  final com.serotonin.bacnet4j.npdu.IncomingRequestProcessor this$0;
  com.serotonin.bacnet4j.npdu.IncomingRequestProcessor$1(com.serotonin.bacnet4j.npdu.IncomingRequestProcessor, com.serotonin.bacnet4j.npdu.IncomingRequestParser);
  public void run();
}
Compiled from "MessageValidationAssertionException.java"
public class com.serotonin.bacnet4j.npdu.MessageValidationAssertionException extends java.lang.Exception {
  public com.serotonin.bacnet4j.npdu.MessageValidationAssertionException(java.lang.String);
}
Compiled from "NPCI.java"
public class com.serotonin.bacnet4j.npdu.NPCI {
  public com.serotonin.bacnet4j.npdu.NPCI(com.serotonin.bacnet4j.type.constructed.Address);
  public com.serotonin.bacnet4j.npdu.NPCI(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.constructed.Address, boolean);
  public com.serotonin.bacnet4j.npdu.NPCI(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.constructed.Address, boolean, int, int);
  public com.serotonin.bacnet4j.npdu.NPCI(org.free.bacnet4j.util.ByteQueue);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public boolean hasDestinationInfo();
  public boolean isDestinationBroadcast();
  public boolean hasSourceInfo();
  public boolean isExpectingReply();
  public boolean isNetworkMessage();
  public boolean isVendorSpecificNetworkMessage();
  public int getNetworkPriority();
  public byte[] getDestinationAddress();
  public int getDestinationLength();
  public int getDestinationNetwork();
  public int getHopCount();
  public int getMessageType();
  public byte[] getSourceAddress();
  public int getSourceLength();
  public int getSourceNetwork();
  public int getVendorId();
  public int getVersion();
}
Compiled from "Network.java"
public abstract class com.serotonin.bacnet4j.npdu.Network {
  public com.serotonin.bacnet4j.npdu.Network();
  public com.serotonin.bacnet4j.npdu.Network(int);
  public int getLocalNetworkNumber();
  public void setTransport(com.serotonin.bacnet4j.transport.Transport);
  public com.serotonin.bacnet4j.transport.Transport getTransport();
  public abstract com.serotonin.bacnet4j.npdu.NetworkIdentifier getNetworkIdentifier();
  public abstract com.serotonin.bacnet4j.enums.MaxApduLength getMaxApduLength();
  public void initialize(com.serotonin.bacnet4j.transport.Transport) throws java.lang.Exception;
  public abstract void terminate();
  public abstract com.serotonin.bacnet4j.type.constructed.Address getLocalBroadcastAddress();
  public abstract com.serotonin.bacnet4j.type.constructed.Address[] getAllLocalAddresses();
  public abstract void sendAPDU(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.apdu.APDU, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public abstract void checkSendThread();
  protected void writeNpci(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.apdu.APDU);
  protected boolean isLocal(com.serotonin.bacnet4j.type.constructed.Address);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "NetworkIdentifier.java"
public abstract class com.serotonin.bacnet4j.npdu.NetworkIdentifier {
  public com.serotonin.bacnet4j.npdu.NetworkIdentifier();
}
Compiled from "InetAddrCache.java"
public class com.serotonin.bacnet4j.npdu.ip.InetAddrCache {
  public com.serotonin.bacnet4j.npdu.ip.InetAddrCache();
  public static java.net.InetSocketAddress get(java.lang.String, int);
  public static java.net.InetSocketAddress get(java.net.InetAddress, int);
  static {};
}
Compiled from "IpNetwork.java"
public class com.serotonin.bacnet4j.npdu.ip.IpNetwork extends com.serotonin.bacnet4j.npdu.Network {
  public static final java.lang.String DEFAULT_BROADCAST_IP;
  public static final int DEFAULT_PORT;
  public static final java.lang.String DEFAULT_BIND_IP;
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork();
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork(java.lang.String);
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork(java.lang.String, int);
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork(java.lang.String, int, java.lang.String);
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork(java.lang.String, int, java.lang.String, int);
  public com.serotonin.bacnet4j.npdu.NetworkIdentifier getNetworkIdentifier();
  public com.serotonin.bacnet4j.enums.MaxApduLength getMaxApduLength();
  public int getPort();
  public java.lang.String getLocalBindAddress();
  public java.lang.String getBroadcastIp();
  public void initialize(com.serotonin.bacnet4j.transport.Transport) throws java.lang.Exception;
  public void terminate();
  public com.serotonin.bacnet4j.type.constructed.Address getLocalBroadcastAddress();
  public com.serotonin.bacnet4j.type.constructed.Address getBroadcastAddress(int);
  public void checkSendThread();
  public void sendRegisterForeignDeviceMessage(java.net.InetSocketAddress, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendAPDU(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.apdu.APDU, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.APDU createApdu(byte[]) throws java.lang.Exception;
  public com.serotonin.bacnet4j.type.constructed.Address getAddress(java.net.InetAddress);
  public static java.net.InetAddress getDefaultLocalInetAddress() throws java.net.UnknownHostException, java.net.SocketException;
  public com.serotonin.bacnet4j.type.constructed.Address[] getAllLocalAddresses();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static java.net.DatagramSocket access$100(com.serotonin.bacnet4j.npdu.ip.IpNetwork);
  static org.apache.log4j.Logger access$200();
  static {};
}
Compiled from "IpNetwork.java"
class com.serotonin.bacnet4j.npdu.ip.IpNetwork$1 {
}
Compiled from "IpNetwork.java"
class com.serotonin.bacnet4j.npdu.ip.IpNetwork$IncomingMessageExecutor extends com.serotonin.bacnet4j.npdu.IncomingRequestParser {
  public com.serotonin.bacnet4j.npdu.ip.IpNetwork$IncomingMessageExecutor(com.serotonin.bacnet4j.npdu.Network, org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.primitive.OctetString);
  protected void parseFrame() throws com.serotonin.bacnet4j.npdu.MessageValidationAssertionException;
}
Compiled from "IpNetwork.java"
class com.serotonin.bacnet4j.npdu.ip.IpNetwork$IncomingMessageProcessor extends java.lang.Thread {
  final com.serotonin.bacnet4j.npdu.ip.IpNetwork this$0;
  public void run();
  com.serotonin.bacnet4j.npdu.ip.IpNetwork$IncomingMessageProcessor(com.serotonin.bacnet4j.npdu.ip.IpNetwork, com.serotonin.bacnet4j.npdu.ip.IpNetwork$1);
}
Compiled from "IpNetworkIdentifier.java"
public class com.serotonin.bacnet4j.npdu.ip.IpNetworkIdentifier extends com.serotonin.bacnet4j.npdu.NetworkIdentifier {
  public com.serotonin.bacnet4j.npdu.ip.IpNetworkIdentifier(int, java.lang.String);
  public int getPort();
  public java.lang.String getLocalBindAddress();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SegmentWindow.java"
public class com.serotonin.bacnet4j.npdu.ip.SegmentWindow {
  public com.serotonin.bacnet4j.npdu.ip.SegmentWindow(int, int);
  public com.serotonin.bacnet4j.apdu.Segmentable getSegment(int);
  public void setSegment(com.serotonin.bacnet4j.apdu.Segmentable);
  public boolean fitsInWindow(com.serotonin.bacnet4j.apdu.Segmentable);
  public boolean isEmpty();
  public boolean isFull();
  public void clear(int);
  public boolean isLastSegment(int);
}
Compiled from "WaitingRoom.java"
public class com.serotonin.bacnet4j.npdu.ip.WaitingRoom {
  public com.serotonin.bacnet4j.npdu.ip.WaitingRoom();
  public synchronized com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key enterClient(java.net.InetSocketAddress, com.serotonin.bacnet4j.type.constructed.Address);
  public com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key enterServer(java.net.InetSocketAddress, com.serotonin.bacnet4j.type.constructed.Address, byte);
  public com.serotonin.bacnet4j.apdu.AckAPDU getAck(com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.ConfirmedRequest getRequest(com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.Segmentable getSegmentable(com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.APDU getAPDU(com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void leave(com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key);
  public void notifyMember(java.net.InetSocketAddress, com.serotonin.bacnet4j.type.constructed.Address, byte, boolean, com.serotonin.bacnet4j.apdu.APDU) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "WaitingRoom.java"
public class com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key {
  final com.serotonin.bacnet4j.npdu.ip.WaitingRoom this$0;
  public com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Key(com.serotonin.bacnet4j.npdu.ip.WaitingRoom, java.net.InetSocketAddress, com.serotonin.bacnet4j.type.constructed.Address, byte, boolean);
  public java.net.InetSocketAddress getPeer();
  public com.serotonin.bacnet4j.type.constructed.Address getLinkService();
  public byte getInvokeId();
  public boolean isFromServer();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "WaitingRoom.java"
class com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Member {
  final com.serotonin.bacnet4j.npdu.ip.WaitingRoom this$0;
  com.serotonin.bacnet4j.npdu.ip.WaitingRoom$Member(com.serotonin.bacnet4j.npdu.ip.WaitingRoom);
  synchronized void setAPDU(com.serotonin.bacnet4j.apdu.APDU);
  synchronized com.serotonin.bacnet4j.apdu.APDU getAPDU(long);
}
Compiled from "Constants.java"
public class com.serotonin.bacnet4j.npdu.mstp.Constants {
  public static final int MAX_INFO_FRAMES;
  public static final int MAX_MASTER;
  public static final int POLL;
  public static final int RETRY_TOKEN;
  public static final int MIN_OCTETS;
  public static final int FRAME_ABORT;
  public static final int FRAME_GAP;
  public static final int NO_TOKEN;
  public static final int POSTDRIVE;
  public static final int REPLY_DELAY;
  public static final int REPLY_TIMEOUT;
  public static final int ROFF;
  public static final int SLOT;
  public static final int TURNAROUND;
  public static final int USAGE_DELAY;
  public static final int USAGE_TIMEOUT;
  public static final byte BROADCAST;
  public com.serotonin.bacnet4j.npdu.mstp.Constants();
}
Compiled from "DataCRC.java"
public class com.serotonin.bacnet4j.npdu.mstp.DataCRC {
  public static final int CHECK_VALUE;
  public com.serotonin.bacnet4j.npdu.mstp.DataCRC();
  public void reset();
  public void accumulate(int);
  public void accumulate(byte);
  public boolean isOk();
  public int getCrc(com.serotonin.bacnet4j.npdu.mstp.Frame);
  public static void main(java.lang.String[]);
}
Compiled from "Frame.java"
public class com.serotonin.bacnet4j.npdu.mstp.Frame implements java.lang.Cloneable {
  public com.serotonin.bacnet4j.npdu.mstp.Frame();
  public void reset();
  public com.serotonin.bacnet4j.npdu.mstp.Frame copy();
  public com.serotonin.bacnet4j.npdu.mstp.Frame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte);
  public com.serotonin.bacnet4j.npdu.mstp.Frame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte, byte[]);
  public boolean forStation(byte);
  public boolean broadcast();
  public boolean forStationOrBroadcast(byte);
  public com.serotonin.bacnet4j.npdu.mstp.FrameType getFrameType();
  public void setFrameType(com.serotonin.bacnet4j.npdu.mstp.FrameType);
  public byte getDestinationAddress();
  public void setDestinationAddress(byte);
  public byte getSourceAddress();
  public void setSourceAddress(byte);
  public int getLength();
  public void setLength(int);
  public byte[] getData();
  public void setData(byte[]);
  public java.lang.String toString();
}
Compiled from "FrameResponseListener.java"
public interface com.serotonin.bacnet4j.npdu.mstp.FrameResponseListener {
  public abstract void response(com.serotonin.bacnet4j.npdu.mstp.Frame);
  public abstract void timeout();
}
Compiled from "FrameType.java"
public final class com.serotonin.bacnet4j.npdu.mstp.FrameType extends java.lang.Enum<com.serotonin.bacnet4j.npdu.mstp.FrameType> {
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType token;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType pollForMaster;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType replyToPollForMaster;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType testRequest;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType testResponse;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType bacnetDataExpectingReply;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType bacnetDataNotExpectingReply;
  public static final com.serotonin.bacnet4j.npdu.mstp.FrameType replyPostponed;
  public final byte id;
  public static com.serotonin.bacnet4j.npdu.mstp.FrameType[] values();
  public static com.serotonin.bacnet4j.npdu.mstp.FrameType valueOf(java.lang.String);
  public static com.serotonin.bacnet4j.npdu.mstp.FrameType forId(byte);
  public boolean oneOf(com.serotonin.bacnet4j.npdu.mstp.FrameType...);
  static {};
}
Compiled from "HeaderCRC.java"
public class com.serotonin.bacnet4j.npdu.mstp.HeaderCRC {
  public static final byte CHECK_VALUE;
  public com.serotonin.bacnet4j.npdu.mstp.HeaderCRC();
  public void reset();
  public void accumulate(int);
  public void accumulate(byte);
  public boolean isOk();
  public int getCrc(com.serotonin.bacnet4j.npdu.mstp.Frame);
  public static int calcHeaderCRC(int, int);
  public static void main(java.lang.String[]);
}
Compiled from "MasterNode.java"
public class com.serotonin.bacnet4j.npdu.mstp.MasterNode extends com.serotonin.bacnet4j.npdu.mstp.MstpNode {
  public com.serotonin.bacnet4j.npdu.mstp.MasterNode(org.free.bacnet4j.util.SerialParameters, byte, int) throws java.lang.IllegalArgumentException;
  public com.serotonin.bacnet4j.npdu.mstp.MasterNode(java.io.InputStream, java.io.OutputStream, byte, int) throws java.lang.IllegalArgumentException;
  public void setMaxInfoFrames(int);
  public void queueFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte[]);
  public void setReplyFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte[]);
  protected void doCycle();
  static {};
}
Compiled from "MasterNode.java"
final class com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState extends java.lang.Enum<com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState> {
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState idle;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState useToken;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState waitForReply;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState doneWithToken;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState passToken;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState noToken;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState pollForMaster;
  public static final com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState answerDataRequest;
  public static com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState[] values();
  public static com.serotonin.bacnet4j.npdu.mstp.MasterNode$MasterNodeState valueOf(java.lang.String);
  static {};
}
Compiled from "MstpNetwork.java"
public class com.serotonin.bacnet4j.npdu.mstp.MstpNetwork extends com.serotonin.bacnet4j.npdu.Network {
  public com.serotonin.bacnet4j.npdu.mstp.MstpNetwork(com.serotonin.bacnet4j.npdu.mstp.MstpNode);
  public com.serotonin.bacnet4j.npdu.mstp.MstpNetwork(com.serotonin.bacnet4j.npdu.mstp.MstpNode, int);
  public com.serotonin.bacnet4j.enums.MaxApduLength getMaxApduLength();
  public void initialize(com.serotonin.bacnet4j.transport.Transport) throws java.lang.Exception;
  public void terminate();
  public com.serotonin.bacnet4j.npdu.NetworkIdentifier getNetworkIdentifier();
  public com.serotonin.bacnet4j.type.constructed.Address getLocalBroadcastAddress();
  public com.serotonin.bacnet4j.type.constructed.Address[] getAllLocalAddresses();
  public void checkSendThread();
  public void sendAPDU(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.apdu.APDU, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void sendTestRequest(byte);
  void receivedFrame(com.serotonin.bacnet4j.npdu.mstp.Frame);
  public com.serotonin.bacnet4j.type.constructed.Address getAddress(byte);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "MstpNetwork.java"
class com.serotonin.bacnet4j.npdu.mstp.MstpNetwork$IncomingFrameHandler extends com.serotonin.bacnet4j.npdu.IncomingRequestParser {
  final com.serotonin.bacnet4j.npdu.mstp.MstpNetwork this$0;
  public com.serotonin.bacnet4j.npdu.mstp.MstpNetwork$IncomingFrameHandler(com.serotonin.bacnet4j.npdu.mstp.MstpNetwork, com.serotonin.bacnet4j.npdu.Network, com.serotonin.bacnet4j.npdu.mstp.Frame);
  protected void parseFrame() throws com.serotonin.bacnet4j.npdu.MessageValidationAssertionException;
}
Compiled from "MstpNetworkIdentifier.java"
public class com.serotonin.bacnet4j.npdu.mstp.MstpNetworkIdentifier extends com.serotonin.bacnet4j.npdu.NetworkIdentifier {
  public com.serotonin.bacnet4j.npdu.mstp.MstpNetworkIdentifier(java.lang.String);
  public java.lang.String getCommPortId();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "MstpNode.java"
public abstract class com.serotonin.bacnet4j.npdu.mstp.MstpNode implements java.lang.Runnable {
  public static boolean DEBUG;
  protected int inactivityDelay;
  protected final byte thisStation;
  protected com.serotonin.bacnet4j.util.TimeSource timeSource;
  java.lang.Thread thread;
  protected long lastNonSilence;
  protected final com.serotonin.bacnet4j.npdu.mstp.Frame frame;
  int eventCount;
  protected int frameCount;
  protected java.lang.String receivedInvalidFrame;
  protected boolean receivedValidFrame;
  protected boolean activity;
  public com.serotonin.bacnet4j.npdu.mstp.MstpNode(org.free.bacnet4j.util.SerialParameters, byte);
  public com.serotonin.bacnet4j.npdu.mstp.MstpNode(java.io.InputStream, java.io.OutputStream, byte);
  java.lang.String getCommPortId();
  public void initialize() throws java.lang.Exception;
  public void initialize(boolean) throws java.lang.Exception;
  public void terminate();
  public void setNetwork(com.serotonin.bacnet4j.npdu.mstp.MstpNetwork);
  public void setTimeSource(com.serotonin.bacnet4j.util.TimeSource);
  public boolean isRunning();
  public byte getThisStation();
  public final void run();
  protected abstract void doCycle();
  public abstract void setReplyFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte[]);
  protected void readFrame();
  protected long silence();
  protected void sendFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte);
  protected void sendFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte[]);
  public void testSendFrame(com.serotonin.bacnet4j.npdu.mstp.Frame);
  protected void sendFrame(com.serotonin.bacnet4j.npdu.mstp.Frame);
  protected void debug(java.lang.String);
  protected void receivedDataNoReply(com.serotonin.bacnet4j.npdu.mstp.Frame);
  protected void receivedDataNeedingReply(com.serotonin.bacnet4j.npdu.mstp.Frame);
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "MstpNode.java"
final class com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState extends java.lang.Enum<com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState> {
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState idle;
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState preamble;
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState header;
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState headerCrc;
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState data;
  public static final com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState dataCrc;
  public static com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState[] values();
  public static com.serotonin.bacnet4j.npdu.mstp.MstpNode$ReadFrameState valueOf(java.lang.String);
  static {};
}
Compiled from "SlaveNode.java"
public class com.serotonin.bacnet4j.npdu.mstp.SlaveNode extends com.serotonin.bacnet4j.npdu.mstp.MstpNode {
  public com.serotonin.bacnet4j.npdu.mstp.SlaveNode(org.free.bacnet4j.util.SerialParameters, byte) throws java.lang.IllegalArgumentException;
  public com.serotonin.bacnet4j.npdu.mstp.SlaveNode(java.io.InputStream, java.io.OutputStream, byte) throws java.lang.IllegalArgumentException;
  public void setReplyFrame(com.serotonin.bacnet4j.npdu.mstp.FrameType, byte, byte[]);
  protected void doCycle();
  static {};
}
Compiled from "SlaveNode.java"
final class com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState extends java.lang.Enum<com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState> {
  public static final com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState idle;
  public static final com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState answerDataRequest;
  public static com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState[] values();
  public static com.serotonin.bacnet4j.npdu.mstp.SlaveNode$SlaveNodeState valueOf(java.lang.String);
  static {};
}
Compiled from "BACnetObject.java"
public class com.serotonin.bacnet4j.obj.BACnetObject implements java.io.Serializable {
  public com.serotonin.bacnet4j.obj.BACnetObject(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getId();
  public int getInstanceId();
  public java.lang.String getObjectName();
  public com.serotonin.bacnet4j.type.primitive.CharacterString getRawObjectName();
  public java.lang.String getDescription();
  public com.serotonin.bacnet4j.type.Encodable getProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.Encodable getPropertyRequired(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.Encodable getProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.Encodable getPropertyRequired(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void setProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void setProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, int, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void setProperty(com.serotonin.bacnet4j.type.constructed.PropertyValue) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void setCommandable(com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.primitive.UnsignedInteger) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public java.util.List<com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier> getProperties();
  public void addCovSubscription(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.UnsignedInteger) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public com.serotonin.bacnet4j.type.primitive.Real getCovIncrement();
  public void removeCovSubscription(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void validate() throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void removeProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public void removeProperty(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "FileObject.java"
public class com.serotonin.bacnet4j.obj.FileObject extends com.serotonin.bacnet4j.obj.BACnetObject {
  public com.serotonin.bacnet4j.obj.FileObject(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, java.io.File, com.serotonin.bacnet4j.type.enumerated.FileAccessMethod);
  public void updateProperties();
  public long length();
  public com.serotonin.bacnet4j.type.primitive.OctetString readData(long, long) throws java.io.IOException;
  public void writeData(long, com.serotonin.bacnet4j.type.primitive.OctetString) throws java.io.IOException;
}
Compiled from "ObjectCovSubscription.java"
public class com.serotonin.bacnet4j.obj.ObjectCovSubscription implements java.io.Serializable {
  public static void addSupportedObjectType(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static void addSupportedPropertyIdentifier(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public static boolean supportedObjectType(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static boolean sendCovNotification(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.Real);
  public static java.util.List<com.serotonin.bacnet4j.type.constructed.PropertyValue> getValues(com.serotonin.bacnet4j.obj.BACnetObject);
  public com.serotonin.bacnet4j.obj.ObjectCovSubscription(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.constructed.Address getAddress();
  public com.serotonin.bacnet4j.type.primitive.OctetString getLinkService();
  public boolean isIssueConfirmedNotifications();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getSubscriberProcessIdentifier();
  public void setIssueConfirmedNotifications(boolean);
  public void setExpiryTime(int);
  public boolean hasExpired(long);
  public int getTimeRemaining(long);
  public boolean isNotificationRequired(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable);
  static {};
}
Compiled from "ObjectCovSubscription.java"
public class com.serotonin.bacnet4j.obj.ObjectCovSubscription$ThresholdCalculator {
  public com.serotonin.bacnet4j.obj.ObjectCovSubscription$ThresholdCalculator();
  public static boolean isValueOutsideOfThreshold(com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.Encodable);
}
Compiled from "ObjectProperties.java"
public class com.serotonin.bacnet4j.obj.ObjectProperties {
  public com.serotonin.bacnet4j.obj.ObjectProperties();
  public static com.serotonin.bacnet4j.obj.PropertyTypeDefinition getPropertyTypeDefinition(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public static com.serotonin.bacnet4j.obj.PropertyTypeDefinition getPropertyTypeDefinitionRequired(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public static void validateValue(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public static void validateSequenceValue(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
  public static java.util.List<com.serotonin.bacnet4j.obj.PropertyTypeDefinition> getPropertyTypeDefinitions(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static java.util.List<com.serotonin.bacnet4j.obj.PropertyTypeDefinition> getRequiredPropertyTypeDefinitions(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static java.util.List<com.serotonin.bacnet4j.obj.PropertyTypeDefinition> getOptionalPropertyTypeDefinitions(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static boolean isCommandable(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public static void addPropertyTypeDefinition(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>, boolean, boolean, com.serotonin.bacnet4j.type.Encodable);
  static {};
}
Compiled from "ObjectPropertyIdentifier.java"
public class com.serotonin.bacnet4j.obj.ObjectPropertyIdentifier {
  public com.serotonin.bacnet4j.obj.ObjectPropertyIdentifier(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "PropertyTypeDefinition.java"
public class com.serotonin.bacnet4j.obj.PropertyTypeDefinition {
  com.serotonin.bacnet4j.obj.PropertyTypeDefinition(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>, boolean, boolean, com.serotonin.bacnet4j.type.Encodable);
  public com.serotonin.bacnet4j.type.enumerated.ObjectType getObjectType();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable> getClazz();
  public boolean isSequence();
  public boolean isRequired();
  public boolean isOptional();
  public com.serotonin.bacnet4j.type.Encodable getDefaultValue();
  public java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable> getInnerType();
}
Compiled from "EncodingTest.java"
public class com.serotonin.bacnet4j.rs485.EncodingTest {
  public com.serotonin.bacnet4j.rs485.EncodingTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "HubClient.java"
public class com.serotonin.bacnet4j.rs485.HubClient {
  java.net.Socket socket;
  public static void main(java.lang.String[]) throws java.lang.Exception;
  com.serotonin.bacnet4j.rs485.HubClient() throws java.lang.Exception;
}
Compiled from "HubClient.java"
class com.serotonin.bacnet4j.rs485.HubClient$MessageReader implements java.lang.Runnable {
  final com.serotonin.bacnet4j.rs485.HubClient this$0;
  public com.serotonin.bacnet4j.rs485.HubClient$MessageReader(com.serotonin.bacnet4j.rs485.HubClient) throws java.lang.Exception;
  public void run();
}
Compiled from "HubServer.java"
public class com.serotonin.bacnet4j.rs485.HubServer implements java.lang.Runnable {
  final java.util.List<com.serotonin.bacnet4j.rs485.HubServer$SocketHandler> handlers;
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public com.serotonin.bacnet4j.rs485.HubServer() throws java.lang.Exception;
  public void run();
  void writeToListeners(byte[], int, com.serotonin.bacnet4j.rs485.HubServer$SocketHandler);
}
Compiled from "HubServer.java"
class com.serotonin.bacnet4j.rs485.HubServer$SocketHandler implements java.lang.Runnable {
  final java.lang.String id;
  final com.serotonin.bacnet4j.rs485.HubServer this$0;
  public com.serotonin.bacnet4j.rs485.HubServer$SocketHandler(com.serotonin.bacnet4j.rs485.HubServer, java.net.Socket) throws java.lang.Exception;
  public void run();
  void write(byte[], int);
}
Compiled from "MstpTest.java"
public class com.serotonin.bacnet4j.rs485.MstpTest {
  public static void main(java.lang.String[]) throws java.lang.Exception;
  com.serotonin.bacnet4j.rs485.MstpTest() throws java.lang.Exception;
  void master(byte, int) throws java.lang.Exception;
  void slave(byte) throws java.lang.Exception;
}
Compiled from "PortTest.java"
public class com.serotonin.bacnet4j.rs485.PortTest {
  public com.serotonin.bacnet4j.rs485.PortTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "ScriptTest.java"
public class com.serotonin.bacnet4j.rs485.ScriptTest {
  static java.lang.String[] script;
  public com.serotonin.bacnet4j.rs485.ScriptTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static java.io.InputStream getInputStream();
  static {};
}
Compiled from "ScriptTest.java"
final class com.serotonin.bacnet4j.rs485.ScriptTest$1 implements com.serotonin.bacnet4j.util.TimeSource {
  com.serotonin.bacnet4j.rs485.ScriptTest$1();
  public long currentTimeMillis();
}
Compiled from "ScriptTest.java"
class com.serotonin.bacnet4j.rs485.ScriptTest$DumpOut extends java.io.OutputStream {
  boolean first;
  com.serotonin.bacnet4j.rs485.ScriptTest$DumpOut();
  public void write(int) throws java.io.IOException;
}
Compiled from "SerialTest.java"
public class com.serotonin.bacnet4j.rs485.SerialTest {
  static com.serotonin.bacnet4j.LocalDevice localDevice;
  public com.serotonin.bacnet4j.rs485.SerialTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "SerialTest.java"
class com.serotonin.bacnet4j.rs485.SerialTest$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  com.serotonin.bacnet4j.rs485.SerialTest$Listener();
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
}
Compiled from "Service.java"
public abstract class com.serotonin.bacnet4j.service.Service extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.Service();
  public abstract byte getChoiceId();
}
Compiled from "VendorServiceKey.java"
public class com.serotonin.bacnet4j.service.VendorServiceKey {
  public com.serotonin.bacnet4j.service.VendorServiceKey(int, int);
  public com.serotonin.bacnet4j.service.VendorServiceKey(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AcknowledgementService.java"
public abstract class com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService extends com.serotonin.bacnet4j.service.Service {
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService();
  public static com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService createAcknowledgementService(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "AtomicReadFileAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.AtomicReadFileAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.AtomicReadFileAck(com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.service.acknowledgement.AtomicReadFileAck(com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.OctetString>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.AtomicReadFileAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Boolean getEndOfFile();
  public com.serotonin.bacnet4j.type.primitive.SignedInteger getFileStartPosition();
  public com.serotonin.bacnet4j.type.primitive.OctetString getFileData();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getReturnedRecordCount();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.OctetString> getFileRecordData();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AtomicWriteFileAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.AtomicWriteFileAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.AtomicWriteFileAck(boolean, com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.AtomicWriteFileAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public boolean isRecordAccess();
  public com.serotonin.bacnet4j.type.primitive.SignedInteger getFileStart();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AuthenticateAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.AuthenticateAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.AuthenticateAck(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.AuthenticateAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getModifiedRandomNumber();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ConfirmedPrivateTransferAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.ConfirmedPrivateTransferAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final java.util.Map<com.serotonin.bacnet4j.service.VendorServiceKey, com.serotonin.bacnet4j.type.SequenceDefinition> vendorServiceResolutions;
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.ConfirmedPrivateTransferAck(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.BaseType);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.ConfirmedPrivateTransferAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getVendorId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getServiceNumber();
  public com.serotonin.bacnet4j.type.Encodable getResultBlock();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "CreateObjectAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.CreateObjectAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.CreateObjectAck(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.CreateObjectAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetAlarmSummaryAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck$AlarmSummary>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck$AlarmSummary> getValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetAlarmSummaryAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck$AlarmSummary extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck$AlarmSummary(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.constructed.EventTransitionBits);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.acknowledgement.GetAlarmSummaryAck$AlarmSummary(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.EventState getAlarmState();
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits getAcknowledgedTransitions();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEnrollmentSummaryAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck$EnrollmentSummary>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck$EnrollmentSummary> getValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEnrollmentSummaryAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck$EnrollmentSummary extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck$EnrollmentSummary(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.acknowledgement.GetEnrollmentSummaryAck$EnrollmentSummary(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.EventType getEventType();
  public com.serotonin.bacnet4j.type.enumerated.EventState getEventState();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPriority();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getNotificationClass();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEventInformationAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck$EventSummary>, com.serotonin.bacnet4j.type.primitive.Boolean);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck$EventSummary> getListOfEventSummaries();
  public com.serotonin.bacnet4j.type.primitive.Boolean getMoreEvents();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEventInformationAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck$EventSummary extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck$EventSummary(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.constructed.EventTransitionBits, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.constructed.EventTransitionBits, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.acknowledgement.GetEventInformationAck$EventSummary(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.EventState getEventState();
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits getAcknowledgedTransitions();
  public com.serotonin.bacnet4j.type.constructed.TimeStamp getEventTimeStamp1();
  public com.serotonin.bacnet4j.type.constructed.TimeStamp getEventTimeStamp2();
  public com.serotonin.bacnet4j.type.constructed.TimeStamp getEventTimeStamp3();
  public com.serotonin.bacnet4j.type.enumerated.NotifyType getNotifyType();
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits getEventEnable();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getEventPriorities1();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getEventPriorities2();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getEventPriorities3();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyAck(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public byte getChoiceId();
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getEventObjectIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.Encodable getValue();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyConditionalAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyConditionalAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyConditionalAck(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyConditionalAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult> getListOfReadAccessResults();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyMultipleAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyMultipleAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyMultipleAck(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.ReadPropertyMultipleAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult> getListOfReadAccessResults();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadRangeAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.ReadRangeAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.ReadRangeAck(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.ResultFlags, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<? extends com.serotonin.bacnet4j.type.Encodable>, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.ReadRangeAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.constructed.ResultFlags getResultFlags();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getItemCount();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<? extends com.serotonin.bacnet4j.type.Encodable> getItemData();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getFirstSequenceNumber();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtDataAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.VtDataAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.VtDataAck(com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.VtDataAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Boolean getAllNewDataAccepted();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getAcceptedOctetCount();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtOpenAck.java"
public class com.serotonin.bacnet4j.service.acknowledgement.VtOpenAck extends com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.acknowledgement.VtOpenAck(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.acknowledgement.VtOpenAck(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getRemoteVTSessionIdentifier();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AcknowledgeAlarmRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.AcknowledgeAlarmRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.AcknowledgeAlarmRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.constructed.TimeStamp);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.AcknowledgeAlarmRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AddListElementRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.AddListElementRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.AddListElementRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<? extends com.serotonin.bacnet4j.type.Encodable>);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.AddListElementRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AtomicReadFileRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.AtomicReadFileRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.AtomicReadFileRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, boolean, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.service.confirmed.AtomicReadFileRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, boolean, int, int);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.AtomicReadFileRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AtomicWriteFileRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.AtomicWriteFileRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.AtomicWriteFileRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.service.confirmed.AtomicWriteFileRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.OctetString>);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.AtomicWriteFileRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AuthenticateRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.AuthenticateRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.AuthenticateRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.primitive.Boolean);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.AuthenticateRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ConfirmedCovNotificationRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ConfirmedCovNotificationRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedCovNotificationRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ConfirmedCovNotificationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ConfirmedEventNotificationRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ConfirmedEventNotificationRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedEventNotificationRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ConfirmedEventNotificationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ConfirmedPrivateTransferRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ConfirmedPrivateTransferRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final java.util.Map<com.serotonin.bacnet4j.service.VendorServiceKey, com.serotonin.bacnet4j.type.SequenceDefinition> vendorServiceResolutions;
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedPrivateTransferRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ConfirmedPrivateTransferRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "ConfirmedRequestService.java"
public abstract class com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService extends com.serotonin.bacnet4j.service.Service {
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService();
  public static void checkConfirmedRequestService(com.serotonin.bacnet4j.type.constructed.ServicesSupported, byte) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService createConfirmedRequestService(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public abstract com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "ConfirmedTextMessageRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ConfirmedTextMessageRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ConfirmedTextMessageRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "CreateObjectRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.CreateObjectRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.CreateObjectRequest(com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public com.serotonin.bacnet4j.service.confirmed.CreateObjectRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.CreateObjectRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "DeleteObjectRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.DeleteObjectRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.DeleteObjectRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.DeleteObjectRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DeviceCommunicationControlRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DeviceCommunicationControlRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable enable;
  public static final com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable disable;
  public static final com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable disableInitiation;
  public com.serotonin.bacnet4j.service.confirmed.DeviceCommunicationControlRequest$EnableDisable(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "GetAlarmSummaryRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.GetAlarmSummaryRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.confirmed.GetAlarmSummaryRequest();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.GetAlarmSummaryRequest(org.free.bacnet4j.util.ByteQueue);
  public boolean equals(java.lang.Object);
}
Compiled from "GetEnrollmentSummaryRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest(com.serotonin.bacnet4j.type.primitive.Enumerated, com.serotonin.bacnet4j.type.constructed.RecipientProcess, com.serotonin.bacnet4j.type.primitive.Enumerated, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$PriorityFilter, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEnrollmentSummaryRequest.java"
public interface com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$AcknowledgmentFilters {
  public static final int all;
  public static final int acked;
  public static final int notAcked;
}
Compiled from "GetEnrollmentSummaryRequest.java"
public interface com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$EventStateFilter {
  public static final int offnormal;
  public static final int fault;
  public static final int normal;
  public static final int all;
  public static final int active;
}
Compiled from "GetEnrollmentSummaryRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$PriorityFilter extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$PriorityFilter(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.confirmed.GetEnrollmentSummaryRequest$PriorityFilter(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "GetEventInformation.java"
public class com.serotonin.bacnet4j.service.confirmed.GetEventInformation extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.GetEventInformation(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.GetEventInformation(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "LifeSafetyOperationRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.LifeSafetyOperationRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.LifeSafetyOperationRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.LifeSafetyOperationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyConditionalRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest(com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyReference>);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyConditionalRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria(com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyConditionalRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier, com.serotonin.bacnet4j.type.Encodable);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadPropertyConditionalRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier equal;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier notEqual;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier lessThan;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier greaterThan;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier lessThanOrEqual;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier greaterThanOrEqual;
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionCriteria$RelationSpecifier(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ReadPropertyConditionalRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic and;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic or;
  public static final com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic all;
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyConditionalRequest$ObjectSelectionCriteria$SelectionLogic(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ReadPropertyMultipleRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyMultipleRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyMultipleRequest(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessSpecification>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadPropertyMultipleRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "ReadPropertyRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadPropertyRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public com.serotonin.bacnet4j.service.confirmed.ReadPropertyRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadPropertyRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadRangeRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByPosition);
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$BySequenceNumber);
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByTime);
  public byte getChoiceId();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "ReadRangeRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByPosition extends com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range {
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByPosition(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByPosition(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "ReadRangeRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$BySequenceNumber extends com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range {
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$BySequenceNumber(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$BySequenceNumber(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "ReadRangeRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByTime extends com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range {
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByTime(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$ByTime(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "ReadRangeRequest.java"
public abstract class com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range extends com.serotonin.bacnet4j.type.constructed.BaseType {
  protected com.serotonin.bacnet4j.type.primitive.SignedInteger count;
  public com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range(com.serotonin.bacnet4j.type.primitive.SignedInteger);
  com.serotonin.bacnet4j.service.confirmed.ReadRangeRequest$Range();
}
Compiled from "ReinitializeDeviceRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReinitializeDeviceRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice coldstart;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice warmstart;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice startbackup;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice endbackup;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice startrestore;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice endrestore;
  public static final com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice abortrestore;
  public com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice(int);
  public com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "RemoveListElementRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.RemoveListElementRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.RemoveListElementRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<? extends com.serotonin.bacnet4j.type.Encodable>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.RemoveListElementRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "RequestKeyRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.RequestKeyRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.RequestKeyRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.Address);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.RequestKeyRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SubscribeCOVPropertyRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.SubscribeCOVPropertyRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.SubscribeCOVPropertyRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.PropertyReference, com.serotonin.bacnet4j.type.primitive.Real);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.SubscribeCOVPropertyRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SubscribeCOVRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.SubscribeCOVRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.SubscribeCOVRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.SubscribeCOVRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtCloseRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.VtCloseRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.VtCloseRequest(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.UnsignedInteger>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.VtCloseRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtDataRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.VtDataRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.VtDataRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.VtDataRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtOpenRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.VtOpenRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.VtOpenRequest(com.serotonin.bacnet4j.type.enumerated.VtClass, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.VtOpenRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "WritePropertyMultipleRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.WritePropertyMultipleRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.WritePropertyMultipleRequest(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.WriteAccessSpecification>);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.WritePropertyMultipleRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "WritePropertyRequest.java"
public class com.serotonin.bacnet4j.service.confirmed.WritePropertyRequest extends com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.confirmed.WritePropertyRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.confirmed.WritePropertyRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "IAmRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.IAmRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.IAmRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.Segmentation, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.IAmRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "IHaveRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.IHaveRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.IHaveRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.IHaveRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "TimeSynchronizationRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.TimeSynchronizationRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.TimeSynchronizationRequest(com.serotonin.bacnet4j.type.constructed.DateTime);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.TimeSynchronizationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UTCTimeSynchronizationRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.UTCTimeSynchronizationRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.UTCTimeSynchronizationRequest(com.serotonin.bacnet4j.type.constructed.DateTime);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.UTCTimeSynchronizationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UnconfirmedCovNotificationRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedCovNotificationRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedCovNotificationRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedCovNotificationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UnconfirmedEventNotificationRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedEventNotificationRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedEventNotificationRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedEventNotificationRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UnconfirmedPrivateTransferRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedPrivateTransferRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final java.util.Map<com.serotonin.bacnet4j.service.VendorServiceKey, com.serotonin.bacnet4j.type.SequenceDefinition> vendorServiceResolutions;
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedPrivateTransferRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public byte getChoiceId();
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedPrivateTransferRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "UnconfirmedRequestService.java"
public abstract class com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService extends com.serotonin.bacnet4j.service.Service {
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService();
  public static com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService createUnconfirmedRequestService(com.serotonin.bacnet4j.type.constructed.ServicesSupported, byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public abstract void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "UnconfirmedTextMessageRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedTextMessageRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedTextMessageRequest(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedTextMessageRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "WhoHasRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest(com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest$Limits, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest(com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest$Limits, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "WhoHasRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest$Limits extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest$Limits(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.service.unconfirmed.WhoHasRequest$Limits(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getDeviceInstanceRangeLowLimit();
  public void setDeviceInstanceRangeLowLimit(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getDeviceInstanceRangeHighLimit();
  public void setDeviceInstanceRangeHighLimit(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
}
Compiled from "WhoIsRequest.java"
public class com.serotonin.bacnet4j.service.unconfirmed.WhoIsRequest extends com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.service.unconfirmed.WhoIsRequest();
  public com.serotonin.bacnet4j.service.unconfirmed.WhoIsRequest(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public byte getChoiceId();
  public void handle(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.service.unconfirmed.WhoIsRequest(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AnnexFEncodingTest.java"
public class com.serotonin.bacnet4j.test.AnnexFEncodingTest {
  public static void main(java.lang.String[]);
  public com.serotonin.bacnet4j.test.AnnexFEncodingTest();
  public void e1_1aTest();
  public void e1_1bTest();
  public void e1_2aTest();
  public void e1_2bTest();
  public void e1_3Test();
  public void e1_4aTest();
  public void e1_4bTest();
  public void e1_5Test();
  public void e1_6aTest();
  public void e1_6bTest();
  public void e1_7aTest();
  public void e1_7bTest();
  public void e1_7cTest();
  public void e1_7dTest();
  public void e1_8aTest();
  public void e1_8bTest();
  public void e1_9aTest();
  public void e1_9bTest();
  public void e1_10aTest();
  public void e1_10bTest();
  public void e1_11aTest();
  public void e1_11bTest();
  public void e2_1aTest();
  public void e2_1bTest();
  public void e2_1cTest();
  public void e2_1dTest();
  public void e2_2aTest();
  public void e2_2bTest();
  public void e2_2cTest();
  public void e2_2dTest();
  public void e3_1aTest();
  public void e3_1bTest();
  public void e3_2aTest();
  public void e3_2bTest();
  public void e3_2cTest();
  public void e3_2dTest();
  public void e3_3aTest();
  public void e3_3bTest();
  public void e3_4aTest();
  public void e3_4bTest();
  public void e3_4cTest();
  public void e3_4dTest();
  public void e3_5aTest();
  public void e3_5bTest();
  public void e3_6aTest();
  public void e3_6bTest();
  public void e3_6cTest();
  public void e3_6dTest();
  public void e3_6eTest();
  public void e3_6fTest();
  public void e3_6gTest();
  public void e3_6hTest();
  public void e3_7aTest();
  public void e3_7bTest();
  public void e3_7cTest();
  public void e3_7dTest();
  public void e3_8aTest();
  public void e3_8bTest();
  public void e3_9aTest();
  public void e3_9bTest();
  public void e3_10aTest();
  public void e3_10bTest();
  public void e4_1aTest();
  public void e4_1bTest();
  public void e4_2aTest();
  public void e4_2bTest();
  public void e4_3Test();
  public void e4_4aTest();
  public void e4_4bTest();
  public void e4_5aTest();
  public void e4_5bTest();
  public void e4_6Test();
  public void e4_7Test();
  public void e4_8aTest();
  public void e4_8bTest();
  public void e4_8cTest();
  public void e4_8dTest();
  public void e4_9aTest();
  public void e4_9bTest();
  public void e4_9cTest();
  public void e4_9dTest();
  public void e4_9eTest();
  public void e4_9fTest();
  public void e4_9gTest();
  public void e5_aTest();
  public void e5_bTest();
  public void e5_cTest();
  public void e5_dTest();
  public void e5_eTest();
  public void e5_fTest();
  public void e5_gTest();
  public void e5_hTest();
  public void e5_iTest();
  public void e5_jTest();
  public void e6_aTest();
  public void e6_bTest();
  public void e6_cTest();
  public void executeAll();
}
Compiled from "CommandPriorityTest.java"
public class com.serotonin.bacnet4j.test.CommandPriorityTest {
  public com.serotonin.bacnet4j.test.CommandPriorityTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "DecodingTest.java"
public class com.serotonin.bacnet4j.test.DecodingTest {
  public com.serotonin.bacnet4j.test.DecodingTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static void test2() throws java.lang.Exception;
  public static byte[] toBytes(java.lang.String);
}
Compiled from "DeserializationTest.java"
public class com.serotonin.bacnet4j.test.DeserializationTest {
  public com.serotonin.bacnet4j.test.DeserializationTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static void test2() throws java.lang.Exception;
  static void test3() throws java.lang.Exception;
  static void test5() throws java.lang.Exception;
  static void test6() throws java.lang.Exception;
}
Compiled from "DiscoveryTest.java"
public class com.serotonin.bacnet4j.test.DiscoveryTest {
  public com.serotonin.bacnet4j.test.DiscoveryTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "DiscoveryTest.java"
class com.serotonin.bacnet4j.test.DiscoveryTest$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  com.serotonin.bacnet4j.test.DiscoveryTest$Listener();
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
}
Compiled from "FileAccessTest.java"
public class com.serotonin.bacnet4j.test.FileAccessTest {
  public com.serotonin.bacnet4j.test.FileAccessTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "LargeSegmentTest.java"
public class com.serotonin.bacnet4j.test.LargeSegmentTest {
  public com.serotonin.bacnet4j.test.LargeSegmentTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "LoopDevice.java"
public class com.serotonin.bacnet4j.test.LoopDevice implements java.lang.Runnable {
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public com.serotonin.bacnet4j.test.LoopDevice(java.lang.String, int) throws com.serotonin.bacnet4j.exception.BACnetServiceException, java.lang.Exception;
  public void run();
  protected void finalize();
  public boolean isTerminate();
  public void doTerminate();
  public java.lang.String getBroadcastAddress();
  public int getPort();
  public com.serotonin.bacnet4j.LocalDevice getLocalDevice();
  public com.serotonin.bacnet4j.obj.BACnetObject getAi0();
  public com.serotonin.bacnet4j.obj.BACnetObject getAi1();
  public com.serotonin.bacnet4j.obj.BACnetObject getBi0();
  public com.serotonin.bacnet4j.obj.BACnetObject getBi1();
  public com.serotonin.bacnet4j.obj.BACnetObject getMso0();
  public com.serotonin.bacnet4j.obj.BACnetObject getAo0();
}
Compiled from "LoopDevice.java"
class com.serotonin.bacnet4j.test.LoopDevice$1 implements com.serotonin.bacnet4j.event.DeviceEventListener {
  final com.serotonin.bacnet4j.test.LoopDevice this$0;
  com.serotonin.bacnet4j.test.LoopDevice$1(com.serotonin.bacnet4j.test.LoopDevice);
  public void listenerException(java.lang.Throwable);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "MessageControl.java"
public class com.serotonin.bacnet4j.test.MessageControl extends java.lang.Thread {
  public com.serotonin.bacnet4j.test.MessageControl(int);
  public void init() throws java.lang.Exception;
  public void destroy();
  public byte sendConfirmed(int, byte) throws java.lang.Exception;
  public void sendUnconfirmed(int, byte) throws java.lang.Exception;
  public void run();
}
Compiled from "MessageControl.java"
public class com.serotonin.bacnet4j.test.MessageControl$Message {
  public com.serotonin.bacnet4j.test.MessageControl$Message(byte, byte, byte);
  public com.serotonin.bacnet4j.test.MessageControl$Message(byte[]);
  public byte[] getData();
  public byte getMessageId();
  public byte getMessageType();
  public byte getValue();
}
Compiled from "MessageControl.java"
public interface com.serotonin.bacnet4j.test.MessageControl$MessageType {
  public static final byte CONFIRMED_REQUEST;
  public static final byte UNCONFIRMED_REQUEST;
  public static final byte RESPONSE;
}
Compiled from "MessageControl.java"
class com.serotonin.bacnet4j.test.MessageControl$WaitingRoomMember {
  com.serotonin.bacnet4j.test.MessageControl$WaitingRoomMember();
  void setResponse(com.serotonin.bacnet4j.test.MessageControl$Message);
  com.serotonin.bacnet4j.test.MessageControl$Message getResponse();
}
Compiled from "ObjectCovSubscriptionTest.java"
public class com.serotonin.bacnet4j.test.ObjectCovSubscriptionTest {
  public com.serotonin.bacnet4j.test.ObjectCovSubscriptionTest();
  public static void main(java.lang.String[]);
  public void testNoNotificationsWithinThreshold();
  public void testNotificationSurpassingThreshold();
  public void executeAll();
}
Compiled from "OverflowTest.java"
public class com.serotonin.bacnet4j.test.OverflowTest {
  public com.serotonin.bacnet4j.test.OverflowTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "QuickTest.java"
public class com.serotonin.bacnet4j.test.QuickTest {
  static com.serotonin.bacnet4j.npdu.ip.IpNetwork network;
  static com.serotonin.bacnet4j.transport.Transport transport;
  static com.serotonin.bacnet4j.LocalDevice localDevice;
  public com.serotonin.bacnet4j.test.QuickTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static void sendWhoIs() throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "QuickTest.java"
class com.serotonin.bacnet4j.test.QuickTest$Listener implements com.serotonin.bacnet4j.event.DeviceEventListener {
  com.serotonin.bacnet4j.test.QuickTest$Listener();
  public void listenerException(java.lang.Throwable);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "ReadAllAvailableProperties.java"
public class com.serotonin.bacnet4j.test.ReadAllAvailableProperties {
  public static java.lang.String BROADCAST_ADDRESS;
  final java.util.List<com.serotonin.bacnet4j.RemoteDevice> remoteDevices;
  public com.serotonin.bacnet4j.test.ReadAllAvailableProperties(java.lang.String, int) throws java.lang.Exception;
  public void doDiscover() throws java.lang.Exception;
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public com.serotonin.bacnet4j.test.LoopDevice getLoopDevice();
  public void setLoopDevice(com.serotonin.bacnet4j.test.LoopDevice);
  static {};
}
Compiled from "ReadAllAvailableProperties.java"
class com.serotonin.bacnet4j.test.ReadAllAvailableProperties$1 implements com.serotonin.bacnet4j.event.DeviceEventListener {
  final com.serotonin.bacnet4j.test.ReadAllAvailableProperties this$0;
  com.serotonin.bacnet4j.test.ReadAllAvailableProperties$1(com.serotonin.bacnet4j.test.ReadAllAvailableProperties);
  public void listenerException(java.lang.Throwable);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "SegmentedDecodingTest.java"
public class com.serotonin.bacnet4j.test.SegmentedDecodingTest {
  public com.serotonin.bacnet4j.test.SegmentedDecodingTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public static byte[] toBytes(java.lang.String);
}
Compiled from "SerializationTests.java"
public class com.serotonin.bacnet4j.test.SerializationTests {
  public com.serotonin.bacnet4j.test.SerializationTests();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static {};
}
Compiled from "ServiceDataDecoding.java"
public class com.serotonin.bacnet4j.test.ServiceDataDecoding {
  public com.serotonin.bacnet4j.test.ServiceDataDecoding();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "SimpleSubscriptionClient.java"
public class com.serotonin.bacnet4j.test.SimpleSubscriptionClient {
  public com.serotonin.bacnet4j.test.SimpleSubscriptionClient();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "SimpleSubscriptionClient.java"
class com.serotonin.bacnet4j.test.SimpleSubscriptionClient$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  com.serotonin.bacnet4j.test.SimpleSubscriptionClient$Listener();
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
}
Compiled from "SlaveDeviceTest.java"
public class com.serotonin.bacnet4j.test.SlaveDeviceTest {
  public com.serotonin.bacnet4j.test.SlaveDeviceTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "SlaveDeviceTest.java"
class com.serotonin.bacnet4j.test.SlaveDeviceTest$Listener implements com.serotonin.bacnet4j.event.DeviceEventListener {
  com.serotonin.bacnet4j.test.SlaveDeviceTest$Listener();
  public void listenerException(java.lang.Throwable);
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
  public boolean allowPropertyWrite(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void propertyWritten(com.serotonin.bacnet4j.obj.BACnetObject, com.serotonin.bacnet4j.type.constructed.PropertyValue);
  public void iHaveReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.RemoteObject);
  public void covNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void eventNotificationReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.enumerated.EventType, com.serotonin.bacnet4j.type.primitive.CharacterString, com.serotonin.bacnet4j.type.enumerated.NotifyType, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.enumerated.EventState, com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters);
  public void textMessageReceived(com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.constructed.Choice, com.serotonin.bacnet4j.type.enumerated.MessagePriority, com.serotonin.bacnet4j.type.primitive.CharacterString);
  public void privateTransferReceived(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void reinitializeDevice(com.serotonin.bacnet4j.service.confirmed.ReinitializeDeviceRequest$ReinitializedStateOfDevice);
  public void synchronizeTime(com.serotonin.bacnet4j.type.constructed.DateTime, boolean);
}
Compiled from "Test.java"
public class com.serotonin.bacnet4j.test.Test {
  static java.lang.String description;
  public com.serotonin.bacnet4j.test.Test();
  public static void main(java.lang.String[]);
  public static void test3(com.serotonin.bacnet4j.LocalDevice) throws java.lang.Exception;
  public static void test(com.serotonin.bacnet4j.LocalDevice) throws java.lang.Exception;
  public static com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws java.lang.Exception;
  public static void test2(com.serotonin.bacnet4j.LocalDevice) throws java.lang.Exception;
  public static com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws java.lang.Exception;
  static {};
}
Compiled from "Test2.java"
public class com.serotonin.bacnet4j.test.Test2 {
  public com.serotonin.bacnet4j.test.Test2();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "Test2.java"
class com.serotonin.bacnet4j.test.Test2$Listener extends com.serotonin.bacnet4j.event.DeviceEventAdapter {
  com.serotonin.bacnet4j.test.Test2$Listener();
  public void iAmReceived(com.serotonin.bacnet4j.RemoteDevice);
}
Compiled from "Test3.java"
public class com.serotonin.bacnet4j.test.Test3 {
  public com.serotonin.bacnet4j.test.Test3();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "ThresholdCalculatorTest.java"
public class com.serotonin.bacnet4j.test.ThresholdCalculatorTest {
  public com.serotonin.bacnet4j.test.ThresholdCalculatorTest();
  public static void main(java.lang.String[]);
  public void runTestCases();
  public void testIsValueOutsideOfThreshold(java.lang.String, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.Encodable, boolean);
}
Compiled from "TrendLogTest.java"
public class com.serotonin.bacnet4j.test.TrendLogTest {
  public com.serotonin.bacnet4j.test.TrendLogTest();
  public static void main(java.lang.String[]) throws com.serotonin.bacnet4j.exception.BACnetServiceException;
}
Compiled from "UdpDump.java"
public class com.serotonin.bacnet4j.test.UdpDump {
  public com.serotonin.bacnet4j.test.UdpDump();
  public static void main(java.lang.String[]) throws java.lang.Exception;
}
Compiled from "Transport.java"
public class com.serotonin.bacnet4j.transport.Transport {
  public static final int DEFAULT_TIMEOUT;
  public static final int DEFAULT_SEG_TIMEOUT;
  public static final int DEFAULT_SEG_WINDOW;
  public static final int DEFAULT_RETRIES;
  public com.serotonin.bacnet4j.transport.Transport(com.serotonin.bacnet4j.npdu.Network);
  public com.serotonin.bacnet4j.npdu.NetworkIdentifier getNetworkIdentifier();
  public void setTimeout(int);
  public int getTimeout();
  public void setSegTimeout(int);
  public int getSegTimeout();
  public void setRetries(int);
  public int getRetries();
  public void setSegWindow(int);
  public int getSegWindow();
  public com.serotonin.bacnet4j.npdu.Network getNetwork();
  public com.serotonin.bacnet4j.LocalDevice getLocalDevice();
  public void setLocalDevice(com.serotonin.bacnet4j.LocalDevice);
  public void initialize() throws java.lang.Exception;
  public void terminate();
  public com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService send(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, int, com.serotonin.bacnet4j.type.enumerated.Segmentation, com.serotonin.bacnet4j.service.confirmed.ConfirmedRequestService) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.Address getLocalBroadcastAddress();
  public void sendUnconfirmed(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.service.unconfirmed.UnconfirmedRequestService, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  void sendResponse(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.apdu.ConfirmedRequest, com.serotonin.bacnet4j.service.acknowledgement.AcknowledgementService) throws com.serotonin.bacnet4j.exception.BACnetException;
  void receiveSegmented(com.serotonin.bacnet4j.transport.WaitingRoomKey, com.serotonin.bacnet4j.apdu.Segmentable) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void incomingApdu(com.serotonin.bacnet4j.apdu.APDU, com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "WaitingRoom.java"
public class com.serotonin.bacnet4j.transport.WaitingRoom {
  public com.serotonin.bacnet4j.transport.WaitingRoom();
  public synchronized com.serotonin.bacnet4j.transport.WaitingRoomKey enterClient(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.transport.WaitingRoomKey enterServer(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, byte);
  public com.serotonin.bacnet4j.apdu.AckAPDU getAck(com.serotonin.bacnet4j.transport.WaitingRoomKey, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.ConfirmedRequest getRequest(com.serotonin.bacnet4j.transport.WaitingRoomKey, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.Segmentable getSegmentable(com.serotonin.bacnet4j.transport.WaitingRoomKey, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.apdu.APDU getAPDU(com.serotonin.bacnet4j.transport.WaitingRoomKey, long, boolean) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void leave(com.serotonin.bacnet4j.transport.WaitingRoomKey);
  public void notifyMember(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, byte, boolean, com.serotonin.bacnet4j.apdu.APDU) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "WaitingRoom.java"
class com.serotonin.bacnet4j.transport.WaitingRoom$Member {
  com.serotonin.bacnet4j.transport.WaitingRoom$Member();
  synchronized void setAPDU(com.serotonin.bacnet4j.apdu.APDU);
  synchronized com.serotonin.bacnet4j.apdu.APDU getAPDU(long);
}
Compiled from "WaitingRoomKey.java"
public class com.serotonin.bacnet4j.transport.WaitingRoomKey {
  public com.serotonin.bacnet4j.transport.WaitingRoomKey(com.serotonin.bacnet4j.type.constructed.Address, com.serotonin.bacnet4j.type.primitive.OctetString, byte, boolean);
  public com.serotonin.bacnet4j.type.constructed.Address getAddress();
  public com.serotonin.bacnet4j.type.primitive.OctetString getLinkService();
  public byte getInvokeId();
  public boolean isFromServer();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AmbiguousValue.java"
public class com.serotonin.bacnet4j.type.AmbiguousValue extends com.serotonin.bacnet4j.type.Encodable {
  public com.serotonin.bacnet4j.type.AmbiguousValue(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.AmbiguousValue(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue, int);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  public boolean isNull();
  public <T extends com.serotonin.bacnet4j.type.Encodable> T convertTo(java.lang.Class<T>) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "Encodable.java"
public abstract class com.serotonin.bacnet4j.type.Encodable implements java.io.Serializable {
  public com.serotonin.bacnet4j.type.Encodable();
  public abstract void write(org.free.bacnet4j.util.ByteQueue);
  public abstract void write(org.free.bacnet4j.util.ByteQueue, int);
  public java.lang.String toString();
  protected static void popTagData(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.TagData);
  protected static void peekTagData(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.TagData);
  protected static int peekTagNumber(org.free.bacnet4j.util.ByteQueue);
  protected void writeContextTag(org.free.bacnet4j.util.ByteQueue, int, boolean);
  protected static int readStart(org.free.bacnet4j.util.ByteQueue);
  protected static int popStart(org.free.bacnet4j.util.ByteQueue);
  protected static void popStart(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  protected static int readEnd(org.free.bacnet4j.util.ByteQueue);
  protected static void popEnd(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  protected static boolean matchStartTag(org.free.bacnet4j.util.ByteQueue, int);
  protected static boolean matchEndTag(org.free.bacnet4j.util.ByteQueue, int);
  protected static boolean matchNonEndTag(org.free.bacnet4j.util.ByteQueue, int);
  protected static void write(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.Encodable);
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> T read(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> T read(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static void write(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.Encodable, int);
  protected static void writeOptional(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.Encodable);
  protected static void writeOptional(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.Encodable, int);
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> T readOptional(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> com.serotonin.bacnet4j.type.constructed.SequenceOf<T> readSequenceOf(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> com.serotonin.bacnet4j.type.constructed.SequenceOf<T> readSequenceOf(org.free.bacnet4j.util.ByteQueue, int, java.lang.Class<T>) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> com.serotonin.bacnet4j.type.constructed.SequenceOf<T> readSequenceOf(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> T readSequenceType(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.Choice> readSequenceOfChoice(org.free.bacnet4j.util.ByteQueue, java.util.List<java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static <T extends com.serotonin.bacnet4j.type.Encodable> com.serotonin.bacnet4j.type.constructed.SequenceOf<T> readOptionalSequenceOf(org.free.bacnet4j.util.ByteQueue, java.lang.Class<T>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static void writeEncodable(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.Encodable, int);
  protected static com.serotonin.bacnet4j.type.Encodable readEncodable(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static com.serotonin.bacnet4j.type.Encodable readOptionalEncodable(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static com.serotonin.bacnet4j.type.constructed.SequenceOf<? extends com.serotonin.bacnet4j.type.Encodable> readSequenceOfEncodable(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.enumerated.ObjectType, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected static com.serotonin.bacnet4j.type.constructed.Sequence readVendorSpecific(org.free.bacnet4j.util.ByteQueue, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, java.util.Map<com.serotonin.bacnet4j.service.VendorServiceKey, com.serotonin.bacnet4j.type.SequenceDefinition>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "SequenceDefinition.java"
public class com.serotonin.bacnet4j.type.SequenceDefinition implements java.io.Serializable {
  public com.serotonin.bacnet4j.type.SequenceDefinition(com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification...);
  public com.serotonin.bacnet4j.type.SequenceDefinition(java.util.List<com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification>);
  public java.util.List<com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification> getElements();
}
Compiled from "SequenceDefinition.java"
public class com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification {
  public com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification(java.lang.String, java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>, boolean, boolean);
  public com.serotonin.bacnet4j.type.SequenceDefinition$ElementSpecification(java.lang.String, java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>, int, boolean, boolean);
  public java.lang.String getId();
  public java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable> getClazz();
  public int getContextId();
  public boolean isOptional();
  public boolean isSequenceOf();
  public boolean hasContextId();
}
Compiled from "TagData.java"
public class com.serotonin.bacnet4j.type.TagData {
  public int tagNumber;
  public boolean contextSpecific;
  public long length;
  public int tagLength;
  public com.serotonin.bacnet4j.type.TagData();
  public int getTotalLength();
  public boolean isStartTag();
  public boolean isStartTag(int);
  public boolean isEndTag();
  public boolean isEndTag(int);
}
Compiled from "ThreadLocalObjectTypeStack.java"
public class com.serotonin.bacnet4j.type.ThreadLocalObjectTypeStack {
  public com.serotonin.bacnet4j.type.ThreadLocalObjectTypeStack();
  public static void set(com.serotonin.bacnet4j.type.enumerated.ObjectType);
  public static com.serotonin.bacnet4j.type.enumerated.ObjectType get();
  public static void remove();
  static {};
}
Compiled from "AccumulatorRecord.java"
public class com.serotonin.bacnet4j.type.constructed.AccumulatorRecord extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.AccumulatorRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.AccumulatorRecord(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.DateTime getTimestamp();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPresentValue();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getAccumulatedValue();
  public com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus getAccumulatorStatus();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AccumulatorRecord.java"
public class com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus normal;
  public static final com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus starting;
  public static final com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus recovered;
  public static final com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus abnormal;
  public static final com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus failed;
  public com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus(int);
  public com.serotonin.bacnet4j.type.constructed.AccumulatorRecord$AccumulatorStatus(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ActionCommand.java"
public class com.serotonin.bacnet4j.type.constructed.ActionCommand extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ActionCommand(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.Boolean);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ActionCommand(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getDeviceIdentifier();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.Encodable getPropertyValue();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPriority();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPostDelay();
  public com.serotonin.bacnet4j.type.primitive.Boolean getQuitOnFailure();
  public com.serotonin.bacnet4j.type.primitive.Boolean getWriteSuccessful();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ActionList.java"
public class com.serotonin.bacnet4j.type.constructed.ActionList extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ActionList(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ActionCommand>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ActionList(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ActionCommand> getAction();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "Address.java"
public class com.serotonin.bacnet4j.type.constructed.Address extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public static final int LOCAL_NETWORK;
  public static final com.serotonin.bacnet4j.type.constructed.Address GLOBAL;
  public com.serotonin.bacnet4j.type.constructed.Address(int, byte[]);
  public com.serotonin.bacnet4j.type.constructed.Address(int, java.lang.String);
  public com.serotonin.bacnet4j.type.constructed.Address(com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.constructed.Address(int, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.constructed.Address(com.serotonin.bacnet4j.type.primitive.Unsigned16, com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.constructed.Address(byte);
  public com.serotonin.bacnet4j.type.constructed.Address(int, byte);
  public com.serotonin.bacnet4j.type.constructed.Address(byte[], int);
  public com.serotonin.bacnet4j.type.constructed.Address(int, byte[], int);
  public com.serotonin.bacnet4j.type.constructed.Address(java.lang.String, int);
  public com.serotonin.bacnet4j.type.constructed.Address(int, java.lang.String, int);
  public com.serotonin.bacnet4j.type.constructed.Address(java.net.InetSocketAddress);
  public com.serotonin.bacnet4j.type.constructed.Address(int, java.net.InetSocketAddress);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Address(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.OctetString getMacAddress();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getNetworkNumber();
  public boolean isGlobal();
  public java.lang.String getDescription();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "AddressBinding.java"
public class com.serotonin.bacnet4j.type.constructed.AddressBinding extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.AddressBinding(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.Address);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.AddressBinding(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getDeviceObjectIdentifier();
  public com.serotonin.bacnet4j.type.constructed.Address getDeviceAddress();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "BACnetError.java"
public class com.serotonin.bacnet4j.type.constructed.BACnetError extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.BACnetError(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public com.serotonin.bacnet4j.type.constructed.BACnetError(com.serotonin.bacnet4j.exception.BACnetServiceException);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.BACnetError(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.enumerated.ErrorClass getErrorClass();
  public com.serotonin.bacnet4j.type.enumerated.ErrorCode getErrorCode();
  public boolean equals(com.serotonin.bacnet4j.type.enumerated.ErrorClass, com.serotonin.bacnet4j.type.enumerated.ErrorCode);
  public int hashCode();
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
}
Compiled from "BaseType.java"
public abstract class com.serotonin.bacnet4j.type.constructed.BaseType extends com.serotonin.bacnet4j.type.Encodable {
  public com.serotonin.bacnet4j.type.constructed.BaseType();
  public void write(org.free.bacnet4j.util.ByteQueue, int);
}
Compiled from "CalendarEntry.java"
public class com.serotonin.bacnet4j.type.constructed.CalendarEntry extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.CalendarEntry(com.serotonin.bacnet4j.type.primitive.Date);
  public com.serotonin.bacnet4j.type.constructed.CalendarEntry(com.serotonin.bacnet4j.type.constructed.DateRange);
  public com.serotonin.bacnet4j.type.constructed.CalendarEntry(com.serotonin.bacnet4j.type.constructed.WeekNDay);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.CalendarEntry(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public boolean isDate();
  public boolean isDateRange();
  public boolean isWeekNDay();
  public com.serotonin.bacnet4j.type.primitive.Date getDate();
  public com.serotonin.bacnet4j.type.constructed.DateRange getDateRange();
  public com.serotonin.bacnet4j.type.constructed.WeekNDay getWeekNDay();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "Choice.java"
public class com.serotonin.bacnet4j.type.constructed.Choice extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Choice(int, com.serotonin.bacnet4j.type.Encodable);
  public int getContextId();
  public com.serotonin.bacnet4j.type.Encodable getDatum();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Choice(org.free.bacnet4j.util.ByteQueue, java.util.List<java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>>) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.Choice(org.free.bacnet4j.util.ByteQueue, java.util.List<java.lang.Class<? extends com.serotonin.bacnet4j.type.Encodable>>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ClientCov.java"
public class com.serotonin.bacnet4j.type.constructed.ClientCov extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ClientCov(com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.constructed.ClientCov(com.serotonin.bacnet4j.type.primitive.Null);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ClientCov(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Real getRealIncrement();
  public com.serotonin.bacnet4j.type.primitive.Null getDefaultIncrement();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "CovSubscription.java"
public class com.serotonin.bacnet4j.type.constructed.CovSubscription extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.CovSubscription(com.serotonin.bacnet4j.type.constructed.RecipientProcess, com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Real);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.CovSubscription(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.RecipientProcess getRecipient();
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference getMonitoredPropertyReference();
  public com.serotonin.bacnet4j.type.primitive.Boolean getIssueConfirmedNotifications();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeRemaining();
  public com.serotonin.bacnet4j.type.primitive.Real getCovIncrement();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DailySchedule.java"
public class com.serotonin.bacnet4j.type.constructed.DailySchedule extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DailySchedule(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.TimeValue>);
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.TimeValue> getDaySchedule();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DailySchedule(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
}
Compiled from "DateRange.java"
public class com.serotonin.bacnet4j.type.constructed.DateRange extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DateRange(com.serotonin.bacnet4j.type.primitive.Date, com.serotonin.bacnet4j.type.primitive.Date);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DateRange(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Date getStartDate();
  public com.serotonin.bacnet4j.type.primitive.Date getEndDate();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DateTime.java"
public class com.serotonin.bacnet4j.type.constructed.DateTime extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DateTime();
  public com.serotonin.bacnet4j.type.constructed.DateTime(com.serotonin.bacnet4j.type.primitive.Date, com.serotonin.bacnet4j.type.primitive.Time);
  public com.serotonin.bacnet4j.type.constructed.DateTime(long);
  public com.serotonin.bacnet4j.type.constructed.DateTime(java.util.GregorianCalendar);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DateTime(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Date getDate();
  public com.serotonin.bacnet4j.type.primitive.Time getTime();
  public long getTimeMillis();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DaysOfWeek.java"
public class com.serotonin.bacnet4j.type.constructed.DaysOfWeek extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.DaysOfWeek();
  public com.serotonin.bacnet4j.type.constructed.DaysOfWeek(boolean);
  public com.serotonin.bacnet4j.type.constructed.DaysOfWeek(org.free.bacnet4j.util.ByteQueue);
  public boolean contains(int);
  public boolean isMonday();
  public void setMonday(boolean);
  public boolean isTuesday();
  public void setTuesday(boolean);
  public boolean isWednesday();
  public void setWednesday(boolean);
  public boolean isThursday();
  public void setThursday(boolean);
  public boolean isFriday();
  public void setFriday(boolean);
  public boolean isSaturday();
  public void setSaturday(boolean);
  public boolean isSunday();
  public void setSunday(boolean);
}
Compiled from "Destination.java"
public class com.serotonin.bacnet4j.type.constructed.Destination extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Destination(com.serotonin.bacnet4j.type.constructed.DaysOfWeek, com.serotonin.bacnet4j.type.primitive.Time, com.serotonin.bacnet4j.type.primitive.Time, com.serotonin.bacnet4j.type.constructed.Recipient, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.constructed.EventTransitionBits);
  public com.serotonin.bacnet4j.type.constructed.Destination(com.serotonin.bacnet4j.type.constructed.Recipient, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.constructed.EventTransitionBits);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Destination(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public boolean isSuitableForEvent(com.serotonin.bacnet4j.type.constructed.TimeStamp, com.serotonin.bacnet4j.type.enumerated.EventState);
  public com.serotonin.bacnet4j.type.constructed.DaysOfWeek getValidDays();
  public com.serotonin.bacnet4j.type.primitive.Time getFromTime();
  public com.serotonin.bacnet4j.type.primitive.Time getToTime();
  public com.serotonin.bacnet4j.type.constructed.Recipient getRecipient();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getProcessIdentifier();
  public com.serotonin.bacnet4j.type.primitive.Boolean getIssueConfirmedNotifications();
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits getTransitions();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DeviceObjectPropertyReference.java"
public class com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getDeviceIdentifier();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DeviceObjectPropertyValue.java"
public class com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyValue extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyValue(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getDeviceIdentifier();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getArrayIndex();
  public com.serotonin.bacnet4j.type.Encodable getValue();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "DeviceObjectReference.java"
public class com.serotonin.bacnet4j.type.constructed.DeviceObjectReference extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectReference(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectReference(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getDeviceIdentifier();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "EventLogRecord.java"
public class com.serotonin.bacnet4j.type.constructed.EventLogRecord extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.EventLogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.constructed.LogStatus);
  public com.serotonin.bacnet4j.type.constructed.EventLogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.service.confirmed.ConfirmedEventNotificationRequest);
  public com.serotonin.bacnet4j.type.constructed.EventLogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.Real);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DateTime getTimestamp();
  public com.serotonin.bacnet4j.type.constructed.LogStatus getLogStatus();
  public com.serotonin.bacnet4j.service.confirmed.ConfirmedEventNotificationRequest getConfirmedEventNotificationRequest();
  public com.serotonin.bacnet4j.type.primitive.Real getReal();
  public int getChoiceType();
  public com.serotonin.bacnet4j.type.constructed.EventLogRecord(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "EventTransitionBits.java"
public class com.serotonin.bacnet4j.type.constructed.EventTransitionBits extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits(boolean, boolean, boolean);
  public com.serotonin.bacnet4j.type.constructed.EventTransitionBits(org.free.bacnet4j.util.ByteQueue);
  public boolean isToOffnormal();
  public boolean isToFault();
  public boolean isToNormal();
  public boolean contains(com.serotonin.bacnet4j.type.enumerated.EventState);
}
Compiled from "LimitEnable.java"
public class com.serotonin.bacnet4j.type.constructed.LimitEnable extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.LimitEnable(boolean, boolean);
  public com.serotonin.bacnet4j.type.constructed.LimitEnable(org.free.bacnet4j.util.ByteQueue);
  public boolean isLowLimitEnable();
  public boolean isHighLimitEnable();
}
Compiled from "LogData.java"
public class com.serotonin.bacnet4j.type.constructed.LogData extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public static com.serotonin.bacnet4j.type.constructed.Choice booleanElement(com.serotonin.bacnet4j.type.primitive.Boolean);
  public static com.serotonin.bacnet4j.type.constructed.Choice realElement(com.serotonin.bacnet4j.type.primitive.Real);
  public static com.serotonin.bacnet4j.type.constructed.Choice enumElement(com.serotonin.bacnet4j.type.primitive.Enumerated);
  public static com.serotonin.bacnet4j.type.constructed.Choice unsignedElement(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public static com.serotonin.bacnet4j.type.constructed.Choice signedElement(com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public static com.serotonin.bacnet4j.type.constructed.Choice bitstringElement(com.serotonin.bacnet4j.type.primitive.BitString);
  public static com.serotonin.bacnet4j.type.constructed.Choice nullElement(com.serotonin.bacnet4j.type.primitive.Null);
  public static com.serotonin.bacnet4j.type.constructed.Choice failureElement(com.serotonin.bacnet4j.type.constructed.BACnetError);
  public static com.serotonin.bacnet4j.type.constructed.Choice anyElement(com.serotonin.bacnet4j.type.constructed.BaseType);
  public com.serotonin.bacnet4j.type.constructed.LogData(com.serotonin.bacnet4j.type.constructed.LogStatus, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.Choice>, com.serotonin.bacnet4j.type.primitive.Real);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.LogStatus getLogStatus();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.Choice> getLogData();
  public com.serotonin.bacnet4j.type.primitive.Real getTimeChange();
  public int getChoiceType(int);
  public com.serotonin.bacnet4j.type.primitive.Boolean getBoolean(int);
  public com.serotonin.bacnet4j.type.primitive.Real getReal(int);
  public com.serotonin.bacnet4j.type.primitive.Enumerated getEnumerated(int);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getUnsignedInteger(int);
  public com.serotonin.bacnet4j.type.primitive.SignedInteger getSignedInteger(int);
  public com.serotonin.bacnet4j.type.primitive.BitString getBitString(int);
  public com.serotonin.bacnet4j.type.primitive.Null getNull(int);
  public com.serotonin.bacnet4j.type.constructed.BACnetError getBACnetError(int);
  public com.serotonin.bacnet4j.type.constructed.BaseType getAny(int);
  public com.serotonin.bacnet4j.type.constructed.LogData(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "LogMultipleRecord.java"
public class com.serotonin.bacnet4j.type.constructed.LogMultipleRecord extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.LogMultipleRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.constructed.LogData);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DateTime getTimestamp();
  public com.serotonin.bacnet4j.type.constructed.LogData getLogData();
  public com.serotonin.bacnet4j.type.constructed.LogMultipleRecord(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "LogRecord.java"
public class com.serotonin.bacnet4j.type.constructed.LogRecord extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.constructed.LogStatus, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.Boolean, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, boolean, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.Enumerated, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.SignedInteger, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.BitString, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.primitive.Null, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.constructed.LogRecord(com.serotonin.bacnet4j.type.constructed.DateTime, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.DateTime getTimestamp();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.constructed.LogStatus getLogStatus();
  public com.serotonin.bacnet4j.type.primitive.Boolean getBoolean();
  public com.serotonin.bacnet4j.type.primitive.Real getReal();
  public com.serotonin.bacnet4j.type.primitive.Real getTimeChange();
  public com.serotonin.bacnet4j.type.primitive.Enumerated getEnumerated();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getUnsignedInteger();
  public com.serotonin.bacnet4j.type.primitive.SignedInteger getSignedInteger();
  public com.serotonin.bacnet4j.type.primitive.BitString getBitString();
  public com.serotonin.bacnet4j.type.primitive.Null getNull();
  public com.serotonin.bacnet4j.type.constructed.BACnetError getBACnetError();
  public com.serotonin.bacnet4j.type.Encodable getEncodable();
  public int getChoiceType();
  public com.serotonin.bacnet4j.type.constructed.LogRecord(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "LogStatus.java"
public class com.serotonin.bacnet4j.type.constructed.LogStatus extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.LogStatus(boolean, boolean);
  public com.serotonin.bacnet4j.type.constructed.LogStatus(org.free.bacnet4j.util.ByteQueue);
  public boolean isLogDisabled();
  public boolean isBufferPurged();
}
Compiled from "ObjectPropertyReference.java"
public class com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ObjectPropertyValue.java"
public class com.serotonin.bacnet4j.type.constructed.ObjectPropertyValue extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyValue(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.Encodable getValue();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPriority();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ObjectTypesSupported.java"
public class com.serotonin.bacnet4j.type.constructed.ObjectTypesSupported extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.ObjectTypesSupported();
  public com.serotonin.bacnet4j.type.constructed.ObjectTypesSupported(org.free.bacnet4j.util.ByteQueue);
  public boolean isAnalogInput();
  public void setAnalogInput(boolean);
  public boolean isAnalogOutput();
  public void setAnalogOutput(boolean);
  public boolean isAnalogValue();
  public void setAnalogValue(boolean);
  public boolean isBinaryInput();
  public void setBinaryInput(boolean);
  public boolean isBinaryOutput();
  public void setBinaryOutput(boolean);
  public boolean isBinaryValue();
  public void setBinaryValue(boolean);
  public boolean isCalendar();
  public void setCalendar(boolean);
  public boolean isCommand();
  public void setCommand(boolean);
  public boolean isDevice();
  public void setDevice(boolean);
  public boolean isEventEnrollment();
  public void setEventEnrollment(boolean);
  public boolean isFile();
  public void setFile(boolean);
  public boolean isGroup();
  public void setGroup(boolean);
  public boolean isLoop();
  public void setLoop(boolean);
  public boolean isMultiStateInput();
  public void setMultiStateInput(boolean);
  public boolean isMultiStateOutput();
  public void setMultiStateOutput(boolean);
  public boolean isNotificationClass();
  public void setNotificationClass(boolean);
  public boolean isProgram();
  public void setProgram(boolean);
  public boolean isSchedule();
  public void setSchedule(boolean);
  public boolean isAveraging();
  public void setAveraging(boolean);
  public boolean isMultiStateValue();
  public void setMultiStateValue(boolean);
  public boolean isTrendLog();
  public void setTrendLog(boolean);
  public boolean isLifeSafetyPoint();
  public void setLifeSafetyPoint(boolean);
  public boolean isLifeSafetyZone();
  public void setLifeSafetyZone(boolean);
  public boolean isAccumulator();
  public void setAccumulator(boolean);
  public boolean isPulseConverter();
  public void setPulseConverter(boolean);
  public boolean isEventLog();
  public void setEventLog(boolean);
  public boolean isTrendLogMultiple();
  public void setTrendLogMultiple(boolean);
  public boolean isLoadControl();
  public void setLoadControl(boolean);
  public boolean isStructuredView();
  public void setStructuredView(boolean);
  public boolean isAccessDoor();
  public void setAccessDoor(boolean);
}
Compiled from "Prescale.java"
public class com.serotonin.bacnet4j.type.constructed.Prescale extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Prescale(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Prescale(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getMultiplier();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getModuloDivide();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "PriorityArray.java"
public class com.serotonin.bacnet4j.type.constructed.PriorityArray extends com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PriorityValue> {
  public com.serotonin.bacnet4j.type.constructed.PriorityArray();
  public com.serotonin.bacnet4j.type.constructed.PriorityArray(java.util.List<com.serotonin.bacnet4j.type.constructed.PriorityValue>);
  public com.serotonin.bacnet4j.type.constructed.PriorityArray(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void set(int, com.serotonin.bacnet4j.type.constructed.PriorityValue);
  public void add(com.serotonin.bacnet4j.type.constructed.PriorityValue);
  public void remove(int);
  public void remove(com.serotonin.bacnet4j.type.constructed.PriorityValue);
  public void removeAll(com.serotonin.bacnet4j.type.constructed.PriorityValue);
  public void removeAll(com.serotonin.bacnet4j.type.Encodable);
  public void remove(com.serotonin.bacnet4j.type.Encodable);
  public void add(com.serotonin.bacnet4j.type.Encodable);
  public void set(int, com.serotonin.bacnet4j.type.Encodable);
}
Compiled from "PriorityValue.java"
public class com.serotonin.bacnet4j.type.constructed.PriorityValue extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(com.serotonin.bacnet4j.type.primitive.Null);
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(com.serotonin.bacnet4j.type.enumerated.BinaryPV);
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(com.serotonin.bacnet4j.type.constructed.BaseType);
  public com.serotonin.bacnet4j.type.primitive.Null getNullValue();
  public com.serotonin.bacnet4j.type.primitive.Real getRealValue();
  public com.serotonin.bacnet4j.type.enumerated.BinaryPV getBinaryValue();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getIntegerValue();
  public com.serotonin.bacnet4j.type.Encodable getConstructedValue();
  public boolean isNull();
  public com.serotonin.bacnet4j.type.Encodable getValue();
  public java.lang.String toString();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.PriorityValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "PropertyReference.java"
public class com.serotonin.bacnet4j.type.constructed.PropertyReference extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.PropertyReference(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.constructed.PropertyReference(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.PropertyReference(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "PropertyStates.java"
public class com.serotonin.bacnet4j.type.constructed.PropertyStates extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.PropertyStates(int, com.serotonin.bacnet4j.type.constructed.BaseType);
  public int getType();
  public com.serotonin.bacnet4j.type.constructed.BaseType getState();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.PropertyStates(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  static {};
}
Compiled from "PropertyStates.java"
public interface com.serotonin.bacnet4j.type.constructed.PropertyStates$Types {
  public static final int BOOLEAN;
  public static final int BINARY_PV;
  public static final int EVENT_TYPE;
  public static final int POLARITY;
  public static final int PROGRAM_REQUEST;
  public static final int PROGRAM_STATE;
  public static final int PROGRAM_ERROR;
  public static final int RELIABILITY;
  public static final int EVENT_STATE;
  public static final int DEVICE_STATUS;
  public static final int ENGINEERING_UNITS;
  public static final int UNSIGNED;
  public static final int LIFE_SAFETY_MODE;
  public static final int LIFE_SAFETY_STATE;
  public static final int RESTART_REASON;
  public static final int DOOR_ALARM_STATE;
  public static final int BACKUP_STATE;
}
Compiled from "PropertyValue.java"
public class com.serotonin.bacnet4j.type.constructed.PropertyValue extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.PropertyValue(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable);
  public com.serotonin.bacnet4j.type.constructed.PropertyValue(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPriority();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public com.serotonin.bacnet4j.type.Encodable getValue();
  public void setValue(com.serotonin.bacnet4j.type.Encodable);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.PropertyValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadAccessResult.java"
public class com.serotonin.bacnet4j.type.constructed.ReadAccessResult extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ReadAccessResult(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result> getListOfResults();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public com.serotonin.bacnet4j.type.constructed.ReadAccessResult(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadAccessResult.java"
public class com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result(com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.BACnetError);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPropertyArrayIndex();
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier getPropertyIdentifier();
  public boolean isError();
  public com.serotonin.bacnet4j.type.constructed.Choice getReadResult();
  public java.lang.String toString();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ReadAccessResult$Result(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ReadAccessSpecification.java"
public class com.serotonin.bacnet4j.type.constructed.ReadAccessSpecification extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ReadAccessSpecification(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyReference>);
  public com.serotonin.bacnet4j.type.constructed.ReadAccessSpecification(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyReference> getListOfPropertyReferences();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.ReadAccessSpecification(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Recipient.java"
public class com.serotonin.bacnet4j.type.constructed.Recipient extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Recipient(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier);
  public com.serotonin.bacnet4j.type.constructed.Recipient(com.serotonin.bacnet4j.type.constructed.Address);
  public boolean isObjectIdentifier();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public boolean isAddress();
  public com.serotonin.bacnet4j.type.constructed.Address getAddress();
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Recipient(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "RecipientProcess.java"
public class com.serotonin.bacnet4j.type.constructed.RecipientProcess extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.RecipientProcess(com.serotonin.bacnet4j.type.constructed.Recipient, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.RecipientProcess(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.Recipient getRecipient();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getProcessIdentifier();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ResultFlags.java"
public class com.serotonin.bacnet4j.type.constructed.ResultFlags extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.ResultFlags(boolean, boolean, boolean);
  public com.serotonin.bacnet4j.type.constructed.ResultFlags(org.free.bacnet4j.util.ByteQueue);
  public boolean isFirstItem();
  public boolean isLastItem();
  public boolean isMoreItems();
}
Compiled from "Scale.java"
public class com.serotonin.bacnet4j.type.constructed.Scale extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Scale(com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.constructed.Scale(com.serotonin.bacnet4j.type.primitive.SignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.Scale(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public boolean isReal();
  public com.serotonin.bacnet4j.type.primitive.Real getReal();
  public com.serotonin.bacnet4j.type.primitive.SignedInteger getSignedInteger();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "Sequence.java"
public class com.serotonin.bacnet4j.type.constructed.Sequence extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.Sequence(com.serotonin.bacnet4j.type.SequenceDefinition, java.util.Map<java.lang.String, com.serotonin.bacnet4j.type.Encodable>);
  public com.serotonin.bacnet4j.type.constructed.Sequence(com.serotonin.bacnet4j.type.SequenceDefinition, org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.Sequence(com.serotonin.bacnet4j.type.SequenceDefinition, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.SequenceDefinition getDefinition();
  public java.util.Map<java.lang.String, com.serotonin.bacnet4j.type.Encodable> getValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SequenceOf.java"
public class com.serotonin.bacnet4j.type.constructed.SequenceOf<E extends com.serotonin.bacnet4j.type.Encodable> extends com.serotonin.bacnet4j.type.constructed.BaseType implements java.lang.Iterable<E> {
  public com.serotonin.bacnet4j.type.constructed.SequenceOf();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf(java.util.List<E>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.SequenceOf(org.free.bacnet4j.util.ByteQueue, java.lang.Class<E>) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf(org.free.bacnet4j.util.ByteQueue, int, java.lang.Class<E>) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf(org.free.bacnet4j.util.ByteQueue, java.lang.Class<E>, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public E get(int);
  public int getCount();
  public void set(int, E);
  public void add(E);
  public void remove(int);
  public void remove(E);
  public void removeAll(E);
  public boolean contains(E);
  public java.util.Iterator<E> iterator();
  public java.lang.String toString();
  public java.util.List<E> getValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ServicesSupported.java"
public class com.serotonin.bacnet4j.type.constructed.ServicesSupported extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.ServicesSupported();
  public com.serotonin.bacnet4j.type.constructed.ServicesSupported(org.free.bacnet4j.util.ByteQueue);
  public boolean isAcknowledgeAlarm();
  public void setAcknowledgeAlarm(boolean);
  public boolean isConfirmedCovNotification();
  public void setConfirmedCovNotification(boolean);
  public boolean isConfirmedEventNotification();
  public void setConfirmedEventNotification(boolean);
  public boolean isGetAlarmSummary();
  public void setGetAlarmSummary(boolean);
  public boolean isGetEnrollmentSummary();
  public void setGetEnrollmentSummary(boolean);
  public boolean isSubscribeCov();
  public void setSubscribeCov(boolean);
  public boolean isAtomicReadFile();
  public void setAtomicReadFile(boolean);
  public boolean isAtomicWriteFile();
  public void setAtomicWriteFile(boolean);
  public boolean isAddListElement();
  public void setAddListElement(boolean);
  public boolean isRemoveListElement();
  public void setRemoveListElement(boolean);
  public boolean isCreateObject();
  public void setCreateObject(boolean);
  public boolean isDeleteObject();
  public void setDeleteObject(boolean);
  public boolean isReadProperty();
  public void setReadProperty(boolean);
  public boolean isReadPropertyConditional();
  public void setReadPropertyConditional(boolean);
  public boolean isReadPropertyMultiple();
  public void setReadPropertyMultiple(boolean);
  public boolean isWriteProperty();
  public void setWriteProperty(boolean);
  public boolean isWritePropertyMultiple();
  public void setWritePropertyMultiple(boolean);
  public boolean isDeviceCommunicationControl();
  public void setDeviceCommunicationControl(boolean);
  public boolean isConfirmedPrivateTransfer();
  public void setConfirmedPrivateTransfer(boolean);
  public boolean isConfirmedTextMessage();
  public void setConfirmedTextMessage(boolean);
  public boolean isReinitializeDevice();
  public void setReinitializeDevice(boolean);
  public boolean isVtOpen();
  public void setVtOpen(boolean);
  public boolean isVtClose();
  public void setVtClose(boolean);
  public boolean isVtData();
  public void setVtData(boolean);
  public boolean isAuthenticate();
  public void setAuthenticate(boolean);
  public boolean isRequestKey();
  public void setRequestKey(boolean);
  public boolean isIAm();
  public void setIAm(boolean);
  public boolean isIHave();
  public void setIHave(boolean);
  public boolean isUnconfirmedCovNotification();
  public void setUnconfirmedCovNotification(boolean);
  public boolean isUnconfirmedEventNotification();
  public void setUnconfirmedEventNotification(boolean);
  public boolean isUnconfirmedPrivateTransfer();
  public void setUnconfirmedPrivateTransfer(boolean);
  public boolean isUnconfirmedTextMessage();
  public void setUnconfirmedTextMessage(boolean);
  public boolean isTimeSynchronization();
  public void setTimeSynchronization(boolean);
  public boolean isWhoHas();
  public void setWhoHas(boolean);
  public boolean isWhoIs();
  public void setWhoIs(boolean);
  public boolean isReadRange();
  public void setReadRange(boolean);
  public boolean isUtcTimeSynchronization();
  public void setUtcTimeSynchronization(boolean);
  public boolean isLifeSafetyOperation();
  public void setLifeSafetyOperation(boolean);
  public boolean isSubscribeCovProperty();
  public void setSubscribeCovProperty(boolean);
  public boolean isGetEventInformation();
  public void setGetEventInformation(boolean);
}
Compiled from "SessionKey.java"
public class com.serotonin.bacnet4j.type.constructed.SessionKey extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.SessionKey(com.serotonin.bacnet4j.type.primitive.OctetString, com.serotonin.bacnet4j.type.constructed.Address);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.SessionKey(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.OctetString getSessionKey();
  public com.serotonin.bacnet4j.type.constructed.Address getPeerAddress();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SetpointReference.java"
public class com.serotonin.bacnet4j.type.constructed.SetpointReference extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.SetpointReference(com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.SetpointReference(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference getSetpointReference();
  public java.lang.String toString();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ShedLevel.java"
public class com.serotonin.bacnet4j.type.constructed.ShedLevel extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.ShedLevel(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, boolean);
  public com.serotonin.bacnet4j.type.constructed.ShedLevel(com.serotonin.bacnet4j.type.primitive.Real);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPercent();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getLevel();
  public com.serotonin.bacnet4j.type.primitive.Real getAmount();
  public int getChoiceType();
  public com.serotonin.bacnet4j.type.constructed.ShedLevel(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "SpecialEvent.java"
public class com.serotonin.bacnet4j.type.constructed.SpecialEvent extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.SpecialEvent(com.serotonin.bacnet4j.type.constructed.CalendarEntry, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.TimeValue>, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.constructed.SpecialEvent(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.TimeValue>, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public boolean isCalendarReference();
  public com.serotonin.bacnet4j.type.constructed.CalendarEntry getCalendarEntry();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getCalendarReference();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.TimeValue> getListOfTimeValues();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getEventPriority();
  public com.serotonin.bacnet4j.type.constructed.SpecialEvent(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "StatusFlags.java"
public class com.serotonin.bacnet4j.type.constructed.StatusFlags extends com.serotonin.bacnet4j.type.primitive.BitString {
  public com.serotonin.bacnet4j.type.constructed.StatusFlags(boolean, boolean, boolean, boolean);
  public com.serotonin.bacnet4j.type.constructed.StatusFlags(org.free.bacnet4j.util.ByteQueue);
  public boolean isInAlarm();
  public boolean isFault();
  public boolean isOverridden();
  public boolean isOutOfService();
}
Compiled from "TimeStamp.java"
public class com.serotonin.bacnet4j.type.constructed.TimeStamp extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.TimeStamp(com.serotonin.bacnet4j.type.primitive.Time);
  public com.serotonin.bacnet4j.type.constructed.TimeStamp(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.constructed.TimeStamp(com.serotonin.bacnet4j.type.constructed.DateTime);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.TimeStamp(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public boolean isTime();
  public com.serotonin.bacnet4j.type.primitive.Time getTime();
  public boolean isSequenceNumber();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getSequenceNumber();
  public boolean isDateTime();
  public com.serotonin.bacnet4j.type.constructed.DateTime getDateTime();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "TimeValue.java"
public class com.serotonin.bacnet4j.type.constructed.TimeValue extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.TimeValue(com.serotonin.bacnet4j.type.primitive.Time, com.serotonin.bacnet4j.type.primitive.Primitive);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.TimeValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.Time getTime();
  public com.serotonin.bacnet4j.type.primitive.Primitive getValue();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VtSession.java"
public class com.serotonin.bacnet4j.type.constructed.VtSession extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.VtSession(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.Address);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.VtSession(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getLocalVtSessionId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getRemoteVtSessionId();
  public com.serotonin.bacnet4j.type.constructed.Address getRemoteVtAddress();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "WeekNDay.java"
public class com.serotonin.bacnet4j.type.constructed.WeekNDay extends com.serotonin.bacnet4j.type.primitive.OctetString {
  public com.serotonin.bacnet4j.type.constructed.WeekNDay(com.serotonin.bacnet4j.enums.Month, com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth, com.serotonin.bacnet4j.enums.DayOfWeek);
  public com.serotonin.bacnet4j.enums.Month getMonth();
  public com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth getWeekOfMonth();
  public com.serotonin.bacnet4j.enums.DayOfWeek getDayOfWeek();
  public com.serotonin.bacnet4j.type.constructed.WeekNDay(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "WeekNDay.java"
public class com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth days1to7;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth days8to14;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth days15to21;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth days22to28;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth days29to31;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth last7Days;
  public static final com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth any;
  public static com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth valueOf(byte);
  public com.serotonin.bacnet4j.type.constructed.WeekNDay$WeekOfMonth(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "WriteAccessSpecification.java"
public class com.serotonin.bacnet4j.type.constructed.WriteAccessSpecification extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.constructed.WriteAccessSpecification(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.constructed.WriteAccessSpecification(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue> getListOfProperties();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier getObjectIdentifier();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "AbortReason.java"
public class com.serotonin.bacnet4j.type.enumerated.AbortReason extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason other;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason bufferOverflow;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason invalidApduInThisState;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason preemptedByHigherPriorityTask;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason segmentationNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.AbortReason(int);
  public com.serotonin.bacnet4j.type.enumerated.AbortReason(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason getReason();
  public java.lang.String toString();
  static {};
}
Compiled from "AbortReason.java"
public final class com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason extends java.lang.Enum<com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason> {
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason OTHER;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason BUFFER_OVERFLOW;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason INVALID_APDU_IN_THIS_STATE;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason PREEMPTED_BY_HIGHER_PRIORITY_TASK;
  public static final com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason SEGMENTATION_NOT_SUPPORTED;
  public static com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason[] values();
  public static com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason valueOf(java.lang.String);
  public byte byteCode();
  public java.lang.String description();
  public static com.serotonin.bacnet4j.type.enumerated.AbortReason$BNAbortReason reasonByBCode(byte);
  static {};
}
Compiled from "Action.java"
public class com.serotonin.bacnet4j.type.enumerated.Action extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.Action direct;
  public static final com.serotonin.bacnet4j.type.enumerated.Action reverse;
  public static final com.serotonin.bacnet4j.type.enumerated.Action[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.Action(int);
  public com.serotonin.bacnet4j.type.enumerated.Action(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "BackupState.java"
public class com.serotonin.bacnet4j.type.enumerated.BackupState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState idle;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState preparingForBackup;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState preparingForRestore;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState performingABackup;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState performingARestore;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState backupFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState restoreFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.BackupState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.BackupState(int);
  public com.serotonin.bacnet4j.type.enumerated.BackupState(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "BinaryPV.java"
public class com.serotonin.bacnet4j.type.enumerated.BinaryPV extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.BinaryPV inactive;
  public static final com.serotonin.bacnet4j.type.enumerated.BinaryPV active;
  public static final com.serotonin.bacnet4j.type.enumerated.BinaryPV[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.BinaryPV(int);
  public com.serotonin.bacnet4j.type.enumerated.BinaryPV(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "DeviceStatus.java"
public class com.serotonin.bacnet4j.type.enumerated.DeviceStatus extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus operational;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus operationalReadOnly;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus downloadRequired;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus downloadInProgress;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus nonOperational;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus backupInProgress;
  public static final com.serotonin.bacnet4j.type.enumerated.DeviceStatus[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.DeviceStatus(int);
  public com.serotonin.bacnet4j.type.enumerated.DeviceStatus(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "DoorAlarmState.java"
public class com.serotonin.bacnet4j.type.enumerated.DoorAlarmState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState normal;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState alarm;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState doorOpenTooLong;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState forcedOpen;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState tamper;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState doorFault;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState lockDown;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState freeAccess;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState egressOpen;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorAlarmState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.DoorAlarmState(int);
  public com.serotonin.bacnet4j.type.enumerated.DoorAlarmState(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "DoorSecuredStatus.java"
public class com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus secured;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus unsecured;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus unknown;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus(int);
  public com.serotonin.bacnet4j.type.enumerated.DoorSecuredStatus(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "DoorStatus.java"
public class com.serotonin.bacnet4j.type.enumerated.DoorStatus extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.DoorStatus closed;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorStatus open;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorStatus unknown;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorStatus[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.DoorStatus(int);
  public com.serotonin.bacnet4j.type.enumerated.DoorStatus(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "DoorValue.java"
public class com.serotonin.bacnet4j.type.enumerated.DoorValue extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.DoorValue lock;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorValue unlock;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorValue pulseUnlock;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorValue extendedPulseUnlock;
  public static final com.serotonin.bacnet4j.type.enumerated.DoorValue[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.DoorValue(int);
  public com.serotonin.bacnet4j.type.enumerated.DoorValue(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "EngineeringUnits.java"
public class com.serotonin.bacnet4j.type.enumerated.EngineeringUnits extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits metersPerSecondPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits squareMeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits squareCentimeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits squareFeet;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits squareInches;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency1;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency2;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency3;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency4;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency5;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency6;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency7;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency8;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency9;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits currency10;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits milliamperes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits amperes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits amperesPerMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits amperesPerSquareMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits ampereSquareMeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits farads;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits henrys;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits ohms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits ohmMeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits milliohms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilohms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megohms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits siemens;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits siemensPerMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits teslas;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits volts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millivolts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilovolts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megavolts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits voltAmperes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilovoltAmperes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megavoltAmperes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits voltAmperesReactive;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilovoltAmperesReactive;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megavoltAmperesReactive;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits voltsPerDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits voltsPerMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesPhase;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits powerFactor;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits webers;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits joules;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilojoules;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilojoulesPerKilogram;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megajoules;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits wattHours;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilowattHours;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megawattHours;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits btus;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kiloBtus;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megaBtus;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits therms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits tonHours;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits joulesPerKilogramDryAir;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilojoulesPerKilogramDryAir;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megajoulesPerKilogramDryAir;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits btusPerPoundDryAir;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits btusPerPound;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits joulesPerDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilojoulesPerDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megajoulesPerDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits joulesPerKilogramDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits newton;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cyclesPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cyclesPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits hertz;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilohertz;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megahertz;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits perHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits gramsOfWaterPerKilogramDryAir;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits percentRelativeHumidity;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millimeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits centimeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits meters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits inches;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits feet;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits candelas;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits candelasPerSquareMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits wattsPerSquareFoot;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits wattsPerSquareMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits lumens;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits luxes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits footCandles;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilograms;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits poundsMass;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits tons;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits gramsPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits gramsPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilogramsPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilogramsPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilogramsPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits poundsMassPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits poundsMassPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits poundsMassPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits tonsPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits milliwatts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits watts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilowatts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megawatts;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits btusPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kiloBtusPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits horsepower;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits tonsRefrigeration;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits pascals;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits hectopascals;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilopascals;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millibars;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits bars;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits poundsForcePerSquareInch;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits centimetersOfWater;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits inchesOfWater;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millimetersOfMercury;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits centimetersOfMercury;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits inchesOfMercury;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesCelsius;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesKelvinPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesKelvinPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesFahrenheit;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreeDaysCelsius;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreeDaysFahrenheit;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits deltaDegreesFahrenheit;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits deltaDegreesKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits years;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits months;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits weeks;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits days;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits hours;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits minutes;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits seconds;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits hundredthsSeconds;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits milliseconds;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits newtonMeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millimetersPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits millimetersPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits metersPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits metersPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits metersPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilometersPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits feetPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits feetPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits milesPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicFeet;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicMeters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits imperialGallons;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits liters;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits usGallons;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicFeetPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicFeetPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicMetersPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicMetersPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits cubicMetersPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits imperialGallonsPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits litersPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits litersPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits litersPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits usGallonsPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesAngular;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesCelsiusPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesCelsiusPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesFahrenheitPerHour;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits degreesFahrenheitPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits jouleSeconds;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilogramsPerCubicMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilowattHoursPerSquareMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits kilowattHoursPerSquareFoot;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megajoulesPerSquareMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits megajoulesPerSquareFoot;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits noUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits newtonSeconds;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits newtonsPerMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits partsPerMillion;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits partsPerBillion;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits percent;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits percentObscurationPerFoot;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits percentObscurationPerMeter;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits percentPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits perMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits perSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits psiPerDegreeFahrenheit;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits radians;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits radiansPerSecond;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits revolutionsPerMinute;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits squareMetersPerNewton;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits wattsPerMeterPerDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits wattsPerSquareMeterDegreeKelvin;
  public static final com.serotonin.bacnet4j.type.enumerated.EngineeringUnits[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.EngineeringUnits(int);
  public com.serotonin.bacnet4j.type.enumerated.EngineeringUnits(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "ErrorClass.java"
public class com.serotonin.bacnet4j.type.enumerated.ErrorClass extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass device;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass object;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass property;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass resources;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass security;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass services;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass vt;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass communication;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorClass[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ErrorClass(int);
  public com.serotonin.bacnet4j.type.enumerated.ErrorClass(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "ErrorCode.java"
public class com.serotonin.bacnet4j.type.enumerated.ErrorCode extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode other;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode authenticationFailed;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode configurationInProgress;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode deviceBusy;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode dynamicCreationNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode fileAccessDenied;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode incompatibleSecurityLevels;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode inconsistentParameters;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode inconsistentSelectionCriterion;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidDataType;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidFileAccessMethod;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidFileStartPosition;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidOperatorName;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidParameterDataType;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidTimeStamp;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode keyGenerationError;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode missingRequiredParameter;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noObjectsOfSpecifiedType;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noSpaceForObject;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noSpaceToAddListElement;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noSpaceToWriteProperty;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noVtSessionsAvailable;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode propertyIsNotAList;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode objectDeletionNotPermitted;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode objectIdentifierAlreadyExists;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode operationalProblem;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode passwordFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode readAccessDenied;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode securityNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode serviceRequestDenied;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode timeout;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownObject;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownProperty;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownVtClass;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownVtSession;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unsupportedObjectType;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode valueOutOfRange;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode vtSessionAlreadyClosed;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode vtSessionTerminationFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode writeAccessDenied;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode characterSetNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidArrayIndex;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode covSubscriptionFailed;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode notCovProperty;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode optionalFunctionalityNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidConfigurationData;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode datatypeNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode duplicateName;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode duplicateObjectId;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode propertyIsNotAnArray;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortBufferOverflow;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortInvalidApduInThisState;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortPreemptedByHigherPriorityTask;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortSegmentationNotSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortProprietary;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode abortOther;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidTag;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode networkDown;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectBufferOverflow;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectInconsistentParameters;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectInvalidParameterDataType;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectInvalidTag;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectMissingRequiredParameter;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectParameterOutOfRange;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectTooManyArguments;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectUndefinedEnumeration;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectUnrecognizedService;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectProprietary;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode rejectOther;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownDevice;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownRoute;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode valueNotInitialized;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode invalidEventState;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noAlarmConfigured;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode logBufferFull;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode loggedValuePurged;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode noPropertySpecified;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode notConfiguredForTriggeredLogging;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode communicationDisabled;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode unknownFileSize;
  public static final com.serotonin.bacnet4j.type.enumerated.ErrorCode[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ErrorCode(int);
  public com.serotonin.bacnet4j.type.enumerated.ErrorCode(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "EventState.java"
public class com.serotonin.bacnet4j.type.enumerated.EventState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.EventState normal;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState fault;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState offnormal;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState highLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState lowLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState lifeSafetyAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.EventState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.EventState(int);
  public com.serotonin.bacnet4j.type.enumerated.EventState(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "EventType.java"
public class com.serotonin.bacnet4j.type.enumerated.EventType extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.EventType changeOfBitstring;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType changeOfState;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType changeOfValue;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType commandFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType floatingLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType outOfRange;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType changeOfLifeSafety;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType extended;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType bufferReady;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType unsignedRange;
  public static final com.serotonin.bacnet4j.type.enumerated.EventType[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.EventType(int);
  public com.serotonin.bacnet4j.type.enumerated.EventType(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "FileAccessMethod.java"
public class com.serotonin.bacnet4j.type.enumerated.FileAccessMethod extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.FileAccessMethod recordAccess;
  public static final com.serotonin.bacnet4j.type.enumerated.FileAccessMethod streamAccess;
  public static final com.serotonin.bacnet4j.type.enumerated.FileAccessMethod[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.FileAccessMethod(int);
  public com.serotonin.bacnet4j.type.enumerated.FileAccessMethod(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "LifeSafetyMode.java"
public class com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode off;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode on;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode test;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode manned;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode unmanned;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode armed;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode disarmed;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode prearmed;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode slow;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode fast;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode disconnected;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode enabled;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode disabled;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode automaticReleaseDisabled;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode defaultMode;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode(int);
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "LifeSafetyOperation.java"
public class com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation none;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation silence;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation silenceAudible;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation silenceVisual;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation reset;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation resetAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation resetFault;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation unsilence;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation unsilenceAudible;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation unsilenceVisual;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation(int);
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "LifeSafetyState.java"
public class com.serotonin.bacnet4j.type.enumerated.LifeSafetyState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState quiet;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState preAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState alarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState fault;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState faultPreAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState faultAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState notReady;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState active;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState tamper;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState testAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState testActive;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState testFault;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState testFaultAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState holdup;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState duress;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState tamperAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState abnormal;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState emergencyPower;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState delayed;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState blocked;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState localAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState generalAlarm;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState supervisory;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState testSupervisory;
  public static final com.serotonin.bacnet4j.type.enumerated.LifeSafetyState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyState(int);
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyState(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "LockStatus.java"
public class com.serotonin.bacnet4j.type.enumerated.LockStatus extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.LockStatus locked;
  public static final com.serotonin.bacnet4j.type.enumerated.LockStatus unlocked;
  public static final com.serotonin.bacnet4j.type.enumerated.LockStatus fault;
  public static final com.serotonin.bacnet4j.type.enumerated.LockStatus unknown;
  public static final com.serotonin.bacnet4j.type.enumerated.LockStatus[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.LockStatus(int);
  public com.serotonin.bacnet4j.type.enumerated.LockStatus(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "LoggingType.java"
public class com.serotonin.bacnet4j.type.enumerated.LoggingType extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.LoggingType polled;
  public static final com.serotonin.bacnet4j.type.enumerated.LoggingType cov;
  public static final com.serotonin.bacnet4j.type.enumerated.LoggingType triggered;
  public static final com.serotonin.bacnet4j.type.enumerated.LoggingType[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.LoggingType(int);
  public com.serotonin.bacnet4j.type.enumerated.LoggingType(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "Maintenance.java"
public class com.serotonin.bacnet4j.type.enumerated.Maintenance extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.Maintenance none;
  public static final com.serotonin.bacnet4j.type.enumerated.Maintenance periodicTest;
  public static final com.serotonin.bacnet4j.type.enumerated.Maintenance needServiceOperational;
  public static final com.serotonin.bacnet4j.type.enumerated.Maintenance needServiceInoperative;
  public static final com.serotonin.bacnet4j.type.enumerated.Maintenance[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.Maintenance(int);
  public com.serotonin.bacnet4j.type.enumerated.Maintenance(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "MessagePriority.java"
public class com.serotonin.bacnet4j.type.enumerated.MessagePriority extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.MessagePriority normal;
  public static final com.serotonin.bacnet4j.type.enumerated.MessagePriority urgent;
  public static final com.serotonin.bacnet4j.type.enumerated.MessagePriority[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.MessagePriority(int);
  public com.serotonin.bacnet4j.type.enumerated.MessagePriority(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "NodeType.java"
public class com.serotonin.bacnet4j.type.enumerated.NodeType extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType unknown;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType system;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType network;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType device;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType organizational;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType area;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType equipment;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType point;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType collection;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType property;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType functional;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType other;
  public static final com.serotonin.bacnet4j.type.enumerated.NodeType[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.NodeType(int);
  public com.serotonin.bacnet4j.type.enumerated.NodeType(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "NotifyType.java"
public class com.serotonin.bacnet4j.type.enumerated.NotifyType extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.NotifyType alarm;
  public static final com.serotonin.bacnet4j.type.enumerated.NotifyType event;
  public static final com.serotonin.bacnet4j.type.enumerated.NotifyType ackNotification;
  public static final com.serotonin.bacnet4j.type.enumerated.NotifyType[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.NotifyType(int);
  public com.serotonin.bacnet4j.type.enumerated.NotifyType(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ObjectType.java"
public class com.serotonin.bacnet4j.type.enumerated.ObjectType extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType analogInput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType analogOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType analogValue;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType binaryInput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType binaryOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType binaryValue;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType calendar;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType command;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType device;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType eventEnrollment;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType file;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType group;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType loop;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType multiStateInput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType multiStateOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType notificationClass;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType program;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType schedule;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType averaging;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType multiStateValue;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType trendLog;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType lifeSafetyPoint;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType lifeSafetyZone;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType accumulator;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType pulseConverter;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType eventLog;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType trendLogMultiple;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType loadControl;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType structuredView;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType accessDoor;
  public static final com.serotonin.bacnet4j.type.enumerated.ObjectType[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ObjectType(int);
  public com.serotonin.bacnet4j.type.enumerated.ObjectType(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "Polarity.java"
public class com.serotonin.bacnet4j.type.enumerated.Polarity extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.Polarity normal;
  public static final com.serotonin.bacnet4j.type.enumerated.Polarity reverse;
  public static final com.serotonin.bacnet4j.type.enumerated.Polarity[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.Polarity(int);
  public com.serotonin.bacnet4j.type.enumerated.Polarity(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ProgramError.java"
public class com.serotonin.bacnet4j.type.enumerated.ProgramError extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError normal;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError loadFailed;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError internal;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError program;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError other;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramError[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ProgramError(int);
  public com.serotonin.bacnet4j.type.enumerated.ProgramError(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ProgramRequest.java"
public class com.serotonin.bacnet4j.type.enumerated.ProgramRequest extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest ready;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest load;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest run;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest halt;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest restart;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest unload;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramRequest[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ProgramRequest(int);
  public com.serotonin.bacnet4j.type.enumerated.ProgramRequest(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "ProgramState.java"
public class com.serotonin.bacnet4j.type.enumerated.ProgramState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState idle;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState loading;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState running;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState waiting;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState halted;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState unloading;
  public static final com.serotonin.bacnet4j.type.enumerated.ProgramState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ProgramState(int);
  public com.serotonin.bacnet4j.type.enumerated.ProgramState(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "PropertyIdentifier.java"
public class com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier ackedTransitions;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier ackRequired;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier action;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier actionText;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier activeText;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier activeVtSessions;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier alarmValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier alarmValues;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier all;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier allWritesSuccessful;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier apduSegmentTimeout;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier apduTimeout;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier applicationSoftwareVersion;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier archive;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier bias;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier changeOfStateCount;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier changeOfStateTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier notificationClass;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier controlledVariableReference;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier controlledVariableUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier controlledVariableValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier covIncrement;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier dateList;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier daylightSavingsStatus;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier deadband;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier derivativeConstant;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier derivativeConstantUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier description;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier descriptionOfHalt;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier deviceAddressBinding;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier deviceType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier effectivePeriod;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier elapsedActiveTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier errorLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier eventEnable;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier eventState;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier eventType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier exceptionSchedule;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier faultValues;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier feedbackValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier fileAccessMethod;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier fileSize;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier fileType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier firmwareRevision;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier highLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier inactiveText;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier inProcess;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier instanceOf;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier integralConstant;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier integralConstantUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier limitEnable;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier listOfGroupMembers;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier listOfObjectPropertyReferences;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier listOfSessionKeys;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier localDate;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier localTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier location;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lowLimit;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier manipulatedVariableReference;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maximumOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maxApduLengthAccepted;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maxInfoFrames;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maxMaster;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maxPresValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minimumOffTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minimumOnTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minimumOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minPresValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier modelName;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier modificationDate;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier notifyType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier numberOfApduRetries;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier numberOfStates;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier objectIdentifier;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier objectList;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier objectName;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier objectPropertyReference;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier objectType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier optional;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier outOfService;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier outputUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier eventParameters;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier polarity;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier presentValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier priority;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier priorityArray;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier priorityForWriting;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier processIdentifier;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier programChange;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier programLocation;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier programState;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier proportionalConstant;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier proportionalConstantUnits;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier protocolObjectTypesSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier protocolServicesSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier protocolVersion;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier readOnly;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier reasonForHalt;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier recipientList;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier reliability;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier relinquishDefault;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier required;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier resolution;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier segmentationSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier setpoint;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier setpointReference;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier stateText;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier statusFlags;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier systemStatus;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeDelay;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeOfActiveTimeReset;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeOfStateCountReset;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeSynchronizationRecipients;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier units;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier updateInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier utcOffset;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier vendorIdentifier;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier vendorName;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier vtClassesSupported;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier weeklySchedule;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier attemptedSamples;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier averageValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier bufferSize;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier clientCovIncrement;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier covResubscriptionInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier eventTimeStamps;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier logBuffer;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier logDeviceObjectProperty;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier enable;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier logInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maximumValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minimumValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier notificationThreshold;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier protocolRevision;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier recordsSinceNotification;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier recordCount;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier startTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier stopTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier stopWhenFull;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier totalRecordCount;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier validSamples;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier windowInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier windowSamples;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maximumValueTimestamp;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier minimumValueTimestamp;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier varianceValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier activeCovSubscriptions;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier backupFailureTimeout;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier configurationFiles;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier databaseRevision;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier directReading;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lastRestoreTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maintenanceRequired;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier memberOf;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier mode;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier operationExpected;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier setting;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier silenced;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier trackingValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier zoneMembers;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lifeSafetyAlarmValues;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maxSegmentsAccepted;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier profileName;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier autoSlaveDiscovery;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier manualSlaveAddressBinding;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier slaveAddressBinding;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier slaveProxyEnable;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lastNotifyRecord;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier scheduleDefault;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier acceptedModes;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier adjustValue;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier count;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier countBeforeChange;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier countChangeTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier covPeriod;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier inputReference;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier limitMonitoringInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier loggingObject;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier loggingRecord;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier prescale;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier pulseRate;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier scale;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier scaleFactor;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier updateTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier valueBeforeChange;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier valueSet;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier valueChangeTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier alignIntervals;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier intervalOffset;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lastRestartReason;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier loggingType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier restartNotificationRecipients;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeOfDeviceRestart;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier timeSynchronizationInterval;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier trigger;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier utcTimeSynchronizationRecipients;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier nodeSubtype;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier nodeType;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier structuredObjectList;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier subordinateAnnotations;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier subordinateList;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier actualShedLevel;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier dutyWindow;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier expectedShedLevel;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier fullDutyBaseline;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier requestedShedLevel;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier shedDuration;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier shedLevelDescriptions;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier shedLevels;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier stateDescription;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorAlarmState;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorExtendedPulseTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorMembers;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorOpenTooLongTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorPulseTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorStatus;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier doorUnlockDelayTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier lockStatus;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier maskedAlarmValues;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier securedStatus;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier backupAndRestoreState;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier backupPreparationTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier restoreCompletionTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier restorePreparationTime;
  public static final com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier(int);
  public com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier(org.free.bacnet4j.util.ByteQueue);
  public java.lang.String toString();
  static {};
}
Compiled from "RejectReason.java"
public class com.serotonin.bacnet4j.type.enumerated.RejectReason extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason other;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason bufferOverflow;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason inconsistentParameters;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason invalidParameterDataType;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason invalidTag;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason missingRequiredParameter;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason parameterOutOfRange;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason tooManyArguments;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason undefinedEnumeration;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason unrecognizedService;
  public static final com.serotonin.bacnet4j.type.enumerated.RejectReason[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.RejectReason(int);
  public com.serotonin.bacnet4j.type.enumerated.RejectReason(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "Reliability.java"
public class com.serotonin.bacnet4j.type.enumerated.Reliability extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability noFaultDetected;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability noSensor;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability overRange;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability underRange;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability openLoop;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability shortedLoop;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability noOutput;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability unreliableOther;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability processError;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability multiStateFault;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability configurationError;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability communicationFailure;
  public static final com.serotonin.bacnet4j.type.enumerated.Reliability[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.Reliability(int);
  public com.serotonin.bacnet4j.type.enumerated.Reliability(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "RestartReason.java"
public class com.serotonin.bacnet4j.type.enumerated.RestartReason extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason unknown;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason coldstart;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason warmstart;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason detectedPowerLost;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason detectedPoweredOff;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason hardwareWatchdog;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason softwareWatchdog;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason suspended;
  public static final com.serotonin.bacnet4j.type.enumerated.RestartReason[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.RestartReason(int);
  public com.serotonin.bacnet4j.type.enumerated.RestartReason(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "Segmentation.java"
public class com.serotonin.bacnet4j.type.enumerated.Segmentation extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.Segmentation segmentedBoth;
  public static final com.serotonin.bacnet4j.type.enumerated.Segmentation segmentedTransmit;
  public static final com.serotonin.bacnet4j.type.enumerated.Segmentation segmentedReceive;
  public static final com.serotonin.bacnet4j.type.enumerated.Segmentation noSegmentation;
  public static final com.serotonin.bacnet4j.type.enumerated.Segmentation[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.Segmentation(int);
  public com.serotonin.bacnet4j.type.enumerated.Segmentation(org.free.bacnet4j.util.ByteQueue);
  public boolean hasTransmitSegmentation();
  public boolean hasReceiveSegmentation();
  public java.lang.String toString();
  static {};
}
Compiled from "ShedState.java"
public class com.serotonin.bacnet4j.type.enumerated.ShedState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.ShedState shedInactive;
  public static final com.serotonin.bacnet4j.type.enumerated.ShedState shedRequestPending;
  public static final com.serotonin.bacnet4j.type.enumerated.ShedState shedCompliant;
  public static final com.serotonin.bacnet4j.type.enumerated.ShedState shedNonCompliant;
  public static final com.serotonin.bacnet4j.type.enumerated.ShedState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.ShedState(int);
  public com.serotonin.bacnet4j.type.enumerated.ShedState(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "SilencedState.java"
public class com.serotonin.bacnet4j.type.enumerated.SilencedState extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.SilencedState unsilenced;
  public static final com.serotonin.bacnet4j.type.enumerated.SilencedState audibleSilenced;
  public static final com.serotonin.bacnet4j.type.enumerated.SilencedState visibleSilenced;
  public static final com.serotonin.bacnet4j.type.enumerated.SilencedState allSilenced;
  public static final com.serotonin.bacnet4j.type.enumerated.SilencedState[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.SilencedState(int);
  public com.serotonin.bacnet4j.type.enumerated.SilencedState(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "VtClass.java"
public class com.serotonin.bacnet4j.type.enumerated.VtClass extends com.serotonin.bacnet4j.type.primitive.Enumerated {
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass defaultTerminal;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass ansi_x3_64;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass dec_vt52;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass dec_vt100;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass dec_vt220;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass hp_700_94;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass ibm_3130;
  public static final com.serotonin.bacnet4j.type.enumerated.VtClass[] ALL;
  public com.serotonin.bacnet4j.type.enumerated.VtClass(int);
  public com.serotonin.bacnet4j.type.enumerated.VtClass(org.free.bacnet4j.util.ByteQueue);
  static {};
}
Compiled from "BaseError.java"
public class com.serotonin.bacnet4j.type.error.BaseError extends com.serotonin.bacnet4j.type.constructed.BaseType {
  protected byte choice;
  protected com.serotonin.bacnet4j.type.constructed.BACnetError error;
  public static com.serotonin.bacnet4j.type.error.BaseError createBaseError(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.error.BaseError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError);
  public void write(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.error.BaseError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public com.serotonin.bacnet4j.type.error.BaseError(byte, org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.constructed.BACnetError getError();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeListError.java"
public class com.serotonin.bacnet4j.type.error.ChangeListError extends com.serotonin.bacnet4j.type.error.BaseError {
  public com.serotonin.bacnet4j.type.error.ChangeListError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.type.error.ChangeListError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ConfirmedPrivateTransferError.java"
public class com.serotonin.bacnet4j.type.error.ConfirmedPrivateTransferError extends com.serotonin.bacnet4j.type.error.BaseError {
  public static final java.util.Map<com.serotonin.bacnet4j.service.VendorServiceKey, com.serotonin.bacnet4j.type.SequenceDefinition> vendorServiceResolutions;
  public com.serotonin.bacnet4j.type.error.ConfirmedPrivateTransferError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.BaseType);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.type.error.ConfirmedPrivateTransferError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "CreateObjectError.java"
public class com.serotonin.bacnet4j.type.error.CreateObjectError extends com.serotonin.bacnet4j.type.error.BaseError {
  public com.serotonin.bacnet4j.type.error.CreateObjectError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.error.CreateObjectError(byte, com.serotonin.bacnet4j.exception.BACnetServiceException, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.type.error.CreateObjectError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "VTCloseError.java"
public class com.serotonin.bacnet4j.type.error.VTCloseError extends com.serotonin.bacnet4j.type.error.BaseError {
  public com.serotonin.bacnet4j.type.error.VTCloseError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.UnsignedInteger>);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.type.error.VTCloseError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "WritePropertyMultipleError.java"
public class com.serotonin.bacnet4j.type.error.WritePropertyMultipleError extends com.serotonin.bacnet4j.type.error.BaseError {
  public com.serotonin.bacnet4j.type.error.WritePropertyMultipleError(byte, com.serotonin.bacnet4j.type.constructed.BACnetError, com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference);
  public void write(org.free.bacnet4j.util.ByteQueue);
  com.serotonin.bacnet4j.type.error.WritePropertyMultipleError(byte, org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "BufferReady.java"
public class com.serotonin.bacnet4j.type.eventParameter.BufferReady extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.BufferReady(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.BufferReady(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getNotificationThreshold();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPreviousNotificationCount();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfBitString.java"
public class com.serotonin.bacnet4j.type.eventParameter.ChangeOfBitString extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfBitString(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.BitString, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.BitString>);
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfBitString(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.primitive.BitString getBitMask();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.primitive.BitString> getListOfBitstringValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfLifeSafety.java"
public class com.serotonin.bacnet4j.type.eventParameter.ChangeOfLifeSafety extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfLifeSafety(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.enumerated.LifeSafetyState>, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.enumerated.LifeSafetyState>, com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfLifeSafety(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.enumerated.LifeSafetyState> getListOfLifeSafetyAlarmValues();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.enumerated.LifeSafetyState> getListOfAlarmValues();
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference getModePropertyReference();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfState.java"
public class com.serotonin.bacnet4j.type.eventParameter.ChangeOfState extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfState(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyStates>);
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfState(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyStates> getListOfValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfValue.java"
public class com.serotonin.bacnet4j.type.eventParameter.ChangeOfValue extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfValue(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.BitString);
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfValue(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.eventParameter.ChangeOfValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.constructed.Choice getNewValue();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "CommandFailure.java"
public class com.serotonin.bacnet4j.type.eventParameter.CommandFailure extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.CommandFailure(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.CommandFailure(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference getFeedbackPropertyReference();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "EventParameter.java"
public abstract class com.serotonin.bacnet4j.type.eventParameter.EventParameter extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.eventParameter.EventParameter();
  public static com.serotonin.bacnet4j.type.eventParameter.EventParameter createEventParameter(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public final void write(org.free.bacnet4j.util.ByteQueue);
  protected abstract int getTypeId();
  protected abstract void writeImpl(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "Extended.java"
public class com.serotonin.bacnet4j.type.eventParameter.Extended extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.Extended(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter>);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.Extended(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getVendorId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getExtendedEventType();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter> getParameters();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "Extended.java"
public class com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Null);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Boolean);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Double);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.BitString);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Enumerated);
  public com.serotonin.bacnet4j.type.eventParameter.Extended$Parameter(com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference);
  public void write(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "FloatingLimit.java"
public class com.serotonin.bacnet4j.type.eventParameter.FloatingLimit extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.FloatingLimit(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.FloatingLimit(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference getSetpointReference();
  public com.serotonin.bacnet4j.type.primitive.Real getLowDiffLimit();
  public com.serotonin.bacnet4j.type.primitive.Real getHighDiffLimit();
  public com.serotonin.bacnet4j.type.primitive.Real getDeadband();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "OutOfRange.java"
public class com.serotonin.bacnet4j.type.eventParameter.OutOfRange extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.OutOfRange(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.OutOfRange(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.primitive.Real getLowLimit();
  public com.serotonin.bacnet4j.type.primitive.Real getHighLimit();
  public com.serotonin.bacnet4j.type.primitive.Real getDeadband();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UnsignedRange.java"
public class com.serotonin.bacnet4j.type.eventParameter.UnsignedRange extends com.serotonin.bacnet4j.type.eventParameter.EventParameter {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.eventParameter.UnsignedRange(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.eventParameter.UnsignedRange(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getTimeDelay();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getLowLimit();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getHighLimit();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "BufferReady.java"
public class com.serotonin.bacnet4j.type.notificationParameters.BufferReady extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.BufferReady(com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.BufferReady(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference getBufferProperty();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getPreviousNotification();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getCurrentNotification();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfBitString.java"
public class com.serotonin.bacnet4j.type.notificationParameters.ChangeOfBitString extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfBitString(com.serotonin.bacnet4j.type.primitive.BitString, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfBitString(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.BitString getReferencedBitstring();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfLifeSafety.java"
public class com.serotonin.bacnet4j.type.notificationParameters.ChangeOfLifeSafety extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfLifeSafety(com.serotonin.bacnet4j.type.enumerated.LifeSafetyState, com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode, com.serotonin.bacnet4j.type.constructed.StatusFlags, com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfLifeSafety(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyState getNewState();
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyMode getNewMode();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.enumerated.LifeSafetyOperation getOperationExpected();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfState.java"
public class com.serotonin.bacnet4j.type.notificationParameters.ChangeOfState extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfState(com.serotonin.bacnet4j.type.constructed.PropertyStates, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfState(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.constructed.PropertyStates getNewState();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ChangeOfValue.java"
public class com.serotonin.bacnet4j.type.notificationParameters.ChangeOfValue extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfValue(com.serotonin.bacnet4j.type.primitive.BitString, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfValue(com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.constructed.StatusFlags);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.ChangeOfValue(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.constructed.Choice getNewValue();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
Compiled from "CommandFailure.java"
public class com.serotonin.bacnet4j.type.notificationParameters.CommandFailure extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.CommandFailure(com.serotonin.bacnet4j.type.Encodable, com.serotonin.bacnet4j.type.constructed.StatusFlags, com.serotonin.bacnet4j.type.Encodable);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.CommandFailure(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.Encodable getCommandValue();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.Encodable getFeedbackValue();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "ComplexEventType.java"
public class com.serotonin.bacnet4j.type.notificationParameters.ComplexEventType extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.ComplexEventType(com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue>);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.ComplexEventType(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.constructed.PropertyValue> getValues();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "Extended.java"
public class com.serotonin.bacnet4j.type.notificationParameters.Extended extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.Extended(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter>);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getVendorId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getExtendedEventType();
  public com.serotonin.bacnet4j.type.constructed.SequenceOf<com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter> getParameters();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "Extended.java"
public class com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Null);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Real);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Boolean);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Double);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.OctetString);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.BitString);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.primitive.Enumerated);
  public com.serotonin.bacnet4j.type.notificationParameters.Extended$Parameter(com.serotonin.bacnet4j.type.constructed.DeviceObjectPropertyReference);
  public void write(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "FloatingLimit.java"
public class com.serotonin.bacnet4j.type.notificationParameters.FloatingLimit extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.FloatingLimit(com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.constructed.StatusFlags, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.FloatingLimit(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.Real getReferenceValue();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.primitive.Real getSetpointValue();
  public com.serotonin.bacnet4j.type.primitive.Real getErrorLimit();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "NotificationParameters.java"
public abstract class com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters extends com.serotonin.bacnet4j.type.constructed.BaseType {
  public com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters();
  public static com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters createNotificationParameters(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters createNotificationParametersOptional(org.free.bacnet4j.util.ByteQueue, int) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters createNotificationParameters(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  public final void write(org.free.bacnet4j.util.ByteQueue);
  protected abstract int getTypeId();
  protected abstract void writeImpl(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "OutOfRange.java"
public class com.serotonin.bacnet4j.type.notificationParameters.OutOfRange extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.OutOfRange(com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.constructed.StatusFlags, com.serotonin.bacnet4j.type.primitive.Real, com.serotonin.bacnet4j.type.primitive.Real);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.OutOfRange(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.Real getExceedingValue();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.primitive.Real getDeadband();
  public com.serotonin.bacnet4j.type.primitive.Real getExceedingLimit();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "UnsignedRange.java"
public class com.serotonin.bacnet4j.type.notificationParameters.UnsignedRange extends com.serotonin.bacnet4j.type.notificationParameters.NotificationParameters {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.notificationParameters.UnsignedRange(com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.constructed.StatusFlags, com.serotonin.bacnet4j.type.primitive.UnsignedInteger);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public com.serotonin.bacnet4j.type.notificationParameters.UnsignedRange(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetException;
  protected int getTypeId();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getExceedingValue();
  public com.serotonin.bacnet4j.type.constructed.StatusFlags getStatusFlags();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger getExceedingLimit();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "BitString.java"
public class com.serotonin.bacnet4j.type.primitive.BitString extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.BitString(boolean[]);
  public com.serotonin.bacnet4j.type.primitive.BitString(int, boolean);
  public boolean[] getValue();
  public void setAll(boolean);
  public com.serotonin.bacnet4j.type.primitive.BitString(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Boolean.java"
public class com.serotonin.bacnet4j.type.primitive.Boolean extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  protected boolean value;
  public com.serotonin.bacnet4j.type.primitive.Boolean(boolean);
  public boolean booleanValue();
  public com.serotonin.bacnet4j.type.primitive.Boolean(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "CharacterString.java"
public class com.serotonin.bacnet4j.type.primitive.CharacterString extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.CharacterString(java.lang.String);
  public com.serotonin.bacnet4j.type.primitive.CharacterString(byte, java.lang.String);
  public byte getEncoding();
  public java.lang.String getValue();
  public com.serotonin.bacnet4j.type.primitive.CharacterString(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "CharacterString.java"
public interface com.serotonin.bacnet4j.type.primitive.CharacterString$Encodings {
  public static final byte ANSI_X3_4;
  public static final byte IBM_MS_DBCS;
  public static final byte JIS_C_6226;
  public static final byte ISO_10646_UCS_4;
  public static final byte ISO_10646_UCS_2;
  public static final byte ISO_8859_1;
}
Compiled from "Date.java"
public class com.serotonin.bacnet4j.type.primitive.Date extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Date(int, com.serotonin.bacnet4j.enums.Month, int, com.serotonin.bacnet4j.enums.DayOfWeek);
  public com.serotonin.bacnet4j.type.primitive.Date();
  public com.serotonin.bacnet4j.type.primitive.Date(java.util.GregorianCalendar);
  public boolean isYearUnspecified();
  public int getYear();
  public int getCenturyYear();
  public com.serotonin.bacnet4j.enums.Month getMonth();
  public boolean isLastDayOfMonth();
  public boolean isDayUnspecified();
  public int getDay();
  public com.serotonin.bacnet4j.enums.DayOfWeek getDayOfWeek();
  public com.serotonin.bacnet4j.type.primitive.Date(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Double.java"
public class com.serotonin.bacnet4j.type.primitive.Double extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Double(double);
  public double doubleValue();
  public com.serotonin.bacnet4j.type.primitive.Double(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Enumerated.java"
public class com.serotonin.bacnet4j.type.primitive.Enumerated extends com.serotonin.bacnet4j.type.primitive.UnsignedInteger {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Enumerated(int);
  public com.serotonin.bacnet4j.type.primitive.Enumerated(java.math.BigInteger);
  public byte byteValue();
  public boolean equals(com.serotonin.bacnet4j.type.primitive.Enumerated);
  public com.serotonin.bacnet4j.type.primitive.Enumerated(org.free.bacnet4j.util.ByteQueue);
  protected byte getTypeId();
}
Compiled from "Null.java"
public class com.serotonin.bacnet4j.type.primitive.Null extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Null();
  public com.serotonin.bacnet4j.type.primitive.Null(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "ObjectIdentifier.java"
public class com.serotonin.bacnet4j.type.primitive.ObjectIdentifier extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier(com.serotonin.bacnet4j.type.enumerated.ObjectType, int);
  public com.serotonin.bacnet4j.type.enumerated.ObjectType getObjectType();
  public int getInstanceNumber();
  public java.lang.String toString();
  public com.serotonin.bacnet4j.type.primitive.ObjectIdentifier(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "OctetString.java"
public class com.serotonin.bacnet4j.type.primitive.OctetString extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.OctetString(byte[]);
  public com.serotonin.bacnet4j.type.primitive.OctetString(java.lang.String);
  public com.serotonin.bacnet4j.type.primitive.OctetString(java.lang.String, int);
  public com.serotonin.bacnet4j.type.primitive.OctetString(byte);
  public com.serotonin.bacnet4j.type.primitive.OctetString(byte[], int);
  public com.serotonin.bacnet4j.type.primitive.OctetString(java.net.InetSocketAddress);
  public byte[] getBytes();
  public java.lang.String getMacAddressDottedString();
  public java.net.InetAddress getInetAddress();
  public java.net.InetSocketAddress getInetSocketAddress();
  public int getPort();
  public java.lang.String toIpString();
  public java.lang.String toIpPortString();
  public byte[] getIpBytes();
  public byte getMstpAddress();
  public com.serotonin.bacnet4j.type.primitive.OctetString(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  public long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  public java.lang.String getDescription();
}
Compiled from "Primitive.java"
public abstract class com.serotonin.bacnet4j.type.primitive.Primitive extends com.serotonin.bacnet4j.type.Encodable {
  protected boolean contextSpecific;
  public com.serotonin.bacnet4j.type.primitive.Primitive();
  public static com.serotonin.bacnet4j.type.primitive.Primitive createPrimitive(org.free.bacnet4j.util.ByteQueue) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public static com.serotonin.bacnet4j.type.primitive.Primitive createPrimitive(org.free.bacnet4j.util.ByteQueue, int, int) throws com.serotonin.bacnet4j.exception.BACnetErrorException;
  public final void write(org.free.bacnet4j.util.ByteQueue);
  public final void write(org.free.bacnet4j.util.ByteQueue, int);
  public final void writeEncodable(org.free.bacnet4j.util.ByteQueue, int);
  protected abstract void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected abstract long getLength();
  protected abstract byte getTypeId();
  protected long readTag(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "Real.java"
public class com.serotonin.bacnet4j.type.primitive.Real extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Real(float);
  public float floatValue();
  public com.serotonin.bacnet4j.type.primitive.Real(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "SignedInteger.java"
public class com.serotonin.bacnet4j.type.primitive.SignedInteger extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.SignedInteger(int);
  public com.serotonin.bacnet4j.type.primitive.SignedInteger(long);
  public com.serotonin.bacnet4j.type.primitive.SignedInteger(java.math.BigInteger);
  public int intValue();
  public long longValue();
  public java.math.BigInteger bigIntegerValue();
  public com.serotonin.bacnet4j.type.primitive.SignedInteger(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Time.java"
public class com.serotonin.bacnet4j.type.primitive.Time extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.Time(int, int, int, int);
  public com.serotonin.bacnet4j.type.primitive.Time();
  public com.serotonin.bacnet4j.type.primitive.Time(java.util.GregorianCalendar);
  public boolean isHourUnspecified();
  public int getHour();
  public boolean isMinuteUnspecified();
  public int getMinute();
  public boolean isSecondUnspecified();
  public int getSecond();
  public boolean isHundredthUnspecified();
  public int getHundredth();
  public boolean before(com.serotonin.bacnet4j.type.primitive.Time);
  public boolean after(com.serotonin.bacnet4j.type.primitive.Time);
  public com.serotonin.bacnet4j.type.primitive.Time(org.free.bacnet4j.util.ByteQueue);
  public void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Unsigned16.java"
public class com.serotonin.bacnet4j.type.primitive.Unsigned16 extends com.serotonin.bacnet4j.type.primitive.UnsignedInteger {
  public com.serotonin.bacnet4j.type.primitive.Unsigned16(int);
  public com.serotonin.bacnet4j.type.primitive.Unsigned16(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "Unsigned32.java"
public class com.serotonin.bacnet4j.type.primitive.Unsigned32 extends com.serotonin.bacnet4j.type.primitive.UnsignedInteger {
  public com.serotonin.bacnet4j.type.primitive.Unsigned32(int);
  public com.serotonin.bacnet4j.type.primitive.Unsigned32(java.math.BigInteger);
  public com.serotonin.bacnet4j.type.primitive.Unsigned32(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "Unsigned8.java"
public class com.serotonin.bacnet4j.type.primitive.Unsigned8 extends com.serotonin.bacnet4j.type.primitive.UnsignedInteger {
  public com.serotonin.bacnet4j.type.primitive.Unsigned8(int);
  public com.serotonin.bacnet4j.type.primitive.Unsigned8(org.free.bacnet4j.util.ByteQueue);
}
Compiled from "UnsignedInteger.java"
public class com.serotonin.bacnet4j.type.primitive.UnsignedInteger extends com.serotonin.bacnet4j.type.primitive.Primitive {
  public static final byte TYPE_ID;
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger(int);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger(long);
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger(java.math.BigInteger);
  public int intValue();
  public long longValue();
  public java.math.BigInteger bigIntegerValue();
  public com.serotonin.bacnet4j.type.primitive.UnsignedInteger(org.free.bacnet4j.util.ByteQueue);
  protected void writeImpl(org.free.bacnet4j.util.ByteQueue);
  protected long getLength();
  protected byte getTypeId();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "ClockTimeSource.java"
public class com.serotonin.bacnet4j.util.ClockTimeSource implements com.serotonin.bacnet4j.util.TimeSource {
  public com.serotonin.bacnet4j.util.ClockTimeSource();
  public long currentTimeMillis();
}
Compiled from "PropertyReferences.java"
public class com.serotonin.bacnet4j.util.PropertyReferences implements java.io.Serializable {
  public com.serotonin.bacnet4j.util.PropertyReferences();
  public void add(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.PropertyReference);
  public void add(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public java.util.Map<com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, java.util.List<com.serotonin.bacnet4j.type.constructed.PropertyReference>> getProperties();
  public java.util.List<com.serotonin.bacnet4j.util.PropertyReferences> getPropertiesPartitioned(int);
  public int size();
}
Compiled from "PropertyValues.java"
public class com.serotonin.bacnet4j.util.PropertyValues implements java.lang.Iterable<com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference>, java.io.Serializable {
  public com.serotonin.bacnet4j.util.PropertyValues();
  public void add(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public com.serotonin.bacnet4j.type.Encodable getNoErrorCheck(com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference);
  public com.serotonin.bacnet4j.type.Encodable get(com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference) throws com.serotonin.bacnet4j.exception.PropertyValueException;
  public com.serotonin.bacnet4j.type.Encodable getNoErrorCheck(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.constructed.PropertyReference);
  public com.serotonin.bacnet4j.type.Encodable getNoErrorCheck(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public com.serotonin.bacnet4j.type.Encodable get(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.PropertyValueException;
  public com.serotonin.bacnet4j.type.Encodable getNullOnError(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public java.lang.String getString(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier);
  public java.lang.String getString(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, java.lang.String);
  public java.util.Iterator<com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference> iterator();
  public static java.lang.String getString(com.serotonin.bacnet4j.type.Encodable);
  public static java.lang.String getString(com.serotonin.bacnet4j.type.Encodable, java.lang.String);
  public static com.serotonin.bacnet4j.type.Encodable getNullOnError(com.serotonin.bacnet4j.type.Encodable);
}
Compiled from "RequestListener.java"
public interface com.serotonin.bacnet4j.util.RequestListener {
  public abstract boolean requestProgress(double, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
}
Compiled from "RequestListenerUpdater.java"
public class com.serotonin.bacnet4j.util.RequestListenerUpdater {
  public com.serotonin.bacnet4j.util.RequestListenerUpdater(com.serotonin.bacnet4j.util.RequestListener, com.serotonin.bacnet4j.util.PropertyValues, int);
  public void increment(com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.type.Encodable);
  public boolean cancelled();
}
Compiled from "RequestUtils.java"
public class com.serotonin.bacnet4j.util.RequestUtils {
  public com.serotonin.bacnet4j.util.RequestUtils();
  public static com.serotonin.bacnet4j.type.Encodable getProperty(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.type.Encodable getProperty(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static java.util.Map<com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable> getProperties(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.util.RequestListener, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier...) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static java.util.Map<com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable> getProperties(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.util.RequestListener, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier...) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.type.Encodable sendReadPropertyAllowNull(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.type.Encodable sendReadPropertyAllowNull(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.primitive.UnsignedInteger, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static void getExtendedDeviceInformation(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static java.util.List<org.apache.commons.lang3.tuple.Pair<com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference, com.serotonin.bacnet4j.type.Encodable>> readProperties(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, java.util.List<com.serotonin.bacnet4j.type.constructed.ObjectPropertyReference>, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.util.PropertyValues readProperties(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.util.PropertyReferences, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.util.PropertyValues readPresentValues(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.util.PropertyValues readPresentValues(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, java.util.List<com.serotonin.bacnet4j.RemoteObject>, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static com.serotonin.bacnet4j.util.PropertyValues readOidPresentValues(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, java.util.List<com.serotonin.bacnet4j.type.primitive.ObjectIdentifier>, com.serotonin.bacnet4j.util.RequestListener) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static void setProperty(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.enumerated.PropertyIdentifier, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetException;
  public static void setPresentValue(com.serotonin.bacnet4j.LocalDevice, com.serotonin.bacnet4j.RemoteDevice, com.serotonin.bacnet4j.type.primitive.ObjectIdentifier, com.serotonin.bacnet4j.type.Encodable) throws com.serotonin.bacnet4j.exception.BACnetException;
  static {};
}
Compiled from "TimeSource.java"
public interface com.serotonin.bacnet4j.util.TimeSource {
  public abstract long currentTimeMillis();
}
Compiled from "ArrayUtils.java"
public class org.free.bacnet4j.util.ArrayUtils {
  public org.free.bacnet4j.util.ArrayUtils();
  public static java.lang.String toHexString(byte[]);
  public static java.lang.String toHexString(byte[], int, int);
  public static java.lang.String toPlainHexString(byte[]);
  public static java.lang.String toPlainHexString(byte[], int, int);
  public static java.lang.String toString(byte[]);
  public static java.lang.String toString(byte[], int, int);
  public static boolean isEmpty(int[]);
  public static int indexOf(java.lang.String[], java.lang.String);
  public static boolean containsIgnoreCase(java.lang.String[], java.lang.String);
  public static int indexOf(byte[], byte[]);
  public static int indexOf(byte[], int, byte[]);
  public static int indexOf(byte[], int, int, byte[]);
  public static int sum(int[]);
  public static int[] toIntArray(java.util.List<java.lang.Integer>);
  public static double[] toDoubleArray(java.util.List<java.lang.Double>);
  public static java.lang.String concatenate(java.lang.Object[], java.lang.String);
  public static void shift(java.lang.Object[], int);
}
Compiled from "ByteQueue.java"
public class org.free.bacnet4j.util.ByteQueue implements java.lang.Cloneable {
  public org.free.bacnet4j.util.ByteQueue();
  public org.free.bacnet4j.util.ByteQueue(int);
  public org.free.bacnet4j.util.ByteQueue(byte[]);
  public org.free.bacnet4j.util.ByteQueue(byte[], int, int);
  public void push(byte);
  public void push(int);
  public void push(long);
  public void pushU2B(int);
  public void pushU3B(int);
  public void pushS4B(int);
  public void pushU4B(long);
  public void pushChar(char);
  public void pushDouble(double);
  public void pushFloat(float);
  public void pushInt(int);
  public void pushLong(long);
  public void pushShort(short);
  public void read(java.io.InputStream, int) throws java.io.IOException;
  public void push(byte[]);
  public void push(byte[], int, int);
  public void push(org.free.bacnet4j.util.ByteQueue);
  public void mark();
  public void reset();
  public byte pop();
  public int popU1B();
  public int popU2B();
  public int popU3B();
  public int popS4B();
  public long popU4B();
  public int pop(byte[]);
  public int pop(byte[], int, int);
  public int pop(int);
  public java.lang.String popString(int, java.nio.charset.Charset);
  public byte[] popAll();
  public void write(java.io.OutputStream) throws java.io.IOException;
  public void write(java.io.OutputStream, int) throws java.io.IOException;
  public byte tailPop();
  public byte peek(int);
  public byte[] peek(int, int);
  public byte[] peekAll();
  public int peek(byte[]);
  public int peek(byte[], int, int);
  public int indexOf(byte);
  public int indexOf(byte, int);
  public int indexOf(byte[]);
  public int indexOf(byte[], int);
  public int size();
  public void clear();
  public java.lang.Object clone();
  public java.lang.String toString();
  public java.lang.String dumpQueue();
}
Compiled from "IpAddressUtils.java"
public class org.free.bacnet4j.util.IpAddressUtils {
  public org.free.bacnet4j.util.IpAddressUtils();
  public static boolean ipWhiteListCheck(java.lang.String, java.lang.String) throws org.free.bacnet4j.util.IpWhiteListException;
  public static boolean ipWhiteListCheck(java.lang.String[], java.lang.String) throws org.free.bacnet4j.util.IpWhiteListException;
  public static java.lang.String checkIpMask(java.lang.String);
  public static byte[] toIpAddress(java.lang.String) throws java.lang.IllegalArgumentException;
  public static java.lang.String toIpString(byte[]) throws java.lang.IllegalArgumentException;
}
Compiled from "IpWhiteListException.java"
public class org.free.bacnet4j.util.IpWhiteListException extends java.lang.Exception {
  public org.free.bacnet4j.util.IpWhiteListException(java.lang.String);
}
Compiled from "RXTXHack.java"
public class org.free.bacnet4j.util.RXTXHack {
  public static void closeRxtxPort(gnu.io.RXTXPort);
}
Compiled from "SerialParameters.java"
public class org.free.bacnet4j.util.SerialParameters {
  public org.free.bacnet4j.util.SerialParameters();
  public int getBaudRate();
  public void setBaudRate(int);
  public java.lang.String getCommPortId();
  public void setCommPortId(java.lang.String);
  public int getDataBits();
  public void setDataBits(int);
  public int getFlowControlIn();
  public void setFlowControlIn(int);
  public int getFlowControlOut();
  public void setFlowControlOut(int);
  public int getParity();
  public void setParity(int);
  public int getStopBits();
  public void setStopBits(int);
  public java.lang.String getPortOwnerName();
  public void setPortOwnerName(java.lang.String);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SerialPortException.java"
public class org.free.bacnet4j.util.SerialPortException extends java.lang.Exception {
  public org.free.bacnet4j.util.SerialPortException(java.lang.String);
  public org.free.bacnet4j.util.SerialPortException(java.lang.Throwable);
}
Compiled from "SerialUtils.java"
public class org.free.bacnet4j.util.SerialUtils {
  public org.free.bacnet4j.util.SerialUtils();
  public static gnu.io.SerialPort openSerialPort(org.free.bacnet4j.util.SerialParameters) throws org.free.bacnet4j.util.SerialPortException;
  public static void close(gnu.io.SerialPort);
}
Compiled from "StreamUtils.java"
public class org.free.bacnet4j.util.StreamUtils {
  public org.free.bacnet4j.util.StreamUtils();
  public static void transfer(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
  public static void transfer(java.io.InputStream, java.io.OutputStream, long) throws java.io.IOException;
  public static void transfer(java.io.InputStream, java.nio.channels.SocketChannel) throws java.io.IOException;
  public static void transfer(java.io.Reader, java.io.Writer) throws java.io.IOException;
  public static void transfer(java.io.Reader, java.io.Writer, long) throws java.io.IOException;
  public static byte[] read(java.io.InputStream) throws java.io.IOException;
  public static char[] read(java.io.Reader) throws java.io.IOException;
  public static char readChar(java.io.InputStream) throws java.io.IOException;
  public static java.lang.String readString(java.io.InputStream, int) throws java.io.IOException;
  public static byte readByte(java.io.InputStream) throws java.io.IOException;
  public static int read4ByteSigned(java.io.InputStream) throws java.io.IOException;
  public static long read4ByteUnsigned(java.io.InputStream) throws java.io.IOException;
  public static int read2ByteUnsigned(java.io.InputStream) throws java.io.IOException;
  public static short read2ByteSigned(java.io.InputStream) throws java.io.IOException;
  public static void writeByte(java.io.OutputStream, byte) throws java.io.IOException;
  public static void writeChar(java.io.OutputStream, char) throws java.io.IOException;
  public static void writeString(java.io.OutputStream, java.lang.String) throws java.io.IOException;
  public static void write4ByteSigned(java.io.OutputStream, int) throws java.io.IOException;
  public static void write4ByteUnsigned(java.io.OutputStream, long) throws java.io.IOException;
  public static void write2ByteUnsigned(java.io.OutputStream, int) throws java.io.IOException;
  public static void write2ByteSigned(java.io.OutputStream, short) throws java.io.IOException;
  public static java.lang.String dumpArray(byte[]);
  public static java.lang.String dumpArray(byte[], int, int);
  public static java.lang.String dumpMessage(byte[]);
  public static java.lang.String dumpMessage(byte[], int, int);
  public static java.lang.String dumpArrayHex(byte[]);
  public static java.lang.String dumpArrayHex(byte[], int, int);
  public static java.lang.String dumpHex(byte[]);
  public static java.lang.String dumpHex(byte[], int, int);
  public static java.lang.String toHex(byte[]);
  public static java.lang.String toHex(byte);
  public static java.lang.String toHex(short);
  public static java.lang.String toHex(int);
  public static java.lang.String toHex(long);
  public static byte[] fromHex(java.lang.String);
}
