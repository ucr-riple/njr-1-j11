Compiled from "BenchmarkMain.java"
public class benchmarks.BenchmarkMain {
  public benchmarks.BenchmarkMain();
  public static void main(java.lang.String[]);
}
Compiled from "BenchmarkMain.java"
final class benchmarks.BenchmarkMain$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.interfaces.functions.F1 val$f;
  final java.lang.Object val$d;
  benchmarks.BenchmarkMain$1(net.jcores.jre.interfaces.functions.F1, java.lang.Object);
  public void f();
}
Compiled from "Benchmark.java"
public abstract class benchmarks.benchmarker.Benchmark<T> {
  public benchmarks.benchmarker.Benchmark();
  public abstract java.lang.String name();
  public abstract benchmarks.model.TaskData<T> data();
  public abstract java.util.Collection<benchmarks.model.TaskSolver<T>> solver();
}
Compiled from "BenchmarkResults.java"
public class benchmarks.benchmarker.BenchmarkResults {
  public benchmarks.benchmarker.BenchmarkResults(long[]);
  public long average(int);
  public long[] values();
  public long median(int);
}
Compiled from "Benchmarker.java"
public class benchmarks.benchmarker.Benchmarker {
  public benchmarks.benchmarker.Benchmarker();
  public static benchmarks.benchmarker.BenchmarkResults benchmark(net.jcores.jre.interfaces.functions.F0, int);
  public static long benchmark(net.jcores.jre.interfaces.functions.F0);
}
Compiled from "SimpleClone.java"
public class benchmarks.benchmarks.SimpleClone extends benchmarks.benchmarker.Benchmark<junit.data.Data> {
  public benchmarks.benchmarks.SimpleClone();
  public benchmarks.model.TaskData<junit.data.Data> data();
  public java.util.Collection<benchmarks.model.TaskSolver<junit.data.Data>> solver();
  public java.lang.String name();
}
Compiled from "SimpleClone.java"
class benchmarks.benchmarks.SimpleClone$1 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.SimpleClone this$0;
  benchmarks.benchmarks.SimpleClone$1(benchmarks.benchmarks.SimpleClone);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleClone.java"
class benchmarks.benchmarks.SimpleClone$2 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.SimpleClone this$0;
  benchmarks.benchmarks.SimpleClone$2(benchmarks.benchmarks.SimpleClone);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleTest.java"
public class benchmarks.benchmarks.SimpleTest extends benchmarks.benchmarker.Benchmark<junit.data.Data> {
  public benchmarks.benchmarks.SimpleTest();
  public benchmarks.model.TaskData<junit.data.Data> data();
  public java.util.Collection<benchmarks.model.TaskSolver<junit.data.Data>> solver();
  public java.lang.String name();
}
Compiled from "SimpleTest.java"
class benchmarks.benchmarks.SimpleTest$1 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.SimpleTest this$0;
  benchmarks.benchmarks.SimpleTest$1(benchmarks.benchmarks.SimpleTest);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleTest.java"
class benchmarks.benchmarks.SimpleTest$2 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.SimpleTest this$0;
  benchmarks.benchmarks.SimpleTest$2(benchmarks.benchmarks.SimpleTest);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
public class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray extends benchmarks.benchmarker.Benchmark<junit.data.Data> {
  public benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray();
  public benchmarks.model.TaskData<junit.data.Data> data();
  public static java.lang.String ff(java.lang.String);
  public java.util.Collection<benchmarks.model.TaskSolver<junit.data.Data>> solver();
  public java.lang.String name();
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$1 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$2, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$3, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$4 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$4(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$5, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$6, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$7 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$7(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$8, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ComplexLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9 this$1;
  benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9$1(benchmarks.benchmarks.mappinglooping.ComplexLoopingStringArray$9, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
public class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray extends benchmarks.benchmarker.Benchmark<junit.data.Data> {
  public benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray();
  public benchmarks.model.TaskData<junit.data.Data> data();
  public java.util.Collection<benchmarks.model.TaskSolver<junit.data.Data>> solver();
  public java.lang.String name();
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$1 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$2, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$3, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$4 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$4(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$5, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$6, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$7 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$7(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$8, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9 implements net.jcores.jre.interfaces.functions.F1<junit.data.Data, java.lang.Object> {
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray this$0;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray);
  public java.lang.Object f(junit.data.Data);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleLoopingStringArray.java"
class benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$v;
  final benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9 this$1;
  benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9$1(benchmarks.benchmarks.mappinglooping.SimpleLoopingStringArray$9, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "RegExDNA.java"
public class benchmarks.benchmarks.regexdna.RegExDNA extends benchmarks.benchmarker.Benchmark<java.lang.Void> {
  public benchmarks.benchmarks.regexdna.RegExDNA();
  public benchmarks.model.TaskData<java.lang.Void> data();
  public java.util.Collection<benchmarks.model.TaskSolver<java.lang.Void>> solver();
  public java.lang.String name();
}
Compiled from "RegExDNA.java"
class benchmarks.benchmarks.regexdna.RegExDNA$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.regexdna.RegExDNA this$0;
  benchmarks.benchmarks.regexdna.RegExDNA$1(benchmarks.benchmarks.regexdna.RegExDNA);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "RegExDNA.java"
class benchmarks.benchmarks.regexdna.RegExDNA$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.regexdna.RegExDNA this$0;
  benchmarks.benchmarks.regexdna.RegExDNA$2(benchmarks.benchmarks.regexdna.RegExDNA);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "RegExDNA.java"
class benchmarks.benchmarks.regexdna.RegExDNA$3 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.regexdna.RegExDNA this$0;
  benchmarks.benchmarks.regexdna.RegExDNA$3(benchmarks.benchmarks.regexdna.RegExDNA);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "RegExDNA.java"
class benchmarks.benchmarks.regexdna.RegExDNA$4 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.regexdna.RegExDNA this$0;
  benchmarks.benchmarks.regexdna.RegExDNA$4(benchmarks.benchmarks.regexdna.RegExDNA);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "RegExDNA.java"
class benchmarks.benchmarks.regexdna.RegExDNA$5 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.regexdna.RegExDNA this$0;
  benchmarks.benchmarks.regexdna.RegExDNA$5(benchmarks.benchmarks.regexdna.RegExDNA);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SolverJCores1.java"
public final class benchmarks.benchmarks.regexdna.SolverJCores1 {
  public benchmarks.benchmarks.regexdna.SolverJCores1();
  public static java.lang.String main(java.io.InputStream) throws java.io.IOException;
  static java.util.Map access$000();
  static {};
}
Compiled from "SolverJCores1.java"
final class benchmarks.benchmarks.regexdna.SolverJCores1$1 extends benchmarks.benchmarks.regexdna.SolverJCores1$Rewriter {
  benchmarks.benchmarks.regexdna.SolverJCores1$1(java.lang.String);
  public java.lang.String replacement();
}
Compiled from "SolverJCores1.java"
abstract class benchmarks.benchmarks.regexdna.SolverJCores1$Rewriter {
  public benchmarks.benchmarks.regexdna.SolverJCores1$Rewriter(java.lang.String);
  public java.lang.String group(int);
  public abstract java.lang.String replacement();
  public java.lang.String rewrite(java.lang.CharSequence);
  public java.lang.StringBuffer rewrite(java.lang.CharSequence, java.lang.StringBuffer);
}
Compiled from "SolverJCores2.java"
public final class benchmarks.benchmarks.regexdna.SolverJCores2 {
  public benchmarks.benchmarks.regexdna.SolverJCores2();
  public static java.lang.String main(java.io.InputStream);
  static {};
}
Compiled from "SolverJCores2.java"
final class benchmarks.benchmarks.regexdna.SolverJCores2$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.lang.StringBuffer val$console;
  final java.util.Map val$result;
  benchmarks.benchmarks.regexdna.SolverJCores2$1(java.lang.StringBuffer, java.util.Map);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SolverJCores2.java"
final class benchmarks.benchmarks.regexdna.SolverJCores2$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final java.lang.String val$sequence;
  final java.util.Map val$result;
  benchmarks.benchmarks.regexdna.SolverJCores2$2(java.lang.String, java.util.Map);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SolverVanillaMT.java"
public final class benchmarks.benchmarks.regexdna.SolverVanillaMT {
  public benchmarks.benchmarks.regexdna.SolverVanillaMT();
  public static java.lang.String main(java.io.InputStream) throws java.io.IOException;
  static {};
}
Compiled from "SolverVanillaMT.java"
final class benchmarks.benchmarks.regexdna.SolverVanillaMT$1 extends java.lang.Thread {
  final java.lang.String val$variant;
  final java.lang.String val$sequence;
  final java.util.Map val$results;
  benchmarks.benchmarks.regexdna.SolverVanillaMT$1(java.lang.ThreadGroup, java.lang.String, java.lang.String, java.lang.String, java.util.Map);
  public void run();
}
Compiled from "SolverVanillaMTAssisted.java"
public final class benchmarks.benchmarks.regexdna.SolverVanillaMTAssisted {
  public benchmarks.benchmarks.regexdna.SolverVanillaMTAssisted();
  public static java.lang.String main(java.io.InputStream) throws java.io.IOException;
  static {};
}
Compiled from "SolverVanillaMTAssisted.java"
final class benchmarks.benchmarks.regexdna.SolverVanillaMTAssisted$1 extends java.lang.Thread {
  final java.lang.String val$variant;
  final java.lang.String val$sequence;
  final java.util.Map val$results;
  benchmarks.benchmarks.regexdna.SolverVanillaMTAssisted$1(java.lang.ThreadGroup, java.lang.String, java.lang.String, java.lang.String, java.util.Map);
  public void run();
}
Compiled from "SolverVanillaST.java"
public final class benchmarks.benchmarks.regexdna.SolverVanillaST {
  public benchmarks.benchmarks.regexdna.SolverVanillaST();
  public static java.lang.String main(java.io.InputStream) throws java.io.IOException;
  static java.util.Map access$000();
  static {};
}
Compiled from "SolverVanillaST.java"
final class benchmarks.benchmarks.regexdna.SolverVanillaST$1 extends benchmarks.benchmarks.regexdna.SolverVanillaST$Rewriter {
  benchmarks.benchmarks.regexdna.SolverVanillaST$1(java.lang.String);
  public java.lang.String replacement();
}
Compiled from "SolverVanillaST.java"
final class benchmarks.benchmarks.regexdna.SolverVanillaST$2 extends benchmarks.benchmarks.regexdna.SolverVanillaST$Rewriter {
  benchmarks.benchmarks.regexdna.SolverVanillaST$2(java.lang.String);
  public java.lang.String replacement();
}
Compiled from "SolverVanillaST.java"
abstract class benchmarks.benchmarks.regexdna.SolverVanillaST$Rewriter {
  public benchmarks.benchmarks.regexdna.SolverVanillaST$Rewriter(java.lang.String);
  public java.lang.String group(int);
  public abstract java.lang.String replacement();
  public java.lang.String rewrite(java.lang.CharSequence);
  public java.lang.StringBuffer rewrite(java.lang.CharSequence, java.lang.StringBuffer);
}
Compiled from "ReverseComplement.java"
public class benchmarks.benchmarks.reversecomplement.ReverseComplement extends benchmarks.benchmarker.Benchmark<java.lang.Void> {
  public benchmarks.benchmarks.reversecomplement.ReverseComplement();
  public benchmarks.model.TaskData<java.lang.Void> data();
  public java.util.Collection<benchmarks.model.TaskSolver<java.lang.Void>> solver();
  public java.lang.String name();
}
Compiled from "ReverseComplement.java"
class benchmarks.benchmarks.reversecomplement.ReverseComplement$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.Void, java.lang.Object> {
  final benchmarks.benchmarks.reversecomplement.ReverseComplement this$0;
  benchmarks.benchmarks.reversecomplement.ReverseComplement$1(benchmarks.benchmarks.reversecomplement.ReverseComplement);
  public java.lang.Object f(java.lang.Void);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SolverJCores1.java"
public class benchmarks.benchmarks.reversecomplement.SolverJCores1 {
  static final byte[] cmp;
  public benchmarks.benchmarks.reversecomplement.SolverJCores1();
  public static java.lang.String main(java.io.InputStream) throws java.lang.Exception;
  static {};
}
Compiled from "SolverJCores1.java"
class benchmarks.benchmarks.reversecomplement.SolverJCores1$ReversibleByteArray extends java.io.ByteArrayOutputStream {
  benchmarks.benchmarks.reversecomplement.SolverJCores1$ReversibleByteArray();
  java.lang.String reverse() throws java.lang.Exception;
}
Compiled from "SolverVanillaST.java"
public class benchmarks.benchmarks.reversecomplement.SolverVanillaST {
  static final byte[] cmp;
  public benchmarks.benchmarks.reversecomplement.SolverVanillaST();
  public static java.lang.String main(java.io.InputStream) throws java.lang.Exception;
  static {};
}
Compiled from "SolverVanillaST.java"
class benchmarks.benchmarks.reversecomplement.SolverVanillaST$ReversibleByteArray extends java.io.ByteArrayOutputStream {
  benchmarks.benchmarks.reversecomplement.SolverVanillaST$ReversibleByteArray();
  java.lang.String reverse() throws java.lang.Exception;
}
Compiled from "Task.java"
public class benchmarks.model.Task<T> {
  public benchmarks.model.Task(benchmarks.model.TaskData<T>, benchmarks.model.TaskSolver<T>...);
}
Compiled from "TaskData.java"
public class benchmarks.model.TaskData<T> {
  public benchmarks.model.TaskData();
  public benchmarks.model.TaskData(T);
  public T getData();
}
Compiled from "TaskSolver.java"
public class benchmarks.model.TaskSolver<T> {
  public benchmarks.model.TaskSolver(java.lang.String, net.jcores.jre.interfaces.functions.F1<T, java.lang.Object>);
  public net.jcores.jre.interfaces.functions.F1<T, java.lang.Object> f();
  public java.lang.String name();
}
Compiled from "AdapterTest.java"
public class junit.AdapterTest {
  public junit.AdapterTest();
  public void testCollectionAdapter();
  public void testCollectionsParallization();
  public void testMapAdapter();
}
Compiled from "AdapterTest.java"
class junit.AdapterTest$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Integer> {
  final junit.AdapterTest this$0;
  junit.AdapterTest$1(junit.AdapterTest);
  public java.lang.Integer f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CommonAlgTest.java"
public class junit.CommonAlgTest {
  public junit.CommonAlgTest();
  public void testPermute();
}
Compiled from "CommonCoreTest.java"
public class junit.CommonCoreTest {
  public junit.CommonCoreTest();
  public void testMap();
  public void testClone();
  public void testAsync();
}
Compiled from "CommonCoreTest.java"
class junit.CommonCoreTest$1 implements net.jcores.jre.interfaces.functions.F0R<java.lang.String> {
  final junit.CommonCoreTest this$0;
  junit.CommonCoreTest$1(junit.CommonCoreTest);
  public java.lang.String f();
  public java.lang.Object f();
}
Compiled from "CommonCoreTest.java"
class junit.CommonCoreTest$2 extends net.jcores.jre.interfaces.functions.F1V<java.lang.String> {
  final java.util.concurrent.atomic.AtomicReference val$ref;
  final junit.CommonCoreTest this$0;
  junit.CommonCoreTest$2(junit.CommonCoreTest, java.util.concurrent.atomic.AtomicReference);
  public void fV(java.lang.String);
  public void fV(java.lang.Object);
}
Compiled from "CommonCoreTest.java"
class junit.CommonCoreTest$3 extends net.jcores.jre.interfaces.functions.F1V<java.lang.String> {
  final java.util.concurrent.atomic.AtomicReference val$ref;
  final junit.CommonCoreTest this$0;
  junit.CommonCoreTest$3(junit.CommonCoreTest, java.util.concurrent.atomic.AtomicReference);
  public void fV(java.lang.String);
  public void fV(java.lang.Object);
}
Compiled from "CommonSysTest.java"
public class junit.CommonSysTest {
  public junit.CommonSysTest();
  public void testTimes();
  public void testID();
}
Compiled from "CommonSysTest.java"
class junit.CommonSysTest$1 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$counter;
  final junit.CommonSysTest this$0;
  junit.CommonSysTest$1(junit.CommonSysTest, java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "CoreAudioInputStream.java"
public class junit.CoreAudioInputStream {
  public junit.CoreAudioInputStream();
  public void testPlay();
}
Compiled from "CoreClassTest.java"
public class junit.CoreClassTest {
  public junit.CoreClassTest();
  public void testSpawn();
}
Compiled from "CoreCompoundTest.java"
public class junit.CoreCompoundTest {
  public junit.CoreCompoundTest();
  public void testBasic();
}
Compiled from "CoreFileTest.java"
public class junit.CoreFileTest {
  public junit.CoreFileTest();
  public void testComplexReadWrite();
  public void testZip();
  public void testFilesize();
  public void testCopy();
}
Compiled from "CoreFileTest.java"
class junit.CoreFileTest$1 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Integer> {
  final junit.CoreFileTest this$0;
  junit.CoreFileTest$1(junit.CoreFileTest);
  public java.lang.Integer f(java.lang.Integer, java.lang.Integer);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreFileTest.java"
class junit.CoreFileTest$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Integer> {
  final junit.CoreFileTest this$0;
  junit.CoreFileTest$2(junit.CoreFileTest);
  public java.lang.Integer f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreMapTest.java"
public class junit.CoreMapTest {
  public junit.CoreMapTest();
  public void testKeysAndValues();
  public void testMapUtil();
}
Compiled from "CoreNumberTest.java"
public class junit.CoreNumberTest {
  public junit.CoreNumberTest();
  public void testMinMax();
  public void testSum();
  public void testNullNaN();
}
Compiled from "CoreObjectTest.java"
public class junit.CoreObjectTest {
  public junit.CoreObjectTest();
  public void testAsync();
  public void testIntersect();
  public void testForEach();
  public void testMap();
  public void testDelta();
  public void testFold();
  public void testReduce();
  public void testIndexer();
  public void testSlice();
  public void testList();
  public void testIndex();
  public void testRandom();
  public void testCount();
  public void testArray();
  public void testAllAny();
  public void testCall();
  public void testSerialize();
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$1(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$10 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$10(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$11 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$11(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$12 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$12(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$13 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$c;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$13(junit.CoreObjectTest, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$14 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$c;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$14(junit.CoreObjectTest, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$15 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.util.concurrent.atomic.AtomicInteger val$c;
  final java.util.concurrent.ConcurrentHashMap val$cc;
  final net.jcores.jre.options.Indexer val$indexer;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$15(junit.CoreObjectTest, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.ConcurrentHashMap, net.jcores.jre.options.Indexer);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$16 implements net.jcores.jre.interfaces.functions.F2DeltaObjects<java.lang.Number, java.lang.Number> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$16(junit.CoreObjectTest);
  public java.lang.Integer f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$17 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$17(junit.CoreObjectTest);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$18 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Integer> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$18(junit.CoreObjectTest);
  public java.lang.Integer f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$19 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final java.util.concurrent.atomic.AtomicInteger val$ai;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$19(junit.CoreObjectTest, java.util.concurrent.atomic.AtomicInteger);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$1X {
  int a;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$1X(junit.CoreObjectTest);
  double b();
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$2(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$20 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$20(junit.CoreObjectTest);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$21 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$21(junit.CoreObjectTest);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$22 implements net.jcores.jre.interfaces.functions.F1<java.lang.Number, java.lang.Number> {
  final net.jcores.jre.options.Indexer val$indexer;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$22(junit.CoreObjectTest, net.jcores.jre.options.Indexer);
  public java.lang.Number f(java.lang.Number);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$23 implements net.jcores.jre.interfaces.functions.F1<java.lang.Number, java.lang.Number> {
  final net.jcores.jre.options.Indexer val$indexer;
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$23(junit.CoreObjectTest, net.jcores.jre.options.Indexer);
  public java.lang.Number f(java.lang.Number);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$3 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$3(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$4 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$4(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$5 implements net.jcores.jre.interfaces.functions.Fn<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$5(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String...);
  public java.lang.Object f(java.lang.Object[]);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$6 implements net.jcores.jre.interfaces.functions.Fn<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$6(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String...);
  public java.lang.Object f(java.lang.Object[]);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$7 implements net.jcores.jre.interfaces.functions.Fn<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$7(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String...);
  public java.lang.Object f(java.lang.Object[]);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$8 implements net.jcores.jre.interfaces.functions.Fn<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$8(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String...);
  public java.lang.Object f(java.lang.Object[]);
}
Compiled from "CoreObjectTest.java"
class junit.CoreObjectTest$9 implements net.jcores.jre.interfaces.functions.Fn<java.lang.String, java.lang.String> {
  final junit.CoreObjectTest this$0;
  junit.CoreObjectTest$9(junit.CoreObjectTest);
  public java.lang.String f(java.lang.String...);
  public java.lang.Object f(java.lang.Object[]);
}
Compiled from "CoreStringTest.java"
public class junit.CoreStringTest {
  public junit.CoreStringTest();
  public void testFilter();
  public void testJoin();
  public void testSplit();
  public void testHashMap();
  public void testNCoding();
  public void testReplace();
  public void testPad();
  public void testLog();
  public void testExec();
  public void testFile();
  public void testCSV();
}
Compiled from "CoreStringTest.java"
class junit.CoreStringTest$1 implements net.jcores.jre.interfaces.internal.logging.LoggingHandler {
  final java.util.concurrent.atomic.AtomicReference val$result;
  final junit.CoreStringTest this$0;
  junit.CoreStringTest$1(junit.CoreStringTest, java.util.concurrent.atomic.AtomicReference);
  public void log(java.lang.String, java.util.logging.Level);
}
Compiled from "CoreZipInputStreamTest.java"
public class junit.CoreZipInputStreamTest {
  public junit.CoreZipInputStreamTest();
  public void testUnzip();
}
Compiled from "ExtensionsTest.java"
public class junit.ExtensionsTest {
  public junit.ExtensionsTest();
  public void testWrapping();
  public void testSingleton();
}
Compiled from "ExtensionsTest.java"
public class junit.ExtensionsTest$E extends net.jcores.jre.extensions.LocalExtension<java.lang.String> {
  public junit.ExtensionsTest$E(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.lang.String>);
  public net.jcores.jre.cores.CoreString lower();
}
Compiled from "ExtensionsTest.java"
class junit.ExtensionsTest$E$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final junit.ExtensionsTest$E this$0;
  junit.ExtensionsTest$E$1(junit.ExtensionsTest$E);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "ExtensionsTest.java"
public class junit.ExtensionsTest$S extends net.jcores.jre.extensions.GlobalExtension {
  java.lang.String uniqueID;
  public junit.ExtensionsTest$S();
  public java.lang.String random();
}
Compiled from "Data.java"
public class junit.data.Data {
  public static final java.lang.String[] s0;
  public static final java.lang.String[] s1;
  public static final java.lang.String[] s5;
  public static final java.lang.String[] sn;
  public static final java.lang.String DATA_PATH;
  public junit.data.Data();
  public static java.lang.String[] strings(int);
  static {};
}
Compiled from "StringUtilsTest.java"
public class junit.internal.StringUtilsTest {
  public junit.internal.StringUtilsTest();
  public void parseExecTest();
}
Compiled from "CoreSerializer.java"
public class net.jcores.extensions.serialization.CoreSerializer extends net.jcores.jre.cores.CoreObject<java.lang.Object> {
  public net.jcores.extensions.serialization.CoreSerializer(net.jcores.jre.CommonCore, java.lang.Object...);
  public void store(java.lang.String);
  public net.jcores.extensions.serialization.CoreSerializer load();
}
Compiled from "CommonCore.java"
public class net.jcores.jre.CommonCore {
  public final net.jcores.jre.cores.commons.CommonSys sys;
  public final net.jcores.jre.cores.commons.CommonAlgorithmic alg;
  public final net.jcores.jre.cores.commons.CommonUI ui;
  public final net.jcores.jre.cores.commons.CommonNet net;
  protected final java.lang.String id;
  protected net.jcores.jre.CommonCore();
  protected void updateManagerInformation();
  public <R> net.jcores.jre.utils.Async<R> async(net.jcores.jre.interfaces.functions.F0R<R>, net.jcores.jre.options.Option...);
  public java.lang.Integer[] box(int...);
  public java.lang.Double[] box(double...);
  public java.lang.Float[] box(float...);
  public java.lang.Long[] box(long...);
  public <T> T clone(T, net.jcores.jre.options.Option...);
  public <T> T[] clone(T[]);
  public <K, V> net.jcores.jre.utils.map.ConcurrentMapUtil<K, V> concurrentMap();
  public <K, V> net.jcores.jre.utils.map.ConcurrentMapUtil<K, V> concurrentMap(java.util.concurrent.ConcurrentMap<K, V>);
  public <T> net.jcores.jre.cores.CoreObject<T> create(T, int);
  public <T> java.util.Collection<T> clone(java.util.Collection<T>);
  public java.lang.String coreID();
  public <T> T[] deepclone(T[]);
  public net.jcores.jre.managers.ManagerExecution executor();
  public void feedback();
  public net.xeoh.nexus.Nexus nexus();
  public <T extends net.jcores.jre.managers.Manager> T manager(java.lang.Class<T>, T);
  public <T extends net.jcores.jre.managers.Manager> T manager(java.lang.Class<T>);
  public <K, V> net.jcores.jre.utils.map.MapUtil<K, V> map();
  public <K, V> net.jcores.jre.utils.map.MapUtil<K, V> map(java.util.Map<K, V>);
  public <T> java.util.List<T> list();
  public <T> java.util.List<T> list(int);
  public void log(java.lang.String, java.util.logging.Level);
  public long measure(net.jcores.jre.interfaces.functions.F0);
  public net.jcores.jre.cores.CoreNumber measure(net.jcores.jre.interfaces.functions.F0, int);
  public net.jcores.jre.utils.internal.structures.ProfileInformation profileInformation();
  public net.jcores.jre.cores.CoreNumber range(int);
  public net.jcores.jre.cores.CoreNumber range(int, int);
  public net.jcores.jre.cores.CoreNumber range(int, int, int);
  public <T> java.util.concurrent.atomic.AtomicReference<T> reference();
  public <T> java.util.concurrent.atomic.AtomicReference<T> reference(T);
  public void report(net.jcores.jre.options.MessageType, java.lang.String);
  public void report();
  public java.util.Random random();
  public int[] unbox(java.lang.Integer...);
  public java.lang.String version();
  public int requestCPUs(int);
  public void releaseCPUs(int);
}
Compiled from "CommonCore.java"
class net.jcores.jre.CommonCore$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.utils.Async$Queue val$queue;
  final net.jcores.jre.interfaces.functions.F0R val$f;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.CommonCore this$0;
  net.jcores.jre.CommonCore$1(net.jcores.jre.CommonCore, net.jcores.jre.utils.Async$Queue, net.jcores.jre.interfaces.functions.F0R, net.jcores.jre.options.Option[]);
  public void f();
}
Compiled from "CoreKeeper.java"
public class net.jcores.jre.CoreKeeper {
  public static final net.jcores.jre.CommonCore $;
  public net.jcores.jre.CoreKeeper();
  public static <T> net.jcores.jre.cores.CoreObject<T> $(T...);
  public static net.jcores.jre.cores.CoreAudioInputStream $(javax.sound.sampled.AudioInputStream...);
  public static net.jcores.jre.cores.CoreNumber $(java.lang.Number...);
  public static net.jcores.jre.cores.CoreNumber $(int[]);
  public static net.jcores.jre.cores.CoreNumber $(double[]);
  public static net.jcores.jre.cores.CoreNumber $(float[]);
  public static <T extends net.jcores.jre.extensions.GlobalExtension> T $(java.lang.Class<T>);
  public static <T> net.jcores.jre.cores.CoreClass<T> $(java.lang.Class<T>...);
  public static <T> net.jcores.jre.cores.CoreFuture<T> $(java.util.concurrent.Future<T>...);
  public static <T> net.jcores.jre.cores.CoreFuture<T> $(java.util.concurrent.Future<T>);
  public static net.jcores.jre.cores.CoreString $(java.lang.String...);
  public static net.jcores.jre.cores.CoreURI $(java.net.URI...);
  public static net.jcores.jre.cores.CoreURI $(java.net.URL...);
  public static net.jcores.jre.cores.CoreFile $(java.io.File...);
  public static net.jcores.jre.cores.CoreInputStream $(java.io.InputStream...);
  public static net.jcores.jre.cores.CoreBufferedImage $(java.awt.image.BufferedImage...);
  public static net.jcores.jre.cores.CoreComponent $(java.awt.Component...);
  public static net.jcores.jre.cores.CoreJComponent $(javax.swing.JComponent...);
  public static <T> net.jcores.jre.cores.CoreObject<T> $(java.util.Collection<T>);
  public static <T> net.jcores.jre.cores.CoreObject<T> $(java.util.List<T>);
  public static <K, V> net.jcores.jre.cores.CoreMap<K, V> $(java.util.Map<K, V>);
  public static <Y, T> net.jcores.jre.cores.CoreObject<Y> $(java.util.Collection<T>, net.jcores.jre.interfaces.functions.F1<T, Y>, net.jcores.jre.options.Option...);
  static {};
}
Compiled from "AttentionWithClassloaders.java"
public interface net.jcores.jre.annotations.AttentionWithClassloaders extends java.lang.annotation.Annotation {
}
Compiled from "Beta.java"
public interface net.jcores.jre.annotations.Beta extends java.lang.annotation.Annotation {
}
Compiled from "Credits.java"
public interface net.jcores.jre.annotations.Credits extends java.lang.annotation.Annotation {
  public abstract java.lang.String[] to();
}
Compiled from "License.java"
public interface net.jcores.jre.annotations.License extends java.lang.annotation.Annotation {
  public abstract java.lang.String name();
}
Compiled from "SupportsOption.java"
public interface net.jcores.jre.annotations.SupportsOption extends java.lang.annotation.Annotation {
  public abstract java.lang.Class<? extends net.jcores.jre.options.Option>[] options();
}
Compiled from "Core.java"
public abstract class net.jcores.jre.cores.Core implements java.io.Serializable {
  protected transient net.jcores.jre.CommonCore commonCore;
  protected net.jcores.jre.cores.Core(net.jcores.jre.CommonCore);
  public abstract int size();
  protected void map(net.jcores.jre.utils.internal.processing.Mapper, net.jcores.jre.options.Option...);
  protected void fold(net.jcores.jre.utils.internal.processing.Folder, net.jcores.jre.options.Option...);
}
Compiled from "Core.java"
class net.jcores.jre.cores.Core$1 implements java.lang.Runnable {
  final java.util.concurrent.atomic.AtomicInteger val$baseCount;
  final int val$STEP_SIZE;
  final java.util.concurrent.atomic.AtomicInteger val$index;
  final int val$size;
  final net.jcores.jre.utils.internal.processing.Mapper val$mapper;
  final java.util.concurrent.CyclicBarrier val$barrier;
  final net.jcores.jre.cores.Core this$0;
  net.jcores.jre.cores.Core$1(net.jcores.jre.cores.Core, java.util.concurrent.atomic.AtomicInteger, int, java.util.concurrent.atomic.AtomicInteger, int, net.jcores.jre.utils.internal.processing.Mapper, java.util.concurrent.CyclicBarrier);
  public void run();
}
Compiled from "Core.java"
class net.jcores.jre.cores.Core$2 implements java.lang.Runnable {
  final java.util.concurrent.atomic.AtomicInteger val$round;
  final int val$size;
  final java.util.concurrent.atomic.AtomicInteger val$baseCount;
  final net.jcores.jre.utils.internal.processing.Folder val$folder;
  final java.util.concurrent.CyclicBarrier val$levelbarrier;
  final java.util.concurrent.CyclicBarrier val$barrier;
  final net.jcores.jre.cores.Core this$0;
  net.jcores.jre.cores.Core$2(net.jcores.jre.cores.Core, java.util.concurrent.atomic.AtomicInteger, int, java.util.concurrent.atomic.AtomicInteger, net.jcores.jre.utils.internal.processing.Folder, java.util.concurrent.CyclicBarrier, java.util.concurrent.CyclicBarrier);
  public void run();
}
Compiled from "CoreAudioInputStream.java"
public class net.jcores.jre.cores.CoreAudioInputStream extends net.jcores.jre.cores.CoreObject<javax.sound.sampled.AudioInputStream> {
  public net.jcores.jre.cores.CoreAudioInputStream(net.jcores.jre.CommonCore, javax.sound.sampled.AudioInputStream...);
  public net.jcores.jre.cores.CoreAudioInputStream play(net.jcores.jre.options.Option...);
}
Compiled from "CoreAudioInputStream.java"
class net.jcores.jre.cores.CoreAudioInputStream$1 implements net.jcores.jre.interfaces.functions.F1<javax.sound.sampled.AudioInputStream, java.lang.Void> {
  final net.jcores.jre.utils.internal.Options val$$;
  final net.jcores.jre.cores.CoreAudioInputStream this$0;
  net.jcores.jre.cores.CoreAudioInputStream$1(net.jcores.jre.cores.CoreAudioInputStream, net.jcores.jre.utils.internal.Options);
  public java.lang.Void f(javax.sound.sampled.AudioInputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreBufferedImage.java"
public class net.jcores.jre.cores.CoreBufferedImage extends net.jcores.jre.cores.CoreObject<java.awt.image.BufferedImage> {
  public net.jcores.jre.cores.CoreBufferedImage(net.jcores.jre.CommonCore, java.awt.image.BufferedImage...);
  public net.jcores.jre.cores.CoreBufferedImage copy();
  public net.jcores.jre.cores.CoreBufferedImage scale(float);
  public net.jcores.jre.cores.CoreBufferedImage scale(int, int);
  public net.jcores.jre.cores.CoreBufferedImage write(java.lang.String, net.jcores.jre.options.Option...);
}
Compiled from "CoreBufferedImage.java"
class net.jcores.jre.cores.CoreBufferedImage$1 implements net.jcores.jre.interfaces.functions.F1<java.awt.image.BufferedImage, java.awt.image.BufferedImage> {
  final net.jcores.jre.cores.CoreBufferedImage this$0;
  net.jcores.jre.cores.CoreBufferedImage$1(net.jcores.jre.cores.CoreBufferedImage);
  public java.awt.image.BufferedImage f(java.awt.image.BufferedImage);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreBufferedImage.java"
class net.jcores.jre.cores.CoreBufferedImage$2 implements net.jcores.jre.interfaces.functions.F1<java.awt.image.BufferedImage, java.awt.image.BufferedImage> {
  final float val$factor;
  final net.jcores.jre.cores.CoreBufferedImage this$0;
  net.jcores.jre.cores.CoreBufferedImage$2(net.jcores.jre.cores.CoreBufferedImage, float);
  public java.awt.image.BufferedImage f(java.awt.image.BufferedImage);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreBufferedImage.java"
class net.jcores.jre.cores.CoreBufferedImage$3 implements net.jcores.jre.interfaces.functions.F1<java.awt.image.BufferedImage, java.awt.image.BufferedImage> {
  final int val$width;
  final int val$height;
  final net.jcores.jre.cores.CoreBufferedImage this$0;
  net.jcores.jre.cores.CoreBufferedImage$3(net.jcores.jre.cores.CoreBufferedImage, int, int);
  public java.awt.image.BufferedImage f(java.awt.image.BufferedImage);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreByteBuffer.java"
public class net.jcores.jre.cores.CoreByteBuffer extends net.jcores.jre.cores.CoreObject<java.nio.ByteBuffer> {
  public net.jcores.jre.cores.CoreByteBuffer(net.jcores.jre.CommonCore, java.nio.ByteBuffer...);
  public net.jcores.jre.cores.CoreString hash(net.jcores.jre.options.Option...);
}
Compiled from "CoreByteBuffer.java"
class net.jcores.jre.cores.CoreByteBuffer$1 implements net.jcores.jre.interfaces.functions.F1<java.nio.ByteBuffer, java.lang.String> {
  final java.lang.String val$method;
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.cores.CoreByteBuffer this$0;
  net.jcores.jre.cores.CoreByteBuffer$1(net.jcores.jre.cores.CoreByteBuffer, java.lang.String, net.jcores.jre.utils.internal.Options);
  public java.lang.String f(java.nio.ByteBuffer);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreCSV.java"
public class net.jcores.jre.cores.CoreCSV extends net.jcores.jre.cores.CoreObject<net.jcores.jre.utils.CSVLine> {
  public net.jcores.jre.cores.CoreCSV(net.jcores.jre.CommonCore, net.jcores.jre.utils.CSVLine...);
  public net.jcores.jre.cores.CoreString column(int);
}
Compiled from "CoreCSV.java"
class net.jcores.jre.cores.CoreCSV$1 implements net.jcores.jre.interfaces.functions.F1<net.jcores.jre.utils.CSVLine, java.lang.String> {
  final int val$i;
  final net.jcores.jre.cores.CoreCSV this$0;
  net.jcores.jre.cores.CoreCSV$1(net.jcores.jre.cores.CoreCSV, int);
  public java.lang.String f(net.jcores.jre.utils.CSVLine);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreClass.java"
public class net.jcores.jre.cores.CoreClass<T> extends net.jcores.jre.cores.CoreObject<java.lang.Class<T>> {
  protected final net.jcores.jre.managers.ManagerClass manager;
  protected final java.util.Map<java.lang.Class<?>[], java.lang.reflect.Constructor<T>> constructors;
  public net.jcores.jre.cores.CoreClass(net.jcores.jre.CommonCore, java.lang.Class<T>...);
  public net.jcores.jre.cores.CoreByteBuffer bytecode(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject<T> spawn(net.jcores.jre.options.Option...);
  public void implementor(java.lang.Class<?>);
}
Compiled from "CoreClass.java"
class net.jcores.jre.cores.CoreClass$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.Class<T>, java.nio.ByteBuffer> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.cores.CoreClass this$0;
  net.jcores.jre.cores.CoreClass$1(net.jcores.jre.cores.CoreClass, net.jcores.jre.CommonCore, net.jcores.jre.options.Option[]);
  public java.nio.ByteBuffer f(java.lang.Class<T>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreClass.java"
class net.jcores.jre.cores.CoreClass$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.Class<T>, T> {
  final java.lang.Object[] val$args;
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreClass this$0;
  net.jcores.jre.cores.CoreClass$2(net.jcores.jre.cores.CoreClass, java.lang.Object[], net.jcores.jre.utils.internal.Options, net.jcores.jre.CommonCore);
  public T f(java.lang.Class<T>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreClass.java"
class net.jcores.jre.cores.CoreClass$2$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.Object, java.lang.Class<?>> {
  final net.jcores.jre.cores.CoreClass$2 this$1;
  net.jcores.jre.cores.CoreClass$2$1(net.jcores.jre.cores.CoreClass$2);
  public java.lang.Class<?> f(java.lang.Object);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreComponent.java"
public class net.jcores.jre.cores.CoreComponent extends net.jcores.jre.cores.CoreObject<java.awt.Component> {
  public net.jcores.jre.cores.CoreComponent(net.jcores.jre.CommonCore, java.awt.Component...);
  public net.jcores.jre.cores.CoreComponent keypress(int, net.jcores.jre.interfaces.java.KeyStroke);
}
Compiled from "CoreComponent.java"
class net.jcores.jre.cores.CoreComponent$1 implements java.awt.event.KeyListener {
  final int val$keyEvent;
  final net.jcores.jre.interfaces.java.KeyStroke val$handler;
  final net.jcores.jre.cores.CoreComponent this$0;
  net.jcores.jre.cores.CoreComponent$1(net.jcores.jre.cores.CoreComponent, int, net.jcores.jre.interfaces.java.KeyStroke);
  public void keyTyped(java.awt.event.KeyEvent);
  public void keyReleased(java.awt.event.KeyEvent);
  public void keyPressed(java.awt.event.KeyEvent);
}
Compiled from "CoreFile.java"
public class net.jcores.jre.cores.CoreFile extends net.jcores.jre.cores.CoreObject<java.io.File> {
  public net.jcores.jre.cores.CoreFile(net.jcores.jre.CommonCore, java.io.File...);
  public net.jcores.jre.cores.CoreFile(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.io.File>);
  public net.jcores.jre.cores.CoreFile append(java.lang.Object, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreFile appendln(java.lang.Object, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreAudioInputStream audio();
  public net.jcores.jre.cores.CoreFile copy(java.lang.String);
  public net.jcores.jre.cores.CoreByteBuffer data();
  public net.jcores.jre.cores.CoreFile delete();
  public <T> net.jcores.jre.cores.CoreObject<T> deserialize(java.lang.Class<T>, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreFile dir(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreNumber filesize();
  public net.jcores.jre.cores.CoreFile filter(java.lang.String, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreBufferedImage image();
  public net.jcores.jre.cores.CoreInputStream input();
  public net.jcores.jre.cores.CoreFile jar(java.lang.String, java.util.jar.Manifest, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreFile mkdir();
  public net.jcores.jre.cores.CoreString text();
  public net.jcores.jre.cores.CoreURI uri();
  public net.jcores.jre.cores.CoreFile zip(java.lang.String, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject filter(java.lang.String, net.jcores.jre.options.Option[]);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$1 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.lang.Object> {
  final java.lang.String val$string;
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$1(net.jcores.jre.cores.CoreFile, java.lang.String, net.jcores.jre.CommonCore, net.jcores.jre.options.Option[]);
  public java.lang.Object f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$10 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.io.InputStream> {
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$10(net.jcores.jre.cores.CoreFile);
  public java.io.InputStream f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$11 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.lang.String> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$11(net.jcores.jre.cores.CoreFile, net.jcores.jre.CommonCore);
  public java.lang.String f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$12 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.net.URI> {
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$12(net.jcores.jre.cores.CoreFile);
  public java.net.URI f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$2 implements net.jcores.jre.interfaces.functions.F1<java.io.File, javax.sound.sampled.AudioInputStream> {
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$2(net.jcores.jre.cores.CoreFile);
  public javax.sound.sampled.AudioInputStream f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$3 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.io.File[]> {
  final net.jcores.jre.CommonCore val$cc;
  final java.io.File val$dest;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$3(net.jcores.jre.cores.CoreFile, net.jcores.jre.CommonCore, java.io.File);
  public java.io.File[] f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$4 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.nio.ByteBuffer> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$4(net.jcores.jre.cores.CoreFile, net.jcores.jre.CommonCore);
  public java.nio.ByteBuffer f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$5 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.lang.Void> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$5(net.jcores.jre.cores.CoreFile, net.jcores.jre.CommonCore);
  public java.lang.Void f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$6 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.io.File[]> {
  final boolean val$listDirs;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$6(net.jcores.jre.cores.CoreFile, boolean);
  public java.io.File[] f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$7 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.lang.Long> {
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$7(net.jcores.jre.cores.CoreFile);
  public java.lang.Long f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$8 implements net.jcores.jre.interfaces.functions.F1Object2Bool<java.io.File> {
  final java.util.regex.Pattern val$p;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$8(net.jcores.jre.cores.CoreFile, java.util.regex.Pattern);
  public boolean f(java.io.File);
  public boolean f(java.lang.Object);
}
Compiled from "CoreFile.java"
class net.jcores.jre.cores.CoreFile$9 implements net.jcores.jre.interfaces.functions.F1<java.io.File, java.awt.image.BufferedImage> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreFile this$0;
  net.jcores.jre.cores.CoreFile$9(net.jcores.jre.cores.CoreFile, net.jcores.jre.CommonCore);
  public java.awt.image.BufferedImage f(java.io.File);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreFuture.java"
public class net.jcores.jre.cores.CoreFuture<T> extends net.jcores.jre.cores.CoreObject<java.util.concurrent.Future<T>> {
  public net.jcores.jre.cores.CoreFuture(net.jcores.jre.CommonCore, java.util.concurrent.Future<T>...);
  public net.jcores.jre.cores.CoreFuture<T> onNext(net.jcores.jre.interfaces.functions.F1<T, java.lang.Void>);
  public net.jcores.jre.cores.CoreObject<T> await(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject<T> await(long, java.util.concurrent.TimeUnit, net.jcores.jre.options.Option...);
  public T obtain(int);
  public T obtain(int, long, java.util.concurrent.TimeUnit, net.jcores.jre.options.Option...);
}
Compiled from "CoreFuture.java"
class net.jcores.jre.cores.CoreFuture$1 implements java.lang.Runnable {
  final java.util.concurrent.Future val$future;
  final net.jcores.jre.interfaces.functions.F1 val$listener;
  final net.jcores.jre.cores.CoreFuture this$0;
  net.jcores.jre.cores.CoreFuture$1(net.jcores.jre.cores.CoreFuture, java.util.concurrent.Future, net.jcores.jre.interfaces.functions.F1);
  public void run();
}
Compiled from "CoreInputStream.java"
public class net.jcores.jre.cores.CoreInputStream extends net.jcores.jre.cores.CoreObject<java.io.InputStream> {
  public net.jcores.jre.cores.CoreInputStream(net.jcores.jre.CommonCore, java.io.InputStream...);
  public net.jcores.jre.cores.CoreAudioInputStream audio();
  public void close();
  public <T> net.jcores.jre.cores.CoreObject<T> deserialize(java.lang.Class<T>, net.jcores.jre.options.Option...);
  public void unzip(java.lang.String);
  public net.jcores.jre.cores.CoreZipInputStream zipstream();
  public net.jcores.jre.cores.CoreBufferedImage image();
  public net.jcores.jre.cores.CoreString text();
  public net.jcores.jre.cores.CoreString hash(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreByteBuffer data();
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$1 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, javax.sound.sampled.AudioInputStream> {
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$1(net.jcores.jre.cores.CoreInputStream);
  public javax.sound.sampled.AudioInputStream f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$2 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.lang.Void> {
  final java.lang.String val$destination;
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$2(net.jcores.jre.cores.CoreInputStream, java.lang.String);
  public java.lang.Void f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$3 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.util.zip.ZipInputStream> {
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$3(net.jcores.jre.cores.CoreInputStream);
  public java.util.zip.ZipInputStream f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$4 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.awt.image.BufferedImage> {
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$4(net.jcores.jre.cores.CoreInputStream);
  public java.awt.image.BufferedImage f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$5 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.lang.String> {
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$5(net.jcores.jre.cores.CoreInputStream);
  public java.lang.String f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$6 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.lang.String> {
  final java.lang.String val$method;
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$6(net.jcores.jre.cores.CoreInputStream, java.lang.String);
  public java.lang.String f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreInputStream.java"
class net.jcores.jre.cores.CoreInputStream$7 implements net.jcores.jre.interfaces.functions.F1<java.io.InputStream, java.nio.ByteBuffer> {
  final net.jcores.jre.cores.CoreInputStream this$0;
  net.jcores.jre.cores.CoreInputStream$7(net.jcores.jre.cores.CoreInputStream);
  public java.nio.ByteBuffer f(java.io.InputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreJComponent.java"
public class net.jcores.jre.cores.CoreJComponent extends net.jcores.jre.cores.CoreComponent {
  public net.jcores.jre.cores.CoreJComponent(net.jcores.jre.CommonCore, javax.swing.JComponent...);
  public net.jcores.jre.cores.CoreJComponent onDrop(net.jcores.jre.interfaces.functions.F1<net.jcores.jre.cores.CoreObject<java.lang.Object>, java.lang.Void>, net.jcores.jre.options.Option...);
}
Compiled from "CoreJComponent.java"
class net.jcores.jre.cores.CoreJComponent$1 extends net.jcores.jre.utils.internal.structures.SimpleTransferHandler {
  final net.jcores.jre.interfaces.functions.F1 val$handler;
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreJComponent this$0;
  net.jcores.jre.cores.CoreJComponent$1(net.jcores.jre.cores.CoreJComponent, net.jcores.jre.options.Option[], net.jcores.jre.interfaces.functions.F1, net.jcores.jre.CommonCore);
  public void files(java.util.List<java.io.File>);
}
Compiled from "CoreMap.java"
public class net.jcores.jre.cores.CoreMap<K, V> extends net.jcores.jre.cores.CoreObject<net.jcores.jre.utils.map.MapEntry<K, V>> {
  public net.jcores.jre.cores.CoreMap(net.jcores.jre.CommonCore, net.jcores.jre.utils.map.MapEntry<K, V>...);
  public net.jcores.jre.cores.CoreMap(net.jcores.jre.CommonCore, java.util.List<net.jcores.jre.utils.map.MapEntry<K, V>>);
  public net.jcores.jre.cores.CoreMap(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<net.jcores.jre.utils.map.MapEntry<K, V>>);
  public net.jcores.jre.cores.CoreMap<V, K> inverse();
  public K key(V);
  public net.jcores.jre.cores.CoreObject<K> keys();
  public net.jcores.jre.utils.map.MapUtil<K, V> map();
  public net.jcores.jre.cores.CoreObject<V> values();
  public V value(K);
}
Compiled from "CoreMap.java"
class net.jcores.jre.cores.CoreMap$1 implements net.jcores.jre.interfaces.functions.F1<net.jcores.jre.utils.map.MapEntry<K, V>, net.jcores.jre.utils.map.MapEntry<V, K>> {
  final net.jcores.jre.cores.CoreMap this$0;
  net.jcores.jre.cores.CoreMap$1(net.jcores.jre.cores.CoreMap);
  public net.jcores.jre.utils.map.MapEntry<V, K> f(net.jcores.jre.utils.map.MapEntry<K, V>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreMap.java"
class net.jcores.jre.cores.CoreMap$2 implements net.jcores.jre.interfaces.functions.F1<net.jcores.jre.utils.map.MapEntry<K, V>, K> {
  final net.jcores.jre.cores.CoreMap this$0;
  net.jcores.jre.cores.CoreMap$2(net.jcores.jre.cores.CoreMap);
  public K f(net.jcores.jre.utils.map.MapEntry<K, V>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreMap.java"
class net.jcores.jre.cores.CoreMap$3 implements net.jcores.jre.interfaces.functions.F1<net.jcores.jre.utils.map.MapEntry<K, V>, V> {
  final net.jcores.jre.cores.CoreMap this$0;
  net.jcores.jre.cores.CoreMap$3(net.jcores.jre.cores.CoreMap);
  public V f(net.jcores.jre.utils.map.MapEntry<K, V>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreNumber.java"
public class net.jcores.jre.cores.CoreNumber extends net.jcores.jre.cores.CoreObject<java.lang.Number> {
  public net.jcores.jre.cores.CoreNumber(net.jcores.jre.CommonCore, java.lang.Number...);
  public net.jcores.jre.cores.CoreNumber(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.lang.Number>);
  public double average();
  public double average(double);
  public double d(int);
  public double[] ds();
  public int i(int);
  public int[] is();
  public double max();
  public double max(double);
  public double min();
  public double min(double);
  public net.jcores.jre.cores.CoreObject<java.lang.Number> reduce(net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number>, net.jcores.jre.options.Option...);
  public java.lang.String s(int);
  public java.lang.String s(int, java.lang.String);
  public double standarddeviation();
  public net.jcores.jre.cores.CoreString string(java.lang.String);
  public double sum();
  public double variance();
}
Compiled from "CoreNumber.java"
class net.jcores.jre.cores.CoreNumber$1 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final net.jcores.jre.cores.CoreNumber this$0;
  net.jcores.jre.cores.CoreNumber$1(net.jcores.jre.cores.CoreNumber);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreNumber.java"
class net.jcores.jre.cores.CoreNumber$2 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final net.jcores.jre.cores.CoreNumber this$0;
  net.jcores.jre.cores.CoreNumber$2(net.jcores.jre.cores.CoreNumber);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreNumber.java"
class net.jcores.jre.cores.CoreNumber$3 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Number> {
  final net.jcores.jre.interfaces.functions.F2ReduceObjects val$f;
  final net.jcores.jre.cores.CoreNumber this$0;
  net.jcores.jre.cores.CoreNumber$3(net.jcores.jre.cores.CoreNumber, net.jcores.jre.interfaces.functions.F2ReduceObjects);
  public java.lang.Number f(java.lang.Number, java.lang.Number);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "CoreNumber.java"
class net.jcores.jre.cores.CoreNumber$4 implements net.jcores.jre.interfaces.functions.F1<java.lang.Number, java.lang.String> {
  final java.text.DecimalFormat val$fmt;
  final net.jcores.jre.cores.CoreNumber this$0;
  net.jcores.jre.cores.CoreNumber$4(net.jcores.jre.cores.CoreNumber, java.text.DecimalFormat);
  public java.lang.String f(java.lang.Number);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObject.java"
public class net.jcores.jre.cores.CoreObject<T> extends net.jcores.jre.cores.Core implements java.lang.Iterable<T> {
  protected final net.jcores.jre.cores.adapter.AbstractAdapter<T> adapter;
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, java.lang.Class<?>, T);
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, T...);
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, java.util.List<T>);
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, java.util.Collection<T>);
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, net.jcores.jre.cores.CoreObject<T>);
  public net.jcores.jre.cores.CoreObject(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<T>);
  public net.jcores.jre.cores.CoreObject<T> add(net.jcores.jre.cores.CoreObject<T>);
  public net.jcores.jre.cores.CoreObject<T> add(T...);
  public <N> N[] array(java.lang.Class<N>);
  public <C extends net.jcores.jre.cores.Core> C as(java.lang.Class<C>);
  public <R> net.jcores.jre.utils.Async<R> async(net.jcores.jre.interfaces.functions.F1<T, R>, net.jcores.jre.options.Option...);
  public <N> net.jcores.jre.cores.CoreObject<N> cast(java.lang.Class<N>);
  public net.jcores.jre.cores.CoreObject<java.lang.Object> call(java.lang.String, java.lang.Object...);
  public net.jcores.jre.cores.CoreObject<T> serialize(java.lang.String, net.jcores.jre.options.Option...);
  public <W> net.jcores.jre.cores.CoreObject<W> wrap(java.lang.Class<W>);
  public net.jcores.jre.cores.CoreClass<T> clazz();
  public net.jcores.jre.cores.CoreObject<T> compact();
  public net.jcores.jre.utils.map.Compound compound();
  public boolean contains(T);
  public net.jcores.jre.cores.CoreMap<T, java.lang.Integer> count();
  public net.jcores.jre.cores.CoreObject<T> debug();
  public <R> net.jcores.jre.cores.CoreObject<R> delta(net.jcores.jre.interfaces.functions.F2DeltaObjects<T, R>, net.jcores.jre.options.Option...);
  public <X> X each(java.lang.Class<X>);
  public boolean equals(java.lang.Object);
  public <N> net.jcores.jre.cores.CoreObject<N> expand(java.lang.Class<N>);
  public void featurerequest(java.lang.String);
  public net.jcores.jre.cores.CoreObject<T> fill(T);
  public net.jcores.jre.cores.CoreObject<T> filter(net.jcores.jre.interfaces.functions.F1Object2Bool<T>, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject<T> filter(java.lang.String, net.jcores.jre.options.Option...);
  public T first();
  protected java.lang.String fingerprint(boolean);
  public net.jcores.jre.cores.CoreObject<T> fold(net.jcores.jre.interfaces.functions.F2ReduceObjects<T>, net.jcores.jre.options.Option...);
  public <R> net.jcores.jre.cores.CoreObject<R> forEach(net.jcores.jre.interfaces.functions.F1<T, R>, net.jcores.jre.options.Option...);
  public <R> net.jcores.jre.cores.CoreObject<R> forEach(net.jcores.jre.interfaces.functions.Fn<T, R>, int);
  public T get(double, T);
  public T get(double);
  public <X extends T> X get(java.lang.Class<X>, X);
  public T get(int);
  public T get(int, T);
  public T get(T);
  public int hashCode();
  public boolean hasAll();
  public boolean hasAny();
  public net.jcores.jre.cores.CoreObject<T> ifAll(net.jcores.jre.interfaces.functions.F0);
  public net.jcores.jre.cores.CoreNumber index(T...);
  public net.jcores.jre.cores.CoreObject<T> intersect(net.jcores.jre.cores.CoreObject<T>);
  public net.jcores.jre.cores.CoreObject<T> intersect(T...);
  public java.util.List<T> list();
  public <R> net.jcores.jre.cores.CoreObject<R> map(net.jcores.jre.interfaces.functions.F1<T, R>, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject<T> print();
  public net.jcores.jre.cores.CoreObject<T> print(java.lang.String);
  public T random();
  public net.jcores.jre.cores.CoreObject<T> random(double);
  public net.jcores.jre.cores.CoreObject<T> random(int);
  public net.jcores.jre.cores.CoreObject<T> reduce(net.jcores.jre.interfaces.functions.F2ReduceObjects<T>, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreObject<T> reverse();
  public int size();
  public net.jcores.jre.cores.CoreObject<T> slice(int, int);
  public net.jcores.jre.cores.CoreObject<T> slice(double, double);
  public net.jcores.jre.cores.CoreObject<T> sort(java.util.Comparator<T>);
  public net.jcores.jre.cores.CoreObject<T> sort();
  public net.jcores.jre.cores.CoreString string();
  public net.jcores.jre.cores.CoreObject<T> subtract(net.jcores.jre.cores.CoreObject<T>);
  public net.jcores.jre.cores.CoreObject<T> subtract(T...);
  public net.jcores.jre.cores.CoreObject<T> unique();
  public T[] unsafearray();
  public java.util.List<T> unsafelist();
  public net.jcores.jre.cores.adapter.AbstractAdapter<T> unsafeadapter();
  protected final int indexToOffset(int);
  protected final <R> net.jcores.jre.utils.internal.processing.Mapper mapper(net.jcores.jre.interfaces.functions.F1<T, R>, net.jcores.jre.options.Option...);
  public java.util.ListIterator<T> iterator();
  public java.util.Iterator iterator();
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.options.KillSwitch val$killswitch;
  final net.jcores.jre.utils.Async$Queue val$queue;
  final net.jcores.jre.interfaces.functions.F1 val$f;
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$1(net.jcores.jre.cores.CoreObject, net.jcores.jre.options.KillSwitch, net.jcores.jre.utils.Async$Queue, net.jcores.jre.interfaces.functions.F1, net.jcores.jre.utils.internal.Options);
  public void f();
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$10 implements net.jcores.jre.interfaces.functions.F1Object2Bool<T> {
  final java.util.regex.Pattern val$p;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$10(net.jcores.jre.cores.CoreObject, java.util.regex.Pattern);
  public boolean f(T);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$11 extends net.jcores.jre.utils.internal.processing.Folder<T> {
  final java.util.concurrent.atomic.AtomicReferenceArray val$array;
  final net.jcores.jre.interfaces.functions.F2ReduceObjects val$f;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$11(net.jcores.jre.cores.CoreObject, net.jcores.jre.cores.CoreObject, java.util.concurrent.atomic.AtomicReferenceArray, net.jcores.jre.interfaces.functions.F2ReduceObjects);
  public void handle(int, int, int);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$12 implements net.jcores.jre.interfaces.functions.F1<T, java.lang.String> {
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$12(net.jcores.jre.cores.CoreObject);
  public java.lang.String f(T);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$13 extends net.jcores.jre.utils.internal.processing.Mapper<T, R> {
  final net.jcores.jre.interfaces.functions.F1 val$f;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$13(net.jcores.jre.cores.CoreObject, net.jcores.jre.cores.CoreObject, net.jcores.jre.options.Option..., net.jcores.jre.interfaces.functions.F1);
  public void handle(int);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$2 implements net.jcores.jre.interfaces.functions.F1<T, N> {
  final java.lang.Class val$target;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$2(net.jcores.jre.cores.CoreObject, java.lang.Class);
  public N f(T);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$3 implements net.jcores.jre.interfaces.functions.F1<T, java.lang.Object> {
  final java.lang.String val$call;
  final java.lang.Class[] val$types;
  final java.lang.Object[] val$params;
  final net.jcores.jre.CommonCore val$cc;
  final java.lang.String val$string;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$3(net.jcores.jre.cores.CoreObject, java.lang.String, java.lang.Class[], java.lang.Object[], net.jcores.jre.CommonCore, java.lang.String);
  public java.lang.Object f(T);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$4 implements net.jcores.jre.interfaces.functions.F1<T, java.lang.Object> {
  final java.lang.String val$call;
  final net.jcores.jre.CommonCore val$cc;
  final java.lang.String val$string;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$4(net.jcores.jre.cores.CoreObject, java.lang.String, net.jcores.jre.CommonCore, java.lang.String);
  public java.lang.Object f(T);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$5 implements net.jcores.jre.interfaces.functions.F1<T, W> {
  final java.lang.Class val$wrapper;
  final net.jcores.jre.cores.CoreClass val$w;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$5(net.jcores.jre.cores.CoreObject, java.lang.Class, net.jcores.jre.cores.CoreClass);
  public W f(T);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$6 implements net.jcores.jre.interfaces.functions.F1<T, java.lang.Class<T>> {
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$6(net.jcores.jre.cores.CoreObject);
  public java.lang.Class<T> f(T);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$7 extends net.jcores.jre.utils.internal.processing.Mapper<T, R> {
  final int val$size;
  final net.jcores.jre.interfaces.functions.F2DeltaObjects val$delta;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$7(net.jcores.jre.cores.CoreObject, net.jcores.jre.cores.CoreObject, net.jcores.jre.options.Option..., int, net.jcores.jre.interfaces.functions.F2DeltaObjects);
  public void handle(int);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$8 implements java.lang.reflect.InvocationHandler {
  final net.jcores.jre.cores.CoreObject val$filtered;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$8(net.jcores.jre.cores.CoreObject, net.jcores.jre.cores.CoreObject);
  public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable;
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$8$1 implements net.jcores.jre.interfaces.functions.F1<X, java.lang.Object> {
  final java.lang.reflect.Method val$method;
  final java.lang.Object[] val$args;
  final net.jcores.jre.cores.CoreObject$8 this$1;
  net.jcores.jre.cores.CoreObject$8$1(net.jcores.jre.cores.CoreObject$8, java.lang.reflect.Method, java.lang.Object[]);
  public java.lang.Object f(X);
}
Compiled from "CoreObject.java"
class net.jcores.jre.cores.CoreObject$9 implements net.jcores.jre.interfaces.functions.F1<T, T> {
  final net.jcores.jre.interfaces.functions.F1Object2Bool val$f;
  final boolean val$invert;
  final net.jcores.jre.cores.CoreObject this$0;
  net.jcores.jre.cores.CoreObject$9(net.jcores.jre.cores.CoreObject, net.jcores.jre.interfaces.functions.F1Object2Bool, boolean);
  public T f(T);
}
Compiled from "CoreString.java"
public class net.jcores.jre.cores.CoreString extends net.jcores.jre.cores.CoreObject<java.lang.String> {
  public net.jcores.jre.cores.CoreString(net.jcores.jre.CommonCore, java.lang.String...);
  public net.jcores.jre.cores.CoreString(net.jcores.jre.CommonCore, java.util.List<java.lang.String>);
  public net.jcores.jre.cores.CoreString(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.lang.String>);
  public net.jcores.jre.cores.CoreByteBuffer bytes();
  public boolean containssubstr(java.lang.String);
  public net.jcores.jre.cores.CoreCSV csv();
  public net.jcores.jre.cores.CoreCSV csv(java.lang.String);
  public double d(int);
  public java.lang.Double D(int);
  public net.jcores.jre.cores.CoreString decode();
  public net.jcores.jre.cores.CoreString encode();
  public net.jcores.jre.cores.CoreString exec(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreString exec(java.lang.String, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreFile file();
  public net.jcores.jre.cores.CoreString filter(java.lang.String, net.jcores.jre.options.Option...);
  public java.util.Map<java.lang.String, java.lang.String> hashmap(java.lang.String...);
  public int i(int);
  public java.lang.Integer I(int);
  public java.lang.String join();
  public java.lang.String join(java.lang.String);
  public net.jcores.jre.cores.CoreString split(java.lang.String);
  public net.jcores.jre.cores.CoreString pad(int, char);
  public net.jcores.jre.cores.CoreString pad(int);
  public net.jcores.jre.cores.CoreString print();
  public void log();
  public void log(java.util.logging.Level);
  public net.jcores.jre.cores.CoreString nullempty();
  public net.jcores.jre.cores.CoreNumber number(java.lang.Class<? extends java.lang.Number>);
  public net.jcores.jre.cores.CoreString replace(java.lang.String, java.lang.String, net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreString trim();
  public net.jcores.jre.cores.CoreString trim(int);
  public net.jcores.jre.cores.CoreURI uri();
  public net.jcores.jre.cores.CoreObject print();
  public net.jcores.jre.cores.CoreObject filter(java.lang.String, net.jcores.jre.options.Option[]);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.nio.ByteBuffer> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$1(net.jcores.jre.cores.CoreString);
  public java.nio.ByteBuffer f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$10 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.util.List<java.lang.String>> {
  final java.lang.String val$splitter;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$10(net.jcores.jre.cores.CoreString, java.lang.String);
  public java.util.List<java.lang.String> f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$11 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final int val$length;
  final char val$pad;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$11(net.jcores.jre.cores.CoreString, int, char);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$12 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Object> {
  final java.util.logging.Level val$level;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$12(net.jcores.jre.cores.CoreString, java.util.logging.Level);
  public java.lang.Object f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$13 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$13(net.jcores.jre.cores.CoreString);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$14 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Number> {
  final java.lang.Class val$type;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$14(net.jcores.jre.cores.CoreString, java.lang.Class);
  public java.lang.Number f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$15 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final java.util.regex.Pattern val$p;
  final java.lang.String val$with;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$15(net.jcores.jre.cores.CoreString, java.util.regex.Pattern, java.lang.String);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$16 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$16(net.jcores.jre.cores.CoreString);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$17 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final int val$n;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$17(net.jcores.jre.cores.CoreString, int);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$18 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.net.URI> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$18(net.jcores.jre.cores.CoreString);
  public java.net.URI f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, net.jcores.jre.utils.CSVLine> {
  final java.lang.String val$delim;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$2(net.jcores.jre.cores.CoreString, java.lang.String);
  public net.jcores.jre.utils.CSVLine f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$3 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$3(net.jcores.jre.cores.CoreString);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$4 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$4(net.jcores.jre.cores.CoreString);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$5 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$5(net.jcores.jre.cores.CoreString);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$6 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final java.lang.String val$command;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$6(net.jcores.jre.cores.CoreString, java.lang.String);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$7 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.io.File> {
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$7(net.jcores.jre.cores.CoreString);
  public java.io.File f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$8 implements net.jcores.jre.interfaces.functions.F1Object2Bool<java.lang.String> {
  final java.util.regex.Pattern val$p;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$8(net.jcores.jre.cores.CoreString, java.util.regex.Pattern);
  public boolean f(java.lang.String);
  public boolean f(java.lang.Object);
}
Compiled from "CoreString.java"
class net.jcores.jre.cores.CoreString$9 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.Void> {
  final java.lang.String[] val$delimeters;
  final java.util.Map val$rval;
  final net.jcores.jre.cores.CoreString this$0;
  net.jcores.jre.cores.CoreString$9(net.jcores.jre.cores.CoreString, java.lang.String[], java.util.Map);
  public java.lang.Void f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreURI.java"
public class net.jcores.jre.cores.CoreURI extends net.jcores.jre.cores.CoreObject<java.net.URI> {
  public net.jcores.jre.cores.CoreURI(net.jcores.jre.CommonCore, java.net.URI...);
  public net.jcores.jre.cores.CoreURI(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.net.URI>);
  public net.jcores.jre.cores.CoreInputStream input(net.jcores.jre.options.Option...);
  public net.jcores.jre.cores.CoreFile download();
  public net.jcores.jre.cores.CoreFile download(java.lang.String);
  public net.jcores.jre.cores.CoreFile file();
}
Compiled from "CoreURI.java"
class net.jcores.jre.cores.CoreURI$1 implements net.jcores.jre.interfaces.functions.F1<java.net.URI, java.io.InputStream> {
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.cores.CoreURI this$0;
  net.jcores.jre.cores.CoreURI$1(net.jcores.jre.cores.CoreURI, net.jcores.jre.utils.internal.Options);
  public java.io.InputStream f(java.net.URI);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreURI.java"
class net.jcores.jre.cores.CoreURI$2 implements net.jcores.jre.interfaces.functions.F1<java.net.URI, java.io.File> {
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreURI this$0;
  net.jcores.jre.cores.CoreURI$2(net.jcores.jre.cores.CoreURI, net.jcores.jre.CommonCore);
  public java.io.File f(java.net.URI);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreURI.java"
class net.jcores.jre.cores.CoreURI$3 implements net.jcores.jre.interfaces.functions.F1<java.net.URI, java.io.File> {
  final java.lang.String val$path;
  final net.jcores.jre.CommonCore val$cc;
  final net.jcores.jre.cores.CoreURI this$0;
  net.jcores.jre.cores.CoreURI$3(net.jcores.jre.cores.CoreURI, java.lang.String, net.jcores.jre.CommonCore);
  public java.io.File f(java.net.URI);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreURI.java"
class net.jcores.jre.cores.CoreURI$4 implements net.jcores.jre.interfaces.functions.F1<java.net.URI, java.io.File> {
  final net.jcores.jre.cores.CoreURI this$0;
  net.jcores.jre.cores.CoreURI$4(net.jcores.jre.cores.CoreURI);
  public java.io.File f(java.net.URI);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreZipInputStream.java"
public class net.jcores.jre.cores.CoreZipInputStream extends net.jcores.jre.cores.CoreObject<java.util.zip.ZipInputStream> {
  public net.jcores.jre.cores.CoreZipInputStream(net.jcores.jre.CommonCore, java.util.zip.ZipInputStream...);
  public net.jcores.jre.cores.CoreZipInputStream(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<java.util.zip.ZipInputStream>);
  public net.jcores.jre.cores.CoreZipInputStream unzip(java.lang.String);
  public net.jcores.jre.cores.CoreString dir();
  public java.io.InputStream get(java.lang.String);
}
Compiled from "CoreZipInputStream.java"
class net.jcores.jre.cores.CoreZipInputStream$1 implements net.jcores.jre.interfaces.functions.F1<java.util.zip.ZipInputStream, java.lang.Void> {
  final java.lang.String val$destination;
  final net.jcores.jre.cores.CoreZipInputStream this$0;
  net.jcores.jre.cores.CoreZipInputStream$1(net.jcores.jre.cores.CoreZipInputStream, java.lang.String);
  public java.lang.Void f(java.util.zip.ZipInputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreZipInputStream.java"
class net.jcores.jre.cores.CoreZipInputStream$2 implements net.jcores.jre.interfaces.functions.F1<java.util.zip.ZipInputStream, java.util.List<java.lang.String>> {
  final net.jcores.jre.cores.CoreZipInputStream this$0;
  net.jcores.jre.cores.CoreZipInputStream$2(net.jcores.jre.cores.CoreZipInputStream);
  public java.util.List<java.lang.String> f(java.util.zip.ZipInputStream);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CoreZipInputStream.java"
class net.jcores.jre.cores.CoreZipInputStream$3 extends net.jcores.jre.utils.internal.wrapper.InputStreamWrapper {
  final java.io.InputStream val$inputStream;
  final net.jcores.jre.cores.CoreZipInputStream this$0;
  net.jcores.jre.cores.CoreZipInputStream$3(net.jcores.jre.cores.CoreZipInputStream, java.io.InputStream, java.io.InputStream);
  public void close() throws java.io.IOException;
}
Compiled from "AbstractAdapter.java"
public abstract class net.jcores.jre.cores.adapter.AbstractAdapter<T> implements java.lang.Iterable<T>, java.io.Serializable {
  public net.jcores.jre.cores.adapter.AbstractAdapter();
  public abstract <N> N[] array(java.lang.Class<N>);
  public T[] array();
  public abstract int size();
  public abstract T get(int);
  public abstract java.util.ListIterator<T> iterator();
  public java.lang.Class<?> clazz();
  public abstract java.util.List<T> unsafelist();
  public T[] unsafearray();
  public abstract java.util.List<T> slice(int, int);
  public java.util.Iterator iterator();
}
Compiled from "ArrayAdapter.java"
public final class net.jcores.jre.cores.adapter.ArrayAdapter<T> extends net.jcores.jre.cores.adapter.AbstractAdapter<T> {
  final T[] array;
  final int size;
  public net.jcores.jre.cores.adapter.ArrayAdapter(T...);
  public net.jcores.jre.cores.adapter.ArrayAdapter(int, T...);
  public int size();
  public T get(int);
  public java.util.ListIterator<T> iterator();
  public java.lang.Class<?> clazz();
  public <N> N[] array(java.lang.Class<N>);
  public T[] array();
  public T[] unsafearray();
  public java.util.List<T> unsafelist();
  public java.util.List<T> slice(int, int);
  public java.util.Iterator iterator();
}
Compiled from "ArrayAdapter.java"
class net.jcores.jre.cores.adapter.ArrayAdapter$1 implements java.util.ListIterator<T> {
  int i;
  final net.jcores.jre.cores.adapter.ArrayAdapter this$0;
  net.jcores.jre.cores.adapter.ArrayAdapter$1(net.jcores.jre.cores.adapter.ArrayAdapter);
  public boolean hasNext();
  public T next();
  public boolean hasPrevious();
  public T previous();
  public int nextIndex();
  public int previousIndex();
  public void remove();
  public void set(T);
  public void add(T);
}
Compiled from "CollectionAdapter.java"
public class net.jcores.jre.cores.adapter.CollectionAdapter<I, O> extends net.jcores.jre.cores.adapter.AbstractAdapter<O> implements java.util.List<O> {
  java.util.Iterator<I> iterator;
  java.util.concurrent.atomic.AtomicReferenceArray<O> array;
  java.util.concurrent.atomic.AtomicInteger inCache;
  java.util.concurrent.locks.ReentrantLock collectionLock;
  final int start;
  final int end;
  public net.jcores.jre.cores.adapter.CollectionAdapter(java.util.Collection<I>);
  protected O converter(I);
  public int size();
  public O get(int);
  public java.util.ListIterator<O> iterator();
  public <N> N[] array(java.lang.Class<N>);
  public java.util.List<O> unsafelist();
  public java.util.List<O> slice(int, int);
  protected void cacheAll();
  protected void cacheUntil(int);
  public boolean isEmpty();
  public boolean contains(java.lang.Object);
  public java.lang.Object[] toArray();
  public <T> T[] toArray(T[]);
  public boolean add(O);
  public boolean remove(java.lang.Object);
  public boolean containsAll(java.util.Collection<?>);
  public boolean addAll(java.util.Collection<? extends O>);
  public boolean addAll(int, java.util.Collection<? extends O>);
  public boolean removeAll(java.util.Collection<?>);
  public boolean retainAll(java.util.Collection<?>);
  public void clear();
  public O set(int, O);
  public void add(int, O);
  public O remove(int);
  public int indexOf(java.lang.Object);
  public int lastIndexOf(java.lang.Object);
  public java.util.ListIterator<O> listIterator();
  public java.util.ListIterator<O> listIterator(int);
  public java.util.List<O> subList(int, int);
  public java.util.Iterator iterator();
}
Compiled from "CollectionAdapter.java"
class net.jcores.jre.cores.adapter.CollectionAdapter$1 implements java.util.ListIterator<O> {
  volatile int i;
  final net.jcores.jre.cores.adapter.CollectionAdapter this$0;
  net.jcores.jre.cores.adapter.CollectionAdapter$1(net.jcores.jre.cores.adapter.CollectionAdapter);
  public boolean hasNext();
  public O next();
  public boolean hasPrevious();
  public O previous();
  public int nextIndex();
  public int previousIndex();
  public void remove();
  public void set(O);
  public void add(O);
}
Compiled from "EmptyAdapter.java"
public final class net.jcores.jre.cores.adapter.EmptyAdapter<T> extends net.jcores.jre.cores.adapter.AbstractAdapter<T> {
  public net.jcores.jre.cores.adapter.EmptyAdapter();
  public int size();
  public T get(int);
  public java.util.ListIterator<T> iterator();
  public <N> N[] array(java.lang.Class<N>);
  public java.util.List<T> unsafelist();
  public java.util.List<T> slice(int, int);
  public java.util.Iterator iterator();
}
Compiled from "EmptyAdapter.java"
class net.jcores.jre.cores.adapter.EmptyAdapter$1 implements java.util.ListIterator<T> {
  final net.jcores.jre.cores.adapter.EmptyAdapter this$0;
  net.jcores.jre.cores.adapter.EmptyAdapter$1(net.jcores.jre.cores.adapter.EmptyAdapter);
  public boolean hasNext();
  public T next();
  public boolean hasPrevious();
  public T previous();
  public int nextIndex();
  public int previousIndex();
  public void remove();
  public void set(T);
  public void add(T);
}
Compiled from "ListAdapter.java"
public final class net.jcores.jre.cores.adapter.ListAdapter<T> extends net.jcores.jre.cores.adapter.AbstractAdapter<T> {
  final java.util.List<T> list;
  public net.jcores.jre.cores.adapter.ListAdapter(java.util.List<T>);
  public int size();
  public T get(int);
  public java.util.ListIterator<T> iterator();
  public <N> N[] array(java.lang.Class<N>);
  public java.util.List<T> unsafelist();
  public java.util.List<T> slice(int, int);
  public java.util.Iterator iterator();
}
Compiled from "MapAdapter.java"
public final class net.jcores.jre.cores.adapter.MapAdapter<K, V> extends net.jcores.jre.cores.adapter.CollectionAdapter<K, net.jcores.jre.utils.map.MapEntry<K, V>> {
  java.util.Map<K, V> map;
  public net.jcores.jre.cores.adapter.MapAdapter(java.util.Map<K, V>);
  protected net.jcores.jre.utils.map.MapEntry<K, V> converter(K);
  protected java.lang.Object converter(java.lang.Object);
}
Compiled from "MapAdapter.java"
class net.jcores.jre.cores.adapter.MapAdapter$1 extends net.jcores.jre.utils.map.MapEntry<K, V> {
  V cache;
  final java.lang.Object val$i;
  final net.jcores.jre.cores.adapter.MapAdapter this$0;
  net.jcores.jre.cores.adapter.MapAdapter$1(net.jcores.jre.cores.adapter.MapAdapter, java.lang.Object, java.lang.Object, java.lang.Object);
  public V value();
}
Compiled from "CommonAlgorithmic.java"
public class net.jcores.jre.cores.commons.CommonAlgorithmic extends net.jcores.jre.cores.commons.CommonNamespace {
  final java.util.concurrent.atomic.AtomicLong nextLong;
  public net.jcores.jre.cores.commons.CommonAlgorithmic(net.jcores.jre.CommonCore);
  public double limit(double, double, double);
  public int limit(int, int, int);
  public long nextLong();
  public <T extends java.lang.Comparable<T>> boolean permute(T[]);
  public double relative(double, double, double);
  public <T> void swap(T[], int, int);
}
Compiled from "CommonNamespace.java"
public class net.jcores.jre.cores.commons.CommonNamespace {
  protected net.jcores.jre.CommonCore commonCore;
  public net.jcores.jre.cores.commons.CommonNamespace(net.jcores.jre.CommonCore);
}
Compiled from "CommonNet.java"
public class net.jcores.jre.cores.commons.CommonNet extends net.jcores.jre.cores.commons.CommonNamespace {
  public net.jcores.jre.cores.commons.CommonNet(net.jcores.jre.CommonCore);
  public int findFreeTCP();
  public int findFreeTCP(int);
  public boolean TCPavailable(int);
  public net.jcores.jre.utils.Async<java.lang.String> get(java.lang.String, java.util.Map<java.lang.String, java.lang.String>, net.jcores.jre.options.Option...);
}
Compiled from "CommonNet.java"
class net.jcores.jre.cores.commons.CommonNet$1 implements net.jcores.jre.interfaces.functions.F0R<java.lang.String> {
  final java.util.Map val$data;
  final java.lang.String val$url;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.cores.commons.CommonNet this$0;
  net.jcores.jre.cores.commons.CommonNet$1(net.jcores.jre.cores.commons.CommonNet, java.util.Map, java.lang.String, net.jcores.jre.options.Option[]);
  public java.lang.String f();
  public java.lang.Object f();
}
Compiled from "CommonNet.java"
class net.jcores.jre.cores.commons.CommonNet$1$1 implements net.jcores.jre.interfaces.functions.F1<net.jcores.jre.utils.map.MapEntry<java.lang.String, java.lang.String>, java.lang.String> {
  final net.jcores.jre.cores.commons.CommonNet$1 this$1;
  net.jcores.jre.cores.commons.CommonNet$1$1(net.jcores.jre.cores.commons.CommonNet$1);
  public java.lang.String f(net.jcores.jre.utils.map.MapEntry<java.lang.String, java.lang.String>);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "CommonSys.java"
public class net.jcores.jre.cores.commons.CommonSys extends net.jcores.jre.cores.commons.CommonNamespace {
  public net.jcores.jre.cores.commons.CommonSys(net.jcores.jre.CommonCore);
  public java.io.File tempfile(net.jcores.jre.options.Option...);
  public java.io.File tempdir(net.jcores.jre.options.Option...);
  public void manyTimes(net.jcores.jre.interfaces.functions.F0, long, net.jcores.jre.options.Option...);
  public void oneTime(net.jcores.jre.interfaces.functions.F0, long, net.jcores.jre.options.Option...);
  public long sleep(long, net.jcores.jre.options.Option...);
  public java.lang.String uniqueID(net.jcores.jre.options.Option...);
}
Compiled from "CommonSys.java"
class net.jcores.jre.cores.commons.CommonSys$1 implements java.lang.Runnable {
  final net.jcores.jre.interfaces.functions.F0 val$f0;
  final long val$delay;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.options.KillSwitch val$killswitch;
  final net.jcores.jre.cores.commons.CommonSys this$0;
  net.jcores.jre.cores.commons.CommonSys$1(net.jcores.jre.cores.commons.CommonSys, net.jcores.jre.interfaces.functions.F0, long, net.jcores.jre.options.Option[], net.jcores.jre.utils.internal.Options, net.jcores.jre.options.KillSwitch);
  public void run();
}
Compiled from "CommonSys.java"
class net.jcores.jre.cores.commons.CommonSys$2 implements java.lang.Runnable {
  final long val$delay;
  final net.jcores.jre.options.Option[] val$options;
  final net.jcores.jre.options.KillSwitch val$killswitch;
  final net.jcores.jre.interfaces.functions.F0 val$f0;
  final net.jcores.jre.utils.internal.Options val$options$;
  final net.jcores.jre.cores.commons.CommonSys this$0;
  net.jcores.jre.cores.commons.CommonSys$2(net.jcores.jre.cores.commons.CommonSys, long, net.jcores.jre.options.Option[], net.jcores.jre.options.KillSwitch, net.jcores.jre.interfaces.functions.F0, net.jcores.jre.utils.internal.Options);
  public void run();
}
Compiled from "CommonUI.java"
public class net.jcores.jre.cores.commons.CommonUI extends net.jcores.jre.cores.commons.CommonNamespace {
  public net.jcores.jre.cores.commons.CommonUI(net.jcores.jre.CommonCore);
  public void edt(net.jcores.jre.interfaces.functions.F0);
  public void systemLnF();
  public void edtnow(net.jcores.jre.interfaces.functions.F0);
  public java.awt.Color heat(double);
  public java.awt.Color opacity(java.awt.Color, double);
}
Compiled from "CommonUI.java"
class net.jcores.jre.cores.commons.CommonUI$1 implements java.lang.Runnable {
  final net.jcores.jre.interfaces.functions.F0 val$f0;
  final net.jcores.jre.cores.commons.CommonUI this$0;
  net.jcores.jre.cores.commons.CommonUI$1(net.jcores.jre.cores.commons.CommonUI, net.jcores.jre.interfaces.functions.F0);
  public void run();
}
Compiled from "CommonUI.java"
class net.jcores.jre.cores.commons.CommonUI$2 implements java.lang.Runnable {
  final net.jcores.jre.interfaces.functions.F0 val$f0;
  final net.jcores.jre.cores.commons.CommonUI this$0;
  net.jcores.jre.cores.commons.CommonUI$2(net.jcores.jre.cores.commons.CommonUI, net.jcores.jre.interfaces.functions.F0);
  public void run();
}
Compiled from "GlobalExtension.java"
public abstract class net.jcores.jre.extensions.GlobalExtension {
  protected net.jcores.jre.CommonCore commonCore;
  public net.jcores.jre.extensions.GlobalExtension();
  public void init();
  public void commonCore(net.jcores.jre.CommonCore);
}
Compiled from "LocalExtension.java"
public abstract class net.jcores.jre.extensions.LocalExtension<T> extends net.jcores.jre.cores.CoreObject<T> {
  public net.jcores.jre.extensions.LocalExtension(net.jcores.jre.CommonCore, net.jcores.jre.cores.adapter.AbstractAdapter<T>);
}
Compiled from "F0.java"
public interface net.jcores.jre.interfaces.functions.F0 {
  public abstract void f();
}
Compiled from "F0E.java"
public abstract class net.jcores.jre.interfaces.functions.F0E implements net.jcores.jre.interfaces.functions.F0 {
  public net.jcores.jre.interfaces.functions.F0E();
  public void f();
  public abstract void fE() throws java.lang.Exception;
}
Compiled from "F0R.java"
public interface net.jcores.jre.interfaces.functions.F0R<R> {
  public abstract R f();
}
Compiled from "F1.java"
public interface net.jcores.jre.interfaces.functions.F1<X, Y> {
  public abstract Y f(X);
}
Compiled from "F1E.java"
public abstract class net.jcores.jre.interfaces.functions.F1E<X, Y> implements net.jcores.jre.interfaces.functions.F1<X, Y> {
  public net.jcores.jre.interfaces.functions.F1E();
  public Y f(X);
  public abstract Y fE(X) throws java.lang.Exception;
}
Compiled from "F1EV.java"
public abstract class net.jcores.jre.interfaces.functions.F1EV<X> extends net.jcores.jre.interfaces.functions.F1E<X, java.lang.Void> {
  public net.jcores.jre.interfaces.functions.F1EV();
  public java.lang.Void fE(X) throws java.lang.Exception;
  public abstract void fEV(X) throws java.lang.Exception;
  public java.lang.Object fE(java.lang.Object) throws java.lang.Exception;
}
Compiled from "F1Object2Bool.java"
public interface net.jcores.jre.interfaces.functions.F1Object2Bool<X> {
  public abstract boolean f(X);
}
Compiled from "F1V.java"
public abstract class net.jcores.jre.interfaces.functions.F1V<X> implements net.jcores.jre.interfaces.functions.F1<X, java.lang.Void> {
  public net.jcores.jre.interfaces.functions.F1V();
  public java.lang.Void f(X);
  public abstract void fV(X);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "F2DeltaObjects.java"
public interface net.jcores.jre.interfaces.functions.F2DeltaObjects<X, Y> {
  public abstract Y f(X, X);
}
Compiled from "F2ReduceObjects.java"
public interface net.jcores.jre.interfaces.functions.F2ReduceObjects<X> {
  public abstract X f(X, X);
}
Compiled from "Fn.java"
public interface net.jcores.jre.interfaces.functions.Fn<X, Y> {
  public abstract Y f(X...);
}
Compiled from "LoggingHandler.java"
public interface net.jcores.jre.interfaces.internal.logging.LoggingHandler {
  public abstract void log(java.lang.String, java.util.logging.Level);
}
Compiled from "KeyStroke.java"
public interface net.jcores.jre.interfaces.java.KeyStroke {
  public abstract void keystroke(java.awt.event.KeyEvent);
}
Compiled from "Manager.java"
public class net.jcores.jre.managers.Manager {
  public net.jcores.jre.managers.Manager();
}
Compiled from "ManagerClass.java"
public class net.jcores.jre.managers.ManagerClass extends net.jcores.jre.managers.Manager {
  public net.jcores.jre.managers.ManagerClass();
  public <T> void registerImplementor(java.lang.Class<?>, java.lang.Class<?>);
  public <T> java.lang.Class<?>[] getImplementors(java.lang.Class<T>);
}
Compiled from "ManagerDebugGUI.java"
public class net.jcores.jre.managers.ManagerDebugGUI extends net.jcores.jre.managers.Manager {
  public net.jcores.jre.managers.ManagerDebugGUI();
  public void addCore(net.jcores.jre.cores.CoreObject<?>);
}
Compiled from "ManagerDeveloperFeedback.java"
public class net.jcores.jre.managers.ManagerDeveloperFeedback extends net.jcores.jre.managers.Manager {
  long lastoutbound;
  public net.jcores.jre.managers.ManagerDeveloperFeedback();
  public void featurerequest(java.lang.String, java.lang.Class<?>, java.lang.String);
}
Compiled from "ManagerDeveloperFeedback.java"
class net.jcores.jre.managers.ManagerDeveloperFeedback$1 extends net.jcores.jre.interfaces.functions.F1V<java.lang.String> {
  final net.jcores.jre.managers.ManagerDeveloperFeedback this$0;
  net.jcores.jre.managers.ManagerDeveloperFeedback$1(net.jcores.jre.managers.ManagerDeveloperFeedback);
  public void fV(java.lang.String);
  public void fV(java.lang.Object);
}
Compiled from "ManagerExecution.java"
public class net.jcores.jre.managers.ManagerExecution extends net.jcores.jre.managers.Manager {
  java.util.concurrent.ExecutorService executor;
  net.jcores.jre.utils.internal.structures.ProfileInformation profile;
  public net.jcores.jre.managers.ManagerExecution();
  public java.util.concurrent.ExecutorService getExecutor();
  public net.jcores.jre.utils.internal.structures.ProfileInformation getProfile();
}
Compiled from "ManagerExecution.java"
class net.jcores.jre.managers.ManagerExecution$1 implements java.util.concurrent.ThreadFactory {
  final net.jcores.jre.managers.ManagerExecution this$0;
  net.jcores.jre.managers.ManagerExecution$1(net.jcores.jre.managers.ManagerExecution);
  public java.lang.Thread newThread(java.lang.Runnable);
}
Compiled from "ManagerExecution.java"
class net.jcores.jre.managers.ManagerExecution$2 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.managers.ManagerExecution this$0;
  net.jcores.jre.managers.ManagerExecution$2(net.jcores.jre.managers.ManagerExecution);
  public void f();
}
Compiled from "ManagerExecution.java"
class net.jcores.jre.managers.ManagerExecution$2$1 implements java.lang.Runnable {
  final java.util.concurrent.CyclicBarrier val$barrier;
  final net.jcores.jre.managers.ManagerExecution$2 this$1;
  net.jcores.jre.managers.ManagerExecution$2$1(net.jcores.jre.managers.ManagerExecution$2, java.util.concurrent.CyclicBarrier);
  public void run();
}
Compiled from "ManagerLogging.java"
public class net.jcores.jre.managers.ManagerLogging extends net.jcores.jre.managers.Manager {
  public net.jcores.jre.managers.ManagerLogging();
  public void handler(net.jcores.jre.interfaces.internal.logging.LoggingHandler);
  public net.jcores.jre.interfaces.internal.logging.LoggingHandler handler();
}
Compiled from "ManagerLogging.java"
class net.jcores.jre.managers.ManagerLogging$1 implements net.jcores.jre.interfaces.internal.logging.LoggingHandler {
  final net.jcores.jre.managers.ManagerLogging this$0;
  net.jcores.jre.managers.ManagerLogging$1(net.jcores.jre.managers.ManagerLogging);
  public void log(java.lang.String, java.util.logging.Level);
}
Compiled from "Args.java"
public class net.jcores.jre.options.Args extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.Args WRAP(java.lang.Object...);
  public java.lang.Object[] getArgs();
}
Compiled from "Debug.java"
public class net.jcores.jre.options.Debug extends net.jcores.jre.options.DefaultOption {
  public static final net.jcores.jre.options.Debug DO;
  static {};
}
Compiled from "DefaultOption.java"
public class net.jcores.jre.options.DefaultOption extends net.jcores.jre.options.Option {
  public net.jcores.jre.options.DefaultOption();
}
Compiled from "DropType.java"
public class net.jcores.jre.options.DropType<T> extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.DropType<java.io.File> FILES;
  public net.jcores.jre.options.DropType();
  static {};
}
Compiled from "DropType.java"
class net.jcores.jre.options.DropType$Files extends net.jcores.jre.options.DropType<java.io.File> {
  protected net.jcores.jre.options.DropType$Files();
}
Compiled from "Hash.java"
public class net.jcores.jre.options.Hash extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.Hash MD5;
  public net.jcores.jre.options.Hash(java.lang.String);
  public java.lang.String getMethod();
  static {};
}
Compiled from "Hash.java"
class net.jcores.jre.options.Hash$MD5 extends net.jcores.jre.options.Hash {
  protected net.jcores.jre.options.Hash$MD5();
}
Compiled from "ID.java"
public class net.jcores.jre.options.ID extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.ID UNIQUE;
  public static final net.jcores.jre.options.ID SYSTEM;
  public static final net.jcores.jre.options.ID USER;
  protected net.jcores.jre.options.ID();
  static {};
}
Compiled from "ID.java"
final class net.jcores.jre.options.ID$System extends net.jcores.jre.options.ID {
  protected net.jcores.jre.options.ID$System();
}
Compiled from "ID.java"
final class net.jcores.jre.options.ID$Unique extends net.jcores.jre.options.ID {
  protected net.jcores.jre.options.ID$Unique();
}
Compiled from "ID.java"
final class net.jcores.jre.options.ID$User extends net.jcores.jre.options.ID {
  protected net.jcores.jre.options.ID$User();
}
Compiled from "Indexer.java"
public class net.jcores.jre.options.Indexer extends net.jcores.jre.options.Option {
  java.util.concurrent.ConcurrentHashMap<java.lang.Thread, java.lang.Integer> indices;
  public static final net.jcores.jre.options.Indexer NEW();
  public int i();
  public void i(int);
}
Compiled from "InvertSelection.java"
public class net.jcores.jre.options.InvertSelection extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.InvertSelection DO;
  static {};
}
Compiled from "KillSwitch.java"
public class net.jcores.jre.options.KillSwitch extends net.jcores.jre.options.Option {
  final java.util.Collection<java.util.concurrent.Future<?>> futures;
  final java.util.concurrent.atomic.AtomicBoolean terminated;
  public static final net.jcores.jre.options.KillSwitch NEW();
  public static final net.jcores.jre.options.KillSwitch TIMED(long);
  public void terminate();
  public void register(java.util.concurrent.Future<?>);
  public boolean terminated();
}
Compiled from "KillSwitch.java"
final class net.jcores.jre.options.KillSwitch$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.options.KillSwitch val$killSwitch;
  net.jcores.jre.options.KillSwitch$1(net.jcores.jre.options.KillSwitch);
  public void f();
}
Compiled from "ListDirectories.java"
public class net.jcores.jre.options.ListDirectories extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.ListDirectories DO;
  protected net.jcores.jre.options.ListDirectories();
  static {};
}
Compiled from "MapType.java"
public class net.jcores.jre.options.MapType extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.MapType TYPE(java.lang.Class<?>);
  public java.lang.Class<?> getType();
}
Compiled from "MessageType.java"
public final class net.jcores.jre.options.MessageType extends java.lang.Enum<net.jcores.jre.options.MessageType> {
  public static final net.jcores.jre.options.MessageType MISUSE;
  public static final net.jcores.jre.options.MessageType PERFORMANCE;
  public static final net.jcores.jre.options.MessageType EXCEPTION;
  public static net.jcores.jre.options.MessageType[] values();
  public static net.jcores.jre.options.MessageType valueOf(java.lang.String);
  static {};
}
Compiled from "OnFailure.java"
public class net.jcores.jre.options.OnFailure extends net.jcores.jre.options.DefaultOption {
  public static net.jcores.jre.options.OnFailure PRINT;
  public static net.jcores.jre.options.OnFailure THROW;
  public static net.jcores.jre.options.OnFailure DO(net.jcores.jre.options.OnFailure$Listener);
  public net.jcores.jre.options.OnFailure$Listener getListener();
  static {};
}
Compiled from "OnFailure.java"
final class net.jcores.jre.options.OnFailure$1 implements net.jcores.jre.options.OnFailure$Listener {
  net.jcores.jre.options.OnFailure$1();
  public void onFailure(java.lang.Object, java.lang.Exception, java.lang.String, java.lang.String);
}
Compiled from "OnFailure.java"
final class net.jcores.jre.options.OnFailure$2 implements net.jcores.jre.options.OnFailure$Listener {
  net.jcores.jre.options.OnFailure$2();
  public void onFailure(java.lang.Object, java.lang.Exception, java.lang.String, java.lang.String);
}
Compiled from "OnFailure.java"
public interface net.jcores.jre.options.OnFailure$Listener {
  public abstract void onFailure(java.lang.Object, java.lang.Exception, java.lang.String, java.lang.String);
}
Compiled from "Option.java"
public class net.jcores.jre.options.Option {
  protected net.jcores.jre.options.Option();
}
Compiled from "RegEx.java"
public class net.jcores.jre.options.RegEx extends net.jcores.jre.options.Option {
  public static final net.jcores.jre.options.RegEx OPTIONS(int);
  public int getOptions();
}
Compiled from "Async.java"
public class net.jcores.jre.utils.Async<T> {
  protected static final net.jcores.jre.utils.Async$EOQ EOQ;
  net.jcores.jre.utils.Async$Queue<T> queue;
  boolean closed;
  public static final <T> net.jcores.jre.utils.Async$Queue<T> Queue();
  public static final <T> net.jcores.jre.utils.Async$QEntry<T> QEntry(T);
  public net.jcores.jre.utils.Async(net.jcores.jre.CommonCore, net.jcores.jre.utils.Async$Queue<T>);
  public net.jcores.jre.cores.CoreObject<T> await();
  public boolean active();
  public net.jcores.jre.cores.CoreObject<T> available();
  public net.jcores.jre.utils.Async<T> onNext(net.jcores.jre.interfaces.functions.F1<T, java.lang.Void>, net.jcores.jre.options.Option...);
  protected java.util.Collection<T> collect();
  static {};
}
Compiled from "Async.java"
class net.jcores.jre.utils.Async$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.jre.interfaces.functions.F1 val$f;
  final net.jcores.jre.options.KillSwitch val$killswitch;
  final net.jcores.jre.utils.Async this$0;
  net.jcores.jre.utils.Async$1(net.jcores.jre.utils.Async, net.jcores.jre.interfaces.functions.F1, net.jcores.jre.options.KillSwitch);
  public void f();
}
Compiled from "Async.java"
public class net.jcores.jre.utils.Async$EOQ extends net.jcores.jre.utils.Async$QEntry<java.lang.Object> {
  protected net.jcores.jre.utils.Async$EOQ();
}
Compiled from "Async.java"
public class net.jcores.jre.utils.Async$QEntry<T> {
  protected T object;
  public T getObject();
  protected net.jcores.jre.utils.Async$QEntry();
}
Compiled from "Async.java"
public class net.jcores.jre.utils.Async$Queue<T> extends java.util.concurrent.LinkedBlockingQueue<net.jcores.jre.utils.Async$QEntry<T>> {
  protected net.jcores.jre.utils.Async$Queue();
  public void close();
}
Compiled from "CSVLine.java"
public class net.jcores.jre.utils.CSVLine {
  public net.jcores.jre.utils.CSVLine(java.lang.String...);
  public java.lang.String s(int);
  public int i(int);
  public java.lang.Integer I(int);
  public double d(int);
  public java.lang.Double D(int);
  public int size();
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
}
Compiled from "VanillaUtil.java"
public abstract class net.jcores.jre.utils.VanillaUtil<T> {
  protected final T object;
  public net.jcores.jre.utils.VanillaUtil(T);
  public T getObject();
  protected <C> C cast(java.lang.Class<C>);
  protected <C> C cast();
}
Compiled from "Failure.java"
public class net.jcores.jre.utils.errorhandling.Failure {
  public java.lang.Object object;
  public java.lang.Exception cause;
  public java.lang.String code;
  public java.lang.String details;
  public net.jcores.jre.utils.errorhandling.Failure();
}
Compiled from "JCoresException.java"
public class net.jcores.jre.utils.errorhandling.JCoresException extends java.lang.RuntimeException {
  public net.jcores.jre.utils.errorhandling.JCoresException(net.jcores.jre.utils.errorhandling.Failure);
  public net.jcores.jre.utils.errorhandling.Failure getFailure();
}
Compiled from "VerificationError.java"
public class net.jcores.jre.utils.errorhandling.VerificationError extends java.lang.Error {
  public net.jcores.jre.utils.errorhandling.VerificationError(java.lang.String);
}
Compiled from "Bytes.java"
public class net.jcores.jre.utils.internal.Bytes {
  public net.jcores.jre.utils.internal.Bytes();
  public static java.lang.String generateHash(java.nio.ByteBuffer, java.lang.String, net.jcores.jre.utils.internal.Options);
}
Compiled from "Files.java"
public class net.jcores.jre.utils.internal.Files {
  public net.jcores.jre.utils.internal.Files();
  public static java.lang.String readText(net.jcores.jre.CommonCore, java.io.File);
  public static java.io.File[] dir(java.io.File, boolean);
  public static java.io.File[] copy(net.jcores.jre.CommonCore, java.io.File, java.io.File);
  public static void zipFiles(java.io.File, java.io.File[]);
  public static void jarFiles(java.io.File, java.util.jar.Manifest, java.io.File[]);
}
Compiled from "Objects.java"
public class net.jcores.jre.utils.internal.Objects {
  public net.jcores.jre.utils.internal.Objects();
  public static java.lang.Object getProxy(java.lang.reflect.InvocationHandler, java.lang.Class<?>...);
}
Compiled from "Options.java"
public class net.jcores.jre.utils.internal.Options {
  java.util.Collection<net.jcores.jre.options.OnFailure> onFailures;
  net.jcores.jre.options.KillSwitch killswitch;
  boolean invert;
  net.jcores.jre.options.ID id;
  java.lang.Object[] args;
  public static net.jcores.jre.utils.internal.Options $(net.jcores.jre.CommonCore, net.jcores.jre.options.Option...);
  net.jcores.jre.utils.internal.Options(net.jcores.jre.CommonCore, net.jcores.jre.options.Option...);
  public void failure(java.lang.Object, java.lang.Exception, java.lang.String, java.lang.String);
  public boolean invert();
  public net.jcores.jre.options.KillSwitch killswitch();
  public net.jcores.jre.options.ID ID();
  public java.lang.Object[] args();
  public boolean debug();
}
Compiled from "Reporter.java"
public class net.jcores.jre.utils.internal.Reporter {
  java.util.concurrent.ConcurrentLinkedQueue<java.lang.String> allRecords;
  net.jcores.jre.CommonCore commonCore;
  public net.jcores.jre.utils.internal.Reporter(net.jcores.jre.CommonCore);
  public void record(java.lang.String);
  public void printRecords();
}
Compiled from "Reporter.java"
class net.jcores.jre.utils.internal.Reporter$1 extends net.jcores.jre.interfaces.functions.F1V<java.lang.String> {
  final net.jcores.jre.utils.internal.Reporter this$0;
  net.jcores.jre.utils.internal.Reporter$1(net.jcores.jre.utils.internal.Reporter);
  public void fV(java.lang.String);
  public void fV(java.lang.Object);
}
Compiled from "Sound.java"
public class net.jcores.jre.utils.internal.Sound {
  public net.jcores.jre.utils.internal.Sound();
  public static void playSound(javax.sound.sampled.AudioInputStream, net.jcores.jre.utils.internal.Options);
  public static javax.sound.sampled.AudioInputStream getStream(java.io.File);
  public static javax.sound.sampled.AudioInputStream getStream(java.io.InputStream);
}
Compiled from "Streams.java"
public class net.jcores.jre.utils.internal.Streams {
  public net.jcores.jre.utils.internal.Streams();
  public static void doUnzip(java.io.InputStream, java.lang.String) throws java.io.IOException;
  public static java.lang.String readText(net.jcores.jre.CommonCore, java.io.InputStream);
  public static java.io.InputStream getInputStream(java.util.zip.ZipInputStream, java.lang.String) throws java.io.IOException;
  public static java.util.List<java.lang.String> list(java.util.zip.ZipInputStream) throws java.io.IOException;
  public static java.lang.String generateHash(java.io.InputStream, java.lang.String);
  public static void saveTo(java.io.InputStream, java.io.File);
  public static java.nio.ByteBuffer getByteData(java.io.InputStream);
  public static void serializeCore(net.jcores.jre.cores.CoreObject<?>, java.io.FileOutputStream);
  public static <T> net.jcores.jre.cores.CoreObject<T> deserializeCore(java.lang.Class<T>, java.io.InputStream, net.jcores.jre.CommonCore);
}
Compiled from "Strings.java"
public class net.jcores.jre.utils.internal.Strings {
  public net.jcores.jre.utils.internal.Strings();
  public static java.lang.String[] parseExec(java.lang.String);
}
Compiled from "URIs.java"
public class net.jcores.jre.utils.internal.URIs {
  public net.jcores.jre.utils.internal.URIs();
  public static java.net.URI[] toURIs(java.net.URL[]);
}
Compiled from "Folder.java"
public abstract class net.jcores.jre.utils.internal.processing.Folder<I> extends net.jcores.jre.utils.internal.processing.Handler<I, I> {
  public net.jcores.jre.utils.internal.processing.Folder(net.jcores.jre.cores.CoreObject<I>);
  public abstract void handle(int, int, int);
}
Compiled from "Handler.java"
public abstract class net.jcores.jre.utils.internal.processing.Handler<I, O> {
  protected final net.jcores.jre.cores.CoreObject<I> core;
  protected final java.util.concurrent.atomic.AtomicReference<O[]> returnArray;
  public net.jcores.jre.utils.internal.processing.Handler(net.jcores.jre.cores.CoreObject<I>);
  public net.jcores.jre.cores.CoreObject<I> core();
  public O[] updateReturnArray(O[]);
  public O[] getFinalReturnArray();
}
Compiled from "Mapper.java"
public abstract class net.jcores.jre.utils.internal.processing.Mapper<I, O> extends net.jcores.jre.utils.internal.processing.Handler<I, O> {
  protected final net.jcores.jre.utils.internal.processing.Mapper$MapOptions options;
  public net.jcores.jre.utils.internal.processing.Mapper(net.jcores.jre.cores.CoreObject<I>, net.jcores.jre.options.Option...);
  public abstract void handle(int);
}
Compiled from "Mapper.java"
public class net.jcores.jre.utils.internal.processing.Mapper$MapOptions {
  public final boolean debug;
  public final java.lang.Class<?> type;
  public final net.jcores.jre.options.Indexer indexer;
  public net.jcores.jre.utils.internal.processing.Mapper$MapOptions(net.jcores.jre.options.Option...);
}
Compiled from "NonNullIterator.java"
public class net.jcores.jre.utils.internal.processing.NonNullIterator<T> implements java.util.ListIterator<T> {
  public net.jcores.jre.utils.internal.processing.NonNullIterator(java.util.ListIterator<T>);
  public boolean hasNext();
  public T next();
  public boolean hasPrevious();
  public T previous();
  public int nextIndex();
  public int previousIndex();
  public void remove();
  public void set(T);
  public void add(T);
}
Compiled from "ProfileInformation.java"
public class net.jcores.jre.utils.internal.structures.ProfileInformation {
  public long forkTime;
  public int numCPUs;
  public net.jcores.jre.utils.internal.structures.ProfileInformation();
}
Compiled from "SimpleTransferHandler.java"
public abstract class net.jcores.jre.utils.internal.structures.SimpleTransferHandler extends javax.swing.TransferHandler {
  public net.jcores.jre.utils.internal.structures.SimpleTransferHandler(net.jcores.jre.options.Option[]);
  public boolean canImport(javax.swing.JComponent, java.awt.datatransfer.DataFlavor[]);
  public boolean importData(javax.swing.JComponent, java.awt.datatransfer.Transferable);
  public abstract void files(java.util.List<java.io.File>);
}
Compiled from "InputStreamWrapper.java"
public class net.jcores.jre.utils.internal.wrapper.InputStreamWrapper extends java.io.InputStream {
  public net.jcores.jre.utils.internal.wrapper.InputStreamWrapper(java.io.InputStream);
  public int read() throws java.io.IOException;
  public int hashCode();
  public int read(byte[]) throws java.io.IOException;
  public boolean equals(java.lang.Object);
  public int read(byte[], int, int) throws java.io.IOException;
  public long skip(long) throws java.io.IOException;
  public java.lang.String toString();
  public int available() throws java.io.IOException;
  public void close() throws java.io.IOException;
  public synchronized void mark(int);
  public synchronized void reset() throws java.io.IOException;
  public boolean markSupported();
}
Compiled from "Wrapper.java"
public class net.jcores.jre.utils.internal.wrapper.Wrapper {
  public net.jcores.jre.utils.internal.wrapper.Wrapper();
  public static <T> T[] convert(java.util.Collection<?>, java.lang.Class<T>);
  public static <T, Y> Y[] convert(java.util.Collection<T>, net.jcores.jre.interfaces.functions.F1<T, Y>, java.lang.Class<Y>);
  public static <K, V> net.jcores.jre.utils.map.MapEntry<K, V>[] convert(java.util.Map<K, V>);
}
Compiled from "Compound.java"
public class net.jcores.jre.utils.map.Compound extends net.jcores.jre.utils.map.MapUtil<java.lang.String, java.lang.Object> {
  public static net.jcores.jre.utils.map.Compound create(java.lang.Object...);
  public <T> net.jcores.jre.utils.map.MapUtil<java.lang.String, T> as(java.lang.Class<T>);
}
Compiled from "ConcurrentMapUtil.java"
public class net.jcores.jre.utils.map.ConcurrentMapUtil<K, V> extends net.jcores.jre.utils.map.MapUtil<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  public net.jcores.jre.utils.map.ConcurrentMapUtil(java.util.concurrent.ConcurrentMap<K, V>);
  public V putIfAbsent(K, V);
  public boolean remove(java.lang.Object, java.lang.Object);
  public V replace(K, V);
  public boolean replace(K, V, V);
}
Compiled from "MapEntry.java"
public class net.jcores.jre.utils.map.MapEntry<K, V> implements java.lang.Comparable<net.jcores.jre.utils.map.MapEntry<K, V>> {
  public net.jcores.jre.utils.map.MapEntry(K, V);
  public K key();
  public V value();
  public java.lang.String toString();
  public int compareTo(net.jcores.jre.utils.map.MapEntry<K, V>);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public int compareTo(java.lang.Object);
}
Compiled from "MapUtil.java"
public class net.jcores.jre.utils.map.MapUtil<K, V> extends net.jcores.jre.utils.VanillaUtil<java.util.Map<K, V>> implements java.util.Map<K, V> {
  public net.jcores.jre.utils.map.MapUtil(java.util.Map<K, V>);
  public net.jcores.jre.utils.map.MapUtil<K, V> dfault(V);
  public net.jcores.jre.utils.map.MapUtil<K, V> generator(net.jcores.jre.interfaces.functions.F1<K, V>);
  public <R> R get(java.lang.String, java.lang.Class<R>);
  public <R> R get(java.lang.String, R);
  public int i(java.lang.String);
  public long l(java.lang.String);
  public java.lang.String s(java.lang.String);
  public double d(java.lang.String);
  public void put(K, int);
  public void put(K, double);
  public void clear();
  public boolean containsKey(java.lang.Object);
  public boolean containsValue(java.lang.Object);
  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
  public V get(java.lang.Object);
  public boolean isEmpty();
  public java.util.Set<K> keySet();
  public V put(K, V);
  public void putAll(java.util.Map<? extends K, ? extends V>);
  public V remove(java.lang.Object);
  public int size();
  public java.util.Collection<V> values();
}
Compiled from "NewInstance.java"
public class net.jcores.jre.utils.map.generators.NewInstance<K, V> implements net.jcores.jre.interfaces.functions.F1<K, V> {
  public static <A, B> net.jcores.jre.utils.map.generators.NewInstance<A, B> LIST();
  public net.jcores.jre.utils.map.generators.NewInstance(java.lang.Class<? extends V>);
  public V f(K);
}
Compiled from "NewUnsafeInstance.java"
public class net.jcores.jre.utils.map.generators.NewUnsafeInstance<K, V> extends net.jcores.jre.utils.map.generators.NewInstance<K, V> {
  public net.jcores.jre.utils.map.generators.NewUnsafeInstance(java.lang.Class);
}
Compiled from "Blacklist.java"
public class net.jcores.script.Blacklist extends net.jcores.script.Checklist {
  public net.jcores.script.Blacklist();
  public net.jcores.script.Blacklist file(java.lang.String);
  public net.jcores.script.Blacklist clazz(java.lang.String);
  public net.jcores.script.Checklist clazz(java.lang.String);
  public net.jcores.script.Checklist file(java.lang.String);
}
Compiled from "Checklist.java"
public class net.jcores.script.Checklist {
  protected net.jcores.script.Checklist();
  public net.jcores.script.Checklist file(java.lang.String);
  public net.jcores.script.Checklist clazz(java.lang.String);
  public boolean isListedFile(java.io.File);
  public boolean isListedClass(java.lang.String);
  public boolean isListedClass(java.io.File);
}
Compiled from "JCoresLibrary.java"
public class net.jcores.script.JCoresLibrary extends net.jcores.script.ScriptingCommons {
  protected net.jcores.script.JCoresLibrary(java.lang.String);
  public static net.jcores.script.JCoresLibrary LIBRARY(java.lang.String);
}
Compiled from "JCoresLibraryDevtime.java"
public class net.jcores.script.JCoresLibraryDevtime extends net.jcores.script.JCoresLibrary {
  protected net.jcores.script.JCoresLibraryDevtime(java.lang.String);
  public net.jcores.script.JCoresLibraryDevtime blacklist(net.jcores.script.Checklist);
  public void pack(net.jcores.jre.options.Option...);
  public net.jcores.script.ScriptingCommons blacklist(net.jcores.script.Checklist);
}
Compiled from "JCoresScript.java"
public abstract class net.jcores.script.JCoresScript extends net.jcores.script.ScriptingCommons {
  protected boolean console;
  protected net.jcores.script.input.Input input;
  protected net.jcores.script.output.Output output;
  protected boolean transferable;
  protected final java.lang.String[] args;
  protected net.jcores.script.JCoresScript(java.lang.String, java.lang.String[]);
  public static net.jcores.script.JCoresScript SCRIPT(java.lang.String, java.lang.String[]);
  public net.jcores.script.JCoresScript io(net.jcores.script.input.Input, net.jcores.script.output.Output);
  public net.jcores.script.JCoresScript io(net.jcores.script.input.Input);
  public net.jcores.script.JCoresScript io(net.jcores.script.output.Output);
  public net.jcores.script.JCoresScript console();
  public net.jcores.script.JCoresScript transferable();
}
Compiled from "JCoresScriptDevtime.java"
public class net.jcores.script.JCoresScriptDevtime extends net.jcores.script.JCoresScript {
  protected net.jcores.script.JCoresScriptDevtime(java.lang.String, java.lang.String[]);
  public net.jcores.script.ScriptingCommons blacklist(net.jcores.script.Checklist);
}
Compiled from "JCoresScriptRuntime.java"
public class net.jcores.script.JCoresScriptRuntime extends net.jcores.script.JCoresScript {
  net.jcores.script.util.console.JCoresConsole consoleWindow;
  java.lang.String banner;
  protected net.jcores.script.JCoresScriptRuntime(java.lang.String, java.lang.String[]);
  public net.jcores.script.ScriptingCommons blacklist(net.jcores.script.Checklist);
  public void pack(net.jcores.jre.options.Option...);
  void initUI();
  void printCommonDebug();
  void printPropertiesDebug();
}
Compiled from "JCoresScriptRuntime.java"
class net.jcores.script.JCoresScriptRuntime$1 implements net.jcores.jre.interfaces.functions.F0 {
  final net.jcores.script.JCoresScriptRuntime this$0;
  net.jcores.script.JCoresScriptRuntime$1(net.jcores.script.JCoresScriptRuntime);
  public void f();
}
Compiled from "JCoresScriptRuntime.java"
class net.jcores.script.JCoresScriptRuntime$2 implements java.awt.KeyEventDispatcher {
  final net.jcores.script.JCoresScriptRuntime this$0;
  net.jcores.script.JCoresScriptRuntime$2(net.jcores.script.JCoresScriptRuntime);
  public boolean dispatchKeyEvent(java.awt.event.KeyEvent);
}
Compiled from "ScriptingCommons.java"
public abstract class net.jcores.script.ScriptingCommons {
  protected final java.lang.String name;
  protected net.jcores.script.Checklist blacklist;
  protected net.jcores.script.Checklist whitelist;
  protected net.jcores.script.ScriptingCommons(java.lang.String);
  public net.jcores.script.ScriptingCommons blacklist(net.jcores.script.Checklist);
  public net.jcores.script.ScriptingCommons whitelist(net.jcores.script.Checklist);
  protected void pack(java.util.jar.Manifest, net.jcores.jre.options.Option...);
  public void pack(net.jcores.jre.options.Option...);
  protected net.jcores.script.JCoresScript src(java.lang.String);
}
Compiled from "Whitelist.java"
public class net.jcores.script.Whitelist extends net.jcores.script.Checklist {
  public net.jcores.script.Whitelist();
  public net.jcores.script.Whitelist file(java.lang.String);
  public net.jcores.script.Whitelist clazz(java.lang.String);
  public net.jcores.script.Checklist clazz(java.lang.String);
  public net.jcores.script.Checklist file(java.lang.String);
}
Compiled from "AbstractInputType.java"
public abstract class net.jcores.script.input.AbstractInputType {
  protected java.lang.String shortDescription;
  protected java.lang.String longDescription;
  protected java.lang.String defaultValue;
  protected net.jcores.script.input.AbstractInputType();
  public net.jcores.script.input.AbstractInputType description(java.lang.String, java.lang.String);
  public net.jcores.script.input.AbstractInputType description(java.lang.String);
  public net.jcores.script.input.AbstractInputType dfault(java.lang.String);
}
Compiled from "Input.java"
public class net.jcores.script.input.Input {
  final java.util.List<net.jcores.script.input.AbstractInputType> inputs;
  public net.jcores.script.input.Input();
  public <T extends net.jcores.script.input.AbstractInputType> T parameter(java.lang.Class<T>, java.lang.String);
}
Compiled from "InputAlternatives.java"
public class net.jcores.script.input.InputAlternatives extends net.jcores.script.input.AbstractInputType {
  final java.util.List<net.jcores.script.input.InputAlternatives$Alternative> alternatives;
  public net.jcores.script.input.InputAlternatives();
  public net.jcores.script.input.InputAlternatives alternative(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "InputAlternatives.java"
public class net.jcores.script.input.InputAlternatives$Alternative {
  protected java.lang.String label;
  protected java.lang.String shortDescription;
  protected java.lang.String longDescription;
  public net.jcores.script.input.InputAlternatives$Alternative();
}
Compiled from "InputFile.java"
public class net.jcores.script.input.InputFile extends net.jcores.script.input.InputFiles {
  public net.jcores.script.input.InputFile();
  public java.io.File get();
}
Compiled from "InputFiles.java"
public class net.jcores.script.input.InputFiles extends net.jcores.script.input.AbstractInputType {
  public net.jcores.script.input.InputFiles();
}
Compiled from "JCoresLauncher.java"
public class net.jcores.script.launcher.JCoresLauncher {
  public net.jcores.script.launcher.JCoresLauncher();
  public static void main(java.lang.String[]) throws java.io.IOException, java.lang.InterruptedException;
}
Compiled from "AbstractOutputType.java"
public class net.jcores.script.output.AbstractOutputType {
  public net.jcores.script.output.AbstractOutputType();
}
Compiled from "Output.java"
public class net.jcores.script.output.Output {
  final java.util.List<net.jcores.script.output.AbstractOutputType> inputs;
  public net.jcores.script.output.Output();
  public <T extends net.jcores.script.output.AbstractOutputType> T parameter(java.lang.Class<T>, java.lang.String);
}
Compiled from "JCoresConsole.java"
public class net.jcores.script.util.console.JCoresConsole extends javax.swing.JFrame {
  protected javax.swing.JTextArea textArea;
  protected javax.swing.JScrollPane scrollPane;
  protected java.lang.String banner;
  public net.jcores.script.util.console.JCoresConsole(java.lang.String);
  public void addTerminationHook(java.lang.Thread);
  void updateTextArea(java.lang.String);
}
Compiled from "JCoresConsole.java"
class net.jcores.script.util.console.JCoresConsole$1 implements net.jcores.jre.interfaces.functions.F0 {
  boolean warned;
  final java.lang.Thread val$thread;
  final net.jcores.script.util.console.JCoresConsole this$0;
  net.jcores.script.util.console.JCoresConsole$1(net.jcores.script.util.console.JCoresConsole, java.lang.Thread);
  public void f();
}
Compiled from "JCoresConsole.java"
class net.jcores.script.util.console.JCoresConsole$2 implements java.lang.Runnable {
  final java.lang.String val$text;
  final net.jcores.script.util.console.JCoresConsole this$0;
  net.jcores.script.util.console.JCoresConsole$2(net.jcores.script.util.console.JCoresConsole, java.lang.String);
  public void run();
}
Compiled from "JCoresConsole.java"
class net.jcores.script.util.console.JCoresConsole$3 extends java.io.OutputStream {
  final net.jcores.script.util.console.JCoresConsole this$0;
  net.jcores.script.util.console.JCoresConsole$3(net.jcores.script.util.console.JCoresConsole);
  public void write(int) throws java.io.IOException;
  public void write(byte[], int, int) throws java.io.IOException;
  public void write(byte[]) throws java.io.IOException;
}
Compiled from "SimpleNullTest.java"
class sandbox.A {
  sandbox.A();
}
Compiled from "APIv1.java"
public class sandbox.APIv1 {
  public sandbox.APIv1();
  public static void main(java.lang.String[]);
}
Compiled from "APIv1.java"
final class sandbox.APIv1$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  sandbox.APIv1$1();
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "APIv1.java"
final class sandbox.APIv1$2 implements net.jcores.jre.interfaces.functions.F0 {
  sandbox.APIv1$2();
  public void f();
}
Compiled from "APIv1.java"
final class sandbox.APIv1$3 implements net.jcores.jre.interfaces.functions.F1<sandbox.APIv1, java.lang.Boolean> {
  sandbox.APIv1$3();
  public java.lang.Boolean f(sandbox.APIv1);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "APIv2.java"
public class sandbox.APIv2 {
  public sandbox.APIv2();
  public static void main(java.lang.String[]);
}
Compiled from "APIv3.java"
public class sandbox.APIv3 {
  public sandbox.APIv3();
  public static void main(java.lang.String[]) throws java.lang.InterruptedException;
}
Compiled from "APIv3.java"
final class sandbox.APIv3$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.io.File> {
  sandbox.APIv3$1();
  public java.io.File f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "APIv3.java"
final class sandbox.APIv3$2 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String[]> {
  sandbox.APIv3$2();
  public java.lang.String[] f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "APIv3.java"
final class sandbox.APIv3$3 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.util.List<java.lang.String>> {
  sandbox.APIv3$3();
  public java.util.List<java.lang.String> f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleNullTest.java"
class sandbox.B extends sandbox.A {
  sandbox.B();
}
Compiled from "SimpleNullTest.java"
class sandbox.C extends sandbox.B {
  sandbox.C();
}
Compiled from "CastTest.java"
public class sandbox.CastTest {
  public sandbox.CastTest();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public static void doRegular() throws java.lang.Exception;
  public static void doReflection() throws java.lang.Exception;
  public static void doConstructor() throws java.lang.Exception;
}
Compiled from "FuturePlayground.java"
public class sandbox.FuturePlayground {
  public sandbox.FuturePlayground();
  public static void main(java.lang.String[]);
}
Compiled from "Renamer.java"
public class sandbox.Renamer {
  public sandbox.Renamer();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleByteBuffer.java"
public class sandbox.SimpleByteBuffer {
  static java.util.Random rnd;
  public sandbox.SimpleByteBuffer();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleBytecodeTest.java"
public class sandbox.SimpleBytecodeTest {
  static java.util.Random rnd;
  public sandbox.SimpleBytecodeTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleCastTest.java"
public class sandbox.SimpleCastTest {
  public sandbox.SimpleCastTest();
  public static void main(java.lang.String[]);
  public java.lang.Class<? extends sandbox.dummys.DiagnosisChannelID<?>>[] observedChannels();
}
Compiled from "SimpleCompound.java"
public class sandbox.SimpleCompound {
  public sandbox.SimpleCompound();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleConcurrenyTest.java"
public class sandbox.SimpleConcurrenyTest {
  public sandbox.SimpleConcurrenyTest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleConcurrenyTest.java"
final class sandbox.SimpleConcurrenyTest$1 implements java.lang.Runnable {
  sandbox.SimpleConcurrenyTest$1();
  public void run();
}
Compiled from "SimpleConcurrenyTest.java"
final class sandbox.SimpleConcurrenyTest$2 implements java.lang.Runnable {
  sandbox.SimpleConcurrenyTest$2();
  public void run();
}
Compiled from "SimpleCopyTest.java"
public class sandbox.SimpleCopyTest {
  public sandbox.SimpleCopyTest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleEval.java"
public class sandbox.SimpleEval {
  public sandbox.SimpleEval();
  public static void main(java.lang.String[]) throws java.io.IOException;
  public static net.jcores.jre.cores.CoreObject<java.lang.String> x(net.jcores.jre.cores.CoreString, int);
}
Compiled from "SimpleEval.java"
final class sandbox.SimpleEval$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final int val$i;
  sandbox.SimpleEval$1(int);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleExec.java"
public class sandbox.SimpleExec {
  static java.util.Random rnd;
  public sandbox.SimpleExec();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleExtensions.java"
public class sandbox.SimpleExtensions {
  public sandbox.SimpleExtensions();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "SimpleExtensions.java"
public class sandbox.SimpleExtensions$MyExt extends net.jcores.jre.extensions.GlobalExtension {
  public sandbox.SimpleExtensions$MyExt();
  public void socket();
}
Compiled from "SimpleFeatureRequest.java"
public class sandbox.SimpleFeatureRequest {
  public sandbox.SimpleFeatureRequest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleFilterTest.java"
public class sandbox.SimpleFilterTest {
  public sandbox.SimpleFilterTest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleFuture.java"
public class sandbox.SimpleFuture {
  static java.util.Random rnd;
  public sandbox.SimpleFuture();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleFuture.java"
final class sandbox.SimpleFuture$1 implements java.lang.Runnable {
  sandbox.SimpleFuture$1();
  public void run();
}
Compiled from "SimpleLibrary.java"
public class sandbox.SimpleLibrary {
  public sandbox.SimpleLibrary();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleNullTest.java"
public class sandbox.SimpleNullTest {
  static java.util.Random rnd;
  public sandbox.SimpleNullTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleNumberTest.java"
public class sandbox.SimpleNumberTest {
  public sandbox.SimpleNumberTest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleReplaceTest.java"
public class sandbox.SimpleReplaceTest {
  public sandbox.SimpleReplaceTest();
  public static void main(java.lang.String[]);
}
Compiled from "SimpleReplaceTest.java"
final class sandbox.SimpleReplaceTest$1 implements java.util.Comparator<java.lang.String> {
  sandbox.SimpleReplaceTest$1();
  public int compare(java.lang.String, java.lang.String);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "SimpleRutheLoader.java"
public class sandbox.SimpleRutheLoader {
  public sandbox.SimpleRutheLoader();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "SimpleRutheLoader.java"
final class sandbox.SimpleRutheLoader$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.Number, java.lang.Void> {
  sandbox.SimpleRutheLoader$1();
  public java.lang.Void f(java.lang.Number);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleScript.java"
public class sandbox.SimpleScript {
  public sandbox.SimpleScript();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "SimpleScriptInput.java"
public class sandbox.SimpleScriptInput {
  public sandbox.SimpleScriptInput();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "SimpleSpeedTest.java"
public class sandbox.SimpleSpeedTest {
  static java.util.Random rnd;
  public sandbox.SimpleSpeedTest();
  public static void main(java.lang.String[]);
  public static long benchmark(net.jcores.jre.interfaces.functions.F0);
  public static long benchmark(net.jcores.jre.interfaces.functions.F0, int);
  public static java.lang.Object getOrNotObject();
  public static java.util.List<java.lang.Object> getOrNotList();
  static {};
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$1 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$c1;
  sandbox.SimpleSpeedTest$1(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$10 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.Collection val$c2;
  final java.util.Collection val$r;
  sandbox.SimpleSpeedTest$10(java.util.Collection, java.util.Collection);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$11 implements net.jcores.jre.interfaces.functions.F0 {
  sandbox.SimpleSpeedTest$11();
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$12 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$o1;
  sandbox.SimpleSpeedTest$12(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$13 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$13(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$14 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$14(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$15 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$15(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$16 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$16(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$17 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$17(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$18 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$18(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$19 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$19(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$2 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$c1;
  sandbox.SimpleSpeedTest$2(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$20 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.concurrent.atomic.AtomicInteger val$ress;
  sandbox.SimpleSpeedTest$20(java.util.concurrent.atomic.AtomicInteger);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$21 implements net.jcores.jre.interfaces.functions.F0 {
  sandbox.SimpleSpeedTest$21();
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$22 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$o1;
  sandbox.SimpleSpeedTest$22(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$23 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$o1;
  sandbox.SimpleSpeedTest$23(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$24 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$o1;
  sandbox.SimpleSpeedTest$24(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
class sandbox.SimpleSpeedTest$24$1 implements net.jcores.jre.interfaces.functions.F1 {
  final sandbox.SimpleSpeedTest$24 this$0;
  sandbox.SimpleSpeedTest$24$1(sandbox.SimpleSpeedTest$24);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$25 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$o1;
  sandbox.SimpleSpeedTest$25(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$26 implements net.jcores.jre.interfaces.functions.F0 {
  final java.lang.String[] val$strings;
  sandbox.SimpleSpeedTest$26(java.lang.String[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
class sandbox.SimpleSpeedTest$26$1 implements net.jcores.jre.interfaces.functions.F1<java.lang.String, java.lang.String> {
  final sandbox.SimpleSpeedTest$26 this$0;
  sandbox.SimpleSpeedTest$26$1(sandbox.SimpleSpeedTest$26);
  public java.lang.String f(java.lang.String);
  public java.lang.Object f(java.lang.Object);
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$27 implements net.jcores.jre.interfaces.functions.F0 {
  final java.lang.String[] val$strings;
  sandbox.SimpleSpeedTest$27(java.lang.String[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$28 implements net.jcores.jre.interfaces.functions.F0 {
  final int[] val$ints;
  final int[] val$res;
  sandbox.SimpleSpeedTest$28(int[], int[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$29 implements net.jcores.jre.interfaces.functions.F0 {
  final long[] val$longs;
  final long[] val$resl;
  sandbox.SimpleSpeedTest$29(long[], long[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$3 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.Collection val$c2;
  sandbox.SimpleSpeedTest$3(java.util.Collection);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$30 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$intobjs;
  sandbox.SimpleSpeedTest$30(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
class sandbox.SimpleSpeedTest$30$1 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Integer> {
  final sandbox.SimpleSpeedTest$30 this$0;
  sandbox.SimpleSpeedTest$30$1(sandbox.SimpleSpeedTest$30);
  public java.lang.Integer f(java.lang.Integer, java.lang.Integer);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$31 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$intobjs;
  sandbox.SimpleSpeedTest$31(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
class sandbox.SimpleSpeedTest$31$1 implements net.jcores.jre.interfaces.functions.F2ReduceObjects<java.lang.Integer> {
  final sandbox.SimpleSpeedTest$31 this$0;
  sandbox.SimpleSpeedTest$31$1(sandbox.SimpleSpeedTest$31);
  public java.lang.Integer f(java.lang.Integer, java.lang.Integer);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$32 implements net.jcores.jre.interfaces.functions.F0 {
  sandbox.SimpleSpeedTest$32();
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$33 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$intobjs;
  sandbox.SimpleSpeedTest$33(java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
class sandbox.SimpleSpeedTest$33$1 implements net.jcores.jre.interfaces.functions.F2DeltaObjects<java.lang.Integer, java.lang.Integer> {
  final sandbox.SimpleSpeedTest$33 this$0;
  sandbox.SimpleSpeedTest$33$1(sandbox.SimpleSpeedTest$33);
  public java.lang.Integer f(java.lang.Integer, java.lang.Integer);
  public java.lang.Object f(java.lang.Object, java.lang.Object);
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$4 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.Collection val$c2;
  sandbox.SimpleSpeedTest$4(java.util.Collection);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$5 implements net.jcores.jre.interfaces.functions.F0 {
  final java.lang.String[] val$strings;
  final java.util.List val$c1;
  sandbox.SimpleSpeedTest$5(java.lang.String[], java.util.List);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$6 implements net.jcores.jre.interfaces.functions.F0 {
  final java.lang.String[] val$strings;
  sandbox.SimpleSpeedTest$6(java.lang.String[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$7 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.List val$c1;
  final java.util.Collection val$r2;
  sandbox.SimpleSpeedTest$7(java.util.List, java.util.Collection);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$8 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.Collection val$c2;
  final java.lang.String[] val$strings;
  sandbox.SimpleSpeedTest$8(java.util.Collection, java.lang.String[]);
  public void f();
}
Compiled from "SimpleSpeedTest.java"
final class sandbox.SimpleSpeedTest$9 implements net.jcores.jre.interfaces.functions.F0 {
  final java.util.Collection val$c2;
  final java.util.Collection val$r;
  sandbox.SimpleSpeedTest$9(java.util.Collection, java.util.Collection);
  public void f();
}
Compiled from "SimpleURI.java"
public class sandbox.SimpleURI {
  static java.util.Random rnd;
  public sandbox.SimpleURI();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleUnzip.java"
public class sandbox.SimpleUnzip {
  static java.util.Random rnd;
  public sandbox.SimpleUnzip();
  public static void main(java.lang.String[]) throws java.io.IOException;
  public static void doUnzip(java.lang.String, java.lang.String) throws java.io.IOException;
  static {};
}
Compiled from "SimpleVersion.java"
public class sandbox.SimpleVersion {
  static java.util.Random rnd;
  public sandbox.SimpleVersion();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "SimpleZipTest.java"
public class sandbox.SimpleZipTest {
  static java.util.Random rnd;
  public sandbox.SimpleZipTest();
  public static void main(java.lang.String[]) throws java.io.IOException;
  static {};
}
Compiled from "DiagnosisChannelID.java"
public abstract class sandbox.dummys.DiagnosisChannelID<T> {
  public sandbox.dummys.DiagnosisChannelID();
}
Compiled from "F0Impl.java"
public class sandbox.dummys.F0Impl implements net.jcores.jre.interfaces.functions.F0 {
  public sandbox.dummys.F0Impl();
  public void f();
}
Compiled from "LoggingChannel1.java"
public class sandbox.dummys.LoggingChannel1 extends sandbox.dummys.DiagnosisChannelID<java.lang.String> {
  public sandbox.dummys.LoggingChannel1();
}
Compiled from "TestChannel.java"
public class sandbox.dummys.TestChannel extends sandbox.dummys.DiagnosisChannelID<java.lang.Integer> {
  public sandbox.dummys.TestChannel();
}
Compiled from "ExtensionCore.java"
public class sandbox.extensions.ExtensionCore extends net.jcores.jre.cores.CoreObject<java.lang.Object> {
  public sandbox.extensions.ExtensionCore(net.jcores.jre.CommonCore, java.lang.Object...);
  public void yoyo();
}
Compiled from "Core.java"
public class sandbox.oldversions.net.jcores.v1.Core {
  public static final sandbox.oldversions.net.jcores.v1.Core $;
  public sandbox.oldversions.net.jcores.v1.Core();
  public static <T> sandbox.oldversions.net.jcores.v1.cores.CoreClass<T> $(java.lang.Class<T>);
  public static <T extends java.lang.String> sandbox.oldversions.net.jcores.v1.cores.CoreString $(T);
  public static <T> sandbox.oldversions.net.jcores.v1.cores.CoreObject<T> $(T);
  public static <X, T extends java.util.Collection<X>> sandbox.oldversions.net.jcores.v1.cores.CoreCollection<X> $(T);
  public static <X, T extends java.util.List<X>> sandbox.oldversions.net.jcores.v1.cores.CoreList<X> $(T);
  public static sandbox.oldversions.net.jcores.v1.cores.CoreList<java.lang.Object> $(java.lang.Object...);
  public static void extend();
  static {};
}
Compiled from "CoreClass.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreClass<T> extends sandbox.oldversions.net.jcores.v1.cores.CoreObject<java.lang.Class> {
  public sandbox.oldversions.net.jcores.v1.cores.CoreClass();
  public T spawn();
  public void implementor(java.lang.Class<sandbox.dummys.F0Impl>);
  public sandbox.oldversions.net.jcores.v1.cores.CoreCollection<T> spawned();
}
Compiled from "CoreCollection.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreCollection<T> extends sandbox.oldversions.net.jcores.v1.cores.CoreObject<java.util.Collection<T>> {
  public sandbox.oldversions.net.jcores.v1.cores.CoreCollection();
  public void hasNull();
  public <T extends sandbox.oldversions.net.jcores.v1.Core> T each(java.lang.Class<T>);
  public java.util.Collection<T> each();
  public T get(int);
  public java.util.Collection<T> map(net.jcores.jre.interfaces.functions.F1<T, T>, net.jcores.jre.options.Option...);
  public void ifAll(net.jcores.jre.interfaces.functions.F0);
  public boolean hasAll();
  public void filter(net.jcores.jre.interfaces.functions.F1<T, java.lang.Boolean>, net.jcores.jre.options.Option...);
}
Compiled from "CoreFile.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreFile extends sandbox.oldversions.net.jcores.v1.cores.CoreObject<java.io.File> {
  public sandbox.oldversions.net.jcores.v1.cores.CoreFile();
  public java.util.List<java.lang.String> lines();
}
Compiled from "CoreList.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreList<T> extends sandbox.oldversions.net.jcores.v1.cores.CoreCollection<T> {
  public sandbox.oldversions.net.jcores.v1.cores.CoreList();
  public java.util.List<T> get();
  public T get(int);
  public java.util.List<T> map(net.jcores.jre.interfaces.functions.F1<T, T>, net.jcores.jre.options.Option...);
  public java.util.Collection map(net.jcores.jre.interfaces.functions.F1, net.jcores.jre.options.Option[]);
  public java.lang.Object get();
}
Compiled from "CoreObject.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreObject<T> extends sandbox.oldversions.net.jcores.v1.Core {
  public sandbox.oldversions.net.jcores.v1.cores.CoreObject();
  public T get();
  public T get(T);
  public java.lang.Object call(java.lang.String, java.lang.Object...);
}
Compiled from "CoreString.java"
public class sandbox.oldversions.net.jcores.v1.cores.CoreString extends sandbox.oldversions.net.jcores.v1.cores.CoreObject<java.lang.String> {
  public sandbox.oldversions.net.jcores.v1.cores.CoreString();
  public sandbox.oldversions.net.jcores.v1.cores.CoreFile open();
}
