Compiled from "JavaScheme.java"
public class com.undi.javascheme.JavaScheme {
  public com.undi.javascheme.JavaScheme();
  public static void main(java.lang.String[]);
}
Compiled from "SchemeEval.java"
public class com.undi.javascheme.SchemeEval {
  public com.undi.javascheme.SchemeObject getGlobalEnv();
  public boolean isSelfEvaluating(com.undi.javascheme.SchemeObject);
  public void addNativeProc(java.lang.String, com.undi.javascheme.SchemeObject);
  public void addGlobalVar(java.lang.String, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeEval();
  public com.undi.javascheme.SchemeEval(boolean);
  public boolean isTaggedList(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isQuoted(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject quoteContents(com.undi.javascheme.SchemeObject);
  public boolean isVariable(com.undi.javascheme.SchemeObject);
  public boolean isAssignment(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject assignmentVariable(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject assignmentValue(com.undi.javascheme.SchemeObject);
  public boolean isDefinition(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject definitionVariable(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject definitionValue(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject evalAssignment(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject evalDefinition(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeLambda(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isLambda(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject lambdaParams(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject lambdaBody(com.undi.javascheme.SchemeObject);
  public boolean isLambdaVarargs(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeBegin(com.undi.javascheme.SchemeObject);
  public boolean isBegin(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject beginActions(com.undi.javascheme.SchemeObject);
  public boolean isLastExp(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject firstExp(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject restExps(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeIf(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isIf(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject ifPredicate(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject ifThen(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject ifElse(com.undi.javascheme.SchemeObject);
  public boolean isAnd(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject andPredicates(com.undi.javascheme.SchemeObject);
  public boolean isOr(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject orPredicates(com.undi.javascheme.SchemeObject);
  public boolean isCond(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject condClauses(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject condPredicate(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject condActions(com.undi.javascheme.SchemeObject);
  public boolean isCondElseClause(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject sequenceToExp(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject expandClauses(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject condToIf(com.undi.javascheme.SchemeObject);
  public boolean isApply(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject applyOperation(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject applyOperands(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject prepApplyOperands(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeApply(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeApplication(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isApplication(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject operator(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject operands(com.undi.javascheme.SchemeObject);
  public boolean isNoOperands(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject firstOperand(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject restOperands(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject listOfValues(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isLet(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject letBindings(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject letBody(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject bindingParameter(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject bindingArgument(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject bindingsParameters(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject bindingsArguments(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject letParameters(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject letArguments(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject letToApplication(com.undi.javascheme.SchemeObject);
  public boolean isLoad(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject loadFile(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject loadStdLib(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject loadStream(java.io.InputStream, com.undi.javascheme.SchemeObject);
  public boolean isWhile(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject whilePredicate(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject whileBody(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject doWhile(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isEval(com.undi.javascheme.SchemeObject);
  public char[] evalString(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject doEval(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject enclosingEnvironment(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject firstFrame(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject makeFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject frameVars(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject frameVals(com.undi.javascheme.SchemeObject);
  public void addBindingToFrame(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject extendEnvironment(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject lookupVariableValue(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public void setVariableValue(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public void defineVariable(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject setupEnvironment();
  public com.undi.javascheme.SchemeObject eval(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  static {};
}
Compiled from "SchemeEval.java"
class com.undi.javascheme.SchemeEval$1 extends com.undi.javascheme.SchemeNatives$NativeProc {
  final com.undi.javascheme.SchemeEval this$0;
  com.undi.javascheme.SchemeEval$1(com.undi.javascheme.SchemeEval);
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeException.java"
public class com.undi.javascheme.SchemeException extends java.lang.RuntimeException {
  public com.undi.javascheme.SchemeException();
  public com.undi.javascheme.SchemeException(java.lang.String);
  public com.undi.javascheme.SchemeException(java.lang.String, java.lang.Throwable);
}
Compiled from "SchemeNatives.java"
public class com.undi.javascheme.SchemeNatives {
  public static final com.undi.javascheme.SchemeObject add;
  public static final com.undi.javascheme.SchemeObject sub;
  public static final com.undi.javascheme.SchemeObject mult;
  public static final com.undi.javascheme.SchemeObject quotient;
  public static final com.undi.javascheme.SchemeObject div;
  public static final com.undi.javascheme.SchemeObject mod;
  public static final com.undi.javascheme.SchemeObject sqrt;
  public static final com.undi.javascheme.SchemeObject numEql;
  public static final com.undi.javascheme.SchemeObject greaterThan;
  public static final com.undi.javascheme.SchemeObject greaterThanEqual;
  public static final com.undi.javascheme.SchemeObject lessThan;
  public static final com.undi.javascheme.SchemeObject lessThanEqual;
  public static final com.undi.javascheme.SchemeObject cons;
  public static final com.undi.javascheme.SchemeObject car;
  public static final com.undi.javascheme.SchemeObject cdr;
  public static final com.undi.javascheme.SchemeObject length;
  public static final com.undi.javascheme.SchemeObject setCar;
  public static final com.undi.javascheme.SchemeObject setCdr;
  public static final com.undi.javascheme.SchemeObject list;
  public static final com.undi.javascheme.SchemeObject nullp;
  public static final com.undi.javascheme.SchemeObject booleanp;
  public static final com.undi.javascheme.SchemeObject numberp;
  public static final com.undi.javascheme.SchemeObject symbolp;
  public static final com.undi.javascheme.SchemeObject stringp;
  public static final com.undi.javascheme.SchemeObject listp;
  public static final com.undi.javascheme.SchemeObject procedurep;
  public static final com.undi.javascheme.SchemeObject characterp;
  public static final com.undi.javascheme.SchemeObject numberToString;
  public static final com.undi.javascheme.SchemeObject stringToNumber;
  public static final com.undi.javascheme.SchemeObject stringToSymbol;
  public static final com.undi.javascheme.SchemeObject symbolToString;
  public static final com.undi.javascheme.SchemeObject numberToCharacter;
  public static final com.undi.javascheme.SchemeObject characterToNumber;
  public static final com.undi.javascheme.SchemeObject eqp;
  public static final com.undi.javascheme.SchemeObject print;
  public static final com.undi.javascheme.SchemeObject concat;
  public static final com.undi.javascheme.SchemeObject vector;
  public static final com.undi.javascheme.SchemeObject vectorp;
  public static final com.undi.javascheme.SchemeObject vectorRef;
  public static final com.undi.javascheme.SchemeObject vectorSet;
  public static final com.undi.javascheme.SchemeObject vectorAdd;
  public static final com.undi.javascheme.SchemeObject vectorFill;
  public static final com.undi.javascheme.SchemeObject vectorLength;
  public static final com.undi.javascheme.SchemeObject vectorToList;
  public static final com.undi.javascheme.SchemeObject listToVector;
  public static final com.undi.javascheme.SchemeObject makeVector;
  public static final com.undi.javascheme.SchemeObject vectorConcat;
  public static final com.undi.javascheme.SchemeObject makeHashMap;
  public static final com.undi.javascheme.SchemeObject hashMapp;
  public static final com.undi.javascheme.SchemeObject hashMapGet;
  public static final com.undi.javascheme.SchemeObject hashMapSet;
  public static final com.undi.javascheme.SchemeObject hashMapDel;
  public static final com.undi.javascheme.SchemeObject hashMapKeys;
  public static final com.undi.javascheme.SchemeObject hashMapVals;
  public static final com.undi.javascheme.SchemeObject hashMapContainsKey;
  public static final com.undi.javascheme.SchemeObject hashMapContainsVal;
  public static final com.undi.javascheme.SchemeObject hashMapMerge;
  public static final com.undi.javascheme.SchemeObject javaNew;
  public static final com.undi.javascheme.SchemeObject javaDot;
  public static final com.undi.javascheme.SchemeObject read;
  public com.undi.javascheme.SchemeNatives();
  static {};
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$1 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$1();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$10 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$10();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$11 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$11();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$12 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$12();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$13 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$13();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$14 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$14();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$15 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$15();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$16 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$16();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$17 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$17();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$18 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$18();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$19 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$19();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$2 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$2();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$20 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$20();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$21 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$21();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$22 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$22();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$23 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$23();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$24 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$24();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$25 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$25();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$26 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$26();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$27 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$27();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$28 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$28();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$29 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$29();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$3 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$3();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$30 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$30();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$31 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$31();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$32 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$32();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$33 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$33();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$34 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$34();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$35 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$35();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$36 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$36();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$37 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$37();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$38 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$38();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$39 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$39();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$4 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$4();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$40 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$40();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$41 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$41();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$42 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$42();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$43 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$43();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$44 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$44();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$45 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$45();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$46 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$46();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$47 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$47();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$48 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$48();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$49 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$49();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$5 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$5();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$50 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$50();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$51 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$51();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$52 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$52();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$53 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$53();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$54 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$54();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$55 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$55();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$56 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$56();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$57 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$57();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$58 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$58();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$59 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$59();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$6 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$6();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$60 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$60();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$7 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$7();
  public int getArity();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$8 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$8();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
final class com.undi.javascheme.SchemeNatives$9 extends com.undi.javascheme.SchemeNatives$NativeProc {
  com.undi.javascheme.SchemeNatives$9();
  public com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
}
Compiled from "SchemeNatives.java"
public abstract class com.undi.javascheme.SchemeNatives$NativeProc {
  public com.undi.javascheme.SchemeNatives$NativeProc();
  public abstract com.undi.javascheme.SchemeObject call(com.undi.javascheme.SchemeObject);
  public int getArity();
}
Compiled from "SchemeObject.java"
public class com.undi.javascheme.SchemeObject {
  public static final com.undi.javascheme.SchemeObject TRUE;
  public static final com.undi.javascheme.SchemeObject FALSE;
  public static final com.undi.javascheme.SchemeObject THE_EMPTY_LIST;
  public static com.undi.javascheme.SchemeObject symbolTable;
  public static final com.undi.javascheme.SchemeObject QUOTE_SYMBOL;
  public static final com.undi.javascheme.SchemeObject DEFINE_SYMBOL;
  public static final com.undi.javascheme.SchemeObject SET_SYMBOL;
  public static final com.undi.javascheme.SchemeObject OK_SYMBOL;
  public static final com.undi.javascheme.SchemeObject IF_SYMBOL;
  public static final com.undi.javascheme.SchemeObject LAMBDA_SYMBOL;
  public static final com.undi.javascheme.SchemeObject BEGIN_SYMBOL;
  public static final com.undi.javascheme.SchemeObject COND_SYMBOL;
  public static final com.undi.javascheme.SchemeObject ELSE_SYMBOL;
  public static final com.undi.javascheme.SchemeObject LET_SYMBOL;
  public static final com.undi.javascheme.SchemeObject LOAD_SYMBOL;
  public static final com.undi.javascheme.SchemeObject OR_SYMBOL;
  public static final com.undi.javascheme.SchemeObject AND_SYMBOL;
  public static final com.undi.javascheme.SchemeObject APPLY_SYMBOL;
  public static final com.undi.javascheme.SchemeObject WHILE_SYMBOL;
  public static final com.undi.javascheme.SchemeObject EVAL_SYMBOL;
  public com.undi.javascheme.SchemeObject();
  public com.undi.javascheme.SchemeObject$type getType();
  public boolean valueEqual(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject makeJavaConstructor(java.lang.String);
  public java.lang.Object callJavaConstructor(com.undi.javascheme.SchemeObject);
  public boolean isJavaMethod();
  public boolean isJavaConstructor();
  public static com.undi.javascheme.SchemeObject makeJavaMethod(java.lang.String);
  public java.lang.Object[] prepJavaArgs(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject callJavaMethod(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject makeJavaStaticMethod(java.lang.String, java.lang.String);
  public boolean isJavaStaticMethod();
  public com.undi.javascheme.SchemeObject callJavaStaticMethod(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject makeJavaObj(java.lang.Object);
  public boolean isJavaObj();
  public java.lang.Object getJavaObj();
  public boolean isKeyword();
  public static com.undi.javascheme.SchemeObject makeKeyword(java.lang.String);
  public static com.undi.javascheme.SchemeObject makeCompoundProc(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject getCompoundProcParams();
  public com.undi.javascheme.SchemeObject getCompoundProcBody();
  public com.undi.javascheme.SchemeObject getCompoundProcEnv();
  public boolean isCompoundProc();
  public static com.undi.javascheme.SchemeObject makeNativeProc(com.undi.javascheme.SchemeNatives$NativeProc);
  public boolean isNativeProc();
  public com.undi.javascheme.SchemeNatives$NativeProc getNativeProc();
  public static com.undi.javascheme.SchemeObject makePair(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public boolean isPair();
  public void setCar(com.undi.javascheme.SchemeObject);
  public void setCdr(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject getCar();
  public com.undi.javascheme.SchemeObject getCdr();
  public int getListLength();
  public static com.undi.javascheme.SchemeObject car(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cdr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject caar(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cadr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cdar(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cddr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject caddr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cdadr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject caadr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject cadddr(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject caaddr(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject[] getPair();
  public static com.undi.javascheme.SchemeObject cons(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject concatList(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public static boolean isFalse(com.undi.javascheme.SchemeObject);
  public static boolean isTrue(com.undi.javascheme.SchemeObject);
  public static com.undi.javascheme.SchemeObject makeNumber(double);
  public boolean isNumber();
  public double getNumber();
  public void setNumber(double);
  public boolean isBoolean();
  public static com.undi.javascheme.SchemeObject makeBoolean(boolean);
  public boolean getBoolean();
  public static com.undi.javascheme.SchemeObject makeCharacter(short);
  public boolean isCharacter();
  public short getCharacter();
  public void setCharacter(short);
  public static com.undi.javascheme.SchemeObject makeString(java.lang.String);
  public boolean isString();
  public char[] getString();
  public void setString(java.lang.String);
  public static com.undi.javascheme.SchemeObject makeEmptyList();
  public boolean isEmptyList();
  public static com.undi.javascheme.SchemeObject makeSymbol(java.lang.String);
  public boolean isSymbol();
  public java.lang.String getSymbol();
  public void setSymbol(java.lang.String);
  public static com.undi.javascheme.SchemeObject makeVector(com.undi.javascheme.SchemeObject);
  public java.util.Vector<com.undi.javascheme.SchemeObject> getVector();
  public com.undi.javascheme.SchemeObject addToVector(com.undi.javascheme.SchemeObject);
  public boolean isVector();
  public boolean isHashMap();
  public static com.undi.javascheme.SchemeObject makeHashMap(com.undi.javascheme.SchemeObject);
  public com.undi.javascheme.SchemeObject setHashMap(com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject);
  public java.util.HashMap<com.undi.javascheme.SchemeObject, com.undi.javascheme.SchemeObject> getHashMap();
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  static {};
}
Compiled from "SchemeObject.java"
class com.undi.javascheme.SchemeObject$1 {
  static final int[] $SwitchMap$com$undi$javascheme$SchemeObject$type;
  static {};
}
Compiled from "SchemeObject.java"
public final class com.undi.javascheme.SchemeObject$type extends java.lang.Enum<com.undi.javascheme.SchemeObject$type> {
  public static final com.undi.javascheme.SchemeObject$type NUMBER;
  public static final com.undi.javascheme.SchemeObject$type BOOLEAN;
  public static final com.undi.javascheme.SchemeObject$type CHARACTER;
  public static final com.undi.javascheme.SchemeObject$type STRING;
  public static final com.undi.javascheme.SchemeObject$type SYMBOL;
  public static final com.undi.javascheme.SchemeObject$type PAIR;
  public static final com.undi.javascheme.SchemeObject$type EMPTY_LIST;
  public static final com.undi.javascheme.SchemeObject$type NATIVE_PROC;
  public static final com.undi.javascheme.SchemeObject$type COMPOUND_PROC;
  public static final com.undi.javascheme.SchemeObject$type VECTOR;
  public static final com.undi.javascheme.SchemeObject$type HASH_MAP;
  public static final com.undi.javascheme.SchemeObject$type JAVA_OBJ;
  public static final com.undi.javascheme.SchemeObject$type JAVA_METHOD;
  public static final com.undi.javascheme.SchemeObject$type JAVA_CONSTRUCTOR;
  public static final com.undi.javascheme.SchemeObject$type JAVA_STATIC_METHOD;
  public static final com.undi.javascheme.SchemeObject$type KEYWORD;
  public static final com.undi.javascheme.SchemeObject$type NUM_TYPES;
  public static com.undi.javascheme.SchemeObject$type[] values();
  public static com.undi.javascheme.SchemeObject$type valueOf(java.lang.String);
  static {};
}
Compiled from "SchemeReader.java"
public class com.undi.javascheme.SchemeReader {
  public static com.undi.javascheme.SchemeReader fromString(java.lang.String);
  public com.undi.javascheme.SchemeReader(java.io.InputStream);
  public void clearInput();
  public void closeStream();
  public boolean isEOF(char);
  public boolean isDelimiter(int);
  public boolean isInitial(int);
  public java.lang.String readToken();
  public int peek();
  public int getc();
  public void ungetc(int);
  public void eatWhitespace();
  public com.undi.javascheme.SchemeObject readString();
  public com.undi.javascheme.SchemeObject readNumber();
  public void eatExpectedString(java.lang.String);
  public void peekExpectedDelimiter();
  public com.undi.javascheme.SchemeObject readCharacter();
  public com.undi.javascheme.SchemeObject readBoolean();
  public com.undi.javascheme.SchemeObject readPair();
  public com.undi.javascheme.SchemeObject readSymbol();
  public com.undi.javascheme.SchemeObject readKeyword();
  public com.undi.javascheme.SchemeObject read();
  public static com.undi.javascheme.SchemeReader getStringReader(java.lang.String);
  public static com.undi.javascheme.SchemeObject readFromString(java.lang.String);
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$1 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$1(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$2 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$2(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$3 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$3(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$4 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$4(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$5 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$5(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$6 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$6(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$7 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$7(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
class com.undi.javascheme.SchemeReader$8 implements com.undi.javascheme.SchemeReader$ReadFunc {
  final com.undi.javascheme.SchemeReader this$0;
  com.undi.javascheme.SchemeReader$8(com.undi.javascheme.SchemeReader);
  public com.undi.javascheme.SchemeObject read();
}
Compiled from "SchemeReader.java"
interface com.undi.javascheme.SchemeReader$ReadFunc {
  public abstract com.undi.javascheme.SchemeObject read();
}
Compiled from "HashCodeUtil.java"
public final class com.undi.util.HashCodeUtil {
  public static final int SEED;
  public com.undi.util.HashCodeUtil();
  public static int hash(int, boolean);
  public static int hash(int, char);
  public static int hash(int, int);
  public static int hash(int, long);
  public static int hash(int, float);
  public static int hash(int, double);
  public static int hash(int, java.lang.Object);
}
Compiled from "Reflector.java"
public class com.undi.util.Reflector {
  public static final java.lang.Object[] emptyArgs;
  public com.undi.util.Reflector();
  public static java.lang.RuntimeException throwCauseOrElseException(java.lang.Exception);
  public static java.lang.Class<?> classFromName(java.lang.String);
  public static java.lang.reflect.Field getField(java.lang.Class<?>, java.lang.String, boolean);
  public static java.lang.Object getStaticField(java.lang.String, java.lang.String);
  public static java.lang.Object getStaticField(java.lang.Class<?>, java.lang.String);
  public static java.lang.Object setStaticField(java.lang.String, java.lang.String, java.lang.Object);
  public static java.lang.Object setStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object);
  public static java.lang.Object getInstanceField(java.lang.Object, java.lang.String);
  public static java.lang.Object setInstanceField(java.lang.Object, java.lang.String, java.lang.Object);
  public static java.lang.Object invokeStaticMethodVariadic(java.lang.String, java.lang.String, java.lang.Object...);
  public static java.lang.Object invokeStaticMethod(java.lang.String, java.lang.String, java.lang.Object[]);
  public static java.lang.Object invokeStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[]);
  public static java.lang.Object invokeConstructor(java.lang.Class<?>, java.lang.Object[]);
  public static java.lang.Object invokeInstanceMethod(java.lang.Object, java.lang.String, java.lang.Object[]);
  public static boolean paramArgTypeMatch(java.lang.Class<?>, java.lang.Class<?>);
  static boolean isCongruent(java.lang.Class<?>[], java.lang.Object[]);
  public static java.lang.Object invokeMatchingMethod(java.lang.String, java.util.List<java.lang.reflect.Method>, java.lang.Object, java.lang.Object[]);
  public static java.lang.Object prepRet(java.lang.Class<?>, java.lang.Object);
  static java.lang.Object boxArg(java.lang.Class<?>, java.lang.Object);
  static java.lang.Object[] boxArgs(java.lang.Class<?>[], java.lang.Object[]);
  public static java.util.List<java.lang.reflect.Method> getMethods(java.lang.Class<?>, int, java.lang.String, boolean);
  public static boolean isMatch(java.lang.reflect.Method, java.lang.reflect.Method);
  public static java.lang.reflect.Method getAsMethodOfPublicBase(java.lang.Class<?>, java.lang.reflect.Method);
  static {};
}
Compiled from "SneakyThrow.java"
public class com.undi.util.SneakyThrow {
  public com.undi.util.SneakyThrow();
  public static java.lang.RuntimeException runtimeException(java.lang.String);
  public static java.lang.RuntimeException runtimeException(java.lang.String, java.lang.Throwable);
  public static java.lang.RuntimeException sneakyThrow(java.lang.Throwable);
}
