Compiled from "Carousel.java"
public class Carousel implements java.lang.Runnable {
  public Carousel(com.github.nkzawa.socketio.client.Socket, java.lang.String, java.lang.String);
  public void run();
}
Compiled from "Main.java"
public class Main {
  public Main();
  public static void main(java.lang.String[]) throws org.json.JSONException;
}
Compiled from "QueryItems.java"
public class QueryItems {
  public static java.util.HashMap<java.lang.String, java.lang.String> queryItems;
  public static java.lang.String envelope;
  public QueryItems();
  public void makeQueries();
  static {};
}
Compiled from "Socketio.java"
public class Socketio {
  public Socketio(java.lang.String);
  public void connect();
}
Compiled from "Emitter.java"
public class com.github.nkzawa.emitter.Emitter {
  public com.github.nkzawa.emitter.Emitter();
  public com.github.nkzawa.emitter.Emitter on(java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
  public com.github.nkzawa.emitter.Emitter once(java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
  public com.github.nkzawa.emitter.Emitter off();
  public com.github.nkzawa.emitter.Emitter off(java.lang.String);
  public com.github.nkzawa.emitter.Emitter off(java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
  public com.github.nkzawa.emitter.Emitter emit(java.lang.String, java.lang.Object...);
  public java.util.List<com.github.nkzawa.emitter.Emitter$Listener> listeners(java.lang.String);
  public boolean hasListeners(java.lang.String);
}
Compiled from "Emitter.java"
class com.github.nkzawa.emitter.Emitter$1 implements com.github.nkzawa.emitter.Emitter$Listener {
  final java.lang.String val$event;
  final com.github.nkzawa.emitter.Emitter$Listener val$fn;
  final com.github.nkzawa.emitter.Emitter this$0;
  com.github.nkzawa.emitter.Emitter$1(com.github.nkzawa.emitter.Emitter, java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
  public void call(java.lang.Object...);
}
Compiled from "Emitter.java"
public interface com.github.nkzawa.emitter.Emitter$Listener {
  public abstract void call(java.lang.Object...);
}
Compiled from "EngineIOException.java"
public class com.github.nkzawa.engineio.client.EngineIOException extends java.lang.Exception {
  public java.lang.String transport;
  public java.lang.Object code;
  public com.github.nkzawa.engineio.client.EngineIOException();
  public com.github.nkzawa.engineio.client.EngineIOException(java.lang.String);
  public com.github.nkzawa.engineio.client.EngineIOException(java.lang.String, java.lang.Throwable);
  public com.github.nkzawa.engineio.client.EngineIOException(java.lang.Throwable);
}
Compiled from "HandshakeData.java"
public class com.github.nkzawa.engineio.client.HandshakeData {
  public java.lang.String sid;
  public java.lang.String[] upgrades;
  public long pingInterval;
  public long pingTimeout;
  com.github.nkzawa.engineio.client.HandshakeData(java.lang.String) throws org.json.JSONException;
  com.github.nkzawa.engineio.client.HandshakeData(org.json.JSONObject) throws org.json.JSONException;
}
Compiled from "Socket.java"
public class com.github.nkzawa.engineio.client.Socket extends com.github.nkzawa.emitter.Emitter {
  public static final java.lang.String EVENT_OPEN;
  public static final java.lang.String EVENT_CLOSE;
  public static final java.lang.String EVENT_MESSAGE;
  public static final java.lang.String EVENT_ERROR;
  public static final java.lang.String EVENT_UPGRADE_ERROR;
  public static final java.lang.String EVENT_FLUSH;
  public static final java.lang.String EVENT_DRAIN;
  public static final java.lang.String EVENT_HANDSHAKE;
  public static final java.lang.String EVENT_UPGRADING;
  public static final java.lang.String EVENT_UPGRADE;
  public static final java.lang.String EVENT_PACKET;
  public static final java.lang.String EVENT_PACKET_CREATE;
  public static final java.lang.String EVENT_HEARTBEAT;
  public static final java.lang.String EVENT_DATA;
  public static final java.lang.String EVENT_TRANSPORT;
  public static final int protocol;
  public static boolean priorWebsocketSuccess;
  com.github.nkzawa.engineio.client.Transport transport;
  public static void setDefaultSSLContext(javax.net.ssl.SSLContext);
  public com.github.nkzawa.engineio.client.Socket();
  public com.github.nkzawa.engineio.client.Socket(java.lang.String) throws java.net.URISyntaxException;
  public com.github.nkzawa.engineio.client.Socket(java.net.URI);
  public com.github.nkzawa.engineio.client.Socket(java.lang.String, com.github.nkzawa.engineio.client.Socket$Options) throws java.net.URISyntaxException;
  public com.github.nkzawa.engineio.client.Socket(java.net.URI, com.github.nkzawa.engineio.client.Socket$Options);
  public com.github.nkzawa.engineio.client.Socket(com.github.nkzawa.engineio.client.Socket$Options);
  public com.github.nkzawa.engineio.client.Socket open();
  public void ping();
  public void write(java.lang.String);
  public void write(java.lang.String, java.lang.Runnable);
  public void write(byte[]);
  public void write(byte[], java.lang.Runnable);
  public void send(java.lang.String);
  public void send(byte[]);
  public void send(java.lang.String, java.lang.Runnable);
  public void send(byte[], java.lang.Runnable);
  public com.github.nkzawa.engineio.client.Socket close();
  java.util.List<java.lang.String> filterUpgrades(java.util.List<java.lang.String>);
  static boolean access$100(com.github.nkzawa.engineio.client.Socket);
  static java.util.List access$200(com.github.nkzawa.engineio.client.Socket);
  static com.github.nkzawa.engineio.client.Socket$ReadyState access$302(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket$ReadyState);
  static com.github.nkzawa.engineio.client.Transport access$400(com.github.nkzawa.engineio.client.Socket, java.lang.String);
  static void access$500(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Transport);
  static void access$600(com.github.nkzawa.engineio.client.Socket, java.lang.String);
  static void access$700(com.github.nkzawa.engineio.client.Socket, java.lang.Exception);
  static void access$800(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.parser.Packet);
  static void access$900(com.github.nkzawa.engineio.client.Socket);
  static java.util.logging.Logger access$1000();
  static boolean access$1102(com.github.nkzawa.engineio.client.Socket, boolean);
  static com.github.nkzawa.engineio.client.Socket$ReadyState access$300(com.github.nkzawa.engineio.client.Socket);
  static void access$1200(com.github.nkzawa.engineio.client.Socket);
  static void access$1300(com.github.nkzawa.engineio.client.Socket, long);
  static long access$1400(com.github.nkzawa.engineio.client.Socket);
  static void access$1500(com.github.nkzawa.engineio.client.Socket, java.lang.String);
  static void access$1600(com.github.nkzawa.engineio.client.Socket, java.lang.String, java.lang.String, java.lang.Runnable);
  static void access$1700(com.github.nkzawa.engineio.client.Socket, java.lang.String, byte[], java.lang.Runnable);
  static java.util.LinkedList access$1800(com.github.nkzawa.engineio.client.Socket);
  static java.util.LinkedList access$1900(com.github.nkzawa.engineio.client.Socket);
  static int access$2002(com.github.nkzawa.engineio.client.Socket, int);
  static {};
}
Compiled from "Socket.java"
final class com.github.nkzawa.engineio.client.Socket$1 implements java.lang.Runnable {
  com.github.nkzawa.engineio.client.Socket$1();
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$10 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.emitter.Emitter$Listener val$onerror;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$10(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.emitter.Emitter$Listener);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$11 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.emitter.Emitter$Listener val$onerror;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$11(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.emitter.Emitter$Listener);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$12 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Transport[] val$transport;
  final com.github.nkzawa.emitter.Emitter$Listener val$freezeTransport;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$12(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Transport[], com.github.nkzawa.emitter.Emitter$Listener);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$13 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Transport[] val$transport;
  final com.github.nkzawa.emitter.Emitter$Listener val$onTransportOpen;
  final com.github.nkzawa.emitter.Emitter$Listener val$onerror;
  final com.github.nkzawa.emitter.Emitter$Listener val$onTransportClose;
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.emitter.Emitter$Listener val$onclose;
  final com.github.nkzawa.emitter.Emitter$Listener val$onupgrade;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$13(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Transport[], com.github.nkzawa.emitter.Emitter$Listener, com.github.nkzawa.emitter.Emitter$Listener, com.github.nkzawa.emitter.Emitter$Listener, com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.emitter.Emitter$Listener, com.github.nkzawa.emitter.Emitter$Listener);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$14 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$14(com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$15 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$15(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$15$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket$15 this$1;
  com.github.nkzawa.engineio.client.Socket$15$1(com.github.nkzawa.engineio.client.Socket$15);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$16 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$16(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$16$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket$16 this$1;
  com.github.nkzawa.engineio.client.Socket$16$1(com.github.nkzawa.engineio.client.Socket$16);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$17 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$17(com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$18 implements java.lang.Runnable {
  final java.lang.String val$msg;
  final java.lang.Runnable val$fn;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$18(com.github.nkzawa.engineio.client.Socket, java.lang.String, java.lang.Runnable);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$19 implements java.lang.Runnable {
  final byte[] val$msg;
  final java.lang.Runnable val$fn;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$19(com.github.nkzawa.engineio.client.Socket, byte[], java.lang.Runnable);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$2 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$2(com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$20 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$20(com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$21 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$21(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$3(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$4 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$4(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$5 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$5(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$6 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$6(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$7 implements com.github.nkzawa.emitter.Emitter$Listener {
  final boolean[] val$failed;
  final java.lang.String val$name;
  final com.github.nkzawa.engineio.client.Transport[] val$transport;
  final com.github.nkzawa.engineio.client.Socket val$self;
  final java.lang.Runnable[] val$cleanup;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$7(com.github.nkzawa.engineio.client.Socket, boolean[], java.lang.String, com.github.nkzawa.engineio.client.Transport[], com.github.nkzawa.engineio.client.Socket, java.lang.Runnable[]);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$7$1 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Socket$7 this$1;
  com.github.nkzawa.engineio.client.Socket$7$1(com.github.nkzawa.engineio.client.Socket$7);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$7$1$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Socket$7$1 this$2;
  com.github.nkzawa.engineio.client.Socket$7$1$1(com.github.nkzawa.engineio.client.Socket$7$1);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$8 implements com.github.nkzawa.emitter.Emitter$Listener {
  final boolean[] val$failed;
  final java.lang.Runnable[] val$cleanup;
  final com.github.nkzawa.engineio.client.Transport[] val$transport;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$8(com.github.nkzawa.engineio.client.Socket, boolean[], java.lang.Runnable[], com.github.nkzawa.engineio.client.Transport[]);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.engineio.client.Socket$9 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.Transport[] val$transport;
  final com.github.nkzawa.emitter.Emitter$Listener val$freezeTransport;
  final java.lang.String val$name;
  final com.github.nkzawa.engineio.client.Socket val$self;
  final com.github.nkzawa.engineio.client.Socket this$0;
  com.github.nkzawa.engineio.client.Socket$9(com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.engineio.client.Transport[], com.github.nkzawa.emitter.Emitter$Listener, java.lang.String, com.github.nkzawa.engineio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
public class com.github.nkzawa.engineio.client.Socket$Options extends com.github.nkzawa.engineio.client.Transport$Options {
  public java.lang.String[] transports;
  public boolean upgrade;
  public boolean rememberUpgrade;
  public java.lang.String host;
  public java.lang.String query;
  public com.github.nkzawa.engineio.client.Socket$Options();
  static com.github.nkzawa.engineio.client.Socket$Options access$000(java.net.URI, com.github.nkzawa.engineio.client.Socket$Options);
}
Compiled from "Socket.java"
final class com.github.nkzawa.engineio.client.Socket$ReadyState extends java.lang.Enum<com.github.nkzawa.engineio.client.Socket$ReadyState> {
  public static final com.github.nkzawa.engineio.client.Socket$ReadyState OPENING;
  public static final com.github.nkzawa.engineio.client.Socket$ReadyState OPEN;
  public static final com.github.nkzawa.engineio.client.Socket$ReadyState CLOSING;
  public static final com.github.nkzawa.engineio.client.Socket$ReadyState CLOSED;
  public static com.github.nkzawa.engineio.client.Socket$ReadyState[] values();
  public static com.github.nkzawa.engineio.client.Socket$ReadyState valueOf(java.lang.String);
  public java.lang.String toString();
  static {};
}
Compiled from "Transport.java"
public abstract class com.github.nkzawa.engineio.client.Transport extends com.github.nkzawa.emitter.Emitter {
  public static final java.lang.String EVENT_OPEN;
  public static final java.lang.String EVENT_CLOSE;
  public static final java.lang.String EVENT_PACKET;
  public static final java.lang.String EVENT_DRAIN;
  public static final java.lang.String EVENT_ERROR;
  public static final java.lang.String EVENT_REQUEST_HEADERS;
  public static final java.lang.String EVENT_RESPONSE_HEADERS;
  protected static int timestamps;
  public boolean writable;
  public java.lang.String name;
  public java.util.Map<java.lang.String, java.lang.String> query;
  protected boolean secure;
  protected boolean timestampRequests;
  protected int port;
  protected java.lang.String path;
  protected java.lang.String hostname;
  protected java.lang.String timestampParam;
  protected javax.net.ssl.SSLContext sslContext;
  protected com.github.nkzawa.engineio.client.Socket socket;
  protected com.github.nkzawa.engineio.client.Transport$ReadyState readyState;
  public com.github.nkzawa.engineio.client.Transport(com.github.nkzawa.engineio.client.Transport$Options);
  protected com.github.nkzawa.engineio.client.Transport onError(java.lang.String, java.lang.Exception);
  public com.github.nkzawa.engineio.client.Transport open();
  public com.github.nkzawa.engineio.client.Transport close();
  public void send(com.github.nkzawa.engineio.parser.Packet[]);
  protected void onOpen();
  protected void onData(java.lang.String);
  protected void onData(byte[]);
  protected void onPacket(com.github.nkzawa.engineio.parser.Packet);
  protected void onClose();
  protected abstract void write(com.github.nkzawa.engineio.parser.Packet[]);
  protected abstract void doOpen();
  protected abstract void doClose();
  static {};
}
Compiled from "Transport.java"
class com.github.nkzawa.engineio.client.Transport$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Transport this$0;
  com.github.nkzawa.engineio.client.Transport$1(com.github.nkzawa.engineio.client.Transport);
  public void run();
}
Compiled from "Transport.java"
class com.github.nkzawa.engineio.client.Transport$2 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.Transport this$0;
  com.github.nkzawa.engineio.client.Transport$2(com.github.nkzawa.engineio.client.Transport);
  public void run();
}
Compiled from "Transport.java"
class com.github.nkzawa.engineio.client.Transport$3 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.parser.Packet[] val$packets;
  final com.github.nkzawa.engineio.client.Transport this$0;
  com.github.nkzawa.engineio.client.Transport$3(com.github.nkzawa.engineio.client.Transport, com.github.nkzawa.engineio.parser.Packet[]);
  public void run();
}
Compiled from "Transport.java"
public class com.github.nkzawa.engineio.client.Transport$Options {
  public java.lang.String hostname;
  public java.lang.String path;
  public java.lang.String timestampParam;
  public boolean secure;
  public boolean timestampRequests;
  public int port;
  public int policyPort;
  public java.util.Map<java.lang.String, java.lang.String> query;
  public javax.net.ssl.SSLContext sslContext;
  protected com.github.nkzawa.engineio.client.Socket socket;
  public com.github.nkzawa.engineio.client.Transport$Options();
}
Compiled from "Transport.java"
public final class com.github.nkzawa.engineio.client.Transport$ReadyState extends java.lang.Enum<com.github.nkzawa.engineio.client.Transport$ReadyState> {
  public static final com.github.nkzawa.engineio.client.Transport$ReadyState OPENING;
  public static final com.github.nkzawa.engineio.client.Transport$ReadyState OPEN;
  public static final com.github.nkzawa.engineio.client.Transport$ReadyState CLOSED;
  public static final com.github.nkzawa.engineio.client.Transport$ReadyState PAUSED;
  public static com.github.nkzawa.engineio.client.Transport$ReadyState[] values();
  public static com.github.nkzawa.engineio.client.Transport$ReadyState valueOf(java.lang.String);
  public java.lang.String toString();
  static {};
}
Compiled from "Polling.java"
public abstract class com.github.nkzawa.engineio.client.transports.Polling extends com.github.nkzawa.engineio.client.Transport {
  public static final java.lang.String NAME;
  public static final java.lang.String EVENT_POLL;
  public static final java.lang.String EVENT_POLL_COMPLETE;
  public com.github.nkzawa.engineio.client.transports.Polling(com.github.nkzawa.engineio.client.Transport$Options);
  protected void doOpen();
  public void pause(java.lang.Runnable);
  protected void onData(java.lang.String);
  protected void onData(byte[]);
  protected void doClose();
  protected void write(com.github.nkzawa.engineio.parser.Packet[]);
  protected java.lang.String uri();
  protected abstract void doWrite(byte[], java.lang.Runnable);
  protected abstract void doPoll();
  static com.github.nkzawa.engineio.client.Transport$ReadyState access$002(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.Transport$ReadyState);
  static java.util.logging.Logger access$100();
  static com.github.nkzawa.engineio.client.Transport$ReadyState access$202(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.Transport$ReadyState);
  static boolean access$300(com.github.nkzawa.engineio.client.transports.Polling);
  static com.github.nkzawa.engineio.client.Transport$ReadyState access$400(com.github.nkzawa.engineio.client.transports.Polling);
  static void access$500(com.github.nkzawa.engineio.client.transports.Polling);
  static void access$600(com.github.nkzawa.engineio.client.transports.Polling);
  static void access$700(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.parser.Packet);
  static {};
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$1 implements java.lang.Runnable {
  final java.lang.Runnable val$onPause;
  final com.github.nkzawa.engineio.client.transports.Polling this$0;
  com.github.nkzawa.engineio.client.transports.Polling$1(com.github.nkzawa.engineio.client.transports.Polling, java.lang.Runnable);
  public void run();
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$1$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.Polling val$self;
  final com.github.nkzawa.engineio.client.transports.Polling$1 this$1;
  com.github.nkzawa.engineio.client.transports.Polling$1$1(com.github.nkzawa.engineio.client.transports.Polling$1, com.github.nkzawa.engineio.client.transports.Polling);
  public void run();
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$1$2 implements com.github.nkzawa.emitter.Emitter$Listener {
  final int[] val$total;
  final java.lang.Runnable val$pause;
  final com.github.nkzawa.engineio.client.transports.Polling$1 this$1;
  com.github.nkzawa.engineio.client.transports.Polling$1$2(com.github.nkzawa.engineio.client.transports.Polling$1, int[], java.lang.Runnable);
  public void call(java.lang.Object...);
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$1$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final int[] val$total;
  final java.lang.Runnable val$pause;
  final com.github.nkzawa.engineio.client.transports.Polling$1 this$1;
  com.github.nkzawa.engineio.client.transports.Polling$1$3(com.github.nkzawa.engineio.client.transports.Polling$1, int[], java.lang.Runnable);
  public void call(java.lang.Object...);
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$2 implements com.github.nkzawa.engineio.parser.Parser$DecodePayloadCallback {
  final com.github.nkzawa.engineio.client.transports.Polling val$self;
  final com.github.nkzawa.engineio.client.transports.Polling this$0;
  com.github.nkzawa.engineio.client.transports.Polling$2(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.transports.Polling);
  public boolean call(com.github.nkzawa.engineio.parser.Packet, int, int);
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.Polling val$self;
  final com.github.nkzawa.engineio.client.transports.Polling this$0;
  com.github.nkzawa.engineio.client.transports.Polling$3(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.transports.Polling);
  public void call(java.lang.Object...);
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$4 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.Polling val$self;
  final com.github.nkzawa.engineio.client.transports.Polling this$0;
  com.github.nkzawa.engineio.client.transports.Polling$4(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.transports.Polling);
  public void run();
}
Compiled from "Polling.java"
class com.github.nkzawa.engineio.client.transports.Polling$5 implements com.github.nkzawa.engineio.parser.Parser$EncodeCallback<byte[]> {
  final com.github.nkzawa.engineio.client.transports.Polling val$self;
  final java.lang.Runnable val$callbackfn;
  final com.github.nkzawa.engineio.client.transports.Polling this$0;
  com.github.nkzawa.engineio.client.transports.Polling$5(com.github.nkzawa.engineio.client.transports.Polling, com.github.nkzawa.engineio.client.transports.Polling, java.lang.Runnable);
  public void call(byte[]);
  public void call(java.lang.Object);
}
Compiled from "PollingXHR.java"
public class com.github.nkzawa.engineio.client.transports.PollingXHR extends com.github.nkzawa.engineio.client.transports.Polling {
  public com.github.nkzawa.engineio.client.transports.PollingXHR(com.github.nkzawa.engineio.client.Transport$Options);
  protected com.github.nkzawa.engineio.client.transports.PollingXHR$Request request();
  protected com.github.nkzawa.engineio.client.transports.PollingXHR$Request request(com.github.nkzawa.engineio.client.transports.PollingXHR$Request$Options);
  protected void doWrite(byte[], java.lang.Runnable);
  protected void doPoll();
  static com.github.nkzawa.engineio.client.Transport access$000(com.github.nkzawa.engineio.client.transports.PollingXHR, java.lang.String, java.lang.Exception);
  static com.github.nkzawa.engineio.client.Transport access$100(com.github.nkzawa.engineio.client.transports.PollingXHR, java.lang.String, java.lang.Exception);
  static java.util.logging.Logger access$200();
  static {};
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$1 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.PollingXHR val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$1(com.github.nkzawa.engineio.client.transports.PollingXHR, com.github.nkzawa.engineio.client.transports.PollingXHR);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$1$1 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.engineio.client.transports.PollingXHR$1 this$1;
  com.github.nkzawa.engineio.client.transports.PollingXHR$1$1(com.github.nkzawa.engineio.client.transports.PollingXHR$1, java.lang.Object[]);
  public void run();
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$2 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.PollingXHR val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$2(com.github.nkzawa.engineio.client.transports.PollingXHR, com.github.nkzawa.engineio.client.transports.PollingXHR);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final java.lang.Runnable val$fn;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$3(com.github.nkzawa.engineio.client.transports.PollingXHR, java.lang.Runnable);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$3$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.PollingXHR$3 this$1;
  com.github.nkzawa.engineio.client.transports.PollingXHR$3$1(com.github.nkzawa.engineio.client.transports.PollingXHR$3);
  public void run();
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$4 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.PollingXHR val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$4(com.github.nkzawa.engineio.client.transports.PollingXHR, com.github.nkzawa.engineio.client.transports.PollingXHR);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$4$1 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.engineio.client.transports.PollingXHR$4 this$1;
  com.github.nkzawa.engineio.client.transports.PollingXHR$4$1(com.github.nkzawa.engineio.client.transports.PollingXHR$4, java.lang.Object[]);
  public void run();
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$5 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.PollingXHR val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$5(com.github.nkzawa.engineio.client.transports.PollingXHR, com.github.nkzawa.engineio.client.transports.PollingXHR);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$5$1 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.engineio.client.transports.PollingXHR$5 this$1;
  com.github.nkzawa.engineio.client.transports.PollingXHR$5$1(com.github.nkzawa.engineio.client.transports.PollingXHR$5, java.lang.Object[]);
  public void run();
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$6 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.engineio.client.transports.PollingXHR val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$6(com.github.nkzawa.engineio.client.transports.PollingXHR, com.github.nkzawa.engineio.client.transports.PollingXHR);
  public void call(java.lang.Object...);
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$6$1 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.engineio.client.transports.PollingXHR$6 this$1;
  com.github.nkzawa.engineio.client.transports.PollingXHR$6$1(com.github.nkzawa.engineio.client.transports.PollingXHR$6, java.lang.Object[]);
  public void run();
}
Compiled from "PollingXHR.java"
public class com.github.nkzawa.engineio.client.transports.PollingXHR$Request extends com.github.nkzawa.emitter.Emitter {
  public static final java.lang.String EVENT_SUCCESS;
  public static final java.lang.String EVENT_DATA;
  public static final java.lang.String EVENT_ERROR;
  public static final java.lang.String EVENT_REQUEST_HEADERS;
  public static final java.lang.String EVENT_RESPONSE_HEADERS;
  public com.github.nkzawa.engineio.client.transports.PollingXHR$Request(com.github.nkzawa.engineio.client.transports.PollingXHR$Request$Options);
  public void create();
  public void abort();
  static byte[] access$300(com.github.nkzawa.engineio.client.transports.PollingXHR$Request);
  static java.net.HttpURLConnection access$400(com.github.nkzawa.engineio.client.transports.PollingXHR$Request);
  static void access$500(com.github.nkzawa.engineio.client.transports.PollingXHR$Request, java.util.Map);
  static void access$600(com.github.nkzawa.engineio.client.transports.PollingXHR$Request, byte[]);
  static void access$700(com.github.nkzawa.engineio.client.transports.PollingXHR$Request, java.lang.String);
  static void access$800(com.github.nkzawa.engineio.client.transports.PollingXHR$Request, java.lang.Exception);
  static {};
}
Compiled from "PollingXHR.java"
class com.github.nkzawa.engineio.client.transports.PollingXHR$Request$1 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.PollingXHR$Request val$self;
  final com.github.nkzawa.engineio.client.transports.PollingXHR$Request this$0;
  com.github.nkzawa.engineio.client.transports.PollingXHR$Request$1(com.github.nkzawa.engineio.client.transports.PollingXHR$Request, com.github.nkzawa.engineio.client.transports.PollingXHR$Request);
  public void run();
}
Compiled from "PollingXHR.java"
public class com.github.nkzawa.engineio.client.transports.PollingXHR$Request$Options {
  public java.lang.String uri;
  public java.lang.String method;
  public byte[] data;
  public javax.net.ssl.SSLContext sslContext;
  public com.github.nkzawa.engineio.client.transports.PollingXHR$Request$Options();
}
Compiled from "WebSocket.java"
public class com.github.nkzawa.engineio.client.transports.WebSocket extends com.github.nkzawa.engineio.client.Transport {
  public static final java.lang.String NAME;
  public com.github.nkzawa.engineio.client.transports.WebSocket(com.github.nkzawa.engineio.client.Transport$Options);
  protected void doOpen();
  protected void write(com.github.nkzawa.engineio.parser.Packet[]);
  protected void onClose();
  protected void doClose();
  protected java.lang.String uri();
  static void access$000(com.github.nkzawa.engineio.client.transports.WebSocket);
  static void access$100(com.github.nkzawa.engineio.client.transports.WebSocket, java.lang.String);
  static void access$200(com.github.nkzawa.engineio.client.transports.WebSocket, byte[]);
  static com.github.nkzawa.engineio.client.Transport access$300(com.github.nkzawa.engineio.client.transports.WebSocket, java.lang.String, java.lang.Exception);
  static org.java_websocket.client.WebSocketClient access$400(com.github.nkzawa.engineio.client.transports.WebSocket);
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1 extends org.java_websocket.client.WebSocketClient {
  final com.github.nkzawa.engineio.client.transports.WebSocket val$self;
  final com.github.nkzawa.engineio.client.transports.WebSocket this$0;
  com.github.nkzawa.engineio.client.transports.WebSocket$1(com.github.nkzawa.engineio.client.transports.WebSocket, java.net.URI, org.java_websocket.drafts.Draft, java.util.Map, int, com.github.nkzawa.engineio.client.transports.WebSocket);
  public void onOpen(org.java_websocket.handshake.ServerHandshake);
  public void onClose(int, java.lang.String, boolean);
  public void onMessage(java.lang.String);
  public void onMessage(java.nio.ByteBuffer);
  public void onError(java.lang.Exception);
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1$1 implements java.lang.Runnable {
  final org.java_websocket.handshake.ServerHandshake val$serverHandshake;
  final com.github.nkzawa.engineio.client.transports.WebSocket$1 this$1;
  com.github.nkzawa.engineio.client.transports.WebSocket$1$1(com.github.nkzawa.engineio.client.transports.WebSocket$1, org.java_websocket.handshake.ServerHandshake);
  public void run();
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1$2 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.WebSocket$1 this$1;
  com.github.nkzawa.engineio.client.transports.WebSocket$1$2(com.github.nkzawa.engineio.client.transports.WebSocket$1);
  public void run();
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1$3 implements java.lang.Runnable {
  final java.lang.String val$s;
  final com.github.nkzawa.engineio.client.transports.WebSocket$1 this$1;
  com.github.nkzawa.engineio.client.transports.WebSocket$1$3(com.github.nkzawa.engineio.client.transports.WebSocket$1, java.lang.String);
  public void run();
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1$4 implements java.lang.Runnable {
  final java.nio.ByteBuffer val$s;
  final com.github.nkzawa.engineio.client.transports.WebSocket$1 this$1;
  com.github.nkzawa.engineio.client.transports.WebSocket$1$4(com.github.nkzawa.engineio.client.transports.WebSocket$1, java.nio.ByteBuffer);
  public void run();
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$1$5 implements java.lang.Runnable {
  final java.lang.Exception val$e;
  final com.github.nkzawa.engineio.client.transports.WebSocket$1 this$1;
  com.github.nkzawa.engineio.client.transports.WebSocket$1$5(com.github.nkzawa.engineio.client.transports.WebSocket$1, java.lang.Exception);
  public void run();
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$2 implements com.github.nkzawa.engineio.parser.Parser$EncodeCallback {
  final com.github.nkzawa.engineio.client.transports.WebSocket val$self;
  final com.github.nkzawa.engineio.client.transports.WebSocket this$0;
  com.github.nkzawa.engineio.client.transports.WebSocket$2(com.github.nkzawa.engineio.client.transports.WebSocket, com.github.nkzawa.engineio.client.transports.WebSocket);
  public void call(java.lang.Object);
}
Compiled from "WebSocket.java"
class com.github.nkzawa.engineio.client.transports.WebSocket$3 implements java.lang.Runnable {
  final com.github.nkzawa.engineio.client.transports.WebSocket val$self;
  final com.github.nkzawa.engineio.client.transports.WebSocket this$0;
  com.github.nkzawa.engineio.client.transports.WebSocket$3(com.github.nkzawa.engineio.client.transports.WebSocket, com.github.nkzawa.engineio.client.transports.WebSocket);
  public void run();
}
Compiled from "Parser.java"
class com.github.nkzawa.engineio.parser.Buffer {
  public static byte[] concat(byte[][]);
  public static byte[] concat(byte[][], int);
}
Compiled from "Packet.java"
public class com.github.nkzawa.engineio.parser.Packet<T> {
  public static final java.lang.String OPEN;
  public static final java.lang.String CLOSE;
  public static final java.lang.String PING;
  public static final java.lang.String PONG;
  public static final java.lang.String UPGRADE;
  public static final java.lang.String MESSAGE;
  public static final java.lang.String NOOP;
  public static final java.lang.String ERROR;
  public java.lang.String type;
  public T data;
  public com.github.nkzawa.engineio.parser.Packet(java.lang.String);
  public com.github.nkzawa.engineio.parser.Packet(java.lang.String, T);
}
Compiled from "Parser.java"
public class com.github.nkzawa.engineio.parser.Parser {
  public static final int protocol;
  public static void encodePacket(com.github.nkzawa.engineio.parser.Packet, com.github.nkzawa.engineio.parser.Parser$EncodeCallback);
  public static com.github.nkzawa.engineio.parser.Packet<java.lang.String> decodePacket(java.lang.String);
  public static com.github.nkzawa.engineio.parser.Packet<byte[]> decodePacket(byte[]);
  public static void encodePayload(com.github.nkzawa.engineio.parser.Packet[], com.github.nkzawa.engineio.parser.Parser$EncodeCallback<byte[]>);
  public static void decodePayload(java.lang.String, com.github.nkzawa.engineio.parser.Parser$DecodePayloadCallback<java.lang.String>);
  public static void decodePayload(byte[], com.github.nkzawa.engineio.parser.Parser$DecodePayloadCallback);
  static byte[] access$000(java.lang.String);
  static {};
}
Compiled from "Parser.java"
final class com.github.nkzawa.engineio.parser.Parser$1 extends java.util.HashMap<java.lang.String, java.lang.Integer> {
  com.github.nkzawa.engineio.parser.Parser$1();
}
Compiled from "Parser.java"
final class com.github.nkzawa.engineio.parser.Parser$2 implements com.github.nkzawa.engineio.parser.Parser$EncodeCallback {
  final java.util.ArrayList val$results;
  com.github.nkzawa.engineio.parser.Parser$2(java.util.ArrayList);
  public void call(java.lang.Object);
}
Compiled from "Parser.java"
public interface com.github.nkzawa.engineio.parser.Parser$DecodePayloadCallback<T> {
  public abstract boolean call(com.github.nkzawa.engineio.parser.Packet<T>, int, int);
}
Compiled from "Parser.java"
public interface com.github.nkzawa.engineio.parser.Parser$EncodeCallback<T> {
  public abstract void call(T);
}
Compiled from "Global.java"
public class com.github.nkzawa.global.Global {
  public static java.lang.String encodeURIComponent(java.lang.String);
  public static java.lang.String decodeURIComponent(java.lang.String);
}
Compiled from "HasBinaryData.java"
public class com.github.nkzawa.hasbinarydata.HasBinaryData {
  public static boolean hasBinary(java.lang.Object);
}
Compiled from "ParseQS.java"
public class com.github.nkzawa.parseqs.ParseQS {
  public static java.lang.String encode(java.util.Map<java.lang.String, java.lang.String>);
  public static java.util.Map<java.lang.String, java.lang.String> decode(java.lang.String);
}
Compiled from "Ack.java"
public interface com.github.nkzawa.socketio.client.Ack {
  public abstract void call(java.lang.Object...);
}
Compiled from "IO.java"
public class com.github.nkzawa.socketio.client.IO {
  public static int protocol;
  public static void setDefaultSSLContext(javax.net.ssl.SSLContext);
  public static com.github.nkzawa.socketio.client.Socket socket(java.lang.String) throws java.net.URISyntaxException;
  public static com.github.nkzawa.socketio.client.Socket socket(java.lang.String, com.github.nkzawa.socketio.client.IO$Options) throws java.net.URISyntaxException;
  public static com.github.nkzawa.socketio.client.Socket socket(java.net.URI) throws java.net.URISyntaxException;
  public static com.github.nkzawa.socketio.client.Socket socket(java.net.URI, com.github.nkzawa.socketio.client.IO$Options) throws java.net.URISyntaxException;
  static {};
}
Compiled from "IO.java"
public class com.github.nkzawa.socketio.client.IO$Options extends com.github.nkzawa.socketio.client.Manager$Options {
  public boolean forceNew;
  public boolean multiplex;
  public com.github.nkzawa.socketio.client.IO$Options();
}
Compiled from "Manager.java"
public class com.github.nkzawa.socketio.client.Manager extends com.github.nkzawa.emitter.Emitter {
  public static final java.lang.String EVENT_OPEN;
  public static final java.lang.String EVENT_CLOSE;
  public static final java.lang.String EVENT_PACKET;
  public static final java.lang.String EVENT_ERROR;
  public static final java.lang.String EVENT_CONNECT_ERROR;
  public static final java.lang.String EVENT_CONNECT_TIMEOUT;
  public static final java.lang.String EVENT_RECONNECT;
  public static final java.lang.String EVENT_RECONNECT_ERROR;
  public static final java.lang.String EVENT_RECONNECT_FAILED;
  public static final java.lang.String EVENT_RECONNECT_ATTEMPT;
  public static final java.lang.String EVENT_RECONNECTING;
  static javax.net.ssl.SSLContext defaultSSLContext;
  com.github.nkzawa.socketio.client.Manager$ReadyState readyState;
  com.github.nkzawa.engineio.client.Socket engine;
  public com.github.nkzawa.socketio.client.Manager();
  public com.github.nkzawa.socketio.client.Manager(java.net.URI);
  public com.github.nkzawa.socketio.client.Manager(com.github.nkzawa.socketio.client.Manager$Options);
  public com.github.nkzawa.socketio.client.Manager(java.net.URI, com.github.nkzawa.socketio.client.Manager$Options);
  public boolean reconnection();
  public com.github.nkzawa.socketio.client.Manager reconnection(boolean);
  public int reconnectionAttempts();
  public com.github.nkzawa.socketio.client.Manager reconnectionAttempts(int);
  public long reconnectionDelay();
  public com.github.nkzawa.socketio.client.Manager reconnectionDelay(long);
  public long reconnectionDelayMax();
  public com.github.nkzawa.socketio.client.Manager reconnectionDelayMax(long);
  public long timeout();
  public com.github.nkzawa.socketio.client.Manager timeout(long);
  public com.github.nkzawa.socketio.client.Manager open();
  public com.github.nkzawa.socketio.client.Manager open(com.github.nkzawa.socketio.client.Manager$OpenCallback);
  public com.github.nkzawa.socketio.client.Socket socket(java.lang.String);
  void destroy(com.github.nkzawa.socketio.client.Socket);
  void packet(com.github.nkzawa.socketio.parser.Packet);
  static java.util.logging.Logger access$000();
  static java.net.URI access$100(com.github.nkzawa.socketio.client.Manager);
  static com.github.nkzawa.socketio.client.Manager$Options access$200(com.github.nkzawa.socketio.client.Manager);
  static void access$300(com.github.nkzawa.socketio.client.Manager);
  static void access$400(com.github.nkzawa.socketio.client.Manager);
  static void access$500(com.github.nkzawa.socketio.client.Manager, java.lang.String, java.lang.Object[]);
  static void access$600(com.github.nkzawa.socketio.client.Manager);
  static long access$700(com.github.nkzawa.socketio.client.Manager);
  static java.util.concurrent.ScheduledExecutorService access$800(com.github.nkzawa.socketio.client.Manager);
  static java.util.Queue access$900(com.github.nkzawa.socketio.client.Manager);
  static void access$1000(com.github.nkzawa.socketio.client.Manager, java.lang.String);
  static void access$1100(com.github.nkzawa.socketio.client.Manager, byte[]);
  static void access$1200(com.github.nkzawa.socketio.client.Manager, com.github.nkzawa.socketio.parser.Packet);
  static void access$1300(com.github.nkzawa.socketio.client.Manager, java.lang.Exception);
  static void access$1400(com.github.nkzawa.socketio.client.Manager, java.lang.String);
  static int access$1508(com.github.nkzawa.socketio.client.Manager);
  static boolean access$1602(com.github.nkzawa.socketio.client.Manager, boolean);
  static void access$1700(com.github.nkzawa.socketio.client.Manager);
  static int access$1800(com.github.nkzawa.socketio.client.Manager);
  static boolean access$1902(com.github.nkzawa.socketio.client.Manager, boolean);
  static void access$2000(com.github.nkzawa.socketio.client.Manager);
  static void access$2100(com.github.nkzawa.socketio.client.Manager);
  static {};
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Manager$OpenCallback val$fn;
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$1(com.github.nkzawa.socketio.client.Manager, com.github.nkzawa.socketio.client.Manager$OpenCallback);
  public void run();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1$1 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager$1 this$1;
  com.github.nkzawa.socketio.client.Manager$1$1(com.github.nkzawa.socketio.client.Manager$1, com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1$2 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager$1 this$1;
  com.github.nkzawa.socketio.client.Manager$1$2(com.github.nkzawa.socketio.client.Manager$1, com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1$3 implements java.lang.Runnable {
  final long val$timeout;
  final com.github.nkzawa.socketio.client.On$Handle val$openSub;
  final com.github.nkzawa.engineio.client.Socket val$socket;
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager$1 this$1;
  com.github.nkzawa.socketio.client.Manager$1$3(com.github.nkzawa.socketio.client.Manager$1, long, com.github.nkzawa.socketio.client.On$Handle, com.github.nkzawa.engineio.client.Socket, com.github.nkzawa.socketio.client.Manager);
  public void run();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1$3$1 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Manager$1$3 this$2;
  com.github.nkzawa.socketio.client.Manager$1$3$1(com.github.nkzawa.socketio.client.Manager$1$3);
  public void run();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$1$4 implements com.github.nkzawa.socketio.client.On$Handle {
  final java.util.concurrent.Future val$timer;
  final com.github.nkzawa.socketio.client.Manager$1 this$1;
  com.github.nkzawa.socketio.client.Manager$1$4(com.github.nkzawa.socketio.client.Manager$1, java.util.concurrent.Future);
  public void destroy();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$2 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$2(com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$3(com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$4 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$4(com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$5 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$5(com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$6 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$6(com.github.nkzawa.socketio.client.Manager, com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object...);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$7 implements com.github.nkzawa.socketio.parser.Parser$Encoder$Callback {
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$7(com.github.nkzawa.socketio.client.Manager, com.github.nkzawa.socketio.client.Manager);
  public void call(java.lang.Object[]);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$8 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Manager val$self;
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$8(com.github.nkzawa.socketio.client.Manager, com.github.nkzawa.socketio.client.Manager);
  public void run();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$8$1 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Manager$8 this$1;
  com.github.nkzawa.socketio.client.Manager$8$1(com.github.nkzawa.socketio.client.Manager$8);
  public void run();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$8$1$1 implements com.github.nkzawa.socketio.client.Manager$OpenCallback {
  final com.github.nkzawa.socketio.client.Manager$8$1 this$2;
  com.github.nkzawa.socketio.client.Manager$8$1$1(com.github.nkzawa.socketio.client.Manager$8$1);
  public void call(java.lang.Exception);
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$9 implements com.github.nkzawa.socketio.client.On$Handle {
  final java.util.concurrent.Future val$timer;
  final com.github.nkzawa.socketio.client.Manager this$0;
  com.github.nkzawa.socketio.client.Manager$9(com.github.nkzawa.socketio.client.Manager, java.util.concurrent.Future);
  public void destroy();
}
Compiled from "Manager.java"
class com.github.nkzawa.socketio.client.Manager$Engine extends com.github.nkzawa.engineio.client.Socket {
  com.github.nkzawa.socketio.client.Manager$Engine(java.net.URI, com.github.nkzawa.engineio.client.Socket$Options);
}
Compiled from "Manager.java"
public interface com.github.nkzawa.socketio.client.Manager$OpenCallback {
  public abstract void call(java.lang.Exception);
}
Compiled from "Manager.java"
public class com.github.nkzawa.socketio.client.Manager$Options extends com.github.nkzawa.engineio.client.Socket$Options {
  public boolean reconnection;
  public int reconnectionAttempts;
  public long reconnectionDelay;
  public long reconnectionDelayMax;
  public long timeout;
  public com.github.nkzawa.socketio.client.Manager$Options();
}
Compiled from "Manager.java"
final class com.github.nkzawa.socketio.client.Manager$ReadyState extends java.lang.Enum<com.github.nkzawa.socketio.client.Manager$ReadyState> {
  public static final com.github.nkzawa.socketio.client.Manager$ReadyState CLOSED;
  public static final com.github.nkzawa.socketio.client.Manager$ReadyState OPENING;
  public static final com.github.nkzawa.socketio.client.Manager$ReadyState OPEN;
  public static com.github.nkzawa.socketio.client.Manager$ReadyState[] values();
  public static com.github.nkzawa.socketio.client.Manager$ReadyState valueOf(java.lang.String);
  static {};
}
Compiled from "On.java"
public class com.github.nkzawa.socketio.client.On {
  public static com.github.nkzawa.socketio.client.On$Handle on(com.github.nkzawa.emitter.Emitter, java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
}
Compiled from "On.java"
final class com.github.nkzawa.socketio.client.On$1 implements com.github.nkzawa.socketio.client.On$Handle {
  final com.github.nkzawa.emitter.Emitter val$obj;
  final java.lang.String val$ev;
  final com.github.nkzawa.emitter.Emitter$Listener val$fn;
  com.github.nkzawa.socketio.client.On$1(com.github.nkzawa.emitter.Emitter, java.lang.String, com.github.nkzawa.emitter.Emitter$Listener);
  public void destroy();
}
Compiled from "On.java"
public interface com.github.nkzawa.socketio.client.On$Handle {
  public abstract void destroy();
}
Compiled from "Socket.java"
public class com.github.nkzawa.socketio.client.Socket extends com.github.nkzawa.emitter.Emitter {
  public static final java.lang.String EVENT_CONNECT;
  public static final java.lang.String EVENT_DISCONNECT;
  public static final java.lang.String EVENT_ERROR;
  public static final java.lang.String EVENT_MESSAGE;
  public static final java.lang.String EVENT_CONNECT_ERROR;
  public static final java.lang.String EVENT_CONNECT_TIMEOUT;
  public static final java.lang.String EVENT_RECONNECT;
  public static final java.lang.String EVENT_RECONNECT_ERROR;
  public static final java.lang.String EVENT_RECONNECT_FAILED;
  public static final java.lang.String EVENT_RECONNECT_ATTEMPT;
  public static final java.lang.String EVENT_RECONNECTING;
  public com.github.nkzawa.socketio.client.Socket(com.github.nkzawa.socketio.client.Manager, java.lang.String);
  public com.github.nkzawa.socketio.client.Socket open();
  public com.github.nkzawa.socketio.client.Socket connect();
  public com.github.nkzawa.socketio.client.Socket send(java.lang.Object...);
  public com.github.nkzawa.emitter.Emitter emit(java.lang.String, java.lang.Object...);
  public com.github.nkzawa.emitter.Emitter emit(java.lang.String, java.lang.Object[], com.github.nkzawa.socketio.client.Ack);
  public com.github.nkzawa.socketio.client.Socket close();
  public com.github.nkzawa.socketio.client.Socket disconnect();
  public com.github.nkzawa.socketio.client.Manager io();
  static void access$000(com.github.nkzawa.socketio.client.Socket);
  static void access$100(com.github.nkzawa.socketio.client.Socket, com.github.nkzawa.socketio.parser.Packet);
  static void access$200(com.github.nkzawa.socketio.client.Socket, java.lang.String);
  static boolean access$300(com.github.nkzawa.socketio.client.Socket);
  static com.github.nkzawa.socketio.client.Manager access$400(com.github.nkzawa.socketio.client.Socket);
  static java.util.Map access$500();
  static com.github.nkzawa.emitter.Emitter access$601(com.github.nkzawa.socketio.client.Socket, java.lang.String, java.lang.Object[]);
  static int access$700(com.github.nkzawa.socketio.client.Socket);
  static java.util.logging.Logger access$800();
  static java.util.Map access$900(com.github.nkzawa.socketio.client.Socket);
  static org.json.JSONArray access$1000(org.json.JSONArray, int);
  static int access$708(com.github.nkzawa.socketio.client.Socket);
  static void access$1100(com.github.nkzawa.socketio.client.Socket, com.github.nkzawa.socketio.parser.Packet);
  static java.util.Queue access$1200(com.github.nkzawa.socketio.client.Socket);
  static java.lang.String access$1300(com.github.nkzawa.socketio.client.Socket);
  static void access$1400(com.github.nkzawa.socketio.client.Socket);
  static {};
}
Compiled from "Socket.java"
final class com.github.nkzawa.socketio.client.Socket$1 extends java.util.HashMap<java.lang.String, java.lang.Integer> {
  com.github.nkzawa.socketio.client.Socket$1();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$2 extends java.util.LinkedList<com.github.nkzawa.socketio.client.On$Handle> {
  final com.github.nkzawa.socketio.client.Manager val$io;
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$2(com.github.nkzawa.socketio.client.Socket, com.github.nkzawa.socketio.client.Manager);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$2$1 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Socket$2 this$1;
  com.github.nkzawa.socketio.client.Socket$2$1(com.github.nkzawa.socketio.client.Socket$2);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$2$2 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Socket$2 this$1;
  com.github.nkzawa.socketio.client.Socket$2$2(com.github.nkzawa.socketio.client.Socket$2);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$2$3 implements com.github.nkzawa.emitter.Emitter$Listener {
  final com.github.nkzawa.socketio.client.Socket$2 this$1;
  com.github.nkzawa.socketio.client.Socket$2$3(com.github.nkzawa.socketio.client.Socket$2);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$3 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$3(com.github.nkzawa.socketio.client.Socket);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$4 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$4(com.github.nkzawa.socketio.client.Socket, java.lang.Object[]);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$5 implements java.lang.Runnable {
  final java.lang.String val$event;
  final java.lang.Object[] val$args;
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$5(com.github.nkzawa.socketio.client.Socket, java.lang.String, java.lang.Object[]);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$6 implements java.lang.Runnable {
  final java.lang.String val$event;
  final java.lang.Object[] val$args;
  final com.github.nkzawa.socketio.client.Ack val$ack;
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$6(com.github.nkzawa.socketio.client.Socket, java.lang.String, java.lang.Object[], com.github.nkzawa.socketio.client.Ack);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$6$1 extends java.util.ArrayList<java.lang.Object> {
  final com.github.nkzawa.socketio.client.Socket$6 this$1;
  com.github.nkzawa.socketio.client.Socket$6$1(com.github.nkzawa.socketio.client.Socket$6);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$7 implements com.github.nkzawa.socketio.client.Ack {
  final boolean[] val$sent;
  final int val$id;
  final com.github.nkzawa.socketio.client.Socket val$self;
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$7(com.github.nkzawa.socketio.client.Socket, boolean[], int, com.github.nkzawa.socketio.client.Socket);
  public void call(java.lang.Object...);
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$7$1 implements java.lang.Runnable {
  final java.lang.Object[] val$args;
  final com.github.nkzawa.socketio.client.Socket$7 this$1;
  com.github.nkzawa.socketio.client.Socket$7$1(com.github.nkzawa.socketio.client.Socket$7, java.lang.Object[]);
  public void run();
}
Compiled from "Socket.java"
class com.github.nkzawa.socketio.client.Socket$8 implements java.lang.Runnable {
  final com.github.nkzawa.socketio.client.Socket this$0;
  com.github.nkzawa.socketio.client.Socket$8(com.github.nkzawa.socketio.client.Socket);
  public void run();
}
Compiled from "SocketIOException.java"
public class com.github.nkzawa.socketio.client.SocketIOException extends java.lang.Exception {
  public com.github.nkzawa.socketio.client.SocketIOException();
  public com.github.nkzawa.socketio.client.SocketIOException(java.lang.String);
  public com.github.nkzawa.socketio.client.SocketIOException(java.lang.String, java.lang.Throwable);
  public com.github.nkzawa.socketio.client.SocketIOException(java.lang.Throwable);
}
Compiled from "Url.java"
public class com.github.nkzawa.socketio.client.Url {
  public static java.net.URL parse(java.lang.String) throws java.net.URISyntaxException, java.net.MalformedURLException;
  public static java.net.URL parse(java.net.URI) throws java.net.MalformedURLException;
  public static java.lang.String extractId(java.lang.String) throws java.net.MalformedURLException;
  public static java.lang.String extractId(java.net.URL);
  static {};
}
Compiled from "Binary.java"
public class com.github.nkzawa.socketio.parser.Binary {
  public com.github.nkzawa.socketio.parser.Binary();
  public static com.github.nkzawa.socketio.parser.Binary$DeconstructedPacket deconstructPacket(com.github.nkzawa.socketio.parser.Packet);
  public static com.github.nkzawa.socketio.parser.Packet reconstructPacket(com.github.nkzawa.socketio.parser.Packet, byte[][]);
}
Compiled from "Binary.java"
public class com.github.nkzawa.socketio.parser.Binary$DeconstructedPacket {
  public com.github.nkzawa.socketio.parser.Packet packet;
  public byte[][] buffers;
  public com.github.nkzawa.socketio.parser.Binary$DeconstructedPacket();
}
Compiled from "Packet.java"
public class com.github.nkzawa.socketio.parser.Packet<T> {
  public int type;
  public int id;
  public java.lang.String nsp;
  public T data;
  public int attachments;
  public com.github.nkzawa.socketio.parser.Packet();
  public com.github.nkzawa.socketio.parser.Packet(int);
  public com.github.nkzawa.socketio.parser.Packet(int, T);
}
Compiled from "Parser.java"
public class com.github.nkzawa.socketio.parser.Parser {
  public static final int CONNECT;
  public static final int DISCONNECT;
  public static final int EVENT;
  public static final int ACK;
  public static final int ERROR;
  public static final int BINARY_EVENT;
  public static final int BINARY_ACK;
  public static int protocol;
  public static java.lang.String[] types;
  static java.util.logging.Logger access$000();
  static com.github.nkzawa.socketio.parser.Packet access$100();
  static {};
}
Compiled from "Parser.java"
class com.github.nkzawa.socketio.parser.Parser$BinaryReconstructor {
  public com.github.nkzawa.socketio.parser.Packet reconPack;
  java.util.List<byte[]> buffers;
  com.github.nkzawa.socketio.parser.Parser$BinaryReconstructor(com.github.nkzawa.socketio.parser.Packet);
  public com.github.nkzawa.socketio.parser.Packet takeBinaryData(byte[]);
  public void finishReconstruction();
}
Compiled from "Parser.java"
public class com.github.nkzawa.socketio.parser.Parser$Decoder extends com.github.nkzawa.emitter.Emitter {
  public static java.lang.String EVENT_DECODED;
  com.github.nkzawa.socketio.parser.Parser$BinaryReconstructor reconstructor;
  public com.github.nkzawa.socketio.parser.Parser$Decoder();
  public void add(java.lang.String);
  public void add(byte[]);
  public void destroy();
  static {};
}
Compiled from "Parser.java"
public class com.github.nkzawa.socketio.parser.Parser$Encoder {
  public com.github.nkzawa.socketio.parser.Parser$Encoder();
  public void encode(com.github.nkzawa.socketio.parser.Packet, com.github.nkzawa.socketio.parser.Parser$Encoder$Callback);
}
Compiled from "Parser.java"
public interface com.github.nkzawa.socketio.parser.Parser$Encoder$Callback {
  public abstract void call(java.lang.Object[]);
}
Compiled from "EventThread.java"
public class com.github.nkzawa.thread.EventThread extends java.lang.Thread {
  public static boolean isCurrent();
  public static void exec(java.lang.Runnable);
  public static void nextTick(java.lang.Runnable);
  static com.github.nkzawa.thread.EventThread access$002(com.github.nkzawa.thread.EventThread);
  com.github.nkzawa.thread.EventThread(java.lang.Runnable, com.github.nkzawa.thread.EventThread$1);
  static com.github.nkzawa.thread.EventThread access$000();
  static {};
}
Compiled from "EventThread.java"
final class com.github.nkzawa.thread.EventThread$1 implements java.util.concurrent.ThreadFactory {
  com.github.nkzawa.thread.EventThread$1();
  public java.lang.Thread newThread(java.lang.Runnable);
}
Compiled from "UTF8.java"
public class com.github.nkzawa.utf8.UTF8 {
  public com.github.nkzawa.utf8.UTF8();
  public static java.lang.String encode(java.lang.String);
  public static java.lang.String decode(java.lang.String) throws com.github.nkzawa.utf8.UTF8Exception;
}
Compiled from "UTF8Exception.java"
public class com.github.nkzawa.utf8.UTF8Exception extends java.io.IOException {
  public java.lang.String data;
  public com.github.nkzawa.utf8.UTF8Exception();
  public com.github.nkzawa.utf8.UTF8Exception(java.lang.String);
  public com.github.nkzawa.utf8.UTF8Exception(java.lang.String, java.lang.Throwable);
  public com.github.nkzawa.utf8.UTF8Exception(java.lang.Throwable);
}
