Compiled from "InterventionApi.java"
public interface org.agetac.common.api.InterventionApi {
  public abstract org.agetac.common.model.impl.Message getMessage(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Message> getMessages() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Message putMessage(org.agetac.common.model.impl.Message) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Message postMessage(org.agetac.common.model.impl.Message) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteMessage(org.agetac.common.model.impl.Message) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Vehicule getVehicule(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Vehicule> getVehicules() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Vehicule putVehicule(org.agetac.common.model.impl.Vehicule) throws org.agetac.common.exception.BadResponseException, org.json.JSONException;
  public abstract org.agetac.common.model.impl.Vehicule postVehicule(org.agetac.common.model.impl.Vehicule) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteVehicule(org.agetac.common.model.impl.Vehicule) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Source getSource(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Source> getSources() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Source putSource(org.agetac.common.model.impl.Source) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Source postSource(org.agetac.common.model.impl.Source) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteSource(org.agetac.common.model.impl.Source) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Cible getCible(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Cible> getCibles() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Cible putCible(org.agetac.common.model.impl.Cible) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Cible postCible(org.agetac.common.model.impl.Cible) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteCible(org.agetac.common.model.impl.Cible) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Action getAction(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Action> getActions() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Action putAction(org.agetac.common.model.impl.Action) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Action postAction(org.agetac.common.model.impl.Action) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteAction(org.agetac.common.model.impl.Action) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Implique getImplique(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.Implique> getImpliques() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Implique putImplique(org.agetac.common.model.impl.Implique) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Implique postImplique(org.agetac.common.model.impl.Implique) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteImplique(org.agetac.common.model.impl.Implique) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.DemandeMoyen getDemandeMoyen(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public abstract java.util.List<org.agetac.common.model.impl.DemandeMoyen> getDemandesMoyen() throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.DemandeMoyen putDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.DemandeMoyen postDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public abstract void deleteDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.agetac.common.exception.BadResponseException;
  public abstract org.agetac.common.model.impl.Intervention getIntervention() throws org.agetac.common.exception.BadResponseException;
}
Compiled from "InterventionConnection.java"
public class org.agetac.common.api.InterventionConnection implements org.agetac.common.api.InterventionApi {
  public org.agetac.common.api.InterventionConnection(java.lang.String, org.agetac.common.api.ServerApi);
  public org.agetac.common.model.impl.Intervention getIntervention() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Message getMessage(java.lang.String) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Message> getMessages() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Message putMessage(org.agetac.common.model.impl.Message) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Message postMessage(org.agetac.common.model.impl.Message) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public void deleteMessage(org.agetac.common.model.impl.Message) throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Vehicule getVehicule(java.lang.String) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Vehicule> getVehicules() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Vehicule putVehicule(org.agetac.common.model.impl.Vehicule) throws org.agetac.common.exception.BadResponseException, org.json.JSONException;
  public void deleteVehicule(org.agetac.common.model.impl.Vehicule) throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Vehicule postVehicule(org.agetac.common.model.impl.Vehicule) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.DemandeMoyen getDemandeMoyen(java.lang.String) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.DemandeMoyen> getDemandesMoyen() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.DemandeMoyen postDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.DemandeMoyen putDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.agetac.common.exception.BadResponseException, org.json.JSONException;
  public void deleteDemandeMoyen(org.agetac.common.model.impl.DemandeMoyen) throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Source getSource(java.lang.String) throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Source putSource(org.agetac.common.model.impl.Source) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public void deleteSource(org.agetac.common.model.impl.Source) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Source> getSources() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Source postSource(org.agetac.common.model.impl.Source) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Cible getCible(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Cible putCible(org.agetac.common.model.impl.Cible) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public void deleteCible(org.agetac.common.model.impl.Cible) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Cible> getCibles() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Cible postCible(org.agetac.common.model.impl.Cible) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Action getAction(java.lang.String) throws org.agetac.common.exception.InvalidJSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Action putAction(org.agetac.common.model.impl.Action) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public void deleteAction(org.agetac.common.model.impl.Action) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Action> getActions() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Action postAction(org.agetac.common.model.impl.Action) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Implique getImplique(java.lang.String) throws org.agetac.common.exception.BadResponseException, org.agetac.common.exception.InvalidJSONException;
  public org.agetac.common.model.impl.Implique putImplique(org.agetac.common.model.impl.Implique) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
  public void deleteImplique(org.agetac.common.model.impl.Implique) throws org.agetac.common.exception.BadResponseException;
  public java.util.List<org.agetac.common.model.impl.Implique> getImpliques() throws org.agetac.common.exception.BadResponseException;
  public org.agetac.common.model.impl.Implique postImplique(org.agetac.common.model.impl.Implique) throws org.json.JSONException, org.agetac.common.exception.BadResponseException;
}
Compiled from "ServerApi.java"
public interface org.agetac.common.api.ServerApi {
  public abstract org.restlet.representation.Representation getResource(java.lang.String, java.lang.String) throws org.agetac.common.exception.BadResponseException;
  public abstract org.restlet.representation.Representation putResource(java.lang.String, java.lang.String, org.restlet.representation.Representation) throws org.agetac.common.exception.BadResponseException;
  public abstract org.restlet.representation.Representation postResource(java.lang.String, java.lang.String, org.restlet.representation.Representation) throws org.agetac.common.exception.BadResponseException;
  public abstract void deleteResource(java.lang.String, java.lang.String) throws org.agetac.common.exception.BadResponseException;
}
Compiled from "BadResponseException.java"
public class org.agetac.common.exception.BadResponseException extends java.lang.Exception {
  public org.agetac.common.exception.BadResponseException(org.restlet.Response);
}
Compiled from "InvalidJSONException.java"
public class org.agetac.common.exception.InvalidJSONException extends java.lang.Exception {
  public org.agetac.common.exception.InvalidJSONException(java.lang.String);
}
Compiled from "Action.java"
public class org.agetac.common.model.impl.Action extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Action();
  public org.agetac.common.model.impl.Action(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Action$ActionType, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Position);
  public org.agetac.common.model.impl.Action(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
  public java.lang.String toString();
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public void setOrigin(org.agetac.common.model.impl.Position);
  public void setAim(org.agetac.common.model.impl.Position);
  public void setActionType(org.agetac.common.model.impl.Action$ActionType);
  public org.agetac.common.model.impl.Position getOrigin();
  public org.agetac.common.model.impl.Position getAim();
  public org.agetac.common.model.impl.Action$ActionType getActionType();
}
Compiled from "Action.java"
public final class org.agetac.common.model.impl.Action$ActionType extends java.lang.Enum<org.agetac.common.model.impl.Action$ActionType> {
  public static final org.agetac.common.model.impl.Action$ActionType FIRE;
  public static final org.agetac.common.model.impl.Action$ActionType WATER;
  public static final org.agetac.common.model.impl.Action$ActionType VICTIM;
  public static org.agetac.common.model.impl.Action$ActionType[] values();
  public static org.agetac.common.model.impl.Action$ActionType valueOf(java.lang.String);
  static {};
}
Compiled from "Agent.java"
public class org.agetac.common.model.impl.Agent extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Agent();
  public org.agetac.common.model.impl.Agent(java.lang.String, java.lang.String, org.agetac.common.model.impl.Agent$Aptitude, java.util.List<org.agetac.common.model.impl.Agent>);
  public org.agetac.common.model.impl.Agent(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public org.agetac.common.model.impl.Agent$Aptitude getAptitude();
  public void setAptitude(org.agetac.common.model.impl.Agent$Aptitude);
  public java.util.List<org.agetac.common.model.impl.Agent> getSubordonnes();
  public void setSubordonnes(java.util.List<org.agetac.common.model.impl.Agent>);
  public java.lang.String toString();
}
Compiled from "Agent.java"
public final class org.agetac.common.model.impl.Agent$Aptitude extends java.lang.Enum<org.agetac.common.model.impl.Agent$Aptitude> {
  public static final org.agetac.common.model.impl.Agent$Aptitude COS;
  public static final org.agetac.common.model.impl.Agent$Aptitude CA;
  public static final org.agetac.common.model.impl.Agent$Aptitude CDG;
  public static final org.agetac.common.model.impl.Agent$Aptitude CDC;
  public static final org.agetac.common.model.impl.Agent$Aptitude AGENT;
  public static org.agetac.common.model.impl.Agent$Aptitude[] values();
  public static org.agetac.common.model.impl.Agent$Aptitude valueOf(java.lang.String);
  static {};
}
Compiled from "Caserne.java"
public class org.agetac.common.model.impl.Caserne extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Caserne(java.lang.String, java.lang.String, java.util.List<org.agetac.common.model.impl.Vehicule>);
  public org.agetac.common.model.impl.Caserne(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public java.util.List<org.agetac.common.model.impl.Vehicule> getVehicules();
  public void setVehicules(java.util.ArrayList<org.agetac.common.model.impl.Vehicule>);
  public org.agetac.common.model.impl.Vehicule requestVehicule();
  public java.lang.String toString();
  public org.json.JSONObject toJSON() throws org.json.JSONException;
}
Compiled from "Cible.java"
public class org.agetac.common.model.impl.Cible extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Cible();
  public org.agetac.common.model.impl.Cible(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Cible$CibleType);
  public org.agetac.common.model.impl.Cible(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.agetac.common.model.impl.Cible(org.agetac.common.model.impl.Cible$CibleType);
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public org.agetac.common.model.impl.Cible$CibleType getType();
  public void setType(org.agetac.common.model.impl.Cible$CibleType);
  public java.lang.String toString();
}
Compiled from "Cible.java"
public final class org.agetac.common.model.impl.Cible$CibleType extends java.lang.Enum<org.agetac.common.model.impl.Cible$CibleType> {
  public static final org.agetac.common.model.impl.Cible$CibleType WATER;
  public static final org.agetac.common.model.impl.Cible$CibleType FIRE;
  public static final org.agetac.common.model.impl.Cible$CibleType CHEM;
  public static final org.agetac.common.model.impl.Cible$CibleType HUMAN;
  public static org.agetac.common.model.impl.Cible$CibleType[] values();
  public static org.agetac.common.model.impl.Cible$CibleType valueOf(java.lang.String);
  static {};
}
Compiled from "DemandeMoyen.java"
public class org.agetac.common.model.impl.DemandeMoyen extends org.agetac.common.model.sign.AbstractModel {
  public java.lang.String getVehId();
  public void setVehId(java.lang.String);
  public org.agetac.common.model.impl.DemandeMoyen();
  public org.agetac.common.model.impl.DemandeMoyen(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Vehicule$CategorieVehicule, org.agetac.common.model.impl.DemandeMoyen$EtatDemande, org.agetac.common.model.impl.Groupe, java.lang.String);
  public org.agetac.common.model.impl.DemandeMoyen(java.lang.String, java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.DemandeMoyen$EtatDemande, java.lang.String);
  public org.agetac.common.model.impl.DemandeMoyen(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public org.agetac.common.model.impl.DemandeMoyen$EtatDemande getEtat();
  public org.agetac.common.model.impl.Vehicule$CategorieVehicule getCategorie();
  public void setCategorie(org.agetac.common.model.impl.Vehicule$CategorieVehicule);
  public void setEtat(org.agetac.common.model.impl.DemandeMoyen$EtatDemande);
  public java.lang.String getGroupe();
  public void setGroupe(org.agetac.common.model.impl.Groupe);
  public void setGroupeID(java.lang.String);
  public java.util.HashMap<org.agetac.common.model.impl.DemandeMoyen$EtatDemande, java.lang.String> getGroupesHoraires();
  public void setGroupesHoraires(java.util.HashMap<org.agetac.common.model.impl.DemandeMoyen$EtatDemande, java.lang.String>);
  public java.lang.String toString();
  static {};
}
Compiled from "DemandeMoyen.java"
public final class org.agetac.common.model.impl.DemandeMoyen$EtatDemande extends java.lang.Enum<org.agetac.common.model.impl.DemandeMoyen$EtatDemande> {
  public static final org.agetac.common.model.impl.DemandeMoyen$EtatDemande LANCEE;
  public static final org.agetac.common.model.impl.DemandeMoyen$EtatDemande REFUSEE;
  public static final org.agetac.common.model.impl.DemandeMoyen$EtatDemande ACCEPTEE;
  public static org.agetac.common.model.impl.DemandeMoyen$EtatDemande[] values();
  public static org.agetac.common.model.impl.DemandeMoyen$EtatDemande valueOf(java.lang.String);
  static {};
}
Compiled from "Groupe.java"
public class org.agetac.common.model.impl.Groupe extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Groupe();
  public org.agetac.common.model.impl.Groupe(java.lang.String, org.agetac.common.model.impl.Agent, java.util.List<org.agetac.common.model.impl.Vehicule>);
  public org.agetac.common.model.impl.Groupe(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public java.lang.String toString();
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public org.agetac.common.model.impl.Position getPosition();
  public java.util.List<org.agetac.common.model.impl.Vehicule> getMoyens();
  public void setMoyens(java.util.List<org.agetac.common.model.impl.Vehicule>);
  public org.agetac.common.model.impl.Agent getChef();
  public void setChef(org.agetac.common.model.impl.Agent);
}
Compiled from "Implique.java"
public class org.agetac.common.model.impl.Implique extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Implique(java.lang.String, org.agetac.common.model.impl.Implique$EtatImplique);
  public org.agetac.common.model.impl.Implique(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.agetac.common.model.impl.Implique$EtatImplique getEtat();
  public void setEtat(org.agetac.common.model.impl.Implique$EtatImplique);
  public java.lang.String toString();
  public org.json.JSONObject toJSON() throws org.json.JSONException;
}
Compiled from "Implique.java"
public final class org.agetac.common.model.impl.Implique$EtatImplique extends java.lang.Enum<org.agetac.common.model.impl.Implique$EtatImplique> {
  public static final org.agetac.common.model.impl.Implique$EtatImplique INDEMNE;
  public static final org.agetac.common.model.impl.Implique$EtatImplique URGENCE_RELATIVE;
  public static final org.agetac.common.model.impl.Implique$EtatImplique URGENCE_ABSOLUE;
  public static final org.agetac.common.model.impl.Implique$EtatImplique DECEDE;
  public static org.agetac.common.model.impl.Implique$EtatImplique[] values();
  public static org.agetac.common.model.impl.Implique$EtatImplique valueOf(java.lang.String);
  static {};
}
Compiled from "Intervention.java"
public class org.agetac.common.model.impl.Intervention extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Intervention();
  public org.agetac.common.model.impl.Intervention(java.lang.String);
  public org.agetac.common.model.impl.Intervention(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public java.lang.String toString();
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public java.util.List<org.agetac.common.model.impl.Vehicule> getVehicules();
  public void setVehicules(java.util.List<org.agetac.common.model.impl.Vehicule>);
  public java.util.List<org.agetac.common.model.impl.Cible> getCibles();
  public void setCibles(java.util.List<org.agetac.common.model.impl.Cible>);
  public java.util.List<org.agetac.common.model.impl.Source> getSources();
  public void setSources(java.util.List<org.agetac.common.model.impl.Source>);
  public java.util.List<org.agetac.common.model.impl.Action> getActions();
  public void setActions(java.util.List<org.agetac.common.model.impl.Action>);
  public java.util.List<org.agetac.common.model.impl.Message> getMessages();
  public void setMessages(java.util.List<org.agetac.common.model.impl.Message>);
  public java.util.List<org.agetac.common.model.impl.Implique> getImpliques();
  public void setImpliques(java.util.List<org.agetac.common.model.impl.Implique>);
  public java.util.List<org.agetac.common.model.impl.DemandeMoyen> getDemandesMoyen();
  public void setDemandesMoyen(java.util.List<org.agetac.common.model.impl.DemandeMoyen>);
}
Compiled from "Message.java"
public class org.agetac.common.model.impl.Message implements org.agetac.common.model.sign.IJsonable {
  public org.agetac.common.model.impl.Message(java.lang.String, java.lang.String, java.lang.String);
  public org.agetac.common.model.impl.Message(org.json.JSONObject);
  public java.lang.String getMessage();
  public void setMessage(java.lang.String);
  public java.lang.String getDate();
  public void setDate(java.lang.String);
  public java.lang.String getUniqueID();
  public void setUniqueID(java.lang.String);
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public java.lang.String toString();
}
Compiled from "Position.java"
public class org.agetac.common.model.impl.Position implements org.agetac.common.model.sign.IJsonable {
  public org.agetac.common.model.impl.Position();
  public org.agetac.common.model.impl.Position(double, double);
  public org.agetac.common.model.impl.Position(org.agetac.common.model.impl.Position);
  public org.agetac.common.model.impl.Position(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public double getLongitude();
  public void setLongitude(double);
  public double getLatitude();
  public void setLatitude(double);
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public java.lang.String toString();
}
Compiled from "Source.java"
public class org.agetac.common.model.impl.Source extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Source();
  public org.agetac.common.model.impl.Source(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Source$SourceType);
  public org.agetac.common.model.impl.Source(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.agetac.common.model.impl.Source(org.agetac.common.model.impl.Source$SourceType);
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public org.agetac.common.model.impl.Source$SourceType getType();
  public void setType(org.agetac.common.model.impl.Source$SourceType);
  public java.lang.String toString();
}
Compiled from "Source.java"
public final class org.agetac.common.model.impl.Source$SourceType extends java.lang.Enum<org.agetac.common.model.impl.Source$SourceType> {
  public static final org.agetac.common.model.impl.Source$SourceType WATER;
  public static final org.agetac.common.model.impl.Source$SourceType FIRE;
  public static final org.agetac.common.model.impl.Source$SourceType CHEM;
  public static org.agetac.common.model.impl.Source$SourceType[] values();
  public static org.agetac.common.model.impl.Source$SourceType valueOf(java.lang.String);
  static {};
}
Compiled from "Vehicule.java"
public class org.agetac.common.model.impl.Vehicule extends org.agetac.common.model.sign.AbstractModel {
  public org.agetac.common.model.impl.Vehicule();
  public org.agetac.common.model.impl.Vehicule(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Vehicule$CategorieVehicule, java.lang.String, org.agetac.common.model.impl.Vehicule$EtatVehicule, org.agetac.common.model.impl.Groupe, java.lang.String);
  public org.agetac.common.model.impl.Vehicule(java.lang.String, org.agetac.common.model.impl.Position, org.agetac.common.model.impl.Vehicule$CategorieVehicule, java.lang.String, org.agetac.common.model.impl.Vehicule$EtatVehicule, java.lang.String, java.lang.String);
  public org.agetac.common.model.impl.Vehicule(java.lang.String, java.lang.String, org.agetac.common.model.impl.Position, java.lang.String, org.agetac.common.model.impl.Vehicule$EtatVehicule, java.lang.String);
  public org.agetac.common.model.impl.Vehicule(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public java.lang.String getCaserneName();
  public void setCaserneName(java.lang.String);
  public org.agetac.common.model.impl.Vehicule$EtatVehicule getEtat();
  public org.agetac.common.model.impl.Vehicule$CategorieVehicule getCategorie();
  public void setCategorie(org.agetac.common.model.impl.Vehicule$CategorieVehicule);
  public void setEtat(org.agetac.common.model.impl.Vehicule$EtatVehicule);
  public java.lang.String getGroupe();
  public void setGroupe(org.agetac.common.model.impl.Groupe);
  public void setGroupeID(java.lang.String);
  public java.util.HashMap<org.agetac.common.model.impl.Vehicule$EtatVehicule, java.lang.String> getGroupesHoraires();
  public void setGroupesHoraires(java.util.HashMap<org.agetac.common.model.impl.Vehicule$EtatVehicule, java.lang.String>);
  public java.lang.String toString();
  static {};
}
Compiled from "Vehicule.java"
public final class org.agetac.common.model.impl.Vehicule$CategorieVehicule extends java.lang.Enum<org.agetac.common.model.impl.Vehicule$CategorieVehicule> {
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule BEA;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule BRS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule BLS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule EMB;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule BLSP;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule CAEM;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule CCFM;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule CCGC;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule CCGCLC;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule DA;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule EPS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule ESPM;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule FMOGP;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule FPT;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule MPR;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule PCM;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule PEVSD;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule SAC_PS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule UTP;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VPRO;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VRCB;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VICB;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VAR;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VL;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLCC;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLDP;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLCGD;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLCS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLCG;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLHR;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLSV;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLOS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VLS;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VNRBC;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VPL;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VPHV;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VRAD;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VSAV;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VSM;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VSR;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VTP;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VTU;
  public static final org.agetac.common.model.impl.Vehicule$CategorieVehicule VCYNO;
  public static org.agetac.common.model.impl.Vehicule$CategorieVehicule[] values();
  public static org.agetac.common.model.impl.Vehicule$CategorieVehicule valueOf(java.lang.String);
  static {};
}
Compiled from "Vehicule.java"
public final class org.agetac.common.model.impl.Vehicule$EtatVehicule extends java.lang.Enum<org.agetac.common.model.impl.Vehicule$EtatVehicule> {
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule DISPO_CASERNE;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule ALERTE;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule PARTIS;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule SUR_LES_LIEUX;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule TRANSPORT_HOPITAL;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule DISPO_RADIO;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule TEMPS_DEPASSE;
  public static final org.agetac.common.model.impl.Vehicule$EtatVehicule DEMOBILISE;
  public static org.agetac.common.model.impl.Vehicule$EtatVehicule[] values();
  public static org.agetac.common.model.impl.Vehicule$EtatVehicule valueOf(java.lang.String);
  static {};
}
Compiled from "AbstractModel.java"
public abstract class org.agetac.common.model.sign.AbstractModel implements org.agetac.common.model.sign.IJsonable,org.agetac.common.model.sign.IModel {
  protected java.lang.String uniqueID;
  protected java.lang.String nom;
  protected org.agetac.common.model.impl.Position position;
  public org.agetac.common.model.sign.AbstractModel(java.lang.String, org.agetac.common.model.impl.Position);
  public org.agetac.common.model.sign.AbstractModel(java.lang.String, java.lang.String, org.agetac.common.model.impl.Position);
  public org.agetac.common.model.sign.AbstractModel(org.json.JSONObject) throws org.agetac.common.exception.InvalidJSONException;
  public org.json.JSONObject toJSON() throws org.json.JSONException;
  public java.lang.String getUniqueID();
  public void setUniqueID(java.lang.String);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public org.agetac.common.model.impl.Position getPosition();
  public void setPosition(org.agetac.common.model.impl.Position);
}
Compiled from "IJsonable.java"
public interface org.agetac.common.model.sign.IJsonable {
  public abstract org.json.JSONObject toJSON() throws org.json.JSONException;
}
Compiled from "IModel.java"
public interface org.agetac.common.model.sign.IModel {
  public abstract java.lang.String getUniqueID();
  public abstract java.lang.String getName();
  public abstract org.agetac.common.model.impl.Position getPosition();
  public abstract void setUniqueID(java.lang.String);
  public abstract void setName(java.lang.String);
  public abstract void setPosition(org.agetac.common.model.impl.Position);
}
Compiled from "ActionTest.java"
public class org.agetac.model.test.ActionTest {
  public org.agetac.model.test.ActionTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "AgentTest.java"
public class org.agetac.model.test.AgentTest {
  public org.agetac.model.test.AgentTest();
  public void jsonTransformNoException() throws org.json.JSONException, org.agetac.common.exception.InvalidJSONException;
  public void jsonTransformEquality() throws org.json.JSONException, org.agetac.common.exception.InvalidJSONException;
}
Compiled from "CibleTest.java"
public class org.agetac.model.test.CibleTest {
  public org.agetac.model.test.CibleTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "GroupeTest.java"
public class org.agetac.model.test.GroupeTest {
  public org.agetac.model.test.GroupeTest();
  public void jsonTransformNoException() throws org.json.JSONException, org.agetac.common.exception.InvalidJSONException;
  public void jsonTransformEquality() throws org.json.JSONException, org.agetac.common.exception.InvalidJSONException;
}
Compiled from "ImpliqueTest.java"
public class org.agetac.model.test.ImpliqueTest {
  public org.agetac.model.test.ImpliqueTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "InterventionTest.java"
public class org.agetac.model.test.InterventionTest {
  public org.agetac.model.test.InterventionTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "MessageTest.java"
public class org.agetac.model.test.MessageTest {
  public org.agetac.model.test.MessageTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality();
}
Compiled from "PositionTest.java"
public class org.agetac.model.test.PositionTest {
  public org.agetac.model.test.PositionTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "SourceTest.java"
public class org.agetac.model.test.SourceTest {
  public org.agetac.model.test.SourceTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "VehiculeTest.java"
public class org.agetac.model.test.VehiculeTest {
  public org.agetac.model.test.VehiculeTest();
  public void jsonTransformNoException() throws java.lang.Exception;
  public void jsonTransformEquality() throws org.agetac.common.exception.InvalidJSONException, org.json.JSONException;
}
Compiled from "CDL.java"
public class org.json.CDL {
  public org.json.CDL();
  public static org.json.JSONArray rowToJSONArray(org.json.JSONTokener) throws org.json.JSONException;
  public static org.json.JSONObject rowToJSONObject(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException;
  public static org.json.JSONArray toJSONArray(java.lang.String) throws org.json.JSONException;
  public static org.json.JSONArray toJSONArray(org.json.JSONTokener) throws org.json.JSONException;
  public static org.json.JSONArray toJSONArray(org.json.JSONArray, java.lang.String) throws org.json.JSONException;
  public static org.json.JSONArray toJSONArray(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException;
  public static java.lang.String rowToString(org.json.JSONArray);
  public static java.lang.String toString(org.json.JSONArray) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONArray, org.json.JSONArray) throws org.json.JSONException;
}
Compiled from "Cookie.java"
public class org.json.Cookie {
  public org.json.Cookie();
  public static java.lang.String escape(java.lang.String);
  public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONObject) throws org.json.JSONException;
  public static java.lang.String unescape(java.lang.String);
}
Compiled from "CookieList.java"
public class org.json.CookieList {
  public org.json.CookieList();
  public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONObject) throws org.json.JSONException;
}
Compiled from "HTTP.java"
public class org.json.HTTP {
  public static final java.lang.String CRLF;
  public org.json.HTTP();
  public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONObject) throws org.json.JSONException;
}
Compiled from "HTTPTokener.java"
public class org.json.HTTPTokener extends org.json.JSONTokener {
  public org.json.HTTPTokener(java.lang.String);
  public java.lang.String nextToken() throws org.json.JSONException;
}
Compiled from "JSONArray.java"
public class org.json.JSONArray {
  public org.json.JSONArray();
  public org.json.JSONArray(org.json.JSONTokener) throws org.json.JSONException;
  public org.json.JSONArray(java.lang.String) throws org.json.JSONException;
  public org.json.JSONArray(java.util.Collection);
  public org.json.JSONArray(java.util.Collection, boolean);
  public org.json.JSONArray(java.lang.Object) throws org.json.JSONException;
  public org.json.JSONArray(java.lang.Object, boolean) throws org.json.JSONException;
  public java.lang.Object get(int) throws org.json.JSONException;
  public boolean getBoolean(int) throws org.json.JSONException;
  public double getDouble(int) throws org.json.JSONException;
  public int getInt(int) throws org.json.JSONException;
  public org.json.JSONArray getJSONArray(int) throws org.json.JSONException;
  public org.json.JSONObject getJSONObject(int) throws org.json.JSONException;
  public long getLong(int) throws org.json.JSONException;
  public java.lang.String getString(int) throws org.json.JSONException;
  public boolean isNull(int);
  public java.lang.String join(java.lang.String) throws org.json.JSONException;
  public int length();
  public java.lang.Object opt(int);
  public boolean optBoolean(int);
  public boolean optBoolean(int, boolean);
  public double optDouble(int);
  public double optDouble(int, double);
  public int optInt(int);
  public int optInt(int, int);
  public org.json.JSONArray optJSONArray(int);
  public org.json.JSONObject optJSONObject(int);
  public long optLong(int);
  public long optLong(int, long);
  public java.lang.String optString(int);
  public java.lang.String optString(int, java.lang.String);
  public org.json.JSONArray put(boolean);
  public org.json.JSONArray put(java.util.Collection);
  public org.json.JSONArray put(double) throws org.json.JSONException;
  public org.json.JSONArray put(int);
  public org.json.JSONArray put(long);
  public org.json.JSONArray put(java.util.Map);
  public org.json.JSONArray put(java.lang.Object);
  public org.json.JSONArray put(int, boolean) throws org.json.JSONException;
  public org.json.JSONArray put(int, java.util.Collection) throws org.json.JSONException;
  public org.json.JSONArray put(int, double) throws org.json.JSONException;
  public org.json.JSONArray put(int, int) throws org.json.JSONException;
  public org.json.JSONArray put(int, long) throws org.json.JSONException;
  public org.json.JSONArray put(int, java.util.Map) throws org.json.JSONException;
  public org.json.JSONArray put(int, java.lang.Object) throws org.json.JSONException;
  public java.lang.Object remove(int);
  public org.json.JSONObject toJSONObject(org.json.JSONArray) throws org.json.JSONException;
  public java.lang.String toString();
  public java.lang.String toString(int) throws org.json.JSONException;
  java.lang.String toString(int, int) throws org.json.JSONException;
  public java.io.Writer write(java.io.Writer) throws org.json.JSONException;
}
Compiled from "JSONException.java"
public class org.json.JSONException extends java.lang.Exception {
  public org.json.JSONException(java.lang.String);
  public org.json.JSONException(java.lang.Throwable);
  public java.lang.Throwable getCause();
}
Compiled from "JSONML.java"
public class org.json.JSONML {
  public org.json.JSONML();
  public static org.json.JSONArray toJSONArray(java.lang.String) throws org.json.JSONException;
  public static org.json.JSONArray toJSONArray(org.json.XMLTokener) throws org.json.JSONException;
  public static org.json.JSONObject toJSONObject(org.json.XMLTokener) throws org.json.JSONException;
  public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONArray) throws org.json.JSONException;
  public static java.lang.String toString(org.json.JSONObject) throws org.json.JSONException;
}
Compiled from "JSONObject.java"
public class org.json.JSONObject {
  public static final java.lang.Object NULL;
  public org.json.JSONObject();
  public org.json.JSONObject(org.json.JSONObject, java.lang.String[]) throws org.json.JSONException;
  public org.json.JSONObject(org.json.JSONTokener) throws org.json.JSONException;
  public org.json.JSONObject(java.util.Map);
  public org.json.JSONObject(java.util.Map, boolean);
  public org.json.JSONObject(java.lang.Object);
  public org.json.JSONObject(java.lang.Object, boolean);
  static boolean isStandardProperty(java.lang.Class);
  public org.json.JSONObject(java.lang.Object, java.lang.String[]);
  public org.json.JSONObject(java.lang.String) throws org.json.JSONException;
  public org.json.JSONObject accumulate(java.lang.String, java.lang.Object) throws org.json.JSONException;
  public org.json.JSONObject append(java.lang.String, java.lang.Object) throws org.json.JSONException;
  public static java.lang.String doubleToString(double);
  public java.lang.Object get(java.lang.String) throws org.json.JSONException;
  public boolean getBoolean(java.lang.String) throws org.json.JSONException;
  public double getDouble(java.lang.String) throws org.json.JSONException;
  public int getInt(java.lang.String) throws org.json.JSONException;
  public org.json.JSONArray getJSONArray(java.lang.String) throws org.json.JSONException;
  public org.json.JSONObject getJSONObject(java.lang.String) throws org.json.JSONException;
  public long getLong(java.lang.String) throws org.json.JSONException;
  public static java.lang.String[] getNames(org.json.JSONObject);
  public static java.lang.String[] getNames(java.lang.Object);
  public java.lang.String getString(java.lang.String) throws org.json.JSONException;
  public boolean has(java.lang.String);
  public boolean isNull(java.lang.String);
  public java.util.Iterator keys();
  public int length();
  public org.json.JSONArray names();
  public static java.lang.String numberToString(java.lang.Number) throws org.json.JSONException;
  public java.lang.Object opt(java.lang.String);
  public boolean optBoolean(java.lang.String);
  public boolean optBoolean(java.lang.String, boolean);
  public org.json.JSONObject put(java.lang.String, java.util.Collection) throws org.json.JSONException;
  public double optDouble(java.lang.String);
  public double optDouble(java.lang.String, double);
  public int optInt(java.lang.String);
  public int optInt(java.lang.String, int);
  public org.json.JSONArray optJSONArray(java.lang.String);
  public org.json.JSONObject optJSONObject(java.lang.String);
  public long optLong(java.lang.String);
  public long optLong(java.lang.String, long);
  public java.lang.String optString(java.lang.String);
  public java.lang.String optString(java.lang.String, java.lang.String);
  public org.json.JSONObject put(java.lang.String, boolean) throws org.json.JSONException;
  public org.json.JSONObject put(java.lang.String, double) throws org.json.JSONException;
  public org.json.JSONObject put(java.lang.String, int) throws org.json.JSONException;
  public org.json.JSONObject put(java.lang.String, long) throws org.json.JSONException;
  public org.json.JSONObject put(java.lang.String, java.util.Map) throws org.json.JSONException;
  public org.json.JSONObject put(java.lang.String, java.lang.Object) throws org.json.JSONException;
  public org.json.JSONObject putOnce(java.lang.String, java.lang.Object) throws org.json.JSONException;
  public org.json.JSONObject putOpt(java.lang.String, java.lang.Object) throws org.json.JSONException;
  public static java.lang.String quote(java.lang.String);
  public java.lang.Object remove(java.lang.String);
  public java.util.Iterator sortedKeys();
  public static java.lang.Object stringToValue(java.lang.String);
  static void testValidity(java.lang.Object) throws org.json.JSONException;
  public org.json.JSONArray toJSONArray(org.json.JSONArray) throws org.json.JSONException;
  public java.lang.String toString();
  public java.lang.String toString(int) throws org.json.JSONException;
  java.lang.String toString(int, int) throws org.json.JSONException;
  static java.lang.String valueToString(java.lang.Object) throws org.json.JSONException;
  static java.lang.String valueToString(java.lang.Object, int, int) throws org.json.JSONException;
  public java.io.Writer write(java.io.Writer) throws org.json.JSONException;
  static {};
}
Compiled from "JSONObject.java"
class org.json.JSONObject$1 {
}
Compiled from "JSONObject.java"
final class org.json.JSONObject$Null {
  protected final java.lang.Object clone();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  org.json.JSONObject$Null(org.json.JSONObject$1);
}
Compiled from "JSONString.java"
public interface org.json.JSONString {
  public abstract java.lang.String toJSONString();
}
Compiled from "JSONStringer.java"
public class org.json.JSONStringer extends org.json.JSONWriter {
  public org.json.JSONStringer();
  public java.lang.String toString();
}
Compiled from "JSONTokener.java"
public class org.json.JSONTokener {
  public org.json.JSONTokener(java.io.Reader);
  public org.json.JSONTokener(java.lang.String);
  public void back() throws org.json.JSONException;
  public static int dehexchar(char);
  public boolean more() throws org.json.JSONException;
  public char next() throws org.json.JSONException;
  public char next(char) throws org.json.JSONException;
  public java.lang.String next(int) throws org.json.JSONException;
  public char nextClean() throws org.json.JSONException;
  public java.lang.String nextString(char) throws org.json.JSONException;
  public java.lang.String nextTo(char) throws org.json.JSONException;
  public java.lang.String nextTo(java.lang.String) throws org.json.JSONException;
  public java.lang.Object nextValue() throws org.json.JSONException;
  public char skipTo(char) throws org.json.JSONException;
  public org.json.JSONException syntaxError(java.lang.String);
  public java.lang.String toString();
}
Compiled from "JSONWriter.java"
public class org.json.JSONWriter {
  protected char mode;
  protected java.io.Writer writer;
  public org.json.JSONWriter(java.io.Writer);
  public org.json.JSONWriter array() throws org.json.JSONException;
  public org.json.JSONWriter endArray() throws org.json.JSONException;
  public org.json.JSONWriter endObject() throws org.json.JSONException;
  public org.json.JSONWriter key(java.lang.String) throws org.json.JSONException;
  public org.json.JSONWriter object() throws org.json.JSONException;
  public org.json.JSONWriter value(boolean) throws org.json.JSONException;
  public org.json.JSONWriter value(double) throws org.json.JSONException;
  public org.json.JSONWriter value(long) throws org.json.JSONException;
  public org.json.JSONWriter value(java.lang.Object) throws org.json.JSONException;
}
Compiled from "Test.java"
public class org.json.Test {
  public org.json.Test();
  public static void main(java.lang.String[]);
}
Compiled from "Test.java"
class org.json.Test$1Obj implements org.json.JSONString {
  public java.lang.String aString;
  public double aNumber;
  public boolean aBoolean;
  public org.json.Test$1Obj(java.lang.String, double, boolean);
  public double getNumber();
  public java.lang.String getString();
  public boolean isBoolean();
  public java.lang.String getBENT();
  public java.lang.String getX();
  public java.lang.String toJSONString();
  public java.lang.String toString();
}
Compiled from "XML.java"
public class org.json.XML {
  public static final java.lang.Character AMP;
  public static final java.lang.Character APOS;
  public static final java.lang.Character BANG;
  public static final java.lang.Character EQ;
  public static final java.lang.Character GT;
  public static final java.lang.Character LT;
  public static final java.lang.Character QUEST;
  public static final java.lang.Character QUOT;
  public static final java.lang.Character SLASH;
  public org.json.XML();
  public static java.lang.String escape(java.lang.String);
  public static void noSpace(java.lang.String) throws org.json.JSONException;
  public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException;
  public static java.lang.String toString(java.lang.Object) throws org.json.JSONException;
  public static java.lang.String toString(java.lang.Object, java.lang.String) throws org.json.JSONException;
  static {};
}
Compiled from "XMLTokener.java"
public class org.json.XMLTokener extends org.json.JSONTokener {
  public static final java.util.HashMap entity;
  public org.json.XMLTokener(java.lang.String);
  public java.lang.String nextCDATA() throws org.json.JSONException;
  public java.lang.Object nextContent() throws org.json.JSONException;
  public java.lang.Object nextEntity(char) throws org.json.JSONException;
  public java.lang.Object nextMeta() throws org.json.JSONException;
  public java.lang.Object nextToken() throws org.json.JSONException;
  public boolean skipPast(java.lang.String) throws org.json.JSONException;
  static {};
}
