Compiled from "Main.java"
public class Main {
  public Main();
  public static void main(java.lang.String[]);
}
Compiled from "Emit.java"
public class backend.Emit {
  public static java.util.Hashtable ht;
  public static java.lang.String ins;
  public backend.Emit();
  public void createHash();
  public static void execute(java.util.StringTokenizer);
  public static int ct(java.lang.String);
}
Compiled from "FirstPass.java"
public class backend.FirstPass {
  public static java.util.Hashtable branchtable;
  public static java.lang.Object[][] obj;
  public backend.FirstPass();
  public static int scan(java.io.File);
  static {};
}
Compiled from "InstructionSet.java"
public class backend.InstructionSet {
  public backend.InstructionSet();
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$ADD extends java.lang.Enum<backend.InstructionSet$ADD> {
  public static final backend.InstructionSet$ADD ADD;
  public static final backend.InstructionSet$ADD ADDU;
  public static final backend.InstructionSet$ADD ADDH;
  public static backend.InstructionSet$ADD[] values();
  public static backend.InstructionSet$ADD valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$AND extends java.lang.Enum<backend.InstructionSet$AND> {
  public static final backend.InstructionSet$AND AND;
  public static final backend.InstructionSet$AND ANDU;
  public static final backend.InstructionSet$AND ANDH;
  public static backend.InstructionSet$AND[] values();
  public static backend.InstructionSet$AND valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$ASR extends java.lang.Enum<backend.InstructionSet$ASR> {
  public static final backend.InstructionSet$ASR ASR;
  public static backend.InstructionSet$ASR[] values();
  public static backend.InstructionSet$ASR valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$B extends java.lang.Enum<backend.InstructionSet$B> {
  public static final backend.InstructionSet$B B;
  public static backend.InstructionSet$B[] values();
  public static backend.InstructionSet$B valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$BEQ extends java.lang.Enum<backend.InstructionSet$BEQ> {
  public static final backend.InstructionSet$BEQ BEQ;
  public static backend.InstructionSet$BEQ[] values();
  public static backend.InstructionSet$BEQ valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$BGT extends java.lang.Enum<backend.InstructionSet$BGT> {
  public static final backend.InstructionSet$BGT BGT;
  public static backend.InstructionSet$BGT[] values();
  public static backend.InstructionSet$BGT valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$CALL extends java.lang.Enum<backend.InstructionSet$CALL> {
  public static final backend.InstructionSet$CALL CALL;
  public static backend.InstructionSet$CALL[] values();
  public static backend.InstructionSet$CALL valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$CMP extends java.lang.Enum<backend.InstructionSet$CMP> {
  public static final backend.InstructionSet$CMP CMP;
  public static final backend.InstructionSet$CMP CMPU;
  public static final backend.InstructionSet$CMP CMPH;
  public static backend.InstructionSet$CMP[] values();
  public static backend.InstructionSet$CMP valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$DIV extends java.lang.Enum<backend.InstructionSet$DIV> {
  public static final backend.InstructionSet$DIV DIV;
  public static final backend.InstructionSet$DIV DIVU;
  public static final backend.InstructionSet$DIV DIVH;
  public static backend.InstructionSet$DIV[] values();
  public static backend.InstructionSet$DIV valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$LD extends java.lang.Enum<backend.InstructionSet$LD> {
  public static final backend.InstructionSet$LD LD;
  public static backend.InstructionSet$LD[] values();
  public static backend.InstructionSet$LD valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$LSL extends java.lang.Enum<backend.InstructionSet$LSL> {
  public static final backend.InstructionSet$LSL LSL;
  public static backend.InstructionSet$LSL[] values();
  public static backend.InstructionSet$LSL valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$LSR extends java.lang.Enum<backend.InstructionSet$LSR> {
  public static final backend.InstructionSet$LSR LSR;
  public static backend.InstructionSet$LSR[] values();
  public static backend.InstructionSet$LSR valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$MOD extends java.lang.Enum<backend.InstructionSet$MOD> {
  public static final backend.InstructionSet$MOD MOD;
  public static final backend.InstructionSet$MOD MODU;
  public static final backend.InstructionSet$MOD MODH;
  public static backend.InstructionSet$MOD[] values();
  public static backend.InstructionSet$MOD valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$MOV extends java.lang.Enum<backend.InstructionSet$MOV> {
  public static final backend.InstructionSet$MOV MOV;
  public static final backend.InstructionSet$MOV MOVU;
  public static final backend.InstructionSet$MOV MOVH;
  public static backend.InstructionSet$MOV[] values();
  public static backend.InstructionSet$MOV valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$MUL extends java.lang.Enum<backend.InstructionSet$MUL> {
  public static final backend.InstructionSet$MUL MUL;
  public static final backend.InstructionSet$MUL MULU;
  public static final backend.InstructionSet$MUL MULH;
  public static backend.InstructionSet$MUL[] values();
  public static backend.InstructionSet$MUL valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$NOP extends java.lang.Enum<backend.InstructionSet$NOP> {
  public static final backend.InstructionSet$NOP NOP;
  public static backend.InstructionSet$NOP[] values();
  public static backend.InstructionSet$NOP valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$NOT extends java.lang.Enum<backend.InstructionSet$NOT> {
  public static final backend.InstructionSet$NOT NOT;
  public static final backend.InstructionSet$NOT NOTU;
  public static final backend.InstructionSet$NOT NOTH;
  public static backend.InstructionSet$NOT[] values();
  public static backend.InstructionSet$NOT valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$OR extends java.lang.Enum<backend.InstructionSet$OR> {
  public static final backend.InstructionSet$OR OR;
  public static final backend.InstructionSet$OR ORH;
  public static final backend.InstructionSet$OR ORU;
  public static backend.InstructionSet$OR[] values();
  public static backend.InstructionSet$OR valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$PRINT extends java.lang.Enum<backend.InstructionSet$PRINT> {
  public static final backend.InstructionSet$PRINT PRINT;
  public static backend.InstructionSet$PRINT[] values();
  public static backend.InstructionSet$PRINT valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$RET extends java.lang.Enum<backend.InstructionSet$RET> {
  public static final backend.InstructionSet$RET RET;
  public static backend.InstructionSet$RET[] values();
  public static backend.InstructionSet$RET valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$ST extends java.lang.Enum<backend.InstructionSet$ST> {
  public static final backend.InstructionSet$ST ST;
  public static backend.InstructionSet$ST[] values();
  public static backend.InstructionSet$ST valueOf(java.lang.String);
  static {};
}
Compiled from "InstructionSet.java"
public final class backend.InstructionSet$SUB extends java.lang.Enum<backend.InstructionSet$SUB> {
  public static final backend.InstructionSet$SUB SUB;
  public static final backend.InstructionSet$SUB SUBU;
  public static final backend.InstructionSet$SUB SUBH;
  public static backend.InstructionSet$SUB[] values();
  public static backend.InstructionSet$SUB valueOf(java.lang.String);
  static {};
}
Compiled from "Memory.java"
public class backend.Memory {
  public static java.util.HashMap memory;
  public static java.lang.Object[][] disp_mem;
  public static java.lang.Integer n;
  public backend.Memory();
  public static int get(int);
  public static int getsize();
  public static void put(int, int);
  public static java.lang.Object[][] display(int);
}
Compiled from "NFlagRegister.java"
public class backend.NFlagRegister {
  public static int GT;
  public static int E;
  public backend.NFlagRegister();
}
Compiled from "Register.java"
public class backend.Register {
  public static backend.Register_spec[] r;
  public backend.Register();
  public static void resetRegisters();
  public static int convertRegister(java.lang.String);
}
Compiled from "Register_spec.java"
public class backend.Register_spec {
  public java.lang.Integer b;
  backend.Register_spec();
  public void storeValue(int);
  public int value();
  public int firstByteValue();
  public int first5bitValue();
  int sign();
}
Compiled from "RemoveComments.java"
public class backend.RemoveComments {
  public static boolean flagcomment;
  public static boolean flag;
  public backend.RemoveComments();
  public static void setflag(boolean);
  public static java.lang.String RC(java.lang.String);
  public static boolean getcommetnflag();
  static {};
}
Compiled from "ScanFile.java"
public class backend.ScanFile implements java.lang.Runnable {
  public static boolean onconsole;
  public static boolean mainPresent;
  public static int endOfProgram;
  public static long mainPosition;
  java.lang.Thread t;
  public static java.io.File path;
  backend.SetBreakpoint ob_bkpt;
  public static int shiftType;
  public static int reg1orimm0;
  public static int regnoOrImmOp;
  public static int shiftregno;
  public static int ini_pos;
  public static java.lang.Long pos;
  public static java.io.RandomAccessFile br;
  public static java.lang.Integer current_line;
  static int ioflag;
  public static int call_count;
  public static java.lang.String ins;
  public static java.lang.String stepins;
  public static int exr;
  public static java.lang.String rawins;
  public static int getLineNumber(javax.swing.JEditorPane, int);
  public backend.ScanFile(java.io.File);
  public backend.ScanFile(java.io.File, backend.SetBreakpoint);
  public void scanStart();
  static void tokenizeInstruction(java.lang.String);
  public void run();
  static {};
}
Compiled from "SetBreakpoint.java"
public class backend.SetBreakpoint {
  public java.util.List breakpoints;
  public backend.SetBreakpoint();
  public void Set_Breakpoint(java.util.List);
  public boolean checkbreakpt(java.lang.String);
}
Compiled from "StepRun.java"
public class backend.StepRun implements java.lang.Runnable {
  public java.lang.Thread t;
  public java.io.File fpath;
  public static int ini_line;
  public static int fin_line;
  public static int initial_pos;
  public static boolean callbbeq;
  public static boolean stepruncomment;
  public static int end_pos;
  public static int transfer;
  public static int srun;
  public static boolean commentflag;
  public backend.StepRun(java.io.File, int, int, int);
  public void scanStart();
  public void run();
  static {};
}
Compiled from "ADD.java"
public class backend.instructions.ADD implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  static int no3;
  static int chck;
  static int operand_2;
  public backend.instructions.ADD();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "AND.java"
public class backend.instructions.AND implements backend.instructions.InsInterface4 {
  static java.lang.Integer no;
  static java.lang.Integer no2;
  static java.lang.Integer no3;
  static int operand_2;
  public backend.instructions.AND();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "ASR.java"
public class backend.instructions.ASR implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  public backend.instructions.ASR();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "B.java"
public class backend.instructions.B implements backend.instructions.InsInterface2 {
  public backend.instructions.B();
  public void execute(java.lang.String, java.lang.String);
}
Compiled from "BEQ.java"
public class backend.instructions.BEQ implements backend.instructions.InsInterface2 {
  public backend.instructions.BEQ();
  public void execute(java.lang.String, java.lang.String);
}
Compiled from "BGT.java"
public class backend.instructions.BGT implements backend.instructions.InsInterface2 {
  public backend.instructions.BGT();
  public void execute(java.lang.String, java.lang.String);
}
Compiled from "CALL.java"
public class backend.instructions.CALL implements backend.instructions.InsInterface2 {
  public static java.lang.Long linkregister;
  public backend.instructions.CALL();
  public void execute(java.lang.String, java.lang.String);
  static {};
}
Compiled from "CMP.java"
public class backend.instructions.CMP implements backend.instructions.InsInterface3 {
  static int[] binaryconvert;
  static int no2;
  static int no3;
  static int chck;
  static int b;
  static int operand_2;
  public backend.instructions.CMP();
  public void execute(java.lang.String, java.lang.String, java.lang.String);
  public static void execCMP(java.lang.String, java.lang.String, java.lang.String);
  static {};
}
Compiled from "DIV.java"
public class backend.instructions.DIV implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  public backend.instructions.DIV();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "InsInterface1.java"
public interface backend.instructions.InsInterface1 {
  public abstract void execute(java.lang.String);
}
Compiled from "InsInterface2.java"
public interface backend.instructions.InsInterface2 {
  public abstract void execute(java.lang.String, java.lang.String);
}
Compiled from "InsInterface3.java"
public interface backend.instructions.InsInterface3 {
  public abstract void execute(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "InsInterface4.java"
public interface backend.instructions.InsInterface4 {
  public abstract void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "LD.java"
public class backend.instructions.LD implements backend.instructions.InsInterface3 {
  public backend.instructions.LD();
  public void execute(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "LSL.java"
public class backend.instructions.LSL implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  public backend.instructions.LSL();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "LSR.java"
public class backend.instructions.LSR implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  public backend.instructions.LSR();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "MOD.java"
public class backend.instructions.MOD implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  public backend.instructions.MOD();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "MOV.java"
public class backend.instructions.MOV implements backend.instructions.InsInterface3 {
  static int no2;
  static int no3;
  public backend.instructions.MOV();
  public void execute(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "MUL.java"
public class backend.instructions.MUL implements backend.instructions.InsInterface4 {
  static int no;
  static int no2;
  static int no3;
  public backend.instructions.MUL();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "Myfunction.java"
public class backend.instructions.Myfunction {
  public backend.instructions.Myfunction();
  public static int isInteger(java.lang.String);
  public static int getimme(java.lang.String);
  public static java.lang.Integer evaluateAddress(java.lang.String);
}
Compiled from "NOP.java"
public class backend.instructions.NOP implements backend.instructions.InsInterface1 {
  public backend.instructions.NOP();
  public void execute(java.lang.String);
}
Compiled from "NOT.java"
public class backend.instructions.NOT implements backend.instructions.InsInterface3 {
  static java.lang.Integer no;
  static java.lang.Integer no2;
  static int operand_2;
  public backend.instructions.NOT();
  public void execute(java.lang.String, java.lang.String, java.lang.String);
  public static void execNOT(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "OR.java"
public class backend.instructions.OR implements backend.instructions.InsInterface4 {
  static java.lang.Integer no;
  static java.lang.Integer no2;
  public backend.instructions.OR();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "PRINT.java"
public class backend.instructions.PRINT implements backend.instructions.InsInterface2 {
  public backend.instructions.PRINT();
  public void execute(java.lang.String, java.lang.String);
}
Compiled from "RET.java"
public class backend.instructions.RET implements backend.instructions.InsInterface1 {
  public backend.instructions.RET();
  public void execute(java.lang.String);
}
Compiled from "ST.java"
public class backend.instructions.ST implements backend.instructions.InsInterface3 {
  public backend.instructions.ST();
  public void execute(java.lang.String, java.lang.String, java.lang.String);
}
Compiled from "SUB.java"
public class backend.instructions.SUB implements backend.instructions.InsInterface4 {
  static int[] binaryconvert;
  static int no;
  static int no2;
  static int no3;
  static int chck;
  public backend.instructions.SUB();
  public void execute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  static {};
}
Compiled from "calcop.java"
public class backend.instructions.calcop {
  public backend.instructions.calcop();
  public static int calcvalue(java.lang.String);
}
Compiled from "checkmod.java"
public class backend.instructions.checkmod {
  public backend.instructions.checkmod();
  public static int checkmoduh(java.lang.String);
  public static int modify(java.lang.String, java.lang.String);
}
Compiled from "step_out.java"
public class backend.step_out implements java.lang.Runnable {
  public static java.lang.Long pos;
  public static java.io.RandomAccessFile br;
  public static java.lang.Integer curr_line;
  public static int common;
  public java.lang.Thread t;
  public backend.ScanFile ob;
  public java.io.File fpath;
  public static boolean call;
  public static int initial_pos;
  public static int next;
  public static int i;
  public static int j;
  int exitCondition;
  public backend.step_out(java.io.File, int, int, int);
  public void run();
  public static boolean branchToProcedure(java.lang.String) throws javax.swing.text.BadLocationException;
  public void scanStart() throws java.lang.InterruptedException;
  static {};
}
Compiled from "step_over.java"
public class backend.step_over implements java.lang.Runnable {
  public static boolean barrelshiftpresent;
  public static java.lang.Long pos;
  public static java.io.RandomAccessFile br;
  public static java.lang.Integer current_line;
  public static int ocommon;
  public static int otransfer;
  public static int in_line;
  public static int fi_line;
  public static int f_int;
  public java.lang.Thread t;
  public backend.ScanFile ob;
  public java.io.File fpath;
  public static boolean ocall;
  public static int initial_pos;
  public static int end_pos;
  public static int k;
  public static int onext;
  public static int callEncounter;
  public static int exitCondition;
  backend.StepRun obj;
  public backend.step_over(java.io.File, int, int, int);
  public void run();
  public static boolean branchToProcedure(java.lang.String) throws javax.swing.text.BadLocationException;
  public void scanstart() throws java.lang.InterruptedException;
  static {};
}
Compiled from "ButtonTabComponent.java"
public class frontend.ButtonTabComponent extends javax.swing.JPanel {
  public frontend.ButtonTabComponent(javax.swing.JTabbedPane);
  static java.awt.event.MouseListener access$000();
  static javax.swing.JTabbedPane access$100(frontend.ButtonTabComponent);
  static {};
}
Compiled from "ButtonTabComponent.java"
class frontend.ButtonTabComponent$1 extends javax.swing.JLabel {
  final javax.swing.JTabbedPane val$pane;
  final frontend.ButtonTabComponent this$0;
  frontend.ButtonTabComponent$1(frontend.ButtonTabComponent, javax.swing.JTabbedPane);
  public java.lang.String getText();
}
Compiled from "ButtonTabComponent.java"
final class frontend.ButtonTabComponent$2 extends java.awt.event.MouseAdapter {
  frontend.ButtonTabComponent$2();
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
}
Compiled from "ButtonTabComponent.java"
class frontend.ButtonTabComponent$TabButton extends javax.swing.JButton implements java.awt.event.ActionListener {
  final frontend.ButtonTabComponent this$0;
  public frontend.ButtonTabComponent$TabButton(frontend.ButtonTabComponent);
  public void actionPerformed(java.awt.event.ActionEvent);
  protected void paintComponent(java.awt.Graphics);
}
Compiled from "FrontEnd.java"
public class frontend.FrontEnd extends javax.swing.JFrame {
  static java.lang.String filepath;
  public static java.awt.datatransfer.Clipboard clip;
  public static int exceptionraised;
  java.awt.Dimension dimension;
  public static javax.swing.JTabbedPane check;
  frontend.checkpoint c;
  public static javax.swing.JTabbedPane EditorPane;
  public javax.swing.JTabbedPane SidePane;
  public static javax.swing.JTextPane statuswindow;
  public javax.swing.JScrollPane checkpointsContainer;
  public javax.swing.JScrollPane EditorContainer;
  public static javax.swing.JEditorPane activepane;
  public javax.swing.JScrollPane RegisterContainer;
  public javax.swing.JScrollPane StatusContainer;
  public javax.swing.JScrollPane container;
  public javax.swing.JSplitPane checkpoints;
  public javax.swing.JSplitPane registerPaneAndEditor;
  public javax.swing.JSplitPane OutputAndPanels;
  javax.swing.JMenuBar menu;
  javax.swing.JMenu file;
  javax.swing.JMenu edit;
  javax.swing.JMenu run;
  javax.swing.JMenu help;
  javax.swing.JMenuItem file_new;
  javax.swing.JMenuItem file_open;
  javax.swing.JMenuItem file_save;
  javax.swing.JMenuItem file_exit;
  javax.swing.JMenuItem edit_cut;
  javax.swing.JMenuItem edit_copy;
  javax.swing.JMenuItem edit_paste;
  javax.swing.JMenuItem run_runFile;
  javax.swing.JMenuItem run_stepInto;
  public static javax.swing.JMenuItem run_Next;
  public static javax.swing.JMenuItem run_stepOut;
  public static javax.swing.JMenuItem run_stepOver;
  public static javax.swing.JMenuItem reset;
  public static javax.swing.JMenuItem Shortcut;
  javax.swing.JMenuItem help_about;
  javax.swing.JMenuItem help_contact;
  javax.swing.JMenuItem help_report;
  javax.swing.JMenuItem Features;
  javax.swing.JToolBar toolbar;
  javax.swing.JButton f_new;
  javax.swing.JButton f_open;
  javax.swing.JButton f_save;
  javax.swing.JButton f_exit;
  javax.swing.JButton e_cut;
  javax.swing.JButton e_copy;
  javax.swing.JButton e_paste;
  public static javax.swing.JButton r_runFile;
  javax.swing.JButton h_about;
  javax.swing.JButton h_contact;
  javax.swing.JButton h_report;
  public static javax.swing.JToggleButton onconsole;
  public static javax.swing.JButton r_stepInto;
  public static javax.swing.JButton steprun;
  public static javax.swing.JButton r_stepOut;
  public static javax.swing.JButton r_stepover;
  public static javax.swing.JLabel warning;
  public static javax.swing.JButton cross;
  public static javax.swing.JButton stop_debug_mode;
  public static javax.swing.JButton clr;
  public static javax.swing.JButton clr2;
  frontend.handlers h;
  public frontend.FrontEnd();
  void initializeMenuBar();
  void initializeToolBar();
  public static javax.swing.JSplitPane setDividerLocation(javax.swing.JSplitPane, double);
  public static void addTab(frontend.checkpoint);
  public static void highlight(int, java.lang.String, java.awt.Color);
  public static void appendToPane(javax.swing.JTextPane, java.lang.String, java.awt.Color);
  static {};
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$1 implements java.awt.event.WindowListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$1(frontend.FrontEnd);
  public void windowOpened(java.awt.event.WindowEvent);
  public void windowClosing(java.awt.event.WindowEvent);
  public void windowClosed(java.awt.event.WindowEvent);
  public void windowIconified(java.awt.event.WindowEvent);
  public void windowDeiconified(java.awt.event.WindowEvent);
  public void windowActivated(java.awt.event.WindowEvent);
  public void windowDeactivated(java.awt.event.WindowEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$10 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$10(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$11 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$11(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$12 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$12(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$13 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$13(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$14 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$14(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$15 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$15(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$16 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$16(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$17 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$17(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$18 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$18(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$19 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$19(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$2 extends java.awt.event.ComponentAdapter {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$2(frontend.FrontEnd);
  public void componentResized(java.awt.event.ComponentEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$20 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$20(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$21 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$21(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$22 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$22(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$23 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$23(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$24 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$24(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$25 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$25(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$26 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$26(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$27 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$27(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$28 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$28(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$29 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$29(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$3 implements javax.swing.event.ChangeListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$3(frontend.FrontEnd);
  public void stateChanged(javax.swing.event.ChangeEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$30 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$30(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$31 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$31(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$32 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$32(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$33 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$33(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$34 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$34(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$35 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$35(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$36 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$36(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$37 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$37(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
final class frontend.FrontEnd$38 extends java.awt.event.ComponentAdapter {
  final javax.swing.JSplitPane val$splitter;
  final double val$proportion;
  frontend.FrontEnd$38(javax.swing.JSplitPane, double);
  public void componentResized(java.awt.event.ComponentEvent);
}
Compiled from "FrontEnd.java"
final class frontend.FrontEnd$39 implements java.awt.event.HierarchyListener {
  final javax.swing.JSplitPane val$splitter;
  final double val$proportion;
  frontend.FrontEnd$39(javax.swing.JSplitPane, double);
  public void hierarchyChanged(java.awt.event.HierarchyEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$4 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$4(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$5 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$5(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$6 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$6(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$7 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$7(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$8 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$8(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "FrontEnd.java"
class frontend.FrontEnd$9 implements java.awt.event.ActionListener {
  final frontend.FrontEnd this$0;
  frontend.FrontEnd$9(frontend.FrontEnd);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "JumpTable.java"
public class frontend.JumpTable extends javax.swing.JPanel {
  javax.swing.JLabel label;
  javax.swing.JScrollPane contain;
  javax.swing.JTable jumpTable;
  public static javax.swing.table.DefaultTableModel model2;
  frontend.JumpTable();
}
Compiled from "LinePainter.java"
public class frontend.LinePainter implements javax.swing.text.Highlighter$HighlightPainter,javax.swing.event.CaretListener,java.awt.event.MouseListener,java.awt.event.MouseMotionListener {
  public frontend.LinePainter(javax.swing.text.JTextComponent);
  public frontend.LinePainter(javax.swing.text.JTextComponent, java.awt.Color);
  public void setColor(java.awt.Color);
  public void setLighter(java.awt.Color);
  public void paint(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent);
  public void caretUpdate(javax.swing.event.CaretEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseDragged(java.awt.event.MouseEvent);
  public void mouseMoved(java.awt.event.MouseEvent);
  static javax.swing.text.JTextComponent access$000(frontend.LinePainter);
  static java.awt.Rectangle access$100(frontend.LinePainter);
  static java.awt.Rectangle access$102(frontend.LinePainter, java.awt.Rectangle);
}
Compiled from "LinePainter.java"
class frontend.LinePainter$1 implements java.lang.Runnable {
  final frontend.LinePainter this$0;
  frontend.LinePainter$1(frontend.LinePainter);
  public void run();
}
Compiled from "MyHighlighter.java"
public class frontend.MyHighlighter extends javax.swing.text.DefaultHighlighter {
  public frontend.MyHighlighter();
  public final void install(javax.swing.text.JTextComponent);
  public final void deinstall(javax.swing.text.JTextComponent);
  public final void paint(java.awt.Graphics);
}
Compiled from "registerPane.java"
class frontend.MyPanel extends javax.swing.JPanel {
  public static javax.swing.JPopupMenu menu;
  frontend.handlers h;
  public frontend.MyPanel();
}
Compiled from "registerPane.java"
class frontend.MyPanel$1 implements java.awt.event.ActionListener {
  final frontend.MyPanel this$0;
  frontend.MyPanel$1(frontend.MyPanel);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyPanel$2 implements java.awt.event.ActionListener {
  final frontend.MyPanel this$0;
  frontend.MyPanel$2(frontend.MyPanel);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyPanel$3 implements java.awt.event.ActionListener {
  final frontend.MyPanel this$0;
  frontend.MyPanel$3(frontend.MyPanel);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyPanel$4 implements java.awt.event.ActionListener {
  final frontend.MyPanel this$0;
  frontend.MyPanel$4(frontend.MyPanel);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyPanel$PopupTriggerListener extends java.awt.event.MouseAdapter {
  final frontend.MyPanel this$0;
  frontend.MyPanel$PopupTriggerListener(frontend.MyPanel);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "memorytable.java"
class frontend.MyTableModel extends javax.swing.table.DefaultTableModel {
  public frontend.MyTableModel(java.lang.Object[][], java.lang.Object[]);
  public boolean isCellEditable(int, int);
  public int getRowCount();
}
Compiled from "JumpTable.java"
class frontend.MyTableModel2 extends javax.swing.table.DefaultTableModel {
  public frontend.MyTableModel2(java.lang.Object[][], java.lang.Object[]);
  public boolean isCellEditable(int, int);
  public int getRowCount();
}
Compiled from "registerPane.java"
class frontend.MyTextField extends javax.swing.JTextField {
  public static javax.swing.JPopupMenu menu;
  frontend.handlers h;
  public frontend.MyTextField(java.lang.String);
}
Compiled from "registerPane.java"
class frontend.MyTextField$1 implements java.awt.event.ActionListener {
  final frontend.MyTextField this$0;
  frontend.MyTextField$1(frontend.MyTextField);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyTextField$2 implements java.awt.event.ActionListener {
  final frontend.MyTextField this$0;
  frontend.MyTextField$2(frontend.MyTextField);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyTextField$3 implements java.awt.event.ActionListener {
  final frontend.MyTextField this$0;
  frontend.MyTextField$3(frontend.MyTextField);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyTextField$4 implements java.awt.event.ActionListener {
  final frontend.MyTextField this$0;
  frontend.MyTextField$4(frontend.MyTextField);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "registerPane.java"
class frontend.MyTextField$PopupTriggerListener extends java.awt.event.MouseAdapter {
  final frontend.MyTextField this$0;
  frontend.MyTextField$PopupTriggerListener(frontend.MyTextField);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "memorytable.java"
class frontend.NP extends javax.swing.JPanel {
  javax.swing.JLabel label;
  javax.swing.JScrollPane contain;
  javax.swing.JTable jumpTable;
  public static javax.swing.table.DefaultTableModel model2;
  public static javax.swing.JPopupMenu menu;
  frontend.handlers h;
  public frontend.NP();
}
Compiled from "memorytable.java"
class frontend.NP$1 implements java.awt.event.ActionListener {
  final frontend.NP this$0;
  frontend.NP$1(frontend.NP);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "memorytable.java"
class frontend.NP$2 implements java.awt.event.ActionListener {
  final frontend.NP this$0;
  frontend.NP$2(frontend.NP);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "memorytable.java"
class frontend.NP$3 implements java.awt.event.ActionListener {
  final frontend.NP this$0;
  frontend.NP$3(frontend.NP);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "memorytable.java"
class frontend.NP$4 implements java.awt.event.ActionListener {
  final frontend.NP this$0;
  frontend.NP$4(frontend.NP);
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "memorytable.java"
class frontend.NP$PopupTriggerListener extends java.awt.event.MouseAdapter {
  final frontend.NP this$0;
  frontend.NP$PopupTriggerListener(frontend.NP);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
  public void mouseClicked(java.awt.event.MouseEvent);
}
Compiled from "NumberedEditorKit.java"
class frontend.NumberedEditorKit extends javax.swing.text.StyledEditorKit {
  frontend.NumberedEditorKit();
  public javax.swing.text.ViewFactory getViewFactory();
}
Compiled from "NumberedViewFactory.java"
public class frontend.NumberedViewFactory implements javax.swing.text.ViewFactory {
  static int lc;
  public frontend.NumberedViewFactory();
  public javax.swing.text.View create(javax.swing.text.Element);
}
Compiled from "NumberedViewFactory.java"
public class frontend.NumberedViewFactory$NumberedParagraphView extends javax.swing.text.ParagraphView {
  public static short NUMBERS_WIDTH;
  public frontend.NumberedViewFactory$NumberedParagraphView(javax.swing.text.Element);
  protected void setInsets(short, short, short, short);
  public void paintChild(java.awt.Graphics, java.awt.Rectangle, int);
  public int getPreviousLineCount();
  static {};
}
Compiled from "checkpoint.java"
public class frontend.checkpoint extends javax.swing.JPanel implements java.awt.event.ActionListener {
  java.util.ArrayList<java.lang.Integer> list;
  static int incr;
  static java.lang.Integer fin_line;
  static java.lang.Integer ini_line;
  int ct;
  public frontend.checkpoint(int);
  public static void reset();
  public void actionPerformed(java.awt.event.ActionEvent);
  static {};
}
Compiled from "handlers.java"
public class frontend.handlers {
  public static int countOpened;
  public static int regMode;
  public static javax.swing.text.Highlighter$HighlightPainter cyanPainter;
  public static javax.swing.text.Highlighter$HighlightPainter redpainter;
  static int ini_line;
  static int fin_line;
  public static int debugMode;
  frontend.checkpoint b;
  static backend.StepRun obj;
  static backend.step_out obj2;
  static backend.step_over obj3;
  static int f;
  public frontend.handlers();
  void newFile();
  void openfile();
  void savefile();
  void exit();
  void cut() throws javax.swing.text.BadLocationException;
  void copy();
  void paste();
  void run();
  static void assignIniFin(int, int);
  void stepover();
  void stepout();
  void stepinto();
  public static void update_memorytable(int, int);
  public static void clean_branchtable();
  public static void clean_memtable();
  public void open(java.io.File);
  public static void update_branchtable(java.lang.Integer);
  public void update(int);
  void EditorStateChanged(javax.swing.event.ChangeEvent);
  public void steprun2() throws java.io.IOException;
  void steprunActionPerformed(java.awt.event.ActionEvent) throws java.io.IOException;
  void stopdebugmode(java.awt.event.ActionEvent) throws java.io.IOException;
  static {};
}
Compiled from "handlers.java"
class frontend.handlers$1 implements java.lang.Runnable {
  final int val$ch;
  final frontend.handlers this$0;
  frontend.handlers$1(frontend.handlers, int);
  public void run();
}
Compiled from "handlers.java"
class frontend.handlers$MyCustomFilter extends javax.swing.filechooser.FileFilter {
  final frontend.handlers this$0;
  frontend.handlers$MyCustomFilter(frontend.handlers);
  public boolean accept(java.io.File);
  public java.lang.String getDescription();
}
Compiled from "memorytable.java"
public class frontend.memorytable extends frontend.NP {
  frontend.memorytable();
}
Compiled from "registerPane.java"
public class frontend.registerPane extends frontend.MyPanel {
  public static frontend.MyTextField r0_t;
  public static javax.swing.JTextField r1_t;
  public static javax.swing.JTextField r2_t;
  public static javax.swing.JTextField r3_t;
  public static javax.swing.JTextField r4_t;
  public static javax.swing.JTextField r5_t;
  public static javax.swing.JTextField r6_t;
  public static javax.swing.JTextField r7_t;
  public static javax.swing.JTextField r8_t;
  public static javax.swing.JTextField r9_t;
  public static javax.swing.JTextField r10_t;
  public static javax.swing.JTextField r11_t;
  public static javax.swing.JTextField r12_t;
  public static javax.swing.JTextField r13_t;
  public static javax.swing.JTextField r14_t;
  public static javax.swing.JTextField r15_t;
  public static javax.swing.JTextField GT_t;
  public static javax.swing.JTextField E_t;
  public static javax.swing.JTextField PC_t;
  public frontend.registerPane();
}
