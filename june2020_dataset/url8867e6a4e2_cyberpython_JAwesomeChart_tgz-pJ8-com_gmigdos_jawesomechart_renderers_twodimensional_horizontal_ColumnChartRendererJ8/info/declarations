Compiled from "JAwesomeChart.java"
public class com.gmigdos.jawesomechart.JAwesomeChart {
  public static final java.awt.Color TRANSPARENT;
  public com.gmigdos.jawesomechart.JAwesomeChart(int, int);
  public void clearSeries();
  public void addSeries(java.lang.String, double[], java.awt.Color);
  public void addSeries(java.lang.String, double[]);
  public void draw(java.awt.Graphics);
  public int getWidth();
  public void setWidth(int);
  public int getHeight();
  public void setHeight(int);
  public com.gmigdos.jawesomechart.core.DataSeriesList getDataseries();
  public void setDataseries(com.gmigdos.jawesomechart.core.DataSeriesList);
  public com.gmigdos.jawesomechart.core.Labels getLabels();
  public void setLabels(com.gmigdos.jawesomechart.core.Labels);
  public void setLabels(java.lang.String[]);
  public com.gmigdos.jawesomechart.renderers.ChartRenderer getRenderer();
  public void setRenderer(com.gmigdos.jawesomechart.renderers.ChartRenderer);
  public com.gmigdos.jawesomechart.core.Legend getLegend();
  public void setLegend(com.gmigdos.jawesomechart.core.Legend);
  public java.lang.String getTitle();
  public void setTitle(java.lang.String);
  public java.lang.String getSubtitle();
  public void setSubtitle(java.lang.String);
  public double getPaddingTop();
  public void setPaddingTop(double);
  public double getPaddingBottom();
  public void setPaddingBottom(double);
  public double getPaddingLeft();
  public void setPaddingLeft(double);
  public double getPaddingRight();
  public void setPaddingRight(double);
  public double getTitleMargin();
  public void setTitleMargin(double);
  public double getSubtitleMargin();
  public void setSubtitleMargin(double);
  public double getLegendMargin();
  public void setLegendMargin(double);
  public java.awt.Font getTitleFont();
  public void setTitleFont(java.awt.Font);
  public java.awt.Font getSubtitleFont();
  public void setSubtitleFont(java.awt.Font);
  public java.awt.Color getTitleColor();
  public void setTitleColor(java.awt.Color);
  public java.awt.Color getSubtitleColor();
  public void setSubtitleColor(java.awt.Color);
  public java.awt.Paint getBackgroundPaint();
  public void setBackgroundPaint(java.awt.Paint);
  public java.awt.Paint getBorderPaint();
  public void setBorderPaint(java.awt.Paint);
  public java.awt.BasicStroke getBorderStroke();
  public void setBorderStroke(java.awt.BasicStroke);
  public boolean isDrawLegendOn();
  public void setDrawLegend(boolean);
  public static void drawAndSaveChartAsImageFile(com.gmigdos.jawesomechart.JAwesomeChart, java.lang.String);
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "DataComparator.java"
public class com.gmigdos.jawesomechart.core.DataComparator implements java.util.Comparator<com.gmigdos.jawesomechart.core.DataSeriesDataProvider> {
  public com.gmigdos.jawesomechart.core.DataComparator();
  public int compare(com.gmigdos.jawesomechart.core.DataSeriesDataProvider, com.gmigdos.jawesomechart.core.DataSeriesDataProvider);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "DataSeries.java"
public class com.gmigdos.jawesomechart.core.DataSeries extends java.util.ArrayList<com.gmigdos.jawesomechart.core.DataSeriesDataProvider> {
  public com.gmigdos.jawesomechart.core.DataSeries();
  public com.gmigdos.jawesomechart.core.DataSeries(java.lang.String, java.awt.Color);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.awt.Color getSeriesColor();
  public void setSeriesColor(java.awt.Color);
  public java.lang.Double getMaxValue();
  public java.lang.Double getMinValue();
  public com.gmigdos.jawesomechart.core.DataSeriesDataProvider get(int);
  public java.lang.Object get(int);
  static {};
}
Compiled from "DataSeriesDataProvider.java"
public interface com.gmigdos.jawesomechart.core.DataSeriesDataProvider extends com.gmigdos.jawesomechart.util.Subject {
  public abstract java.lang.Double getDataValue();
  public abstract java.lang.String toString(java.text.DecimalFormat);
}
Compiled from "DataSeriesList.java"
public class com.gmigdos.jawesomechart.core.DataSeriesList extends java.util.ArrayList<com.gmigdos.jawesomechart.core.DataSeries> {
  public com.gmigdos.jawesomechart.core.DataSeriesList();
  public void addSeries(java.lang.String, double[], java.awt.Color);
  public void addSeries(java.lang.String, double[]);
  public java.lang.Double getMaxValue();
  public java.lang.Double getMaxValueOnFirstColumn();
  public java.lang.Double getMinValue();
  public java.lang.Double getMinValueOnFirstColumn();
  public double getSumOfPositivesOnFirstColumn();
  public int getPositiveCountOnFirstColumn();
  public int getMaxDataSeriesLength();
  public int getMinDataSeriesLength();
  public java.lang.String getLongestName();
}
Compiled from "Labels.java"
public class com.gmigdos.jawesomechart.core.Labels extends java.util.ArrayList<java.lang.String> {
  public com.gmigdos.jawesomechart.core.Labels();
  public java.lang.String getLongestItem();
  public java.lang.String get(int);
  public java.lang.Object get(int);
}
Compiled from "Legend.java"
public class com.gmigdos.jawesomechart.core.Legend {
  public com.gmigdos.jawesomechart.core.Legend(double, double, com.gmigdos.jawesomechart.core.DataSeriesList);
  public com.gmigdos.jawesomechart.core.Legend(com.gmigdos.jawesomechart.core.Legend$LegendPosition, double, double, com.gmigdos.jawesomechart.core.DataSeriesList);
  public com.gmigdos.jawesomechart.util.Context2D getContext();
  public void setContext(com.gmigdos.jawesomechart.util.Context2D);
  public com.gmigdos.jawesomechart.core.Legend$LegendPosition getPosition();
  public void setPosition(com.gmigdos.jawesomechart.core.Legend$LegendPosition);
  public boolean isPlacedOnLeftOrRight();
  public double getHeight();
  public double getWidth();
  public void setLeftOrRightWidth(double);
  public void setTopOrBottomWidth(double);
  public com.gmigdos.jawesomechart.core.DataSeriesList getSeries();
  public void setSeries(com.gmigdos.jawesomechart.core.DataSeriesList);
  public double getVerticalGap();
  public void setVerticalGap(double);
  public double getHorizontalGap();
  public void setHorizontalGap(double);
  public java.awt.Font getFont();
  public void setFont(java.awt.Font);
  public void draw();
}
Compiled from "Legend.java"
public final class com.gmigdos.jawesomechart.core.Legend$LegendPosition extends java.lang.Enum<com.gmigdos.jawesomechart.core.Legend$LegendPosition> {
  public static final com.gmigdos.jawesomechart.core.Legend$LegendPosition LEGEND_POSITION_TOP;
  public static final com.gmigdos.jawesomechart.core.Legend$LegendPosition LEGEND_POSITION_BOTTOM;
  public static final com.gmigdos.jawesomechart.core.Legend$LegendPosition LEGEND_POSITION_LEFT;
  public static final com.gmigdos.jawesomechart.core.Legend$LegendPosition LEGEND_POSITION_RIGHT;
  public static com.gmigdos.jawesomechart.core.Legend$LegendPosition[] values();
  public static com.gmigdos.jawesomechart.core.Legend$LegendPosition valueOf(java.lang.String);
  static {};
}
Compiled from "SimpleDataProvider.java"
public class com.gmigdos.jawesomechart.core.dataproviders.SimpleDataProvider implements com.gmigdos.jawesomechart.core.DataSeriesDataProvider {
  public com.gmigdos.jawesomechart.core.dataproviders.SimpleDataProvider(java.lang.Double);
  public java.lang.Double getDataValue();
  public java.lang.Double getValue();
  public java.lang.String toString();
  public java.lang.String toString(java.text.DecimalFormat);
  public void setValue(java.lang.Double);
  public void addObserver(com.gmigdos.jawesomechart.util.Observer);
  public void deleteObserver(com.gmigdos.jawesomechart.util.Observer);
  public void clearObservers();
  public void notifyObservers(java.lang.Object);
}
Compiled from "IllegalValueException.java"
public class com.gmigdos.jawesomechart.exceptions.IllegalValueException extends java.lang.Exception {
  public com.gmigdos.jawesomechart.exceptions.IllegalValueException(java.lang.String);
}
Compiled from "BaseChartRenderer.java"
public class com.gmigdos.jawesomechart.renderers.BaseChartRenderer implements com.gmigdos.jawesomechart.renderers.ChartRenderer {
  public com.gmigdos.jawesomechart.renderers.BaseChartRenderer();
  public double getShadowOffsetX();
  public void setShadowOffsetX(double);
  public double getShadowOffsetY();
  public void setShadowOffsetY(double);
  public int getShadowBlurRadius();
  public void setShadowBlurRadius(int);
  public java.awt.Paint getShadowColor();
  public void setShadowColor(java.awt.Paint);
  public boolean isSeriesNameRenderingOn();
  public void setSeriesNameRenderingOn(boolean);
  public boolean isValueRenderingOn();
  public void setValueRenderingOn(boolean);
  public java.text.DecimalFormat getDecimalFormat();
  public void setDecimalFormat(java.text.DecimalFormat);
  public boolean isShadowsOn();
  public void setShadowsOn(boolean);
  public void setBackgroundFill(java.awt.Paint);
  public java.awt.Paint getBackgroundFill();
  public java.awt.Paint getBorderPaint();
  public void setBorderPaint(java.awt.Paint);
  public java.awt.Stroke getBorderStroke();
  public void setBorderStroke(java.awt.Stroke);
  public void setDefaultGradientPaintForBackground(float);
  public boolean isBgFillModified();
  public double getPaddingTop();
  public void setPaddingTop(double);
  public double getPaddingBottom();
  public void setPaddingBottom(double);
  public double getPaddingLeft();
  public void setPaddingLeft(double);
  public double getPaddingRight();
  public void setPaddingRight(double);
  public double getLabelMargin();
  public void setLabelMargin(double);
  public java.awt.Paint getLabelColor();
  public void setLabelColor(java.awt.Paint);
  public java.awt.Font getLabelFont();
  public void setLabelFont(java.awt.Font);
  public double getValueMargin();
  public void setValueMargin(double);
  public java.awt.Paint getValueColor();
  public void setValueColor(java.awt.Paint);
  public java.awt.Font getValueFont();
  public void setValueFont(java.awt.Font);
  public java.lang.String getHumanReadableName();
  public void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
  static {};
}
Compiled from "ChartRenderer.java"
public interface com.gmigdos.jawesomechart.renderers.ChartRenderer {
  public abstract java.lang.String getHumanReadableName();
  public abstract void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
}
Compiled from "PieChartRenderer.java"
public class com.gmigdos.jawesomechart.renderers.PieChartRenderer extends com.gmigdos.jawesomechart.renderers.BaseChartRenderer {
  public com.gmigdos.jawesomechart.renderers.PieChartRenderer();
  public void setIsDoughnut(boolean);
  public boolean isDoughnut();
  public java.lang.String getHumanReadableName();
  public void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
  public java.awt.Paint getPieBorderColor();
  public void setPieBorderColor(java.awt.Paint);
  public java.awt.Stroke getPieBorderStroke();
  public void setPieBorderStroke(java.awt.Stroke);
  public float getPieFillOpacity();
  public void setPieFillOpacity(float);
  public double getStartAngle();
  public void setStartAngle(double);
  public double getTotal();
  public void setOverrideTotal(boolean, double);
  public double getExplosionOffset();
  public void setExplosionOffset(double);
  public static void main(java.lang.String[]);
}
Compiled from "Basic2DChartRenderer.java"
public abstract class com.gmigdos.jawesomechart.renderers.twodimensional.Basic2DChartRenderer extends com.gmigdos.jawesomechart.renderers.BaseChartRenderer {
  public com.gmigdos.jawesomechart.renderers.twodimensional.Basic2DChartRenderer();
  public java.awt.Font getLabelAxisFont();
  public void setLabelAxisFont(java.awt.Font);
  public java.awt.Font getValueAxisFont();
  public void setValueAxisFont(java.awt.Font);
  public java.awt.Color getLabelAxisTextColor();
  public void setLabelAxisTextColor(java.awt.Color);
  public java.awt.Color getValueAxisTextColor();
  public void setValueAxisTextColor(java.awt.Color);
  public double getLabelAxisMargin();
  public void setLabelAxisMargin(double);
  public double getValueAxisMargin();
  public void setValueAxisMargin(double);
  public boolean isDrawLabelAxisOn();
  public void setDrawLabelAxis(boolean);
  public boolean isDrawValueAxisOn();
  public void setDrawValueAxis(boolean);
  public boolean isDrawHorizontalLinesOn();
  public void setDrawHorizontalLines(boolean);
  public boolean isDrawVerticalLinesOn();
  public void setDrawVerticalLines(boolean);
  public double getAxisMarkerSize();
  public void setAxisMarkerSize(double);
  public java.lang.String getValueAxisCaption();
  public void setValueAxisCaption(java.lang.String);
  public java.lang.String getLabelAxisCaption();
  public void setLabelAxisCaption(java.lang.String);
  public java.awt.Font getValueAxisCaptionFont();
  public void setValueAxisCaptionFont(java.awt.Font);
  public java.awt.Font getLabelAxisCaptionFont();
  public void setLabelAxisCaptionFont(java.awt.Font);
  public java.awt.Color getValueAxisCaptionColor();
  public void setValueAxisCaptionColor(java.awt.Color);
  public java.awt.Color getLabelAxisCaptionColor();
  public void setLabelAxisCaptionColor(java.awt.Color);
  public double getLabelAxisCaptionMargin();
  public void setLabelAxisCaptionMargin(double);
  public double getValueAxisCaptionMargin();
  public void setValueAxisCaptionMargin(double);
  public int getValueAxisSegments();
  public java.awt.Stroke getAxisMarkerStroke();
  public void setAxisMarkerStroke(java.awt.Stroke);
  public java.awt.Stroke getHorizontalLineStroke();
  public void setHorizontalLineStroke(java.awt.Stroke);
  public java.awt.BasicStroke getHorizontalLineStrokeForZero();
  public void setHorizontalLineStrokeForZero(java.awt.BasicStroke);
  public java.awt.Stroke getVerticalLineStroke();
  public void setVerticalLineStroke(java.awt.Stroke);
  public java.awt.Stroke getAxisMarkerStrokeForZero();
  public void setAxisMarkerStrokeForZero(java.awt.Stroke);
  public java.awt.Color getAxisMarkerColor();
  public void setAxisMarkerColor(java.awt.Color);
  public java.awt.Color getAxisMarkerColorForZero();
  public void setAxisMarkerColorForZero(java.awt.Color);
  public java.awt.Color getHorizontalLineColor();
  public void setHorizontalLineColor(java.awt.Color);
  public java.awt.Color getHorizontalLineColorForZero();
  public void setHorizontalLineColorForZero(java.awt.Color);
  public java.awt.Color getVerticalLineColor();
  public void setVerticalLineColor(java.awt.Color);
  public void setValueAxisSegments(int) throws com.gmigdos.jawesomechart.exceptions.IllegalValueException;
  protected java.lang.Double getDataDistance(double, double);
  protected double getPositiveAreaSize(com.gmigdos.jawesomechart.core.DataSeriesList, double);
  protected double getNegativeAreaSize(com.gmigdos.jawesomechart.core.DataSeriesList, double);
  protected java.lang.Double getCentralValue(double, double);
  protected double calculateValueAxisStepInDataScale(double, double);
  public final java.util.List<java.lang.Double> generateValueAxisMarkPositions(double, double, int);
  public java.lang.String getHumanReadableName();
  static {};
}
Compiled from "Basic2DHorizontalChartRenderer.java"
public class com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.Basic2DHorizontalChartRenderer extends com.gmigdos.jawesomechart.renderers.twodimensional.Basic2DChartRenderer {
  public com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.Basic2DHorizontalChartRenderer();
  public void drawValueAxisCaption(double, double, com.gmigdos.jawesomechart.util.Context2D, java.lang.String);
  public void drawLabelAxisCaption(double, double, com.gmigdos.jawesomechart.util.Context2D, java.lang.String);
  public double getOffsetForValueAxisCaption(com.gmigdos.jawesomechart.util.Context2D);
  public double getOffsetForLabelAxisCaption(com.gmigdos.jawesomechart.util.Context2D);
  public double getOffsetForValueAxis(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, java.util.List<java.lang.Double>);
  public double getOffsetForLabelAxis(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.Labels);
  public void drawLabelAxisAndVericallLines(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels, java.util.List<java.lang.Double>);
  public void drawValueAxisAndHorizontalLines(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels, java.util.List<java.lang.Double>);
  public void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
  public java.lang.String getHumanReadableName();
}
Compiled from "ColumnChartRenderer.java"
public class com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.ColumnChartRenderer extends com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.Basic2DHorizontalChartRenderer {
  public com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.ColumnChartRenderer();
  public java.awt.Paint getColumnBorderColor();
  public void setColumnBorderColor(java.awt.Paint);
  public java.awt.Stroke getColumnBorderStroke();
  public void setColumnBorderStroke(java.awt.Stroke);
  public float getColumnOpacity();
  public void setColumnOpacity(float);
  public double getGap();
  public void setGap(double);
  public double getGapBetweenColumns(int);
  public void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
  public double getPaddingTop();
  public double getPaddingBottom();
  public java.lang.String getHumanReadableName();
  public static void main(java.lang.String[]);
}
Compiled from "LineChartRenderer.java"
public class com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.LineChartRenderer extends com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.Basic2DHorizontalChartRenderer {
  public com.gmigdos.jawesomechart.renderers.twodimensional.horizontal.LineChartRenderer();
  public java.awt.Stroke getLineStroke();
  public void setLineStroke(java.awt.Stroke);
  public float getLineOpacity();
  public void setLineOpacity(float);
  public float getPointOpacity();
  public void setPointOpacity(float);
  public double getPointRadius();
  public void setPointRadius(double);
  public boolean isDrawLinesOn();
  public void setDrawLines(boolean);
  public boolean isDrawPointsOn();
  public void setDrawPoints(boolean);
  public java.lang.String getHumanReadableName();
  public void draw(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, com.gmigdos.jawesomechart.core.Labels);
  public static void main(java.lang.String[]);
}
Compiled from "Context2D.java"
public class com.gmigdos.jawesomechart.util.Context2D {
  public static final int VERTICAL_ALIGN_MIDDLE;
  public static final int VERTICAL_ALIGN_TOP;
  public static final int VERTICAL_ALIGN_BOTTOM;
  public static final int VERTICAL_ALIGN_BASELINE;
  public static final int HORIZONTAL_ALIGN_LEFT;
  public static final int HORIZONTAL_ALIGN_CENTER;
  public static final int HORIZONTAL_ALIGN_RIGHT;
  java.awt.image.BufferedImage temporaryImage;
  java.awt.image.BufferedImage shadowImage;
  public com.gmigdos.jawesomechart.util.Context2D(java.awt.Graphics2D, int, int);
  public java.awt.Shape getOriginalClip();
  public void setOriginalClip(java.awt.Shape);
  public int getShadowBlurRadius();
  public void setShadowBlurRadius(int);
  public java.awt.Paint getShadowColor();
  public void setShadowColor(java.awt.Paint);
  public double getShadowXOffset();
  public void setShadowXOffset(double);
  public double getShadowYOffset();
  public void setShadowYOffset(double);
  public double getWidth();
  public double getHeight();
  public void setWidth(double);
  public void setHeight(double);
  public void resize(double, double);
  public java.awt.Graphics2D save();
  public java.awt.Graphics2D restore();
  public java.awt.Graphics2D reset();
  public void setClip(java.awt.Shape);
  public void drawCurrentClip(java.awt.Paint);
  public void resetClip();
  public void clearClip();
  public void translate(double, double);
  public void translate(int, int);
  public void rotate(double);
  public void rotate(double, double, double);
  public void scale(double, double);
  public void transform(java.awt.geom.AffineTransform);
  public java.awt.FontMetrics getFontMetrics();
  public java.awt.Font getFont();
  protected void finalize() throws java.lang.Throwable;
  public void setFont(java.awt.Font);
  public void setPaint(java.awt.Paint);
  public void setPaint(java.awt.Color, float);
  public void setStroke(java.awt.Stroke);
  public void setComposite(java.awt.Composite);
  public java.awt.Composite getComposite();
  public void draw(java.awt.Shape);
  public void fill(java.awt.Shape);
  public void beginShadowedDrawing();
  public void endShadowedDrawing();
  public void drawText(java.lang.String, double, double, int, int);
  public void drawText(java.lang.String, double, double, int, int, double);
  public void adjustFontSizeToFitTextInWidth(java.lang.String, double);
  public java.lang.String calculateWidestLine(java.lang.String[]);
  public java.lang.String calculateWidestLine(java.lang.String[], java.awt.Font);
  public int calculateStringWidth(java.lang.String);
  public int calculateStringWidth(java.lang.String, java.awt.Font);
  public int getStandardLineHeight();
  public int getStandardLineHeight(java.awt.Font);
  public float getLineHeight(java.lang.String);
  public float getLineHeight(java.awt.Font, java.lang.String);
}
Compiled from "Observer.java"
public interface com.gmigdos.jawesomechart.util.Observer {
  public abstract void update(com.gmigdos.jawesomechart.util.Subject, java.lang.Object);
}
Compiled from "StringsProvider.java"
public class com.gmigdos.jawesomechart.util.StringsProvider {
  public static final java.lang.String SERIES;
  public static final java.lang.String CHART_RENDERER_AREA;
  public static final java.lang.String CHART_RENDERER_BAR;
  public static final java.lang.String CHART_RENDERER_COLUMN;
  public static final java.lang.String CHART_RENDERER_LINE;
  public static final java.lang.String CHART_RENDERER_PARETO;
  public static final java.lang.String CHART_RENDERER_PIE;
  public static final java.lang.String CHART_RENDERER_STACKED_AREA;
  public com.gmigdos.jawesomechart.util.StringsProvider();
}
Compiled from "Subject.java"
public interface com.gmigdos.jawesomechart.util.Subject {
  public abstract void addObserver(com.gmigdos.jawesomechart.util.Observer);
  public abstract void deleteObserver(com.gmigdos.jawesomechart.util.Observer);
  public abstract void clearObservers();
  public abstract void notifyObservers(java.lang.Object);
}
Compiled from "Utilities.java"
public class com.gmigdos.jawesomechart.util.Utilities {
  public com.gmigdos.jawesomechart.util.Utilities();
  public static java.awt.Color generateRandomColor();
  public static java.lang.String calculateWidestSeriesName(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList);
  public static java.lang.String calculateWidestLabel(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.Labels);
  public static double calculateWidestLabelWidth(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.Labels);
  public static double calculateWidestValue(com.gmigdos.jawesomechart.util.Context2D, com.gmigdos.jawesomechart.core.DataSeriesList, java.text.DecimalFormat);
  public static double calculateWidestValueWidth(com.gmigdos.jawesomechart.util.Context2D, java.util.List<java.lang.Double>, java.text.DecimalFormat);
  public static void xdgOpenFile(java.io.File);
}
