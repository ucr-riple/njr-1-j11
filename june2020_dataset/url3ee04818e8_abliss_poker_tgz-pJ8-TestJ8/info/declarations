Compiled from "Card.java"
class Card implements java.lang.Comparable {
  Card$Rank rank;
  Card$Suit suit;
  Card(Card$Rank, Card$Suit);
  public Card$Rank getRank();
  public Card$Suit getSuit();
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public int hashCode();
  public int compareTo(java.lang.Object);
}
Compiled from "Card.java"
class Card$1 {
}
Compiled from "Card.java"
public class Card$Rank extends java.lang.Enum<Card$Rank> {
  public static final Card$Rank ACE;
  public static final Card$Rank TWO;
  public static final Card$Rank THREE;
  public static final Card$Rank FOUR;
  public static final Card$Rank FIVE;
  public static final Card$Rank SIX;
  public static final Card$Rank SEVEN;
  public static final Card$Rank EIGHT;
  public static final Card$Rank NINE;
  public static final Card$Rank TEN;
  public static final Card$Rank JACK;
  public static final Card$Rank QUEEN;
  public static final Card$Rank KING;
  public static Card$Rank[] values();
  public static Card$Rank valueOf(java.lang.String);
  Card$Rank(java.lang.String, int, Card$1);
  static {};
}
Compiled from "Card.java"
final class Card$Rank$1 extends Card$Rank {
  Card$Rank$1(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$10 extends Card$Rank {
  Card$Rank$10(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$11 extends Card$Rank {
  Card$Rank$11(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$12 extends Card$Rank {
  Card$Rank$12(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$13 extends Card$Rank {
  Card$Rank$13(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$2 extends Card$Rank {
  Card$Rank$2(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$3 extends Card$Rank {
  Card$Rank$3(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$4 extends Card$Rank {
  Card$Rank$4(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$5 extends Card$Rank {
  Card$Rank$5(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$6 extends Card$Rank {
  Card$Rank$6(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$7 extends Card$Rank {
  Card$Rank$7(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$8 extends Card$Rank {
  Card$Rank$8(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Rank$9 extends Card$Rank {
  Card$Rank$9(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
public class Card$Suit extends java.lang.Enum<Card$Suit> {
  public static final Card$Suit CLUB;
  public static final Card$Suit DIAMOND;
  public static final Card$Suit HEART;
  public static final Card$Suit SPADE;
  public static Card$Suit[] values();
  public static Card$Suit valueOf(java.lang.String);
  Card$Suit(java.lang.String, int, Card$1);
  static {};
}
Compiled from "Card.java"
final class Card$Suit$1 extends Card$Suit {
  Card$Suit$1(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Suit$2 extends Card$Suit {
  Card$Suit$2(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Suit$3 extends Card$Suit {
  Card$Suit$3(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Card.java"
final class Card$Suit$4 extends Card$Suit {
  Card$Suit$4(java.lang.String, int);
  public java.lang.String toString();
}
Compiled from "Deck.java"
class Deck {
  java.util.List<Card> cards;
  Deck();
  Deck(java.util.List<Card>);
  public Card remove(Card);
  public Card getCard(Card$Rank, Card$Suit);
  public Deck without(Card);
  public java.lang.String toString();
  public int size();
  public java.util.List<Card> peek(int);
  public Card draw();
  public java.util.List<Card> draw(int);
  public java.util.List<Card> cardsAt(int, int, int, int);
  public java.util.List<Card> deal(int);
  public java.util.List<Card> asList();
  public Deck shuffle();
}
Compiled from "Distribution.java"
class Distribution implements java.lang.Comparable<Distribution> {
  public Distribution(java.util.Collection<Hand>);
  public void merge(Distribution);
  public java.util.Collection<Hand> getHands();
  public static Distribution generate(java.util.Collection<Card>, Deck);
  public static java.util.Map<java.util.Collection<Card>, Distribution> generateAllDistributions(Hand, Deck);
  public java.lang.String display(java.util.Collection<Hand>, int);
  public java.lang.String toString();
  public int winsAgainst(Distribution);
  public int compareTo(Distribution);
  public int compareTo(java.lang.Object);
}
Compiled from "Hand.java"
class Hand implements java.lang.Comparable<Hand> {
  Hand(Card, Card, Card, Card);
  Hand(Deck);
  Hand(java.util.Collection<Card>);
  public Card cardAt(int);
  public java.util.List<Card> without(Card...);
  public java.lang.String toString();
  public int compareTo(Hand);
  public java.util.List<Card> playableHand();
  public java.util.List<Card> getCards();
  public double rank(Deck);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public Hand draw(Deck, java.util.List<java.lang.Integer>);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "Test.java"
class Test {
  Test();
  public static void main(java.lang.String[]);
}
