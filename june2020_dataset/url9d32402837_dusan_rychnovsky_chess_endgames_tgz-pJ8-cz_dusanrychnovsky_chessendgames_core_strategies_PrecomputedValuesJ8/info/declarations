Compiled from "App.java"
public class cz.dusanrychnovsky.App {
  public cz.dusanrychnovsky.App();
  public static void main(java.lang.String[]);
}
Compiled from "AppTest.java"
public class cz.dusanrychnovsky.AppTest extends junit.framework.TestCase {
  public cz.dusanrychnovsky.AppTest(java.lang.String);
  public static junit.framework.Test suite();
  public void testApp();
}
Compiled from "CLIAdapter.java"
public class cz.dusanrychnovsky.chessendgames.CLIAdapter {
  public static void main(java.lang.String[]) throws java.io.IOException, java.lang.ClassNotFoundException;
  public cz.dusanrychnovsky.chessendgames.CLIAdapter(cz.dusanrychnovsky.chessendgames.core.strategies.Strategy, java.io.BufferedReader, java.io.BufferedWriter);
  public void run() throws java.io.IOException;
}
Compiled from "Column.java"
public final class cz.dusanrychnovsky.chessendgames.core.Column extends java.lang.Enum<cz.dusanrychnovsky.chessendgames.core.Column> {
  public static final cz.dusanrychnovsky.chessendgames.core.Column CA;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CB;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CC;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CD;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CE;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CF;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CG;
  public static final cz.dusanrychnovsky.chessendgames.core.Column CH;
  public static cz.dusanrychnovsky.chessendgames.core.Column[] values();
  public static cz.dusanrychnovsky.chessendgames.core.Column valueOf(java.lang.String);
  public static cz.dusanrychnovsky.chessendgames.core.Column get(int);
  public boolean preceeds(cz.dusanrychnovsky.chessendgames.core.Column);
  public int distance(cz.dusanrychnovsky.chessendgames.core.Column);
  public boolean isFirst();
  public cz.dusanrychnovsky.chessendgames.core.Column previous();
  public boolean isLast();
  public cz.dusanrychnovsky.chessendgames.core.Column next();
  public java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Column> to(cz.dusanrychnovsky.chessendgames.core.Column);
  static {};
}
Compiled from "Column.java"
class cz.dusanrychnovsky.chessendgames.core.Column$BackwardIterator implements java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Column> {
  final cz.dusanrychnovsky.chessendgames.core.Column this$0;
  public cz.dusanrychnovsky.chessendgames.core.Column$BackwardIterator(cz.dusanrychnovsky.chessendgames.core.Column, cz.dusanrychnovsky.chessendgames.core.Column, cz.dusanrychnovsky.chessendgames.core.Column);
  public boolean hasNext();
  public cz.dusanrychnovsky.chessendgames.core.Column next();
  public void remove();
  public java.lang.Object next();
}
Compiled from "Column.java"
class cz.dusanrychnovsky.chessendgames.core.Column$ForwardIterator implements java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Column> {
  final cz.dusanrychnovsky.chessendgames.core.Column this$0;
  public cz.dusanrychnovsky.chessendgames.core.Column$ForwardIterator(cz.dusanrychnovsky.chessendgames.core.Column, cz.dusanrychnovsky.chessendgames.core.Column, cz.dusanrychnovsky.chessendgames.core.Column);
  public boolean hasNext();
  public cz.dusanrychnovsky.chessendgames.core.Column next();
  public void remove();
  public java.lang.Object next();
}
Compiled from "ColumnTest.java"
public class cz.dusanrychnovsky.chessendgames.core.ColumnTest {
  public cz.dusanrychnovsky.chessendgames.core.ColumnTest();
  public void providesForwardIterator();
  public void providesBackwardIterator();
  public void providesTrivialIterator();
  public void canIterateFromTheFirstColumn();
  public void canIterateToTheLastColumn();
}
Compiled from "Draw.java"
public class cz.dusanrychnovsky.chessendgames.core.Draw extends cz.dusanrychnovsky.chessendgames.core.Result {
  public cz.dusanrychnovsky.chessendgames.core.Draw();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Game.java"
public class cz.dusanrychnovsky.chessendgames.core.Game {
  public cz.dusanrychnovsky.chessendgames.core.Game(cz.dusanrychnovsky.chessendgames.core.strategies.Strategy, cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Player);
  public cz.dusanrychnovsky.chessendgames.core.Situation doMove(cz.dusanrychnovsky.chessendgames.core.Move);
  public cz.dusanrychnovsky.chessendgames.core.Situation playMove();
  public void setCurrentSituation(cz.dusanrychnovsky.chessendgames.core.Situation);
  public cz.dusanrychnovsky.chessendgames.core.Situation getCurrentSituation();
}
Compiled from "King.java"
public class cz.dusanrychnovsky.chessendgames.core.King extends cz.dusanrychnovsky.chessendgames.core.Piece {
  public cz.dusanrychnovsky.chessendgames.core.King(cz.dusanrychnovsky.chessendgames.core.Player);
  public java.util.List<cz.dusanrychnovsky.chessendgames.core.Move> generateMoves(cz.dusanrychnovsky.chessendgames.core.Position);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "KingTest.java"
public class cz.dusanrychnovsky.chessendgames.core.KingTest extends cz.dusanrychnovsky.chessendgames.core.PieceTest {
  public cz.dusanrychnovsky.chessendgames.core.KingTest();
  public void generatesCorrectSetOfMovesWhenLocatedInCenterOfTheBoard();
  public void generatesCorrectSetOfMovesWhenLocatedAtABoundaryColumnOfTheBoard();
  public void generatesCorrectSetOfMovesWhenLocatedAtABoundaryRowOfTheBoard();
  public void generatesCorrectSetOfMovesWhenLocatedInACornerTheBoard();
  static {};
}
Compiled from "Move.java"
public class cz.dusanrychnovsky.chessendgames.core.Move implements java.io.Serializable {
  public cz.dusanrychnovsky.chessendgames.core.Move(cz.dusanrychnovsky.chessendgames.core.Piece, cz.dusanrychnovsky.chessendgames.core.Position, cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Piece getPiece();
  public cz.dusanrychnovsky.chessendgames.core.Position getTo();
  public boolean isValid(cz.dusanrychnovsky.chessendgames.core.Situation);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "MoveTest.java"
public class cz.dusanrychnovsky.chessendgames.core.MoveTest {
  public cz.dusanrychnovsky.chessendgames.core.MoveTest();
  public void setUp();
  public void aRookCannotCrossItsOwnKing();
  public void aKingCannotMoveNearTheOtherKing();
  public void aKingCannotTakeTheRookIfHeWouldEndUpNearTheOtherKing();
  public void aKingCannotBeExposedToAttack();
}
Compiled from "Piece.java"
public abstract class cz.dusanrychnovsky.chessendgames.core.Piece implements java.io.Serializable {
  public cz.dusanrychnovsky.chessendgames.core.Piece(cz.dusanrychnovsky.chessendgames.core.Player);
  public cz.dusanrychnovsky.chessendgames.core.Player getPlayer();
  public abstract java.util.List<cz.dusanrychnovsky.chessendgames.core.Move> generateMoves(cz.dusanrychnovsky.chessendgames.core.Position);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "PieceTest.java"
public abstract class cz.dusanrychnovsky.chessendgames.core.PieceTest {
  public cz.dusanrychnovsky.chessendgames.core.PieceTest();
  protected boolean containsPosition(java.util.List<cz.dusanrychnovsky.chessendgames.core.Move>, cz.dusanrychnovsky.chessendgames.core.Position);
}
Compiled from "Player.java"
public class cz.dusanrychnovsky.chessendgames.core.Player implements java.io.Serializable {
  public static cz.dusanrychnovsky.chessendgames.core.Player get(cz.dusanrychnovsky.chessendgames.core.Player$Color);
  public void addPiece(cz.dusanrychnovsky.chessendgames.core.Piece);
  public void removeAllPieces();
  public java.util.List<cz.dusanrychnovsky.chessendgames.core.Piece> getPieces();
  public cz.dusanrychnovsky.chessendgames.core.King getKing();
  public cz.dusanrychnovsky.chessendgames.core.Player getOpponent();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  static {};
}
Compiled from "Player.java"
public final class cz.dusanrychnovsky.chessendgames.core.Player$Color extends java.lang.Enum<cz.dusanrychnovsky.chessendgames.core.Player$Color> {
  public static final cz.dusanrychnovsky.chessendgames.core.Player$Color BLACK;
  public static final cz.dusanrychnovsky.chessendgames.core.Player$Color WHITE;
  public static cz.dusanrychnovsky.chessendgames.core.Player$Color[] values();
  public static cz.dusanrychnovsky.chessendgames.core.Player$Color valueOf(java.lang.String);
  static {};
}
Compiled from "Position.java"
public class cz.dusanrychnovsky.chessendgames.core.Position implements java.io.Serializable {
  public static java.util.Collection<cz.dusanrychnovsky.chessendgames.core.Position> getAllPositions();
  public static cz.dusanrychnovsky.chessendgames.core.Position get(cz.dusanrychnovsky.chessendgames.core.Column, cz.dusanrychnovsky.chessendgames.core.Row);
  public static cz.dusanrychnovsky.chessendgames.core.Position get(java.lang.String);
  public cz.dusanrychnovsky.chessendgames.core.Column getColumn();
  public cz.dusanrychnovsky.chessendgames.core.Row getRow();
  public boolean isNeighbour(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Range to(cz.dusanrychnovsky.chessendgames.core.Position);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  static {};
}
Compiled from "PositionTest.java"
public class cz.dusanrychnovsky.chessendgames.core.PositionTest {
  public cz.dusanrychnovsky.chessendgames.core.PositionTest();
  public void canBePrintedInHumanReadableForm();
}
Compiled from "Range.java"
public class cz.dusanrychnovsky.chessendgames.core.Range implements java.lang.Iterable<cz.dusanrychnovsky.chessendgames.core.Position>, java.io.Serializable {
  public cz.dusanrychnovsky.chessendgames.core.Range();
  public static cz.dusanrychnovsky.chessendgames.core.Range get(cz.dusanrychnovsky.chessendgames.core.Position, cz.dusanrychnovsky.chessendgames.core.Position);
  public java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Position> iterator();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "RangeTest.java"
public class cz.dusanrychnovsky.chessendgames.core.RangeTest {
  public cz.dusanrychnovsky.chessendgames.core.RangeTest();
  public void canBuildATrivialRange();
  public void canBuildALeftToRightRange();
  public void canBuildARightToLeftRange();
  public void canBuildATopToBottomRange();
  public void canBuildABottomToTopRange();
  public void canBuildABottomLeftToTopRightRange();
  public void canBuildATopRightToBottomLeftRange();
  public void canBuildATopLeftToBottomRightRange();
  public void canBuildABottomRightToTopLeftRange();
  public void cannotBuildANonStraightLineRange();
}
Compiled from "Result.java"
public abstract class cz.dusanrychnovsky.chessendgames.core.Result {
  public cz.dusanrychnovsky.chessendgames.core.Result();
}
Compiled from "Rook.java"
public class cz.dusanrychnovsky.chessendgames.core.Rook extends cz.dusanrychnovsky.chessendgames.core.Piece {
  public cz.dusanrychnovsky.chessendgames.core.Rook(cz.dusanrychnovsky.chessendgames.core.Player);
  public java.util.List<cz.dusanrychnovsky.chessendgames.core.Move> generateMoves(cz.dusanrychnovsky.chessendgames.core.Position);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "RookTest.java"
public class cz.dusanrychnovsky.chessendgames.core.RookTest extends cz.dusanrychnovsky.chessendgames.core.PieceTest {
  public cz.dusanrychnovsky.chessendgames.core.RookTest();
  public void generatesCorrectSetOfMovesWhenLocatedInCenterOfTheBoard();
  public void generatesCorrectSetOfMovesWhenLocatedInACornerOfTheBoard();
  static {};
}
Compiled from "Row.java"
public final class cz.dusanrychnovsky.chessendgames.core.Row extends java.lang.Enum<cz.dusanrychnovsky.chessendgames.core.Row> {
  public static final cz.dusanrychnovsky.chessendgames.core.Row R1;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R2;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R3;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R4;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R5;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R6;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R7;
  public static final cz.dusanrychnovsky.chessendgames.core.Row R8;
  public static cz.dusanrychnovsky.chessendgames.core.Row[] values();
  public static cz.dusanrychnovsky.chessendgames.core.Row valueOf(java.lang.String);
  public static cz.dusanrychnovsky.chessendgames.core.Row get(int);
  public boolean preceeds(cz.dusanrychnovsky.chessendgames.core.Row);
  public int distance(cz.dusanrychnovsky.chessendgames.core.Row);
  public boolean isFirst();
  public cz.dusanrychnovsky.chessendgames.core.Row previous();
  public boolean isLast();
  public cz.dusanrychnovsky.chessendgames.core.Row next();
  public java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Row> to(cz.dusanrychnovsky.chessendgames.core.Row);
  static {};
}
Compiled from "Row.java"
class cz.dusanrychnovsky.chessendgames.core.Row$BackwardIterator implements java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Row> {
  final cz.dusanrychnovsky.chessendgames.core.Row this$0;
  public cz.dusanrychnovsky.chessendgames.core.Row$BackwardIterator(cz.dusanrychnovsky.chessendgames.core.Row, cz.dusanrychnovsky.chessendgames.core.Row, cz.dusanrychnovsky.chessendgames.core.Row);
  public boolean hasNext();
  public cz.dusanrychnovsky.chessendgames.core.Row next();
  public void remove();
  public java.lang.Object next();
}
Compiled from "Row.java"
class cz.dusanrychnovsky.chessendgames.core.Row$ForwardIterator implements java.util.Iterator<cz.dusanrychnovsky.chessendgames.core.Row> {
  final cz.dusanrychnovsky.chessendgames.core.Row this$0;
  public cz.dusanrychnovsky.chessendgames.core.Row$ForwardIterator(cz.dusanrychnovsky.chessendgames.core.Row, cz.dusanrychnovsky.chessendgames.core.Row, cz.dusanrychnovsky.chessendgames.core.Row);
  public boolean hasNext();
  public cz.dusanrychnovsky.chessendgames.core.Row next();
  public void remove();
  public java.lang.Object next();
}
Compiled from "RowTest.java"
public class cz.dusanrychnovsky.chessendgames.core.RowTest {
  public cz.dusanrychnovsky.chessendgames.core.RowTest();
  public void providesForwardIterator();
  public void providesBackwardIterator();
  public void providesTrivialIterator();
  public void canIterateFromTheFirstRow();
  public void canIterateToTheLastRow();
}
Compiled from "Situation.java"
public class cz.dusanrychnovsky.chessendgames.core.Situation implements java.lang.Iterable<java.util.Map$Entry<cz.dusanrychnovsky.chessendgames.core.Piece, cz.dusanrychnovsky.chessendgames.core.Position>>, java.io.Serializable {
  public static cz.dusanrychnovsky.chessendgames.core.Situation get(cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Move);
  public cz.dusanrychnovsky.chessendgames.core.Situation();
  public cz.dusanrychnovsky.chessendgames.core.Situation(cz.dusanrychnovsky.chessendgames.core.Situation);
  public void addPiece(cz.dusanrychnovsky.chessendgames.core.Piece, cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Position getPosition(cz.dusanrychnovsky.chessendgames.core.Piece);
  public boolean isOccupied(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Piece getPiece(cz.dusanrychnovsky.chessendgames.core.Position);
  public boolean isActive(cz.dusanrychnovsky.chessendgames.core.Piece);
  public java.util.List<cz.dusanrychnovsky.chessendgames.core.Situation> generateSuccessors(cz.dusanrychnovsky.chessendgames.core.Player);
  public java.util.List<cz.dusanrychnovsky.chessendgames.core.Move> generateValidMoves(cz.dusanrychnovsky.chessendgames.core.Player);
  public boolean isCheck(cz.dusanrychnovsky.chessendgames.core.King);
  public boolean isStalemate(cz.dusanrychnovsky.chessendgames.core.King);
  public boolean isDraw();
  public boolean isCheckmate(cz.dusanrychnovsky.chessendgames.core.King);
  public boolean isFinal();
  public cz.dusanrychnovsky.chessendgames.core.Result getResult();
  public java.util.Iterator<java.util.Map$Entry<cz.dusanrychnovsky.chessendgames.core.Piece, cz.dusanrychnovsky.chessendgames.core.Position>> iterator();
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "SituationTest.java"
public class cz.dusanrychnovsky.chessendgames.core.SituationTest {
  public cz.dusanrychnovsky.chessendgames.core.SituationTest();
  public void setUp();
  public void createsANewSituationResultingFromTheOriginalOneByApplyingTheMove();
  public void aSituationIsACheckIfTheKingIsAttackedByAnOpponentsFiggure();
  public void aSituationIsNotACheckIfTheKingIsNotAttacked();
  public void aSituationIsNotACheckIfAnotherFigureStandsBetweenTheKingAndTheAttackingFigure();
  public void aSituationIsAStalemateIfTheKingIsNotInCheckButCannotMove();
  public void aSituationIsNotAStalemateIfTheKingCanMove();
  public void aSituationIsACheckmateIfTheKingIsInCheckAndCannotMove();
  public void nonFinalSituationsDoNotHaveResultsAssigned();
  public void aSituationIsADrawIfOnlyTheTwoKingsRemainActive();
  public void aSituationIsADrawIfOneOfTheKingsIsInStalemate();
  public void aSituationIsAWinForAPlayerIfTheOppositePlayerIsInCheckmate();
  public void generatesSuccessorSituations();
}
Compiled from "Win.java"
public class cz.dusanrychnovsky.chessendgames.core.Win extends cz.dusanrychnovsky.chessendgames.core.Result {
  public cz.dusanrychnovsky.chessendgames.core.Win(cz.dusanrychnovsky.chessendgames.core.Player);
  public int hashCode();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
}
Compiled from "Dummy.java"
public class cz.dusanrychnovsky.chessendgames.core.strategies.Dummy extends cz.dusanrychnovsky.chessendgames.core.strategies.Strategy {
  public cz.dusanrychnovsky.chessendgames.core.strategies.Dummy();
  public cz.dusanrychnovsky.chessendgames.core.Move chooseMove(cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Player);
}
Compiled from "PrecomputedValues.java"
public class cz.dusanrychnovsky.chessendgames.core.strategies.PrecomputedValues extends cz.dusanrychnovsky.chessendgames.core.strategies.Strategy implements java.io.Serializable {
  public static void main(java.lang.String[]) throws java.io.IOException;
  public static cz.dusanrychnovsky.chessendgames.core.strategies.PrecomputedValues get(cz.dusanrychnovsky.chessendgames.core.King, cz.dusanrychnovsky.chessendgames.core.King, cz.dusanrychnovsky.chessendgames.core.Rook);
  public void save(java.io.File) throws java.io.IOException;
  public void save(java.io.ObjectOutput) throws java.io.IOException;
  public static cz.dusanrychnovsky.chessendgames.core.strategies.PrecomputedValues load(java.io.File) throws java.io.IOException, java.lang.ClassNotFoundException;
  public static cz.dusanrychnovsky.chessendgames.core.strategies.PrecomputedValues load(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
  public boolean evaluate(cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Player);
  public cz.dusanrychnovsky.chessendgames.core.Move chooseMove(cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Player);
}
Compiled from "Strategy.java"
public abstract class cz.dusanrychnovsky.chessendgames.core.strategies.Strategy {
  public cz.dusanrychnovsky.chessendgames.core.strategies.Strategy();
  public abstract cz.dusanrychnovsky.chessendgames.core.Move chooseMove(cz.dusanrychnovsky.chessendgames.core.Situation, cz.dusanrychnovsky.chessendgames.core.Player);
}
Compiled from "Board.java"
public class cz.dusanrychnovsky.chessendgames.gui.Board extends javax.swing.JPanel implements java.awt.event.MouseListener {
  public cz.dusanrychnovsky.chessendgames.gui.Board(cz.dusanrychnovsky.chessendgames.gui.MouseEventListener);
  public void setSituation(cz.dusanrychnovsky.chessendgames.core.Situation);
  public void paint(java.awt.Graphics);
  public void mouseClicked(java.awt.event.MouseEvent);
  public cz.dusanrychnovsky.chessendgames.core.Column getColumn(double);
  public cz.dusanrychnovsky.chessendgames.core.Row getRow(double);
  public void mouseEntered(java.awt.event.MouseEvent);
  public void mouseExited(java.awt.event.MouseEvent);
  public void mousePressed(java.awt.event.MouseEvent);
  public void mouseReleased(java.awt.event.MouseEvent);
}
Compiled from "GUIAdapter.java"
public class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter implements cz.dusanrychnovsky.chessendgames.gui.MouseEventListener {
  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.io.IOException;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter() throws java.lang.ClassNotFoundException, java.io.IOException;
  public void onMouseClicked(cz.dusanrychnovsky.chessendgames.core.Position);
  static cz.dusanrychnovsky.chessendgames.core.King access$200(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
  static cz.dusanrychnovsky.chessendgames.core.Rook access$300(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
  static cz.dusanrychnovsky.chessendgames.core.King access$400(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
  static cz.dusanrychnovsky.chessendgames.core.Game access$502(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.core.Game);
  static cz.dusanrychnovsky.chessendgames.core.strategies.Strategy access$600(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
  static cz.dusanrychnovsky.chessendgames.core.Player access$700(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
  static cz.dusanrychnovsky.chessendgames.core.Game access$500(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter);
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$1 {
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameFinished extends cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public java.lang.String getStatusMessage();
  cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameFinished(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$1);
}
Compiled from "GUIAdapter.java"
abstract class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public abstract cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public abstract cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public abstract java.lang.String getStatusMessage();
  cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$1);
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$MakeMove extends cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$MakeMove(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.core.Situation);
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public java.lang.String getStatusMessage();
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceBlackKing extends cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public java.lang.String getStatusMessage();
  cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceBlackKing(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$1);
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceBlackRook extends cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceBlackRook(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.core.Situation);
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public java.lang.String getStatusMessage();
}
Compiled from "GUIAdapter.java"
class cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceWhiteKing extends cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState {
  final cz.dusanrychnovsky.chessendgames.gui.GUIAdapter this$0;
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$PlaceWhiteKing(cz.dusanrychnovsky.chessendgames.gui.GUIAdapter, cz.dusanrychnovsky.chessendgames.core.Situation);
  public cz.dusanrychnovsky.chessendgames.gui.GUIAdapter$GameState handle(cz.dusanrychnovsky.chessendgames.core.Position);
  public cz.dusanrychnovsky.chessendgames.core.Situation getSituation();
  public java.lang.String getStatusMessage();
}
Compiled from "MouseEventListener.java"
public interface cz.dusanrychnovsky.chessendgames.gui.MouseEventListener {
  public abstract void onMouseClicked(cz.dusanrychnovsky.chessendgames.core.Position);
}
Compiled from "SplashScreen.java"
public class cz.dusanrychnovsky.chessendgames.gui.SplashScreen extends javax.swing.JFrame {
  public cz.dusanrychnovsky.chessendgames.gui.SplashScreen();
  public void close();
}
Compiled from "StatusBar.java"
public class cz.dusanrychnovsky.chessendgames.gui.StatusBar extends javax.swing.JPanel {
  public cz.dusanrychnovsky.chessendgames.gui.StatusBar();
  public void setStatusMessage(java.lang.String);
}
Compiled from "Window.java"
public class cz.dusanrychnovsky.chessendgames.gui.Window extends javax.swing.JFrame {
  public cz.dusanrychnovsky.chessendgames.gui.Window(cz.dusanrychnovsky.chessendgames.gui.MouseEventListener);
  public void setSituation(cz.dusanrychnovsky.chessendgames.core.Situation);
  public void setStatus(java.lang.String);
}
