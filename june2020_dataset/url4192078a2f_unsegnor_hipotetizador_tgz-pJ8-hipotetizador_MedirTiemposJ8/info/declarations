Compiled from "CasoDeEstudio.java"
class hipotetizador.CasoDeEstudio {
  hipotetizador.CasoDeEstudio();
}
Compiled from "Cientifico.java"
public class hipotetizador.Cientifico {
  public hipotetizador.Cientifico();
  public hipotetizador.Teoria mejorar_teoria(hipotetizador.Teoria, hipotetizador.Historia);
}
Compiled from "CompElemList.java"
public class hipotetizador.CompElemList implements java.util.Comparator<hipotetizador.Elemento> {
  java.util.ArrayList<hipotetizador.Elemento> ranking;
  public hipotetizador.CompElemList(java.util.ArrayList<hipotetizador.Elemento>);
  public int compare(hipotetizador.Elemento, hipotetizador.Elemento);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaContradiccionesPorUtilidad.java"
public class hipotetizador.ComparaContradiccionesPorUtilidad implements java.util.Comparator<hipotetizador.Contradiccion> {
  public hipotetizador.ComparaContradiccionesPorUtilidad();
  public int compare(hipotetizador.Contradiccion, hipotetizador.Contradiccion);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaElementosPorHashCode.java"
class hipotetizador.ComparaElementosPorHashCode implements java.util.Comparator<hipotetizador.Elemento> {
  hipotetizador.ComparaElementosPorHashCode();
  public int compare(hipotetizador.Elemento, hipotetizador.Elemento);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaElementosPorID.java"
public class hipotetizador.ComparaElementosPorID implements java.util.Comparator<hipotetizador.Elemento> {
  public hipotetizador.ComparaElementosPorID();
  public int compare(hipotetizador.Elemento, hipotetizador.Elemento);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaGruposOrdenandoElementos.java"
class hipotetizador.ComparaGruposOrdenandoElementos implements java.util.Comparator<hipotetizador.GrupoElementos> {
  hipotetizador.ComparaElementosPorHashCode comp;
  public hipotetizador.ComparaGruposOrdenandoElementos();
  public int compare(hipotetizador.GrupoElementos, hipotetizador.GrupoElementos);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaReglasBondad.java"
public class hipotetizador.ComparaReglasBondad implements java.util.Comparator<hipotetizador.Regla> {
  public hipotetizador.ComparaReglasBondad();
  public int compare(hipotetizador.Regla, hipotetizador.Regla);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparaReglasPorAntecedente.java"
class hipotetizador.ComparaReglasPorAntecedente implements java.util.Comparator<hipotetizador.Regla> {
  hipotetizador.ComparaGruposOrdenandoElementos comp;
  hipotetizador.ComparaReglasPorAntecedente();
  public int compare(hipotetizador.Regla, hipotetizador.Regla);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparadorDeGrupos.java"
public class hipotetizador.ComparadorDeGrupos implements java.util.Comparator<hipotetizador.GrupoElementos> {
  static hipotetizador.ComparadorElementos comp;
  public hipotetizador.ComparadorDeGrupos();
  public int compare(hipotetizador.GrupoElementos, hipotetizador.GrupoElementos);
  public int compare(java.lang.Object, java.lang.Object);
  static {};
}
Compiled from "ComparadorDeReglas.java"
public class hipotetizador.ComparadorDeReglas implements java.util.Comparator<hipotetizador.Regla> {
  public hipotetizador.ComparadorDeReglas();
  public int compare(hipotetizador.Regla, hipotetizador.Regla);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparadorElementos.java"
public class hipotetizador.ComparadorElementos implements java.util.Comparator<hipotetizador.Elemento> {
  public hipotetizador.ComparadorElementos();
  public int compare(hipotetizador.Elemento, hipotetizador.Elemento);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "ComparadorFreq.java"
public class hipotetizador.ComparadorFreq implements java.util.Comparator<hipotetizador.InfoElemento> {
  public hipotetizador.ComparadorFreq();
  public int compare(hipotetizador.InfoElemento, hipotetizador.InfoElemento);
  public int compare(java.lang.Object, java.lang.Object);
}
Compiled from "Contradiccion.java"
public class hipotetizador.Contradiccion extends hipotetizador.CasoDeEstudio {
  public hipotetizador.Contradiccion();
  public java.util.ArrayList<hipotetizador.Regla> getReglas();
  public void setReglas(java.util.ArrayList<hipotetizador.Regla>);
  public float getTotal_confianza();
  public void setTotal_confianza(float);
  public java.lang.String toString();
  public hipotetizador.GrupoElementos getAntecedente();
  public void setAntecedente(hipotetizador.GrupoElementos);
}
Compiled from "Cronometro.java"
public class hipotetizador.Cronometro {
  long valor_comienzo;
  public hipotetizador.Cronometro();
  public void Start();
  public long getValor();
}
Compiled from "D.java"
class hipotetizador.D {
  public static boolean enabled;
  public static int level;
  hipotetizador.D();
  static void d(java.lang.String);
  static void d(int, java.lang.String);
  static {};
}
Compiled from "Delayer.java"
public class hipotetizador.Delayer implements java.lang.Runnable {
  java.lang.Thread contador;
  public hipotetizador.Delayer();
  public hipotetizador.Llamable getLlamable();
  public void setLlamable(hipotetizador.Llamable);
  public void setDelay(long);
  public void llamar_con_delay(hipotetizador.Llamable, long);
  public void start();
  public void run();
}
Compiled from "Elemento.java"
public class hipotetizador.Elemento {
  public hipotetizador.Elemento();
  public hipotetizador.Elemento(int, int, boolean);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String num();
  public java.lang.String toString();
  public int getEntrada();
  public void setEntrada(int);
  public int getSubindice();
  public void setSubindice(int);
  public boolean isVerdadero();
  public void setVerdadero(boolean);
  public int getID();
}
Compiled from "Estado.java"
public class hipotetizador.Estado {
  boolean[] contenido;
  public hipotetizador.Estado(int);
}
Compiled from "EvaluacionTeoria.java"
class hipotetizador.EvaluacionTeoria {
  int nentradas;
  int nmuestras;
  int[] aciertos_entradas;
  int[] fallos_entradas;
  int[] aciertos_muestras;
  int[] fallos_muestras;
  java.lang.Float explicabilidad;
  hipotetizador.EvaluacionTeoria();
  public void calcular_explicabilidad();
  public float getExplicabilidad();
  public java.lang.String toString();
}
Compiled from "GrupoElementos.java"
public class hipotetizador.GrupoElementos {
  static hipotetizador.ComparadorElementos comp;
  static hipotetizador.ComparadorDeGrupos compG;
  public hipotetizador.GrupoElementos();
  public java.util.ArrayList<hipotetizador.Elemento> getElementos();
  public void setElementos(java.util.ArrayList<hipotetizador.Elemento>);
  public long getSoporte();
  public void setSoporte(long);
  public java.lang.String toString();
  public java.lang.String toStringBonito(int, int);
  public void ordenar();
  public java.util.ArrayList<hipotetizador.GrupoElementos> getLastSubgrupos();
  public java.util.ArrayList<hipotetizador.GrupoElementos> getSubgrupos();
  public boolean equals(java.lang.Object);
  boolean contenido_en(hipotetizador.GrupoElementos);
  boolean contenido_en(hipotetizador.GrupoElementos, hipotetizador.GrupoElementos);
  boolean contradice(hipotetizador.GrupoElementos);
  boolean se_contradicen(hipotetizador.GrupoElementos, hipotetizador.GrupoElementos);
  static {};
}
Compiled from "Hipo.java"
public class hipotetizador.Hipo {
  int tventana_interno;
  int thistoria_interna;
  boolean[][] ventana;
  boolean[][] historia_interna;
  java.util.ArrayList<hipotetizador.Regla> reglas_aprendidas;
  int ph;
  hipotetizador.Par<java.lang.Long, java.lang.Long>[][] cuentas;
  int nentradas_interno;
  java.util.HashMap<java.lang.Integer, java.util.HashSet<java.util.HashSet<hipotetizador.Elemento>>> itemsets;
  public hipotetizador.Hipo();
  public hipotetizador.Hipo(int, int);
  public void muestrear(boolean[]);
  public hipotetizador.Par<java.lang.Long, java.lang.Long>[][] hacer_cuentas(boolean[][], int);
  public hipotetizador.Teoria sinAmbiguedad(int, int, boolean[][], double, double, float, boolean);
  public java.lang.String imprime_array(boolean[]);
  public java.lang.String imprime_array(int[]);
  public java.lang.String imprime_reglas_bonitas(java.util.ArrayList<hipotetizador.Regla>, int, int);
  public java.lang.String imprimir_historia(boolean[][]);
  public java.util.ArrayList<hipotetizador.Regla> deducir();
  public java.util.ArrayList<hipotetizador.Regla> deducir(boolean[][]);
  public java.util.ArrayList<hipotetizador.Regla> extraer_reglas(boolean[][], int, int, float, boolean);
  public hipotetizador.Teoria elaborar_teoria(boolean[][], int, int, double, double, double, float, boolean);
  float[][] predecir(boolean[][], hipotetizador.Teoria, int);
  float[][] elaborar_historia_futura(boolean[][], int, int);
  float[][] rellenar_historia(float[][], hipotetizador.Teoria, boolean);
  public java.lang.String imprimir_historia(float[][]);
  public float[][] normalizar(float[][]);
  public float[] normalizar(float[]);
  java.util.ArrayList<hipotetizador.Contradiccion> buscar_contradicciones(hipotetizador.Teoria);
  hipotetizador.Teoria reducir_teoria(hipotetizador.Teoria);
  hipotetizador.Teoria mejorar_teoria(hipotetizador.Teoria);
}
Compiled from "Hipotetizador.java"
public class hipotetizador.Hipotetizador {
  public hipotetizador.Hipotetizador();
  public static void main(java.lang.String[]) throws java.io.IOException;
  public static java.lang.String imprimir_resultados(float[][]);
  public static void cuenta_hasta(hipotetizador.Hipo, int, int);
  public static void muestras_aleatorias(hipotetizador.Hipo, int);
  public static void muestras_secuenciales(hipotetizador.Hipo, int);
}
Compiled from "Historia.java"
public class hipotetizador.Historia {
  public hipotetizador.Historia(int, java.lang.String[], int[][]);
  public int getNentradas();
  public void setNentradas(int);
  public java.lang.String[] getIDs();
  public void setIDs(java.lang.String[]);
  public int[][] getHistoria();
  public void setHistoria(int[][]);
}
Compiled from "InfoElemento.java"
public class hipotetizador.InfoElemento {
  public hipotetizador.InfoElemento();
  public float getFrecuencia();
  public hipotetizador.Elemento getElemento();
  public void setElemento(hipotetizador.Elemento);
  public java.lang.Long getTotal();
  public void setTotal(java.lang.Long);
  public java.lang.Long getApariciones();
  public void setApariciones(java.lang.Long);
}
Compiled from "Itemset.java"
public class hipotetizador.Itemset {
  public hipotetizador.Itemset();
}
Compiled from "LinkedList.java"
public class hipotetizador.LinkedList {
  public hipotetizador.LinkedList();
}
Compiled from "Llamable.java"
public interface hipotetizador.Llamable {
  public abstract void recibir();
}
Compiled from "MedirProcentajeRuido.java"
public class hipotetizador.MedirProcentajeRuido {
  public hipotetizador.MedirProcentajeRuido();
  public static void main(java.lang.String[]);
}
Compiled from "MedirTiempos.java"
public class hipotetizador.MedirTiempos {
  public hipotetizador.MedirTiempos();
  public static void main(java.lang.String[]);
}
Compiled from "Muestras.java"
public class hipotetizador.Muestras {
  static java.util.Random r;
  public hipotetizador.Muestras();
  public static boolean[] aleatoria(int);
  public static boolean[] secuencia(int);
  public static boolean[] masuno_binario(boolean[]);
  public static java.lang.String imprimir_muestra(boolean[]);
  static {};
}
Compiled from "Nodo.java"
public class hipotetizador.Nodo {
  public hipotetizador.Nodo();
  public hipotetizador.Nodo(hipotetizador.Elemento, hipotetizador.Nodo);
  public hipotetizador.Elemento getElemento();
  public void setElemento(hipotetizador.Elemento);
  public int getFreq();
  public void setFreq(int);
  public java.util.ArrayList<hipotetizador.Nodo> getHijos();
  public void setHijos(java.util.ArrayList<hipotetizador.Nodo>);
  public hipotetizador.Nodo getPadre();
  public void setPadre(hipotetizador.Nodo);
  public hipotetizador.Nodo getSiguiente();
  public void setSiguiente(hipotetizador.Nodo);
}
Compiled from "Numeros.java"
public class hipotetizador.Numeros {
  public hipotetizador.Numeros();
  public static int vectorAbinario(float[]);
}
Compiled from "Par.java"
public class hipotetizador.Par<T, K> {
  public hipotetizador.Par(T, K);
  public T getPrimero();
  public void setPrimero(T);
  public K getSegundo();
  public void setSegundo(K);
}
Compiled from "PrediccionProbabilistica.java"
public class hipotetizador.PrediccionProbabilistica {
  public hipotetizador.PrediccionProbabilistica();
  public static void main(java.lang.String[]) throws java.io.IOException;
}
Compiled from "RegistroTD.java"
public class hipotetizador.RegistroTD {
  public hipotetizador.RegistroTD();
  public hipotetizador.Elemento getElemento();
  public void setElemento(hipotetizador.Elemento);
  public java.lang.Long getSoporte();
  public void setSoporte(java.lang.Long);
  public hipotetizador.Nodo getNodo();
  public void setNodo(hipotetizador.Nodo);
}
Compiled from "RegistroTDFPG.java"
public class hipotetizador.RegistroTDFPG {
  public hipotetizador.RegistroTDFPG();
}
Compiled from "Regla.java"
public class hipotetizador.Regla {
  public hipotetizador.Regla();
  public hipotetizador.Regla(hipotetizador.GrupoElementos, hipotetizador.GrupoElementos);
  public hipotetizador.GrupoElementos getAntecedente();
  public void setAntecedente(hipotetizador.GrupoElementos);
  public hipotetizador.GrupoElementos getConsecuente();
  public void setConsecuente(hipotetizador.GrupoElementos);
  public double getSoporte();
  public void setSoporte(double);
  public double getConfianza();
  public void setConfianza(double);
  public double getImpacto();
  public void setImpacto(double);
  public java.lang.String toString();
  public java.lang.String toStringBonito(int, int);
  public void calcular_estadisticas();
  public static float entropia(float);
  public static double log2(float);
  public double log2(double);
  public double getCantidad_de_informacion();
  public void setCantidad_de_informacion(double);
  public boolean equals(java.lang.Object);
}
Compiled from "ReglaInfo.java"
public class hipotetizador.ReglaInfo {
  public hipotetizador.ReglaInfo();
}
Compiled from "Reglamento.java"
public class hipotetizador.Reglamento {
  public hipotetizador.Reglamento();
}
Compiled from "TDFPG.java"
public class hipotetizador.TDFPG {
  public hipotetizador.TDFPG();
  public java.util.ArrayList<hipotetizador.Regla> extraer_reglas(java.util.ArrayList<hipotetizador.InfoElemento>, boolean[][], int, boolean);
  public java.lang.String imprime_reglas(java.util.ArrayList<hipotetizador.Regla>);
  public java.util.ArrayList<hipotetizador.Regla> generar_reglas(hipotetizador.GrupoElementos);
  public java.lang.String imprime(java.util.ArrayList<hipotetizador.GrupoElementos>);
  public java.lang.String imprime(java.util.HashSet<hipotetizador.Elemento>);
  public java.lang.String imprimir_arbol(hipotetizador.Nodo, java.lang.String, boolean);
  public java.util.ArrayList<java.util.ArrayList<hipotetizador.Elemento>> hacer_listas(boolean[][], int, java.lang.Iterable<hipotetizador.Elemento>);
}
Compiled from "TablaFreq.java"
public class hipotetizador.TablaFreq {
  public hipotetizador.TablaFreq();
}
Compiled from "Teoria.java"
public class hipotetizador.Teoria {
  hipotetizador.ComparaReglasBondad comp;
  public hipotetizador.Teoria();
  public java.util.ArrayList<hipotetizador.Regla> getCertezas();
  public void setCertezas(java.util.ArrayList<hipotetizador.Regla>);
  public java.util.ArrayList<hipotetizador.Regla> getHipotesis();
  public void setHipotesis(java.util.ArrayList<hipotetizador.Regla>);
  public java.util.ArrayList<hipotetizador.Regla> getSin_ruido();
  public void setSin_ruido(java.util.ArrayList<hipotetizador.Regla>);
  public int getMaxTventana();
  public void setMaxTventana(int);
  public int getMaxNentradas();
  public void setMaxNentradas(int);
  public java.lang.String toString();
  public java.util.ArrayList<hipotetizador.Contradiccion> getContradicciones();
  public void setContradicciones(java.util.ArrayList<hipotetizador.Contradiccion>);
}
Compiled from "Ventana.java"
class hipotetizador.Ventana {
  int[] entradas;
  int longitud;
  float frecuencia;
  hipotetizador.Ventana();
}
