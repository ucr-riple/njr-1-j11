Compiled from "JCommander.java"
public class be.demmel.fun.jgwcaconstants.JCommander {
  public be.demmel.fun.jgwcaconstants.JCommander();
  public static void main(java.lang.String[]) throws java.lang.InterruptedException;
  static void access$000();
  static void access$100();
  static {};
}
Compiled from "JCommander.java"
final class be.demmel.fun.jgwcaconstants.JCommander$1 implements java.awt.event.ActionListener {
  be.demmel.fun.jgwcaconstants.JCommander$1();
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "JCommander.java"
final class be.demmel.fun.jgwcaconstants.JCommander$2 implements java.awt.event.ActionListener {
  be.demmel.fun.jgwcaconstants.JCommander$2();
  public void actionPerformed(java.awt.event.ActionEvent);
}
Compiled from "MainTestingAllFunctions.java"
public class be.demmel.fun.jgwcaconstants.MainTestingAllFunctions {
  public be.demmel.fun.jgwcaconstants.MainTestingAllFunctions();
  public static void main(java.lang.String[]) throws java.lang.InterruptedException;
  static {};
}
Compiled from "ShutdownHook.java"
public class be.demmel.fun.jgwcaconstants.ShutdownHook implements java.lang.Runnable {
  public be.demmel.fun.jgwcaconstants.ShutdownHook();
  public void run();
  static {};
}
Compiled from "Tutorial1.java"
public class be.demmel.fun.jgwcaconstants.Tutorial1 {
  public be.demmel.fun.jgwcaconstants.Tutorial1();
  public static void main(java.lang.String[]) throws java.lang.InterruptedException;
  static {};
}
Compiled from "Tutorial2.java"
public class be.demmel.fun.jgwcaconstants.Tutorial2 {
  public be.demmel.fun.jgwcaconstants.Tutorial2();
  public static void main(java.lang.String...) throws java.lang.InterruptedException;
  static {};
}
Compiled from "Tutorial3.java"
public class be.demmel.fun.jgwcaconstants.Tutorial3 {
  public be.demmel.fun.jgwcaconstants.Tutorial3();
  public static void main(java.lang.String...) throws java.lang.InterruptedException;
  static {};
}
Compiled from "Tutorial4.java"
public class be.demmel.fun.jgwcaconstants.Tutorial4 {
  public be.demmel.fun.jgwcaconstants.Tutorial4();
  public static void main(java.lang.String[]) throws java.lang.InterruptedException;
  static {};
}
Compiled from "Version.java"
public final class be.demmel.fun.jgwcaconstants.Version {
  public be.demmel.fun.jgwcaconstants.Version();
  public static void main(java.lang.String[]);
  public static java.lang.String getVersion();
  static {};
}
Compiled from "Attribute.java"
public final class be.demmel.fun.jgwcaconstants.bll.Attribute extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Attribute> {
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute FAST_CASTING;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute ILLUSION_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute DOMINATION_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute INSPIRATION_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute BLOOD_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute DEATH_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SOUL_REAPING;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute CURSES;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute AIR_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute EARTH_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute FIRE_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute WATER_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute ENERGY_STORAGE;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute HEALING_PRAYERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SMITING_PRAYERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute PROTECTION_PRAYERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute DIVINE_FAVOR;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute STRENGTH;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute AXE_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute HAMMER_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SWORDSMANSHIP;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute TACTICS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute BEAST_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute EXPERTISE;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute WILDERNESS_SURVIVAL;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute MARKSMANSHIP;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute DAGGER_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute DEADLY_ARTS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SHADOW_ARTS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute COMMUNING;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute RESTORATION_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute CHANNELING_MAGIC;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute CRITICAL_STRIKES;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SPAWNING_POWER;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SPEAR_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute COMMAND;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute MOTIVATION;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute LEADERSHIP;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute SCYTHE_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute WIND_PRAYERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute EARTH_PRAYERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Attribute MYSTICISM;
  public static be.demmel.fun.jgwcaconstants.bll.Attribute[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Attribute valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "BagLocation.java"
public final class be.demmel.fun.jgwcaconstants.bll.BagLocation extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.BagLocation> {
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation BACKPACK;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation BELT_POUCH;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation BAG1;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation BAG2;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation EQUIPMENT_PACK;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation UNCLAIMED_ITEMS;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_1;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_2;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_3;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_4;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_5;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_6;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_7;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_8;
  public static final be.demmel.fun.jgwcaconstants.bll.BagLocation STORAGE_ANNIVERSARY;
  public static be.demmel.fun.jgwcaconstants.bll.BagLocation[] values();
  public static be.demmel.fun.jgwcaconstants.bll.BagLocation valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "Dye.java"
public final class be.demmel.fun.jgwcaconstants.bll.Dye extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Dye> {
  public static final be.demmel.fun.jgwcaconstants.bll.Dye BLUE;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye GREEN;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye PURPLE;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye RED;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye YELLOW;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye BROWN;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye ORANGE;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye SILVER;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye BLACK;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye GRAY;
  public static final be.demmel.fun.jgwcaconstants.bll.Dye WHITE;
  public static be.demmel.fun.jgwcaconstants.bll.Dye[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Dye valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "GWCAConnection.java"
public interface be.demmel.fun.jgwcaconstants.bll.GWCAConnection {
  public abstract void sendPacket(be.demmel.fun.jgwcaconstants.bll.GWCAPacket) throws java.io.IOException;
  public abstract be.demmel.fun.jgwcaconstants.bll.GWCAPacket receivePacket() throws java.io.IOException;
  public abstract void open() throws java.io.IOException;
  public abstract void close() throws java.io.IOException;
}
Compiled from "GWCAOperation.java"
public final class be.demmel.fun.jgwcaconstants.bll.GWCAOperation extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.GWCAOperation> {
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation MOVE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_PING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PREPARE_ZONE_MAP_EX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ZONE_MAP_EX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MAP_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_REGION_AND_LANGUAGE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_CURRENT_TARGET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CASTING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SKILL_RECHARGE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SKILL_ADRENALINE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_AGENT_AND_TARGET_POINTERS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_SKILLBAR_SKILL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MY_MAX_HP;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MY_MAX_ENERGY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_BUILD_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_MAX_ZOOM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_LAST_DIALOG_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_ENGINE_HOOK;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HERO_CASTING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HERO_SKILL_RECHARGE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HERO_SKILL_ADRENALINE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HERO_SKILL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HERO_AGENT_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MAP_LOADING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_LOGGED_IN;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_DEAD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_BALTHAZAR_FACTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_KURZICK_FACTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_LUXON_FACTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_TREASURE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_LUCKY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_UNLUCKY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_GAMER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EXPERIENCE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_CONNECTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MATCH_STATUS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_SUNSPEAR;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_LIGHTBRINGER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_VANGUARD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_NORN;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_ASURA;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_DELDRIMOR;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_NORTH_MASTERY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_DRUNKARD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_SWEET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_PARTY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TITLE_COMMANDER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EQUIPMENT_MODEL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EQUIPMENT_DYE_INFO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EFFECT_COUNT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EFFECT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EFFECT_BY_INDEX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EFFECT_DURATION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_AGENT_EXIST;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_PROFESSIONS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HP;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ROTATION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_WEAPON_SPEEDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TEAM_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HP_PIPS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_HEX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MODEL_ANIMATION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TYPE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_LEVEL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MAX_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MY_NEAREST_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MY_DISTANCE_TO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_AGENT_TO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_DISTANCE_FROM_AGENT_TO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_AGENT_TO_AGENT_EX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_IS_ATTACKING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_IS_KNOCKED_DOWN;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_IS_MOVING;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_IS_DEAD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_FIRST_AGENT_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ALLEGIANCE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ENEMY_TO_AGENT_EX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ITEM_TO_AGENT_EX;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_AGENT_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_SPEED;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ENEMY_TO_AGENT_BY_ALLEGIANCE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ALIVE_ENEMY_TO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_WEAPON_TYPE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_SIGNPOST_TO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_NPC_TO_AGENT_BY_ALLEGIANCE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_AGENT_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_NPC_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_LOGIN_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NUMBER_OF_AGENTS_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NUMBER_OF_ALIVE_ENEMY_AGENTS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEXT_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TARGET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_ATTRIBUTE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation RESET_ATTRIBUTES;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PLAYER_HAS_BUFF;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation HERO1_HAS_BUFF;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation HERO2_HAS_BUFF;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation HERO3_HAS_BUFF;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_AGENT_DANGER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TYPE_MAP;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_AGENT_WEAPONS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEXT_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEXT_ALLY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEXT_FOE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_EXTRA_TYPE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PREPARE_NEAREST_PLAYER_NUMBER_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_PLAYER_NUMBER_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_FIRST_AGENT_BY_PLAYER_NUMBER_BY_TEAM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ALIVE_ENEMY_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEXT_ALIVE_FOE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ALIVE_AGENT_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_GOLD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_BAG_SIZE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_BAG;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ID_KIT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation IDENTIFY_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation IDENTIFY_ITEM_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DEPOSIT_GOLD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation WITHDRAW_GOLD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SELL_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SELL_ITEM_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation BUY_ID_KIT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation BUY_SUPERIOR_ID_KIT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_INFO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_ITEM_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DROP_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DROP_ITEM_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ACCEPT_ALL_ITEMS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation FIND_ITEM_BY_MODEL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation FIND_EMPTY_SLOT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation FIND_GOLD_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_POSITION_BY_ITEM_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_POSITION_BY_MODEL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_POSITION_BY_RARITY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_MODEL_ID_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_INFO_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation EQUIP_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation EQUIP_ITEM_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_SALVAGE_KIT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation BUY_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_ID_BY_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_INFO_BY_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ITEM_BY_MODEL_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_EXTRA_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_EXTRA_ID_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_EXTRA_ID_BY_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_REQ;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_REQ_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_REQ_BY_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_DYE_POSITION_BY_COLOR;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_DMG_MOD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_DMG_MOD_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_DMG_MOD_BY_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SUBMIT_OFFER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_OFFER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation OFFER_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CANCEL_TRADE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ACCEPT_TRADE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ATTACK;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_WEAPON_SET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ZONE_MAP;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DROP_GOLD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GO_NPC;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GO_PLAYER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GO_SIGN_POST;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ENTER_CHALLENGE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ENTER_CHALLENGE_FOREIGN;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation OPEN_CHEST;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PICKUP_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DIALOG;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_TARGET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_NEAREST_FOE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_NEAREST_ALLY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_NEAREST_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_CALLED_TARGET;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_HERO1_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_HERO2_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation USE_HERO3_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CANCEL_ACTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation COMMAND_HERO1;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation COMMAND_HERO2;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation COMMAND_HERO3;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation COMMAND_ALL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_DISTRICT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation RESIGN;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation UPDATE_AGENT_POSITION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation RETURN_TO_OUTPOST;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GO_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DONATE_FACTION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_SKILLBAR_SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CHANGE_SECOND_PROFESSION;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_NEXT_PARTY_MEMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TARGET_NEXT_FOE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SKIP_CINEMATIC;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation DISMISS_BUFF;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ADD_HERO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation KICK_HERO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SWITCH_MODE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation ADD_NPC;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation KICK_NPC;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRAVEL_GH;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation LEAVE_GH;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation INIT_MAP_LOAD;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation MAP_IS_LOADED;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MAP_OVERLAY_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_MAP_OVERLAY_INFO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_MAP_OVERLAY_TO_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_HERO_MODE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation QUEST_CHECK;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation QUEST_COORDS;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation QUEST_ACTIVE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation QUEST_ABANDON;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation SET_TEAM_SIZE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_REQUEST;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_CHECK;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_BUY;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_REQUEST_SELL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_REQUEST_SELL_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADER_SELL;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NUMBER_OF_FOES_IN_RANGE_OF_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NUMBER_OF_ALLIES_IN_RANGE_OF_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NUMBER_OF_ITEMS_IN_RANGE_OF_AGENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation TRADE_PLAYER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_TIME_STAMP;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation LOCK_HERO;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation CANCEL_MAINTAINED_ENCHANTMENT;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_SKILL_TYPE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation OPEN_STORAGE;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_NEAREST_ALIVE_ENEMY_TO_COORDS_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PREPARE_NEAREST_PLAYER_NUMBER_TO_COORDS_BY_PLAYER_NUMBER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation PREPARE_MOVE_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation MOVE_ITEM;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_LAST_MODIFIER;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_LAST_MODIFIER_BY_ID;
  public static final be.demmel.fun.jgwcaconstants.bll.GWCAOperation GET_ITEM_LAST_MODIFIER_BY_AGENT;
  public static be.demmel.fun.jgwcaconstants.bll.GWCAOperation[] values();
  public static be.demmel.fun.jgwcaconstants.bll.GWCAOperation valueOf(java.lang.String);
  public short getOperationId();
  public static be.demmel.fun.jgwcaconstants.bll.GWCAOperation toEnum(short);
  static {};
}
Compiled from "GWCAOperations.java"
public class be.demmel.fun.jgwcaconstants.bll.GWCAOperations {
  public be.demmel.fun.jgwcaconstants.bll.GWCAOperations(be.demmel.fun.jgwcaconstants.bll.GWCAConnection);
  public int getCurrentTarget() throws java.io.IOException;
  public int getMyId() throws java.io.IOException;
  public boolean isCasting() throws java.io.IOException;
  public int getSkillRecharge(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getSkillAdrenaline(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int[] getAgentAndTargetPointer() throws java.io.IOException;
  public int getSkillbarSkillId(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int[] getMyMaxHp() throws java.io.IOException;
  public int[] getMyMaxEnergy() throws java.io.IOException;
  public int getBuildNumber() throws java.io.IOException;
  public void setMaxZoom(int) throws java.io.IOException;
  public int getLastDialogId() throws java.io.IOException;
  public void setEngineHook(boolean) throws java.io.IOException;
  public boolean isHeroCasting(be.demmel.fun.jgwcaconstants.bll.HeroSlot) throws java.io.IOException;
  public int getHeroSkillRecharge(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroSkillAdrenaline(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroSkillId(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroAgentId(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getMapLoading() throws java.io.IOException;
  public int getMapId() throws java.io.IOException;
  public int getPing() throws java.io.IOException;
  public boolean isLoggedIn() throws java.io.IOException;
  public boolean isDead() throws java.io.IOException;
  public int getBalthazarFaction() throws java.io.IOException;
  public int getKurzickFaction() throws java.io.IOException;
  public int getLuxonFaction() throws java.io.IOException;
  public int getTitleTreasure() throws java.io.IOException;
  public int getTitleLucky() throws java.io.IOException;
  public int getTitleUnlucky() throws java.io.IOException;
  public int getTitleWisdom() throws java.io.IOException;
  public int getTitleGamer() throws java.io.IOException;
  public int getExperience() throws java.io.IOException;
  public int getConnection() throws java.io.IOException;
  public int getMatchStatus() throws java.io.IOException;
  public int getTitleSunspear() throws java.io.IOException;
  public int getTitleLightbringer() throws java.io.IOException;
  public int getTitleVanguard() throws java.io.IOException;
  public int getTitleNorn() throws java.io.IOException;
  public int getTitleAsura() throws java.io.IOException;
  public int getTitleDeldrimor() throws java.io.IOException;
  public int getTitleNorthMastery() throws java.io.IOException;
  public int getTitleDrunkard() throws java.io.IOException;
  public int getTitleSweet() throws java.io.IOException;
  public int getTitleParty() throws java.io.IOException;
  public int getTitleCommander() throws java.io.IOException;
  public int[] getEquipmentModelId(int, int) throws java.io.IOException;
  public int[] getEquipmentDyeInfo(int, int) throws java.io.IOException;
  public int getEffectCount() throws java.io.IOException;
  public int getEffect(int) throws java.io.IOException;
  public int getEffectByIndex(int) throws java.io.IOException;
  public int[] getEffectDuration(int) throws java.io.IOException;
  public boolean getAgentExists(int) throws java.io.IOException;
  public int[] getProfessions(int) throws java.io.IOException;
  public int getPlayerNumber(int) throws java.io.IOException;
  public float getHp(int) throws java.io.IOException;
  public float getRotation(int) throws java.io.IOException;
  public int getSkill(int) throws java.io.IOException;
  public float[] getCoords(int) throws java.io.IOException;
  public float[] getWeaponSpeeds(int) throws java.io.IOException;
  public int getTeamId(int) throws java.io.IOException;
  public int getHpPips(int) throws java.io.IOException;
  public int getHex(int) throws java.io.IOException;
  public int getModelAnimation(int) throws java.io.IOException;
  public int getType(int) throws java.io.IOException;
  public int getLevel(int) throws java.io.IOException;
  public int getMaxId() throws java.io.IOException;
  public int getMyNearestAgent() throws java.io.IOException;
  public float getMyDistanceToAgent(int) throws java.io.IOException;
  public int getNearestAgentToAgent(int) throws java.io.IOException;
  public float getDistanceFromAgentToAgent(int, int) throws java.io.IOException;
  public float[] getNearestAgentToAgentEx(int) throws java.io.IOException;
  public boolean isAttacking(int) throws java.io.IOException;
  public boolean isKnockedDown(int) throws java.io.IOException;
  public boolean isMoving(int) throws java.io.IOException;
  public boolean isDead(int) throws java.io.IOException;
  public int getFirstAgentByPlayerNumber(int) throws java.io.IOException;
  public int getAllegiance(int) throws java.io.IOException;
  public float[] getNearestEnemyToAgentEx(int) throws java.io.IOException;
  public float[] getNearestItemToAgentEx(int) throws java.io.IOException;
  public int getNearestAgentByPlayerNumber(int) throws java.io.IOException;
  public float getSpeed(int) throws java.io.IOException;
  public float[] getNearestEnemyToAgentByAllegiance(int) throws java.io.IOException;
  public float[] getNearestAliveEnemyToAgent(int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.WeaponType getWeaponType(int) throws java.io.IOException;
  public int getNearestSignpostToAgent(int) throws java.io.IOException;
  public int getNearestNpcToAgentByAllegiance(int) throws java.io.IOException;
  public int getNearestAgentToCoords(float, float) throws java.io.IOException;
  public int getNearestNpcToCoords(float, float) throws java.io.IOException;
  public int getLoginNumber(int) throws java.io.IOException;
  public int getNumberOfAgentsByPlayerNumber(int) throws java.io.IOException;
  public int getNumberOfAliveEnemyAgents() throws java.io.IOException;
  public int getNextItem(int) throws java.io.IOException;
  public int getTarget(int) throws java.io.IOException;
  public void setAttribute(be.demmel.fun.jgwcaconstants.bll.Attribute, int) throws java.io.IOException;
  public void resetAttributes() throws java.io.IOException;
  public boolean playerHasBuff(int) throws java.io.IOException;
  public boolean hero1HasBuff(int) throws java.io.IOException;
  public boolean hero2HasBuff(int) throws java.io.IOException;
  public boolean hero3HasBuff(int) throws java.io.IOException;
  public int getAgentDanger(int) throws java.io.IOException;
  public int getTypeMap(int) throws java.io.IOException;
  public int[] getAgentWeapons(int) throws java.io.IOException;
  public int getNextAgent(int) throws java.io.IOException;
  public int getNextAlly(int) throws java.io.IOException;
  public int getNextFoe(int) throws java.io.IOException;
  public int getExtraType(int) throws java.io.IOException;
  public void prepareNearestPlayerNumberToCoords(int) throws java.io.IOException;
  public int getNearestPlayerNumberToCoords(float, float) throws java.io.IOException;
  public int getNearestPlayerNumberToCoords(int, float, float) throws java.io.IOException;
  public int getFirstAgentByPlayerNumberByTeam(int, int) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoords(float, float) throws java.io.IOException;
  public void prepareNearestPlayerNumberToCoordsByPlayerNumber(int) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoordsByPlayerNumber(float, float) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoordsByPlayerNumber(int, float, float) throws java.io.IOException;
  public int getNextAliveFoe(int) throws java.io.IOException;
  public float[] getNearestAliveAgentByPlayerNumber(int) throws java.io.IOException;
  public int[] getGold() throws java.io.IOException;
  public int[] getBagSize(be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public void setBag(be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int[] getItemId(int) throws java.io.IOException;
  public int[] getItemId(int, be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int getIdKit() throws java.io.IOException;
  public void identifyItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void identifyItemById(int) throws java.io.IOException;
  public void depositGold(int) throws java.io.IOException;
  public void withdrawGold(int) throws java.io.IOException;
  public void sellItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void sellItemById(int) throws java.io.IOException;
  public void buyIdKit() throws java.io.IOException;
  public void buySuperiorIdKit() throws java.io.IOException;
  public int[] getItemInfo(int, be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int[] getItemInfo(int) throws java.io.IOException;
  public void useItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void useItemById(int) throws java.io.IOException;
  public void dropItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void dropItemById(int) throws java.io.IOException;
  public void acceptAllItems() throws java.io.IOException;
  public int findItemByModelId(int) throws java.io.IOException;
  public int[] findEmptySlot(be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int[] findGoldItem(be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int[] findGoldItem() throws java.io.IOException;
  public int[] getItemPositionByItemId(int) throws java.io.IOException;
  public int[] getItemPositionByModelId(int) throws java.io.IOException;
  public int[] getItemPositionByRarity(be.demmel.fun.jgwcaconstants.bll.Rarity) throws java.io.IOException;
  public int getItemModelIdById(int) throws java.io.IOException;
  public int[] getItemInfoById(int) throws java.io.IOException;
  public void equipItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void equipItemById(int) throws java.io.IOException;
  public int getSalvageKit() throws java.io.IOException;
  public void buyItem(int, int) throws java.io.IOException;
  public int[] getItemIdByAgent(int) throws java.io.IOException;
  public int[] getItemInfoByAgent(int) throws java.io.IOException;
  public float[] getNearestItemByModelId(int) throws java.io.IOException;
  public int getItemExtraId(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public int getItemExtraId(int) throws java.io.IOException;
  public int getItemExtraIdById(int) throws java.io.IOException;
  public int getItemExtraIdByAgent(int) throws java.io.IOException;
  public int getItemReq(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public int getItemReq(int) throws java.io.IOException;
  public int getItemReqById(int) throws java.io.IOException;
  public int getItemReqByAgent(int) throws java.io.IOException;
  public int getDyePositionByColor(be.demmel.fun.jgwcaconstants.bll.Dye, be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int getDyePositionByColor(be.demmel.fun.jgwcaconstants.bll.Dye) throws java.io.IOException;
  public int getItemDmgMod(int, be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int getItemDmgMod(int) throws java.io.IOException;
  public int getItemDmgModById(int) throws java.io.IOException;
  public int getItemDmgModByAgent(int) throws java.io.IOException;
  public void submitOffer(int) throws java.io.IOException;
  public void changeOffer() throws java.io.IOException;
  public void offerItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void offerItem(int) throws java.io.IOException;
  public void cancelTrade() throws java.io.IOException;
  public void acceptTrade() throws java.io.IOException;
  public void attack(int) throws java.io.IOException;
  public void move(float, float) throws java.io.IOException;
  public void moveEx(float, float, int) throws java.io.IOException;
  public void useSkill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void changeWeaponSet(int) throws java.io.IOException;
  public void zoneMap(int, int) throws java.io.IOException;
  public void travelTo(int, int) throws java.io.IOException;
  public void dropGold(int) throws java.io.IOException;
  public void goNpc(int) throws java.io.IOException;
  public void goPlayer(int) throws java.io.IOException;
  public void goSignpost(int) throws java.io.IOException;
  public void enterChallenge() throws java.io.IOException;
  public void enterChallengeForeign() throws java.io.IOException;
  public void openChest() throws java.io.IOException;
  public void pickupItem(int) throws java.io.IOException;
  public void dialog(int) throws java.io.IOException;
  public void changeTarget(int) throws java.io.IOException;
  public void targetNearestFoe() throws java.io.IOException;
  public void targetNearestAlly() throws java.io.IOException;
  public void targetNearestItem() throws java.io.IOException;
  public void targetCalledTarget() throws java.io.IOException;
  public void useHero1Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void useHero2Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void useHero3Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void cancelAction() throws java.io.IOException;
  public void commandHero1(float, float) throws java.io.IOException;
  public void commandHero2(float, float) throws java.io.IOException;
  public void commandHero3(float, float) throws java.io.IOException;
  public void commandAll(float, float) throws java.io.IOException;
  public void changeDistrict(be.demmel.fun.jgwcaconstants.bll.Region, byte) throws java.io.IOException;
  public void resign() throws java.io.IOException;
  public void updateAgentPosition(int) throws java.io.IOException;
  public void returnToOutpost() throws java.io.IOException;
  public void goAgent(int) throws java.io.IOException;
  public void donateKurzickFaction() throws java.io.IOException;
  public void donateLuxonFaction() throws java.io.IOException;
  public void setSkillbarSkill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void changeSecondProfession(be.demmel.fun.jgwcaconstants.bll.Profession) throws java.io.IOException;
  public void targetNextPartyMember() throws java.io.IOException;
  public void targetNextFoe() throws java.io.IOException;
  public void skipCinematic() throws java.io.IOException;
  public void dismissBuff(int, int) throws java.io.IOException;
  public void openStorage() throws java.io.IOException;
  public void prepareZoneMapEx(int) throws java.io.IOException;
  public void zoneMapEx(be.demmel.fun.jgwcaconstants.bll.Region, int) throws java.io.IOException;
  public void addHero(be.demmel.fun.jgwcaconstants.bll.Hero) throws java.io.IOException;
  public void kickHero(be.demmel.fun.jgwcaconstants.bll.Hero) throws java.io.IOException;
  public void toggleHardMode() throws java.io.IOException;
  public void toggleNormalMode() throws java.io.IOException;
  public void addNpc(int) throws java.io.IOException;
  public void kickNpc(int) throws java.io.IOException;
  public void travelGH() throws java.io.IOException;
  public void leaveGH() throws java.io.IOException;
  public void initMapLoad() throws java.io.IOException;
  public boolean isMapLoaded() throws java.io.IOException;
  public float[] getMapOverlayCoords(int) throws java.io.IOException;
  public int[] getMapOverlayInfo(int) throws java.io.IOException;
  public int getNearestMapOverlayToCoords(float, float) throws java.io.IOException;
  public void setHeroMode(int, be.demmel.fun.jgwcaconstants.bll.HeroMode) throws java.io.IOException;
  public int[] questCheck(int) throws java.io.IOException;
  public float[] questCoords(int) throws java.io.IOException;
  public int questActive() throws java.io.IOException;
  public void questAbandon(int) throws java.io.IOException;
  public void setTeamSize(int) throws java.io.IOException;
  public int[] getRegionAndLanguage() throws java.io.IOException;
  public void traderRequest(int) throws java.io.IOException;
  public int[] traderCheck() throws java.io.IOException;
  public boolean traderBuy() throws java.io.IOException;
  public void traderRequestSell(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void traderRequestSellById(int) throws java.io.IOException;
  public boolean traderSell() throws java.io.IOException;
  public int getNumberOfFoesInRangeOfAgent(int, float) throws java.io.IOException;
  public int getNumberOfAlliesInRangeOfAgent(int, float) throws java.io.IOException;
  public int getNumberOfItemsInRangeOfAgent(int, float) throws java.io.IOException;
  public void tradePlayer(int) throws java.io.IOException;
  public int getTimeStamp() throws java.io.IOException;
  public void lockHero(int, int) throws java.io.IOException;
  public void cancelMaintainedEnchantment(int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.SkillType getSkillType(int) throws java.io.IOException;
  public void prepareMoveItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void prepareMoveItem(int) throws java.io.IOException;
  public void moveItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void moveItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int, be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void moveItemById(int, be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void pickupItems(int, float) throws java.io.IOException;
  public int[] getItemLastModifier(int, be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int[] getItemLastModifierById(int) throws java.io.IOException;
  public int[] getItemLastModifierByAgent(int) throws java.io.IOException;
  public void zoneMapEx(int, be.demmel.fun.jgwcaconstants.bll.Region, int) throws java.io.IOException;
  public void moveToEx(float, float, int) throws java.io.IOException;
  public void pingSleep(long) throws java.io.IOException;
  public void useSkillEx(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int, int) throws java.io.IOException;
  public int getSkillRechargeTimeLeft(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroSkillRechargeTimeLeft(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  static {};
}
Compiled from "GWCAPacket.java"
public class be.demmel.fun.jgwcaconstants.bll.GWCAPacket {
  public be.demmel.fun.jgwcaconstants.bll.GWCAPacket(be.demmel.fun.jgwcaconstants.bll.GWCAOperation, byte[], byte[]);
  public be.demmel.fun.jgwcaconstants.bll.GWCAPacket(be.demmel.fun.jgwcaconstants.bll.GWCAOperation, int, int);
  public be.demmel.fun.jgwcaconstants.bll.GWCAPacket(be.demmel.fun.jgwcaconstants.bll.GWCAOperation, byte[]);
  public be.demmel.fun.jgwcaconstants.bll.GWCAPacket(be.demmel.fun.jgwcaconstants.bll.GWCAOperation, short, byte[], byte[]);
  public byte[] getLparam();
  public int getLparamAsInt();
  public int getWparamAsInt();
  public float getWparamAsFloat();
  public boolean getWparamAsBoolean();
  public int[] getParamsAsIntArray();
  public float[] getParamsAsFloatArray();
  public float[] getParamsAsIntFloatArray();
  public be.demmel.fun.jgwcaconstants.bll.GWCAOperation getOperation();
  public short getOperationType();
  public byte[] getWparam();
  public java.lang.String toString();
  static {};
}
Compiled from "Hero.java"
public final class be.demmel.fun.jgwcaconstants.bll.Hero extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Hero> {
  public static final be.demmel.fun.jgwcaconstants.bll.Hero NORGU;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero GOREN;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero TAHLIKORA;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero MASTER_OF_WHISPERS;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero ACOLYTE_JIN;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero KOSS;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero DUNKORO;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero ACOLYTE_SOUSUKE;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero MELONNI;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero ZHED_SHADOWHOOF;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero GENERAL_MORGAHN;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero MARGRID_THE_SLY;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero OLIAS;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero RAZAH;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero MOX;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero JORA;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero PYRE_FIERCESHOT;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero LIVIA;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero HAYDA;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero KAHMU;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero GWEN;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero XANDRA;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero VEKK;
  public static final be.demmel.fun.jgwcaconstants.bll.Hero OGDEN;
  public static be.demmel.fun.jgwcaconstants.bll.Hero[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Hero valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "HeroMode.java"
public final class be.demmel.fun.jgwcaconstants.bll.HeroMode extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.HeroMode> {
  public static final be.demmel.fun.jgwcaconstants.bll.HeroMode FIGHT;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroMode GUARD;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroMode AVOID;
  public static be.demmel.fun.jgwcaconstants.bll.HeroMode[] values();
  public static be.demmel.fun.jgwcaconstants.bll.HeroMode valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "HeroSlot.java"
public final class be.demmel.fun.jgwcaconstants.bll.HeroSlot extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.HeroSlot> {
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot ONE;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot TWO;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot THREE;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot FOUR;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot FIVE;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot SIX;
  public static final be.demmel.fun.jgwcaconstants.bll.HeroSlot SEVEN;
  public static be.demmel.fun.jgwcaconstants.bll.HeroSlot[] values();
  public static be.demmel.fun.jgwcaconstants.bll.HeroSlot valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "NamedPipeGWCAConnection.java"
public class be.demmel.fun.jgwcaconstants.bll.NamedPipeGWCAConnection implements be.demmel.fun.jgwcaconstants.bll.GWCAConnection {
  public be.demmel.fun.jgwcaconstants.bll.NamedPipeGWCAConnection(java.io.File);
  public be.demmel.fun.jgwcaconstants.bll.NamedPipeGWCAConnection(int);
  public void sendPacket(be.demmel.fun.jgwcaconstants.bll.GWCAPacket) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.GWCAPacket receivePacket() throws java.io.IOException;
  public void open() throws java.io.IOException;
  public void close() throws java.io.IOException;
}
Compiled from "Profession.java"
public final class be.demmel.fun.jgwcaconstants.bll.Profession extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Profession> {
  public static final be.demmel.fun.jgwcaconstants.bll.Profession NONE;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession WARRIOR;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession RANGER;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession MONK;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession NECROMANCER;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession MESMER;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession ELEMENTALIST;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession ASSASSIN;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession RITUALIST;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession PARAGON;
  public static final be.demmel.fun.jgwcaconstants.bll.Profession DERVISH;
  public static be.demmel.fun.jgwcaconstants.bll.Profession[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Profession valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "Rarity.java"
public final class be.demmel.fun.jgwcaconstants.bll.Rarity extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Rarity> {
  public static final be.demmel.fun.jgwcaconstants.bll.Rarity WHITE;
  public static final be.demmel.fun.jgwcaconstants.bll.Rarity BLUE;
  public static final be.demmel.fun.jgwcaconstants.bll.Rarity PURPLE;
  public static final be.demmel.fun.jgwcaconstants.bll.Rarity GOLD;
  public static final be.demmel.fun.jgwcaconstants.bll.Rarity GREEN;
  public static be.demmel.fun.jgwcaconstants.bll.Rarity[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Rarity valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "Region.java"
public final class be.demmel.fun.jgwcaconstants.bll.Region extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.Region> {
  public static final be.demmel.fun.jgwcaconstants.bll.Region INTERNATIONAL;
  public static final be.demmel.fun.jgwcaconstants.bll.Region AMERICA;
  public static final be.demmel.fun.jgwcaconstants.bll.Region ASIA_KOREAN;
  public static final be.demmel.fun.jgwcaconstants.bll.Region EUROPE;
  public static final be.demmel.fun.jgwcaconstants.bll.Region ASIA_CHINESE;
  public static final be.demmel.fun.jgwcaconstants.bll.Region ASIA_JAPANESE;
  public static be.demmel.fun.jgwcaconstants.bll.Region[] values();
  public static be.demmel.fun.jgwcaconstants.bll.Region valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "SkillBarSkillSlot.java"
public final class be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot> {
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot ONE;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot TWO;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot THREE;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot FOUR;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot FIVE;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot SIX;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot SEVEN;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot EIGHT;
  public static be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot[] values();
  public static be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot valueOf(java.lang.String);
  public byte getValue();
  static {};
}
Compiled from "SkillType.java"
public final class be.demmel.fun.jgwcaconstants.bll.SkillType extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.SkillType> {
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType STANCE;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType HEX;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType SPELL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType ENCHANTMENT;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType SIGNET;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType WELL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType SKILL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType WARD;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType GLYPH;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType ATTACK;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType SHOUT;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType PREPARATION;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType TRAP;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType RITUAL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType ITEM_SPELL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType WEAPON_SPELL;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType CHANT;
  public static final be.demmel.fun.jgwcaconstants.bll.SkillType ECHO_REFRAIN;
  public static be.demmel.fun.jgwcaconstants.bll.SkillType[] values();
  public static be.demmel.fun.jgwcaconstants.bll.SkillType valueOf(java.lang.String);
  public short getSkillTypeId();
  public static be.demmel.fun.jgwcaconstants.bll.SkillType toEnum(short);
  static {};
}
Compiled from "WeaponType.java"
public final class be.demmel.fun.jgwcaconstants.bll.WeaponType extends java.lang.Enum<be.demmel.fun.jgwcaconstants.bll.WeaponType> {
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType BOW;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType AXE;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType HAMMER;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType DAGGERS;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType SCYTHE;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType SPEAR;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType SWORD;
  public static final be.demmel.fun.jgwcaconstants.bll.WeaponType WAND;
  public static be.demmel.fun.jgwcaconstants.bll.WeaponType[] values();
  public static be.demmel.fun.jgwcaconstants.bll.WeaponType valueOf(java.lang.String);
  public short getSkillTypeId();
  public static be.demmel.fun.jgwcaconstants.bll.WeaponType toEnum(short);
  static {};
}
Compiled from "Agent.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.Agent {
  public be.demmel.fun.jgwcaconstants.bll.clean.Agent(be.demmel.fun.jgwcaconstants.bll.GWCAOperations, int);
  public int getId();
  public void setId(int);
  public int[] getEquipmentModelId(int) throws java.io.IOException;
  public int[] getEquipmentDyeInfo(int) throws java.io.IOException;
  public boolean getAgentExists() throws java.io.IOException;
  public int[] getProfessions() throws java.io.IOException;
  public int getPlayerNumber() throws java.io.IOException;
  public float getHp() throws java.io.IOException;
  public float getRotation() throws java.io.IOException;
  public int getSkill() throws java.io.IOException;
  public float[] getCoords() throws java.io.IOException;
  public float[] getWeaponSpeeds() throws java.io.IOException;
  public int getTeamId() throws java.io.IOException;
  public int getHpPips() throws java.io.IOException;
  public int getHex() throws java.io.IOException;
  public int getModelAnimation() throws java.io.IOException;
  public int getType() throws java.io.IOException;
  public int getLevel() throws java.io.IOException;
  public float getMyDistanceToAgent() throws java.io.IOException;
  public int getNearestAgent() throws java.io.IOException;
  public float getDistanceFromAgentToAgent(int) throws java.io.IOException;
  public float[] getNearestAgentToAgentEx() throws java.io.IOException;
  public boolean isAttacking() throws java.io.IOException;
  public boolean isKnockedDown() throws java.io.IOException;
  public boolean isMoving() throws java.io.IOException;
  public boolean isDead() throws java.io.IOException;
  public int getAllegiance() throws java.io.IOException;
  public float[] getNearestEnemyToAgentEx() throws java.io.IOException;
  public float[] getNearestItemToAgentEx() throws java.io.IOException;
  public float getSpeed() throws java.io.IOException;
  public float[] getNearestEnemyToAgentByAllegiance() throws java.io.IOException;
  public float[] getNearestAliveEnemyToAgent() throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.WeaponType getWeaponType() throws java.io.IOException;
  public int getNearestSignpostToAgent() throws java.io.IOException;
  public int getNearestNpcToAgentByAllegiance() throws java.io.IOException;
  public int getLoginNumber() throws java.io.IOException;
  public int getTarget() throws java.io.IOException;
  public int getAgentDanger() throws java.io.IOException;
  public int getTypeMap() throws java.io.IOException;
  public int[] getAgentWeapons() throws java.io.IOException;
  public int getNextAgent() throws java.io.IOException;
  public int getNextAlly() throws java.io.IOException;
  public int getNextFoe() throws java.io.IOException;
  public int getExtraType() throws java.io.IOException;
  public int getNumberOfFoesInRangeOfAgent(float) throws java.io.IOException;
  public int getNumberOfAlliesInRangeOfAgent(float) throws java.io.IOException;
  public int getNumberOfItemsInRangeOfAgent(float) throws java.io.IOException;
  public int getNextAliveFoe() throws java.io.IOException;
  public int[] getItemIdByAgent() throws java.io.IOException;
  public int[] getItemInfoByAgent() throws java.io.IOException;
  public int getNextItem() throws java.io.IOException;
  public int getItemExtraIdByAgent() throws java.io.IOException;
  public int getItemReqByAgent() throws java.io.IOException;
  public int getItemDmgModByAgent() throws java.io.IOException;
  public int[] getItemLastModifierByAgent() throws java.io.IOException;
}
Compiled from "Bag.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.Bag {
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag(be.demmel.fun.jgwcaconstants.bll.GWCAOperations, be.demmel.fun.jgwcaconstants.bll.BagLocation);
  public int[] getBagSize() throws java.io.IOException;
  public int[] getItemId(int) throws java.io.IOException;
  public void identifyItem(int) throws java.io.IOException;
  public int getItemReq(int) throws java.io.IOException;
  public int getItemExtraId(int) throws java.io.IOException;
  public void sellItem(int) throws java.io.IOException;
  public int[] getItemInfo(int) throws java.io.IOException;
  public void useItem(int) throws java.io.IOException;
  public void dropItem(int) throws java.io.IOException;
  public int[] findEmptySlot() throws java.io.IOException;
  public int[] findGoldItem() throws java.io.IOException;
  public void equipItem(int) throws java.io.IOException;
  public int getDyePositionByColor(be.demmel.fun.jgwcaconstants.bll.Dye) throws java.io.IOException;
  public int getItemDmgMod(int) throws java.io.IOException;
  public void offerItem(int) throws java.io.IOException;
  public void traderRequestSell(int) throws java.io.IOException;
  public void prepareMoveItem(int) throws java.io.IOException;
  public int[] getItemLastModifier(int) throws java.io.IOException;
}
Compiled from "EffectsMonitor.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.EffectsMonitor {
  public be.demmel.fun.jgwcaconstants.bll.clean.EffectsMonitor(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getEffectCount() throws java.io.IOException;
  public int getEffect(int) throws java.io.IOException;
  public int getEffectByIndex(int) throws java.io.IOException;
  public int[] getEffectDuration(int) throws java.io.IOException;
}
Compiled from "FactionTab.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.FactionTab {
  public be.demmel.fun.jgwcaconstants.bll.clean.FactionTab(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getBalthazarFaction() throws java.io.IOException;
  public int getKurzickFaction() throws java.io.IOException;
  public int getLuxonFaction() throws java.io.IOException;
}
Compiled from "GuildWarsInstance.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.GuildWarsInstance {
  public be.demmel.fun.jgwcaconstants.bll.clean.GuildWarsInstance(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public be.demmel.fun.jgwcaconstants.bll.clean.EffectsMonitor getEffectsMonitor();
  public be.demmel.fun.jgwcaconstants.bll.GWCAOperations getGwcaOperations();
  public be.demmel.fun.jgwcaconstants.bll.clean.HeroPanel getHeroPanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.InventoryPanel getInventoryPanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.PartyPanel getPartyPanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.Player getPlayer();
  public be.demmel.fun.jgwcaconstants.bll.clean.QuestLogPanel getQuestLogPanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.RemainingCommands getRemainingCommands();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillBar getSkillBar();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillsPanel getSkillsPanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.StoragePanel getStoragePanel();
  public be.demmel.fun.jgwcaconstants.bll.clean.TraderPanel getTraderPanel();
}
Compiled from "HeroPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.HeroPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.HeroPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getExperience() throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.clean.FactionTab getFactionTab();
  public be.demmel.fun.jgwcaconstants.bll.clean.TitlesTab getTitlesTab();
}
Compiled from "InventoryPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.InventoryPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.InventoryPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int[] getGold() throws java.io.IOException;
  public void dropGold(int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getBackPack();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getBag1();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getBag2();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getBeltPouch();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getEquipmentPack();
  public void setBag(be.demmel.fun.jgwcaconstants.bll.BagLocation) throws java.io.IOException;
  public int getIdKit() throws java.io.IOException;
  public void identifyItemById(int) throws java.io.IOException;
  public int findItemByModelId(int) throws java.io.IOException;
  public int[] getItemPositionByItemId(int) throws java.io.IOException;
  public int[] getItemPositionByModelId(int) throws java.io.IOException;
  public int[] getItemPositionByRarity(be.demmel.fun.jgwcaconstants.bll.Rarity) throws java.io.IOException;
  public int getItemModelIdById(int) throws java.io.IOException;
  public int[] getItemInfoById(int) throws java.io.IOException;
  public int getItemDmgModById(int) throws java.io.IOException;
  public void useItemById(int) throws java.io.IOException;
  public void dropItemById(int) throws java.io.IOException;
  public void equipItemById(int) throws java.io.IOException;
  public int getItemReqById(int) throws java.io.IOException;
  public int getItemExtraIdById(int) throws java.io.IOException;
  public int getSalvageKit() throws java.io.IOException;
  public void prepareMoveItem(int) throws java.io.IOException;
  public void moveItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void moveItem(be.demmel.fun.jgwcaconstants.bll.BagLocation, int, be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public void moveItemById(int, be.demmel.fun.jgwcaconstants.bll.BagLocation, int) throws java.io.IOException;
  public int[] getItemLastModifierById(int) throws java.io.IOException;
}
Compiled from "PartyPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.PartyPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.PartyPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public void toggleHardMode() throws java.io.IOException;
  public void toggleNormalMode() throws java.io.IOException;
  public void addNpc(int) throws java.io.IOException;
  public void kickNpc(int) throws java.io.IOException;
  public boolean isHeroCasting(be.demmel.fun.jgwcaconstants.bll.HeroSlot) throws java.io.IOException;
  public int getHeroSkillRecharge(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroSkillAdrenaline(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroSkillId(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public int getHeroAgentId(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
  public boolean hero1HasBuff(int) throws java.io.IOException;
  public boolean hero2HasBuff(int) throws java.io.IOException;
  public boolean hero3HasBuff(int) throws java.io.IOException;
  public void useHero1Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void useHero2Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void useHero3Skill(be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot, int) throws java.io.IOException;
  public void commandHero1(float, float) throws java.io.IOException;
  public void commandHero2(float, float) throws java.io.IOException;
  public void commandHero3(float, float) throws java.io.IOException;
  public void commandAll(float, float) throws java.io.IOException;
  public void addHero(be.demmel.fun.jgwcaconstants.bll.Hero) throws java.io.IOException;
  public void kickHero(be.demmel.fun.jgwcaconstants.bll.Hero) throws java.io.IOException;
  public void setHeroMode(int, be.demmel.fun.jgwcaconstants.bll.HeroMode) throws java.io.IOException;
  public void lockHero(int, int) throws java.io.IOException;
  public int getHeroSkillRechargeTimeLeft(be.demmel.fun.jgwcaconstants.bll.HeroSlot, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot) throws java.io.IOException;
}
Compiled from "Player.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.Player extends be.demmel.fun.jgwcaconstants.bll.clean.Agent {
  public be.demmel.fun.jgwcaconstants.bll.clean.Player(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getCurrentTarget() throws java.io.IOException;
  public int getMyId() throws java.io.IOException;
  public boolean isCasting() throws java.io.IOException;
  public int[] getMyMaxHp() throws java.io.IOException;
  public int[] getMyMaxEnergy() throws java.io.IOException;
  public boolean isDead() throws java.io.IOException;
  public boolean playerHasBuff(int) throws java.io.IOException;
  public int getMyNearestAgent() throws java.io.IOException;
  public void move(float, float) throws java.io.IOException;
  public void moveEx(float, float, int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.clean.TradePanel tradePlayer(int) throws java.io.IOException;
  public void attack(int) throws java.io.IOException;
  public void goPlayer(int) throws java.io.IOException;
  public void goNpc(int) throws java.io.IOException;
  public void goSignpost(int) throws java.io.IOException;
  public void pickupItem(int) throws java.io.IOException;
  public void openChest() throws java.io.IOException;
  public void dialog(int) throws java.io.IOException;
  public void changeTarget(int) throws java.io.IOException;
  public void targetNearestFoe() throws java.io.IOException;
  public void targetNearestAlly() throws java.io.IOException;
  public void targetNearestItem() throws java.io.IOException;
  public void targetCalledTarget() throws java.io.IOException;
  public void cancelAction() throws java.io.IOException;
  public void goAgent(int) throws java.io.IOException;
  public void targetNextPartyMember() throws java.io.IOException;
  public void targetNextFoe() throws java.io.IOException;
  public void pickupItems(int, float) throws java.io.IOException;
  public void moveToEx(float, float, int) throws java.io.IOException;
}
Compiled from "QuestLogPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.QuestLogPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.QuestLogPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getActiveQuest() throws java.io.IOException;
  public void abandonQuest(int) throws java.io.IOException;
  public float[] getQuestCoords(int) throws java.io.IOException;
  public int[] questCheck(int) throws java.io.IOException;
}
Compiled from "RemainingCommands.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.RemainingCommands {
  public be.demmel.fun.jgwcaconstants.bll.clean.RemainingCommands(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int[] getAgentAndTargetPointer() throws java.io.IOException;
  public int getBuildNumber() throws java.io.IOException;
  public void setMaxZoom(int) throws java.io.IOException;
  public int getLastDialogId() throws java.io.IOException;
  public void setEngineHook(boolean) throws java.io.IOException;
  public int getMapLoading() throws java.io.IOException;
  public int getMapId() throws java.io.IOException;
  public int getPing() throws java.io.IOException;
  public boolean isLoggedIn() throws java.io.IOException;
  public int getConnection() throws java.io.IOException;
  public int getMatchStatus() throws java.io.IOException;
  public int getMaxId() throws java.io.IOException;
  public int getFirstAgentByPlayerNumber(int) throws java.io.IOException;
  public int getNearestAgentByPlayerNumber(int) throws java.io.IOException;
  public int getNearestAgentToCoords(float, float) throws java.io.IOException;
  public int getNearestNpcToCoords(float, float) throws java.io.IOException;
  public int getNumberOfAgentsByPlayerNumber(int) throws java.io.IOException;
  public int getNumberOfAliveEnemyAgents() throws java.io.IOException;
  public void prepareNearestPlayerNumberToCoords(int) throws java.io.IOException;
  public int getNearestPlayerNumberToCoords(float, float) throws java.io.IOException;
  public int getNearestPlayerNumberToCoords(int, float, float) throws java.io.IOException;
  public int getFirstAgentByPlayerNumberByTeam(int, int) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoords(float, float) throws java.io.IOException;
  public void prepareNearestPlayerNumberToCoordsByPlayerNumber(int) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoordsByPlayerNumber(int, float, float) throws java.io.IOException;
  public float[] getNearestAliveEnemyToCoordsByPlayerNumber(float, float) throws java.io.IOException;
  public float[] getNearestAliveAgentByPlayerNumber(int) throws java.io.IOException;
  public void acceptAllItems() throws java.io.IOException;
  public float[] getNearestItemByModelId(int) throws java.io.IOException;
  public void changeWeaponSet(int) throws java.io.IOException;
  public void zoneMap(int, int) throws java.io.IOException;
  public void travelTo(int, int) throws java.io.IOException;
  public void enterChallenge() throws java.io.IOException;
  public void enterChallengeForeign() throws java.io.IOException;
  public void changeDistrict(be.demmel.fun.jgwcaconstants.bll.Region, byte) throws java.io.IOException;
  public void resign() throws java.io.IOException;
  public void updateAgentPosition(int) throws java.io.IOException;
  public void returnToOutpost() throws java.io.IOException;
  public void donateKurzickFaction() throws java.io.IOException;
  public void donateLuxonFaction() throws java.io.IOException;
  public void skipCinematic() throws java.io.IOException;
  public void dismissBuff(int, int) throws java.io.IOException;
  public void prepareZoneMapEx(int) throws java.io.IOException;
  public void zoneMapEx(be.demmel.fun.jgwcaconstants.bll.Region, int) throws java.io.IOException;
  public void travelGH() throws java.io.IOException;
  public void leaveGH() throws java.io.IOException;
  public void initMapLoad() throws java.io.IOException;
  public boolean isMapLoaded() throws java.io.IOException;
  public float[] getMapOverlayCoords(int) throws java.io.IOException;
  public int[] getMapOverlayInfo(int) throws java.io.IOException;
  public int getNearestMapOverlayToCoords(float, float) throws java.io.IOException;
  public void setTeamSize(int) throws java.io.IOException;
  public int[] getRegionAndLanguage() throws java.io.IOException;
  public int getTimeStamp() throws java.io.IOException;
  public void cancelMaintainedEnchantment(int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.SkillType getSkillType(int) throws java.io.IOException;
  public void zoneMapEx(int, be.demmel.fun.jgwcaconstants.bll.Region, int) throws java.io.IOException;
  public void pingSleep(long) throws java.io.IOException;
}
Compiled from "SkillBar.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.SkillBar {
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillBar(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getEigthSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getFifthSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getFirstSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getFourthSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getSecondSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getSeventhSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getSixthSkillSlot();
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot getThirdSkillSlot();
}
Compiled from "SkillSlot.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot {
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillSlot(be.demmel.fun.jgwcaconstants.bll.GWCAOperations, be.demmel.fun.jgwcaconstants.bll.SkillBarSkillSlot);
  public int getRecharge() throws java.io.IOException;
  public int getSkillAdrenaline() throws java.io.IOException;
  public int getSkillId() throws java.io.IOException;
  public void setSkill(int) throws java.io.IOException;
  public void useSkill(int) throws java.io.IOException;
  public void useSkillEx(int, int) throws java.io.IOException;
  public int getSkillRechargeTimeLeft() throws java.io.IOException;
  static {};
}
Compiled from "SkillsPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.SkillsPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.SkillsPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public void setAttribute(be.demmel.fun.jgwcaconstants.bll.Attribute, int) throws java.io.IOException;
  public void resetAttributes() throws java.io.IOException;
  public void changeSecondProfession(be.demmel.fun.jgwcaconstants.bll.Profession) throws java.io.IOException;
}
Compiled from "StoragePanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.StoragePanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.StoragePanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public void depositGold(int) throws java.io.IOException;
  public void withdrawGold(int) throws java.io.IOException;
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage1();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage2();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage3();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage4();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage5();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage6();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage7();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorage8();
  public be.demmel.fun.jgwcaconstants.bll.clean.Bag getStorageAnniversary();
  public void openStorage() throws java.io.IOException;
}
Compiled from "TitlesTab.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.TitlesTab {
  public be.demmel.fun.jgwcaconstants.bll.clean.TitlesTab(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public int getTitleTreasure() throws java.io.IOException;
  public int getTitleLucky() throws java.io.IOException;
  public int getTitleUnlucky() throws java.io.IOException;
  public int getTitleWisdom() throws java.io.IOException;
  public int getTitleGamer() throws java.io.IOException;
  public int getTitleSunspear() throws java.io.IOException;
  public int getTitleLightbringer() throws java.io.IOException;
  public int getTitleVanguard() throws java.io.IOException;
  public int getTitleNorn() throws java.io.IOException;
  public int getTitleAsura() throws java.io.IOException;
  public int getTitleDeldrimor() throws java.io.IOException;
  public int getTitleNorthMastery() throws java.io.IOException;
  public int getTitleDrunkard() throws java.io.IOException;
  public int getTitleSweet() throws java.io.IOException;
  public int getTitleParty() throws java.io.IOException;
  public int getTitleCommander() throws java.io.IOException;
}
Compiled from "TradePanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.TradePanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.TradePanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public void submitOffer(int) throws java.io.IOException;
  public void changeOffer() throws java.io.IOException;
  public void cancelTrade() throws java.io.IOException;
  public void acceptTrade() throws java.io.IOException;
  public void offerItem(int) throws java.io.IOException;
}
Compiled from "TraderPanel.java"
public class be.demmel.fun.jgwcaconstants.bll.clean.TraderPanel {
  public be.demmel.fun.jgwcaconstants.bll.clean.TraderPanel(be.demmel.fun.jgwcaconstants.bll.GWCAOperations);
  public void traderRequest(int) throws java.io.IOException;
  public int[] traderCheck() throws java.io.IOException;
  public boolean traderBuy() throws java.io.IOException;
  public void traderRequestSellById(int) throws java.io.IOException;
  public boolean traderSell() throws java.io.IOException;
  public void buyItem(int, int) throws java.io.IOException;
  public void buySuperiorIdKit() throws java.io.IOException;
  public void buyIdKit() throws java.io.IOException;
  public void sellItemById(int) throws java.io.IOException;
}
