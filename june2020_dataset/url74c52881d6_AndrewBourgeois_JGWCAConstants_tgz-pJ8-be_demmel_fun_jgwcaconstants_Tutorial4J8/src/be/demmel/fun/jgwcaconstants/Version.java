package be.demmel.fun.jgwcaconstants;

import java.io.InputStream;
import java.util.Properties;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public final class Version {

    private static final Logger logger = LoggerFactory.getLogger(Version.class);
    // Build the static information when the class is loaded
    private static final String FULL_VERSION, VERSION;
    // The path inside the library where the properties file generated by Maven is located
    //TODO: find a way to fix the location of the effective POM and .properties so that this Version class can be reused in every project
    private static final String POM_PATH = "/META-INF/maven/be.demmel.fun/jgwcaconstants/pom.properties";
    // The message that will be printed when any kind of error occurs during the retrieval of the information
    private static final String ERROR_MESSAGE = "[!ERROR!]";
    
    static {
        String fullVersion = null;
        
        StringBuilder sb = new StringBuilder();
        try {
            Properties props = loadProperties();
            sb.append(props.get("artifactId")).append(" ");
            sb.append(props.get("version"));
            fullVersion = sb.toString();
        } catch (Exception ex) {
            logger.error("An unexpected problem occured loading {}:", POM_PATH,ex);
            fullVersion = ERROR_MESSAGE;
        }
        
        FULL_VERSION = fullVersion;
        
        String version = null;
        
        try {
            Properties props = loadProperties();
            version = props.get("version").toString();
        } catch (Exception ex) {
            logger.error("An unexpected problem occured loading the Maven properties of the module: ", ex);
            version = ERROR_MESSAGE;
        }
        
        VERSION = version;
    }

    public static void main(String[] args) {
        System.out.println(FULL_VERSION);
    }

    public static String getVersion() {
        return VERSION;
    }
    
    // Loads the properties generated by Maven in the build process
    private static Properties loadProperties() throws Exception {
        InputStream stream = Version.class.getResourceAsStream(POM_PATH);
        Properties props = new Properties();
        try {
            props.load(stream);
            return props;
        } catch (Exception ex) {
            throw ex;
        }
    }
}
