Compiled from "Ate.java"
public class Estruturas.Ate extends Estruturas.Padrao {
  public Estruturas.Ate(Estruturas.Padrao);
  public Estruturas.Padrao getPadrao();
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Ate ate();
  public java.lang.String toString();
}
Compiled from "CadeiaVazia.java"
public class Estruturas.CadeiaVazia extends Estruturas.Padrao {
  public Estruturas.CadeiaVazia();
  public Estruturas.TipoPadrao getTipo();
  public java.lang.String toString();
}
Compiled from "Captura.java"
public class Estruturas.Captura extends Estruturas.Padrao {
  public Estruturas.Captura(Estruturas.Padrao);
  public Estruturas.Padrao getPadrao();
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Captura captura();
  public java.lang.String toString();
}
Compiled from "Capture.java"
public class Estruturas.Capture {
  public Estruturas.Capture();
  public int getPosicaoInicial();
  public void setPosicaoInicial(int);
  public int getPosicaoFinal();
  public void setPosicaoFinal(int);
  public java.lang.String getIdentificador();
  public void setIdentificador(java.lang.String);
  public java.lang.String getTexto();
  public void setTexto(java.lang.String);
  public java.lang.String toString();
}
Compiled from "Chamada.java"
public class Estruturas.Chamada extends Estruturas.Padrao {
  public Estruturas.Chamada(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Chamada chamada();
  public java.lang.String toString();
}
Compiled from "Concatenacao.java"
public class Estruturas.Concatenacao extends Estruturas.Padrao {
  public Estruturas.Concatenacao(java.util.ArrayList<Estruturas.Padrao>);
  public Estruturas.Concatenacao(Estruturas.Padrao);
  public java.util.ArrayList<Estruturas.Padrao> getPadroes();
  public Estruturas.Padrao get(int);
  public void setPadroes(java.util.ArrayList<Estruturas.Padrao>);
  public void addPadrao(Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Concatenacao concatenacao();
  public java.lang.String toString();
}
Compiled from "Conjunto.java"
public class Estruturas.Conjunto extends Estruturas.Padrao {
  static java.util.Set<java.lang.Character> todosOsCarcteres;
  public Estruturas.Conjunto(java.lang.String);
  public java.lang.String getTexto();
  public void setTexto(java.lang.String);
  public java.util.Set<java.lang.Character> getConjuntoCaracteres();
  public void setListaCaracteres(java.util.Set<java.lang.Character>);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Conjunto conjunto();
  public java.lang.String toString();
}
Compiled from "E.java"
public class Estruturas.E extends Estruturas.Padrao {
  Estruturas.Padrao padrao;
  public Estruturas.E(Estruturas.Padrao);
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.Padrao getPadrao();
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.E e();
  public java.lang.String toString();
}
Compiled from "EscolhaOrdenada.java"
public class Estruturas.EscolhaOrdenada extends Estruturas.Padrao {
  public Estruturas.EscolhaOrdenada(java.util.ArrayList<Estruturas.Padrao>);
  public Estruturas.EscolhaOrdenada(Estruturas.Padrao);
  public java.util.ArrayList<Estruturas.Padrao> getPadroes();
  public void setPadroes(java.util.ArrayList<Estruturas.Padrao>);
  public void addPadrao(Estruturas.Padrao);
  public void substituir(Estruturas.Padrao, Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.EscolhaOrdenada escolhaOrdenada();
  public java.lang.String toString();
}
Compiled from "Gramatica.java"
public class Estruturas.Gramatica extends Estruturas.Padrao {
  public Estruturas.Gramatica(java.lang.String);
  public java.lang.String getNome();
  public void setNome(java.lang.String);
  public Estruturas.Padrao getPadrao();
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Gramatica gramatica();
  public java.lang.String toString();
  public java.util.ArrayList<Estruturas.Gramatica> getSubgramaticas();
  public void setSubgramaticas(java.util.ArrayList<Estruturas.Gramatica>);
  public void addSubgramatica(Estruturas.Gramatica);
}
Compiled from "Nao.java"
public class Estruturas.Nao extends Estruturas.Padrao {
  Estruturas.Padrao padrao;
  public Estruturas.Nao(Estruturas.Padrao);
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.Padrao getPadrao();
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Nao nao();
  public java.lang.String toString();
}
Compiled from "Opcional.java"
public class Estruturas.Opcional extends Estruturas.Padrao {
  Estruturas.Padrao padrao;
  public Estruturas.Opcional(Estruturas.Padrao);
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.Padrao getPadrao();
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Opcional opcional();
  public java.lang.String toString();
}
Compiled from "Padrao.java"
public abstract class Estruturas.Padrao {
  public Estruturas.Padrao();
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Sequencia sequencia();
  public Estruturas.Concatenacao concatenacao();
  public Estruturas.Repeticao repeticao();
  public Estruturas.Ponto ponto();
  public Estruturas.Conjunto conjunto();
  public Estruturas.EscolhaOrdenada escolhaOrdenada();
  public Estruturas.Gramatica gramatica();
  public Estruturas.E e();
  public Estruturas.Nao nao();
  public Estruturas.Opcional opcional();
  public Estruturas.Captura captura();
  public Estruturas.Self self();
  public Estruturas.Chamada chamada();
  public Estruturas.Ate ate();
}
Compiled from "Ponto.java"
public class Estruturas.Ponto extends Estruturas.Padrao {
  public Estruturas.Ponto(int);
  public int getNumero();
  public void setNumero(int);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Ponto ponto();
  public java.lang.String toString();
}
Compiled from "Repeticao.java"
public class Estruturas.Repeticao extends Estruturas.Padrao {
  public Estruturas.Repeticao(Estruturas.Padrao, Estruturas.TipoRepeticao);
  public Estruturas.TipoRepeticao getTipoRepeticao();
  public void settipoRepeticao(Estruturas.TipoRepeticao);
  public Estruturas.Padrao getPadrao();
  public void setPadrao(Estruturas.Padrao);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Repeticao repeticao();
  public java.lang.String toString();
}
Compiled from "Self.java"
public class Estruturas.Self extends Estruturas.Padrao {
  public Estruturas.Self();
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Self self();
  public java.lang.String toString();
}
Compiled from "Sequencia.java"
public class Estruturas.Sequencia extends Estruturas.Padrao {
  public Estruturas.Sequencia(java.lang.String);
  public java.lang.String getTexto();
  public void setTexto(java.lang.String);
  public Estruturas.TipoPadrao getTipo();
  public Estruturas.Sequencia sequencia();
  public java.lang.String toString();
}
Compiled from "TipoPadrao.java"
public final class Estruturas.TipoPadrao extends java.lang.Enum<Estruturas.TipoPadrao> {
  public static final Estruturas.TipoPadrao SEQUENCIA;
  public static final Estruturas.TipoPadrao CADEIA_VAZIA;
  public static final Estruturas.TipoPadrao CONCATENACAO;
  public static final Estruturas.TipoPadrao REPETICAO;
  public static final Estruturas.TipoPadrao PONTO;
  public static final Estruturas.TipoPadrao CONJUNTO;
  public static final Estruturas.TipoPadrao ESCOLHA_ORDENADA;
  public static final Estruturas.TipoPadrao GRAMATICA;
  public static final Estruturas.TipoPadrao CAPTURA;
  public static final Estruturas.TipoPadrao NAO;
  public static final Estruturas.TipoPadrao E;
  public static final Estruturas.TipoPadrao OPCIONAL;
  public static final Estruturas.TipoPadrao CHAMADA;
  public static final Estruturas.TipoPadrao SELF;
  public static final Estruturas.TipoPadrao ATE;
  public static Estruturas.TipoPadrao[] values();
  public static Estruturas.TipoPadrao valueOf(java.lang.String);
  static {};
}
Compiled from "TipoRepeticao.java"
public final class Estruturas.TipoRepeticao extends java.lang.Enum<Estruturas.TipoRepeticao> {
  public static final Estruturas.TipoRepeticao ZERO_OU_MAIS;
  public static final Estruturas.TipoRepeticao UMA_OU_MAIS;
  public static Estruturas.TipoRepeticao[] values();
  public static Estruturas.TipoRepeticao valueOf(java.lang.String);
  static {};
}
Compiled from "IAny.java"
public class Instrucoes.IAny extends Instrucoes.Instrucao {
  public Instrucoes.IAny(int);
  public int getN();
  public void setN(int);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IAny IAny();
}
Compiled from "IBackCommit.java"
public class Instrucoes.IBackCommit extends Instrucoes.Instrucao {
  public Instrucoes.IBackCommit(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IBackCommit IBackCommit();
}
Compiled from "ICall.java"
public class Instrucoes.ICall extends Instrucoes.Instrucao {
  public Instrucoes.ICall(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ICall ICall();
}
Compiled from "ICapture.java"
public class Instrucoes.ICapture extends Instrucoes.Instrucao {
  public Instrucoes.ICapture(Instrucoes.TipoCapture);
  public Instrucoes.TipoCapture getTipo();
  public void setTipo(Instrucoes.TipoCapture);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ICapture ICapture();
}
Compiled from "IChar.java"
public class Instrucoes.IChar extends Instrucoes.Instrucao {
  public Instrucoes.IChar(char);
  public Instrucoes.IChar(boolean);
  public char getCaracter();
  public void setCaracter(char);
  public boolean isVazio();
  public void setVazio(boolean);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IChar IChar();
}
Compiled from "ICharset.java"
public class Instrucoes.ICharset extends Instrucoes.Instrucao {
  public Instrucoes.ICharset(java.lang.String, java.util.Set<java.lang.Character>);
  public java.lang.String getTexto();
  public void setTexto(java.lang.String);
  public java.util.Set<java.lang.Character> getSet();
  public void setSet(java.util.Set<java.lang.Character>);
  public boolean isCharecterIn(char);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ICharset ICharset();
}
Compiled from "IChoice.java"
public class Instrucoes.IChoice extends Instrucoes.Instrucao {
  public Instrucoes.IChoice(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IChoice IChoice();
}
Compiled from "ICommit.java"
public class Instrucoes.ICommit extends Instrucoes.Instrucao {
  public Instrucoes.ICommit(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ICommit ICommit();
}
Compiled from "IEnd.java"
public class Instrucoes.IEnd extends Instrucoes.Instrucao {
  public Instrucoes.IEnd();
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IEnd IEnd();
}
Compiled from "IFail.java"
public class Instrucoes.IFail extends Instrucoes.Instrucao {
  public Instrucoes.IFail();
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IFail IFail();
}
Compiled from "IFailTwice.java"
public class Instrucoes.IFailTwice extends Instrucoes.Instrucao {
  public Instrucoes.IFailTwice();
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IFailTwice IFailTwice();
}
Compiled from "IFind.java"
public class Instrucoes.IFind extends Instrucoes.Instrucao {
  public Instrucoes.IFind(java.util.Set<java.lang.Character>);
  public boolean contem(char);
  public java.util.Set<java.lang.Character> getSet();
  public void setSet(java.util.Set<java.lang.Character>);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IFind IFind();
}
Compiled from "IJump.java"
public class Instrucoes.IJump extends Instrucoes.Instrucao {
  public Instrucoes.IJump(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IJump IJump();
}
Compiled from "IPartialCommit.java"
public class Instrucoes.IPartialCommit extends Instrucoes.Instrucao {
  public Instrucoes.IPartialCommit(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IPartialCommit IPartialCommit();
}
Compiled from "IReturn.java"
public class Instrucoes.IReturn extends Instrucoes.Instrucao {
  public Instrucoes.IReturn();
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IReturn IReturn();
}
Compiled from "ISpan.java"
public class Instrucoes.ISpan extends Instrucoes.Instrucao {
  public Instrucoes.ISpan(java.util.Set<java.lang.Character>);
  public boolean contem(char);
  public java.util.Set<java.lang.Character> getSet();
  public void setSet(java.util.Set<java.lang.Character>);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ISpan ISpan();
}
Compiled from "ITestAny.java"
public class Instrucoes.ITestAny extends Instrucoes.Instrucao {
  public Instrucoes.ITestAny(java.lang.String);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ITestAny ITestAny();
}
Compiled from "ITestChar.java"
public class Instrucoes.ITestChar extends Instrucoes.Instrucao {
  public Instrucoes.ITestChar(char, java.lang.String);
  public char getCaracter();
  public void setCaracter(char);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ITestChar ITestChar();
}
Compiled from "ITestCharset.java"
public class Instrucoes.ITestCharset extends Instrucoes.Instrucao {
  public Instrucoes.ITestCharset(java.util.Set<java.lang.Character>, java.lang.String);
  public java.util.Set<java.lang.Character> getSet();
  public void setSet(java.util.Set<java.lang.Character>);
  public java.lang.String getLabel();
  public void setLabel(java.lang.String);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.ITestCharset ITestCharset();
}
Compiled from "Instrucao.java"
public abstract class Instrucoes.Instrucao {
  public Instrucoes.Instrucao();
  public Instrucoes.Instrucao getInstrucaoDesvio();
  public void setInstrucaoDesvio(Instrucoes.Instrucao);
  public int getIndexDesvio();
  public void setIndexDesvio(int);
  public Instrucoes.TipoInstrucao getTipoInstrucao();
  public Instrucoes.IChar IChar();
  public Instrucoes.IChoice IChoice();
  public Instrucoes.ICommit ICommit();
  public Instrucoes.IBackCommit IBackCommit();
  public Instrucoes.IPartialCommit IPartialCommit();
  public Instrucoes.IAny IAny();
  public Instrucoes.ICharset ICharset();
  public Instrucoes.IReturn IReturn();
  public Instrucoes.ICall ICall();
  public Instrucoes.IJump IJump();
  public Instrucoes.IEnd IEnd();
  public Instrucoes.IFail IFail();
  public Instrucoes.IFailTwice IFailTwice();
  public Instrucoes.ICapture ICapture();
  public Instrucoes.ISpan ISpan();
  public Instrucoes.IFind IFind();
  public Instrucoes.ITestChar ITestChar();
  public Instrucoes.ITestCharset ITestCharset();
  public Instrucoes.ITestAny ITestAny();
}
Compiled from "TipoCapture.java"
public final class Instrucoes.TipoCapture extends java.lang.Enum<Instrucoes.TipoCapture> {
  public static final Instrucoes.TipoCapture BEGIN;
  public static final Instrucoes.TipoCapture END;
  public static Instrucoes.TipoCapture[] values();
  public static Instrucoes.TipoCapture valueOf(java.lang.String);
  static {};
}
Compiled from "TipoInstrucao.java"
public final class Instrucoes.TipoInstrucao extends java.lang.Enum<Instrucoes.TipoInstrucao> {
  public static final Instrucoes.TipoInstrucao CHAR;
  public static final Instrucoes.TipoInstrucao CHOICE;
  public static final Instrucoes.TipoInstrucao COMMIT;
  public static final Instrucoes.TipoInstrucao BACKCOMMIT;
  public static final Instrucoes.TipoInstrucao PARTIALCOMMIT;
  public static final Instrucoes.TipoInstrucao ANY;
  public static final Instrucoes.TipoInstrucao CHARSET;
  public static final Instrucoes.TipoInstrucao RETURN;
  public static final Instrucoes.TipoInstrucao CALL;
  public static final Instrucoes.TipoInstrucao JUMP;
  public static final Instrucoes.TipoInstrucao END;
  public static final Instrucoes.TipoInstrucao FAIL;
  public static final Instrucoes.TipoInstrucao FAILTWICE;
  public static final Instrucoes.TipoInstrucao CAPTURE;
  public static final Instrucoes.TipoInstrucao SPAN;
  public static final Instrucoes.TipoInstrucao FIND;
  public static final Instrucoes.TipoInstrucao TESTCHAR;
  public static final Instrucoes.TipoInstrucao TESTCHARSET;
  public static final Instrucoes.TipoInstrucao TESTANY;
  public static Instrucoes.TipoInstrucao[] values();
  public static Instrucoes.TipoInstrucao valueOf(java.lang.String);
  static {};
}
Compiled from "AnalizadorLexico.java"
class peg.AnalizadorLexico implements java_cup.runtime.Scanner {
  public static final int YYEOF;
  public static final int YYINITIAL;
  public boolean imprimirEspaco;
  public void imprimaComEspacoEntreTokens(java.lang.String);
  public int getNumeroDaLinha();
  public int getNumeroColuna();
  public java.lang.String getStringConfigurada();
  peg.AnalizadorLexico(java.io.Reader);
  peg.AnalizadorLexico(java.io.InputStream);
  public final void yyclose() throws java.io.IOException;
  public final void yyreset(java.io.Reader);
  public final int yystate();
  public final void yybegin(int);
  public final java.lang.String yytext();
  public final char yycharat(int);
  public final int yylength();
  public void yypushback(int);
  public java_cup.runtime.Symbol next_token() throws java.io.IOException;
  static {};
}
Compiled from "Benchmarcks.java"
public class peg.Benchmarcks {
  public static java.lang.String bibleText;
  public peg.Benchmarcks();
  public static void main(java.lang.String[]);
  public static void benchmark(java.lang.String, int);
  public static java.lang.Integer searchP(java.lang.String, java.lang.String);
  public static java.lang.Integer searchG(java.lang.String, java.lang.String);
  public static java.lang.Integer searchW(java.lang.String, java.lang.String);
  public static java.lang.String readFile(java.lang.String) throws java.io.IOException;
  static {};
}
Compiled from "parser.java"
class peg.CUP$parser$actions {
  peg.CUP$parser$actions(peg.parser);
  public final java_cup.runtime.Symbol CUP$parser$do_action(int, java_cup.runtime.lr_parser, java.util.Stack, int) throws java.lang.Exception;
}
Compiled from "EstadoMaquina.java"
public class peg.EstadoMaquina {
  int numeroCapturas;
  public peg.EstadoMaquina();
  public void inicializar();
  public int getP();
  public void setP(int);
  public int getI();
  public void setI(int);
  public java.util.ArrayList<Estruturas.Capture> getCapturas();
  public void setCapturas(java.util.ArrayList<Estruturas.Capture>);
  public java.util.ArrayList<Estruturas.Capture> copiaCapturas();
  public void addCaptura(Estruturas.Capture);
  public void insertCapture(Estruturas.Capture);
  public Estruturas.Capture popLastCapture();
  public void incI();
  public void incP();
  public void addEstado(peg.EstadoMaquina);
  public peg.EstadoMaquina popEstado();
}
Compiled from "Maquina.java"
public class peg.Maquina {
  peg.EstadoMaquina estado;
  boolean rodouEnd;
  int tamanhoEntrada;
  public peg.Maquina(java.lang.String, java.util.ArrayList<Instrucoes.Instrucao>);
  public char[] getEntrada();
  public void setEntrada(char[]);
  public Instrucoes.Instrucao[] getInstrucoes();
  public void setInstrucoes(Instrucoes.Instrucao[]);
  public int getPosicaoEntrada();
  public java.util.ArrayList<Estruturas.Capture> getCapturas();
  public void run();
}
Compiled from "Maquina.java"
class peg.Maquina$1 {
  static final int[] $SwitchMap$Instrucoes$TipoInstrucao;
  static {};
}
Compiled from "Regex.java"
public class peg.Regex {
  java.util.HashMap<java.lang.String, Instrucoes.Instrucao> instrucaoGramaticaTemporaria;
  public boolean useHeadFailOptimization;
  public boolean usePartialCommitOptimization;
  public boolean useSpanOptimization;
  public boolean useFailTwiceOptimization;
  public peg.Regex();
  public Estruturas.Padrao compile(java.lang.String);
  public java.lang.Integer find(Estruturas.Padrao, java.lang.String);
  public java.lang.Integer find(java.lang.String, java.lang.String);
  public java.lang.Integer[] findC(Estruturas.Padrao, java.lang.String);
  public java.lang.Integer[] findC(java.lang.String, java.lang.String);
  public java.util.ArrayList<Instrucoes.Instrucao> instrucoes(Estruturas.Padrao);
  public java.util.ArrayList<Instrucoes.Instrucao> instrucoesDoPadrao(Estruturas.Padrao);
  public void imprimirInstrucoes(java.util.ArrayList<Instrucoes.Instrucao>, java.util.HashMap<Instrucoes.Instrucao, java.lang.String>);
  public java.lang.Integer match(java.lang.String, java.lang.String);
  public java.lang.Integer match(Estruturas.Padrao, java.lang.String);
  public static void main(java.lang.String[]);
}
Compiled from "Regex.java"
class peg.Regex$1 {
  static final int[] $SwitchMap$Estruturas$TipoPadrao;
  static final int[] $SwitchMap$Instrucoes$TipoInstrucao;
  static {};
}
Compiled from "parser.java"
public class peg.parser extends java_cup.runtime.lr_parser {
  protected static final short[][] _production_table;
  protected static final short[][] _action_table;
  protected static final short[][] _reduce_table;
  protected peg.CUP$parser$actions action_obj;
  public static Estruturas.Padrao padraoFinal;
  public peg.parser();
  public peg.parser(java_cup.runtime.Scanner);
  public peg.parser(java_cup.runtime.Scanner, java_cup.runtime.SymbolFactory);
  public short[][] production_table();
  public short[][] action_table();
  public short[][] reduce_table();
  protected void init_actions();
  public java_cup.runtime.Symbol do_action(int, java_cup.runtime.lr_parser, java.util.Stack, int) throws java.lang.Exception;
  public int start_state();
  public int start_production();
  public int EOF_sym();
  public int error_sym();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public void syntax_error(java_cup.runtime.Symbol);
  public void unrecovered_syntax_error(java_cup.runtime.Symbol) throws java.lang.Exception;
  static {};
}
Compiled from "sym.java"
public class peg.sym {
  public static final int LINHA;
  public static final int FPAR;
  public static final int AND;
  public static final int ATE;
  public static final int CONJUNTO;
  public static final int NOT;
  public static final int BARRA;
  public static final int APAR;
  public static final int ID;
  public static final int ATRIBUICAO;
  public static final int MAIS;
  public static final int EOF;
  public static final int ASTERISCO;
  public static final int FCHA;
  public static final int SEQUENCIA;
  public static final int error;
  public static final int OPCIONAL;
  public static final int ACHA;
  public static final int QUALQUER;
  public peg.sym();
}
