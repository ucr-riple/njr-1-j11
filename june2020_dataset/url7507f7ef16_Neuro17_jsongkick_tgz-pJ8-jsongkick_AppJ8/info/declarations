Compiled from "SongkickConfig.java"
public class config.SongkickConfig {
  public config.SongkickConfig();
  public static java.lang.String getApiKey();
  public void setApiKey(java.lang.String);
  public static java.lang.String getLocationPath();
  public static java.lang.String getScheme();
  public static java.lang.String getHost();
  public static java.lang.String getArtistPath();
  public static java.lang.String getConcertPath();
  public static java.lang.String getEventPath();
  public static java.lang.String getArtistPathForEvent();
  public static java.lang.String getArtistPathForEventCalendar();
  static {};
}
Compiled from "Artist.java"
public class entity.Artist {
  public entity.Artist();
  public entity.Artist(java.lang.String, java.lang.String);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.lang.String getId();
  public void setId(java.lang.String);
  public boolean isNull();
  public java.lang.String toString();
}
Compiled from "City.java"
public class entity.City {
  public entity.City(java.lang.String, java.lang.String, double, double, java.lang.String);
  public entity.City(java.lang.String, java.lang.String, double, double);
  public entity.City(java.lang.String, java.lang.String);
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.lang.String getCountry();
  public void setCountry(java.lang.String);
  public double getLatitude();
  public void setLatitude(double);
  public double getLongitude();
  public void setLongitude(double);
  public java.lang.String getState();
  public void setState(java.lang.String);
  public java.lang.String toString();
}
Compiled from "Concert.java"
public class entity.Concert {
  public entity.Concert(org.joda.time.DateTime, org.joda.time.LocalDate, java.util.ArrayList<entity.Artist>, entity.Venue, java.lang.String, double, entity.SimpleLocation);
  public entity.Concert();
  public org.joda.time.DateTime getDateTime();
  public void setDateTime(org.joda.time.DateTime);
  public org.joda.time.LocalDate getDate();
  public void setDate(org.joda.time.LocalDate);
  public java.util.ArrayList<entity.Artist> getPerformance();
  public void setPerformance(java.util.ArrayList<entity.Artist>);
  public entity.Venue getVenue();
  public void setVenue(entity.Venue);
  public java.lang.String getId();
  public void setId(java.lang.String);
  public double getPopularity();
  public void setPopularity(double);
  public entity.SimpleLocation getLocation();
  public void setLocation(entity.SimpleLocation);
  public java.lang.String toString();
}
Compiled from "FullLocation.java"
public class entity.FullLocation {
  public entity.FullLocation(entity.MetroArea, entity.City);
  public entity.MetroArea getMetroarea();
  public void setMetroarea(entity.MetroArea);
  public entity.City getCity();
  public void setCity(entity.City);
}
Compiled from "MetroArea.java"
public class entity.MetroArea {
  public entity.MetroArea(java.lang.String, java.lang.String);
  public entity.MetroArea(java.lang.String, java.lang.String, java.lang.String);
  public java.lang.String getCountry();
  public void setCountry(java.lang.String);
  public java.lang.String getId();
  public void setId(java.lang.String);
  public java.lang.String getDisplayName();
  public void setDisplayName(java.lang.String);
  public java.lang.String toString();
}
Compiled from "SimpleLocation.java"
public class entity.SimpleLocation {
  public entity.SimpleLocation(double, double, java.lang.String);
  public entity.SimpleLocation(java.lang.String);
  public java.lang.String getCity();
  public void setCity(java.lang.String);
  public double getLat();
  public void setLat(double);
  public double getLng();
  public void setLng(double);
  public java.lang.String toString();
}
Compiled from "Venue.java"
public class entity.Venue {
  public entity.Venue(double, double, entity.MetroArea, java.lang.String, java.lang.String);
  public entity.Venue(entity.MetroArea, java.lang.String, java.lang.String);
  public double getLatitude();
  public void setLatitude(double);
  public double getLongitude();
  public void setLongitude(double);
  public entity.MetroArea getMetroArea();
  public void setMetroArea(entity.MetroArea);
  public java.lang.String getId();
  public void setId(java.lang.String);
  public java.lang.String getDisplayName();
  public void setDisplayName(java.lang.String);
  public java.lang.String toString();
}
Compiled from "HttpConnector.java"
public interface http.HttpConnector {
  public abstract com.google.gson.JsonObject parseResponseAsJson(java.io.InputStream) throws java.lang.IllegalStateException, java.io.IOException;
  public abstract boolean isEmptyResponse();
  public abstract com.google.gson.JsonObject executeRequest(java.net.URI);
  public abstract void buildURI() throws java.net.URISyntaxException;
  public abstract boolean checkResponse();
  public abstract boolean isNullResponse();
}
Compiled from "SongkickConnector.java"
public abstract class http.SongkickConnector {
  protected com.google.gson.Gson gson;
  protected org.apache.http.client.utils.URIBuilder uriBld;
  protected java.net.URI uri;
  protected java.lang.Integer page;
  protected int pages;
  protected java.net.URL url;
  public http.SongkickConnector();
  protected java.lang.Integer getPage();
  protected void setPage(int);
  public boolean hasNextPage();
  protected int getPages();
  protected void setPages(int);
  protected java.net.URI getUri();
  protected void setUri(java.net.URI);
  protected com.google.gson.JsonObject parseResponseAsJson(java.io.InputStream);
  protected com.google.gson.JsonObject executeRequest(java.net.URI);
  protected boolean isNullResponse();
  protected boolean isEmptyResponse();
  protected com.google.gson.JsonObject getJsonResponse();
  protected boolean checkResponse();
  protected void buildURI();
  protected void clearQuery();
  protected abstract java.net.URI query(java.lang.String) throws java.net.URISyntaxException;
  static {};
}
Compiled from "App.java"
public class jsongkick.App {
  public jsongkick.App();
  public static void run() throws java.net.URISyntaxException;
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "Songkick.java"
public class jsongkick.Songkick {
  search.ArtistSearch searchArtist;
  public jsongkick.Songkick();
}
Compiled from "TimerTest.java"
public class jsongkick.TimerTest {
  public jsongkick.TimerTest();
  public static void main(java.lang.String[]);
  static org.apache.logging.log4j.Logger access$000();
  static {};
}
Compiled from "TimerTest.java"
final class jsongkick.TimerTest$1 extends java.util.TimerTask {
  int n;
  final java.util.Timer val$timer;
  jsongkick.TimerTest$1(java.util.Timer);
  public void run();
}
Compiled from "ArtistSearch.java"
public class search.ArtistSearch extends http.SongkickConnector {
  public search.ArtistSearch();
  public entity.Artist firstArtist(java.lang.String) throws java.net.URISyntaxException;
  public java.util.ArrayList<entity.Artist> list(java.lang.String) throws java.net.URISyntaxException;
  protected java.net.URI query(java.lang.String) throws java.net.URISyntaxException;
  public java.util.ArrayList<entity.Artist> nextPage() throws java.net.URISyntaxException;
  static {};
}
Compiled from "EventSearch.java"
public class search.EventSearch extends http.SongkickConnector {
  public search.EventSearch();
  public java.lang.String getLocationId();
  protected java.net.URI query(java.lang.String);
  public java.util.ArrayList<entity.Concert> eventsListByLocationId(java.lang.String) throws java.net.URISyntaxException;
  public java.util.ArrayList<entity.Concert> eventsListByArtist(entity.Artist) throws java.net.URISyntaxException;
  public java.util.ArrayList<entity.Concert> nextPage(java.lang.Object) throws java.net.URISyntaxException;
  public com.google.gson.JsonObject toJson();
  static {};
}
Compiled from "Extractor.java"
public class search.Extractor {
  public search.Extractor();
  public static entity.Concert extractConcert(com.google.gson.JsonElement);
  public static entity.SimpleLocation extractLocation(com.google.gson.JsonElement);
  public static entity.Venue extractVenue(com.google.gson.JsonElement);
  public static entity.MetroArea extractMetroArea(com.google.gson.JsonElement);
  public static entity.City extractCity(com.google.gson.JsonElement);
  public static entity.Artist extractArtist(com.google.gson.JsonElement);
  static {};
}
Compiled from "LocationSearch.java"
public class search.LocationSearch extends http.SongkickConnector {
  public search.LocationSearch();
  public entity.FullLocation firstLocation(java.lang.String) throws java.net.URISyntaxException;
  public java.util.ArrayList<entity.FullLocation> list(java.lang.String) throws java.net.URISyntaxException;
  protected java.net.URI query(java.lang.String);
  public java.util.ArrayList<entity.FullLocation> nextPage() throws java.net.URISyntaxException;
  static {};
}
