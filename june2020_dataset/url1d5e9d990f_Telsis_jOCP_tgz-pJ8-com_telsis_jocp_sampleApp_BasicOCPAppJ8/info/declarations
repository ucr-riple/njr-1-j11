Compiled from "CallMessageException.java"
public class com.telsis.jocp.CallMessageException extends com.telsis.jocp.MessageException {
  public com.telsis.jocp.CallMessageException(int, int, short, short, int);
  public com.telsis.jocp.CallMessageException(int, int, short, short);
  public final int getDestTID();
  public final int getOrigTID();
  public final com.telsis.jocp.LegacyOCPMessage getErrorMessage();
}
Compiled from "LegacyOCPMessage.java"
public abstract class com.telsis.jocp.LegacyOCPMessage implements com.telsis.jocp.OCPMessage {
  public static final int OCP_MIN_LENGTH;
  public static final int OCP_MAX_LENGTH;
  public static final int OCP_CMD_CODE_LENGTH;
  public static final int OCP_LEN_LENGTH;
  public static final int OCP_TID_LENGTH;
  public static final int OCP_EOM_LENGTH;
  public static final int OCP_HEADER_LENGTH;
  public static final int OCP_CMD_CODE_OFFSET;
  public static final int OCP_LEN_OFFSET;
  public static final int OCP_DEST_TID_OFFSET;
  public static final int OCP_ORIG_TID_OFFSET;
  public static final int OCP_PAYLOAD_OFFSET;
  public static final byte OCP_EOM_FIRST_BYTE;
  public static final byte OCP_EOM_SECOND_BYTE;
  public static final short OCP_COMMAND_TYPE_MASK;
  public static final short OCP_COMMAND_TYPE_LINK;
  public static final short OCP_COMMAND_TYPE_CALL;
  public static com.telsis.jocp.LegacyOCPMessageTypes getOCPType(short);
  public static java.lang.Class<? extends com.telsis.jocp.LegacyOCPMessage> getOCPClass(short);
  public static com.telsis.jocp.LegacyOCPMessage decodeBuffer(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public static java.nio.ByteBuffer encodeMessage(com.telsis.jocp.LegacyOCPMessage);
  protected com.telsis.jocp.LegacyOCPMessage(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.LegacyOCPMessage(short);
  protected final void advance(java.nio.ByteBuffer);
  protected void encode(java.nio.ByteBuffer);
  public final short getCommandCode();
  public final com.telsis.jocp.OCPMessageTypes getMessageType();
  public final int getDestTID();
  public final void setDestTID(int);
  public final int getOrigTID();
  public final void setOrigTID(int);
  static {};
}
Compiled from "LegacyOCPMessageTypes.java"
public final class com.telsis.jocp.LegacyOCPMessageTypes extends java.lang.Enum<com.telsis.jocp.LegacyOCPMessageTypes> {
  public static final com.telsis.jocp.LegacyOCPMessageTypes HEARTBEAT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes ARE_YOU_MASTER;
  public static final com.telsis.jocp.LegacyOCPMessageTypes BECOME_MASTER;
  public static final com.telsis.jocp.LegacyOCPMessageTypes STATUS_RESPONSE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes ARE_YOU_MASTER_REPLY;
  public static final com.telsis.jocp.LegacyOCPMessageTypes STATUS_REQUEST;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CHANGE_ACTIVE_LINK;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CHANGE_ACTIVE_LINK_ACK;
  public static final com.telsis.jocp.LegacyOCPMessageTypes LINK_COMMAND_UNSUPPORTED;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CALL_GAP;
  public static final com.telsis.jocp.LegacyOCPMessageTypes PREFERRED_UNIT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes INITIAL_DP;
  public static final com.telsis.jocp.LegacyOCPMessageTypes INITIAL_DP_SERVICE_KEY;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CALL_CLEARDOWN;
  public static final com.telsis.jocp.LegacyOCPMessageTypes DELIVER_TO_RESULT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes TELSIS_HANDLER_RESULT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes DELIVER_TO;
  public static final com.telsis.jocp.LegacyOCPMessageTypes REQUEST_CLEARDOWN;
  public static final com.telsis.jocp.LegacyOCPMessageTypes ANSWER_CALL;
  public static final com.telsis.jocp.LegacyOCPMessageTypes TELSIS_HANDLER;
  public static final com.telsis.jocp.LegacyOCPMessageTypes INAP_CONTINUE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes TASK_ACTIVE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes TASK_ACTIVE_RESULT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes INSUFFICIENT_RESOURCES;
  public static final com.telsis.jocp.LegacyOCPMessageTypes ABORT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CALL_COMMAND_UNSUPPORTED;
  public static final com.telsis.jocp.LegacyOCPMessageTypes INITIAL_DP_RESPONSE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes ANSWER_RESULT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes SET_CDR_EXTENDED_FIELD_DATA;
  public static final com.telsis.jocp.LegacyOCPMessageTypes SET_CDR_EXTENDED_FIELD_DATA_RESULT;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CONNECT_TO_RESOURCE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes CONNECT_TO_RESOURCE_ACK;
  public static final com.telsis.jocp.LegacyOCPMessageTypes DISCONNECT_FROM_RESOURCE;
  public static final com.telsis.jocp.LegacyOCPMessageTypes DISCONNECT_FROM_RESOURCE_ACK;
  public static final com.telsis.jocp.LegacyOCPMessageTypes TELSIS_HANDLER_WITH_PARTY;
  public static final com.telsis.jocp.LegacyOCPMessageTypes DELIVER_TO_WITH_FLAGS;
  public static com.telsis.jocp.LegacyOCPMessageTypes[] values();
  public static com.telsis.jocp.LegacyOCPMessageTypes valueOf(java.lang.String);
  public short getCommandCode();
  public java.lang.Class<? extends com.telsis.jocp.LegacyOCPMessage> getImplementation();
  public final com.telsis.jocp.OCPMessageTypes getBaseMessageType();
  public boolean getSupportRx();
  public boolean getSupportTx();
  static {};
}
Compiled from "LinkMessageException.java"
public class com.telsis.jocp.LinkMessageException extends com.telsis.jocp.MessageException {
  public com.telsis.jocp.LinkMessageException(short, short, int);
  public com.telsis.jocp.LinkMessageException(short, short);
  public final com.telsis.jocp.LegacyOCPMessage getErrorMessage();
}
Compiled from "MessageException.java"
public abstract class com.telsis.jocp.MessageException extends com.telsis.jocp.OCPException {
  protected com.telsis.jocp.MessageException(short, short, int);
  public final short getCommandCode();
  public final short getReason();
  public final int getValue();
  public abstract com.telsis.jocp.LegacyOCPMessage getErrorMessage();
  public final java.lang.String toString();
}
Compiled from "OCPClient.java"
public interface com.telsis.jocp.OCPClient {
  public abstract void connect();
  public abstract void connect(com.telsis.jutils.watchdog.GenericWatchdog);
  public abstract void registerManagementTidHandler(com.telsis.jocp.OCPMessageHandler);
  public abstract void deregisterManagementTidHandler();
  public abstract void disconnect();
  public abstract void reloadProperties(java.util.Properties);
  public abstract com.telsis.jocp.OCPLink getLink(java.util.List<com.telsis.jocp.OCPLink>);
}
Compiled from "OCPException.java"
public class com.telsis.jocp.OCPException extends java.lang.Exception {
  public com.telsis.jocp.OCPException();
  public com.telsis.jocp.OCPException(java.lang.String, java.lang.Throwable);
  public com.telsis.jocp.OCPException(java.lang.String);
  public com.telsis.jocp.OCPException(java.lang.Throwable);
}
Compiled from "OCPLink.java"
public interface com.telsis.jocp.OCPLink extends com.telsis.jocp.OCPMessageHandler {
  public abstract void registerTidHandler(com.telsis.jocp.OCPMessageHandler, int);
  public abstract void deregisterTidHandler(int);
}
Compiled from "OCPLinkManager.java"
public class com.telsis.jocp.OCPLinkManager implements com.telsis.jocp.OCPMessageHandler,com.telsis.jocp.OCPLink {
  public com.telsis.jocp.OCPLinkManager(java.util.Properties, int);
  public final boolean reloadConfig(java.util.Properties);
  protected final void cleanup();
  protected final void finalize() throws java.lang.Throwable;
  public final void connect();
  public final void connect(com.telsis.jutils.watchdog.GenericWatchdog);
  public final void disconnect();
  public final void registerLinkStatusHandler(com.telsis.jocp.OCPLinkManager$OCPLinkStateHandler);
  public final void deregisterLinkStatusHandler(com.telsis.jocp.OCPLinkManager$OCPLinkStateHandler);
  public final void deregisterAllLinkStatusHandlers();
  public final void registerTidHandler(com.telsis.jocp.OCPMessageHandler, int);
  public final void deregisterTidHandler(int);
  public final void registerManagementTidHandler(com.telsis.jocp.OCPMessageHandler);
  public final void deregisterManagementTidHandler();
  public final void queueMessage(com.telsis.jocp.OCPMessage, com.telsis.jocp.OCPLink);
  public final int getFixedHeartbeatInterval();
  public final void setFixedHeartbeatInterval(int);
  public final int getInactiveHeartbeatInterval();
  public final void setInactiveHeartbeatInterval(int);
  public final int getTimeout();
  public final void setTimeout(int);
  public final com.telsis.jocp.OCPLinkManager$LinkStates getLinkState();
  public final int getUnitID();
  public final boolean isUnitEnabled();
  public final java.net.InetAddress getRemoteAddress();
  public final int getRemotePort();
  public final int getLocalPort();
  public final java.lang.String getUnitName();
  public final int getClusterID();
  public final int getNumCalls();
  public final long lastActivity();
  public final java.lang.String toString();
  static org.apache.log4j.Logger access$100();
  static com.telsis.jutils.watchdog.GenericWatchdog access$200(com.telsis.jocp.OCPLinkManager);
  static int access$300(com.telsis.jocp.OCPLinkManager);
  static java.nio.channels.SocketChannel access$402(com.telsis.jocp.OCPLinkManager, java.nio.channels.SocketChannel);
  static java.net.Socket access$502(com.telsis.jocp.OCPLinkManager, java.net.Socket);
  static java.nio.channels.SocketChannel access$400(com.telsis.jocp.OCPLinkManager);
  static java.net.InetAddress access$600(com.telsis.jocp.OCPLinkManager);
  static int access$700(com.telsis.jocp.OCPLinkManager);
  static java.net.Socket access$500(com.telsis.jocp.OCPLinkManager);
  static java.net.InetAddress access$800(com.telsis.jocp.OCPLinkManager);
  static int access$900(com.telsis.jocp.OCPLinkManager);
  static void access$1000(com.telsis.jocp.OCPLinkManager, com.telsis.jocp.OCPLinkManager$LinkStates);
  static java.lang.String access$1100(com.telsis.jocp.OCPLinkManager);
  static com.telsis.jutils.interfaces.StatsInterface access$1200();
  static com.telsis.jocp.OCPLinkManager$TxThread access$1302(com.telsis.jocp.OCPLinkManager, com.telsis.jocp.OCPLinkManager$TxThread);
  static com.telsis.jocp.OCPLinkManager$TxThread access$1300(com.telsis.jocp.OCPLinkManager);
  static void access$1400(com.telsis.jocp.OCPLinkManager, com.telsis.jocp.LegacyOCPMessage) throws com.telsis.jocp.LinkMessageException;
  static int access$1500(com.telsis.jocp.OCPLinkManager);
  static int access$1600(com.telsis.jocp.OCPLinkManager);
  static com.telsis.jocp.OCPLinkManager$RxThread access$1700(com.telsis.jocp.OCPLinkManager);
  static java.util.concurrent.ArrayBlockingQueue access$1900(com.telsis.jocp.OCPLinkManager);
  static {};
}
Compiled from "OCPLinkManager.java"
class com.telsis.jocp.OCPLinkManager$1 {
  static final int[] $SwitchMap$com$telsis$jocp$OCPLinkManager$RxThreadStates;
  static final int[] $SwitchMap$com$telsis$jocp$OCPLinkManager$TxThreadStates;
  static {};
}
Compiled from "OCPLinkManager.java"
public final class com.telsis.jocp.OCPLinkManager$LinkStates extends java.lang.Enum<com.telsis.jocp.OCPLinkManager$LinkStates> {
  public static final com.telsis.jocp.OCPLinkManager$LinkStates MASTER;
  public static final com.telsis.jocp.OCPLinkManager$LinkStates SLAVE;
  public static final com.telsis.jocp.OCPLinkManager$LinkStates LOADSHARE;
  public static final com.telsis.jocp.OCPLinkManager$LinkStates CONNECTING;
  public static final com.telsis.jocp.OCPLinkManager$LinkStates DISCONNECTED;
  public static com.telsis.jocp.OCPLinkManager$LinkStates[] values();
  public static com.telsis.jocp.OCPLinkManager$LinkStates valueOf(java.lang.String);
  static {};
}
Compiled from "OCPLinkManager.java"
public interface com.telsis.jocp.OCPLinkManager$OCPLinkStateHandler {
  public abstract void linkStateChanged(com.telsis.jocp.OCPLinkManager$LinkStates);
  public abstract void unitEnabledChanged(boolean);
  public abstract void receivedPreferredUnit(java.net.InetAddress, java.net.InetAddress);
  public abstract void receivedCallGap(short);
}
Compiled from "OCPLinkManager.java"
class com.telsis.jocp.OCPLinkManager$RxThread implements java.lang.Runnable {
  final com.telsis.jocp.OCPLinkManager this$0;
  public com.telsis.jocp.OCPLinkManager$RxThread(com.telsis.jocp.OCPLinkManager);
  public void run();
  public void shutdownThread();
  static long access$000(com.telsis.jocp.OCPLinkManager$RxThread);
  static boolean access$1802(com.telsis.jocp.OCPLinkManager$RxThread, boolean);
}
Compiled from "OCPLinkManager.java"
final class com.telsis.jocp.OCPLinkManager$RxThreadStates extends java.lang.Enum<com.telsis.jocp.OCPLinkManager$RxThreadStates> {
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates UNINITIALISED;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates RESET;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates UNCONNECTED;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates CONNECTING;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates CONNECTED;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates NO_SYNC;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates SECOND_EOM_BYTE;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates MATCH_LENGTH;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates GET_MESSAGE_HEADER;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates GET_MESSAGE_BODY;
  public static final com.telsis.jocp.OCPLinkManager$RxThreadStates PROCESS_MESSAGE;
  public static com.telsis.jocp.OCPLinkManager$RxThreadStates[] values();
  public static com.telsis.jocp.OCPLinkManager$RxThreadStates valueOf(java.lang.String);
  static {};
}
Compiled from "OCPLinkManager.java"
class com.telsis.jocp.OCPLinkManager$TxThread implements java.lang.Runnable {
  final com.telsis.jocp.OCPLinkManager this$0;
  public com.telsis.jocp.OCPLinkManager$TxThread(com.telsis.jocp.OCPLinkManager);
  public void run();
  public void shutdownThread();
}
Compiled from "OCPLinkManager.java"
final class com.telsis.jocp.OCPLinkManager$TxThreadStates extends java.lang.Enum<com.telsis.jocp.OCPLinkManager$TxThreadStates> {
  public static final com.telsis.jocp.OCPLinkManager$TxThreadStates UNINITIALISED;
  public static final com.telsis.jocp.OCPLinkManager$TxThreadStates SENDING_MESSAGE;
  public static final com.telsis.jocp.OCPLinkManager$TxThreadStates GET_NEXT_MESSAGE;
  public static final com.telsis.jocp.OCPLinkManager$TxThreadStates GENERATE_HEARTBEAT;
  public static com.telsis.jocp.OCPLinkManager$TxThreadStates[] values();
  public static com.telsis.jocp.OCPLinkManager$TxThreadStates valueOf(java.lang.String);
  static {};
}
Compiled from "OCPMessage.java"
public interface com.telsis.jocp.OCPMessage {
  public static final int MANAGEMENT_TASK_ID;
  public abstract com.telsis.jocp.OCPMessageTypes getMessageType();
  public abstract int getDestTID();
  public abstract void setDestTID(int);
  public abstract int getOrigTID();
  public abstract void setOrigTID(int);
}
Compiled from "OCPMessageHandler.java"
public interface com.telsis.jocp.OCPMessageHandler {
  public abstract void queueMessage(com.telsis.jocp.OCPMessage, com.telsis.jocp.OCPLink);
}
Compiled from "OCPMessageTypes.java"
public final class com.telsis.jocp.OCPMessageTypes extends java.lang.Enum<com.telsis.jocp.OCPMessageTypes> {
  public static final com.telsis.jocp.OCPMessageTypes INITIAL_DP;
  public static final com.telsis.jocp.OCPMessageTypes INITIAL_DP_SERVICE_KEY;
  public static final com.telsis.jocp.OCPMessageTypes CALL_CLEARDOWN;
  public static final com.telsis.jocp.OCPMessageTypes DELIVER_TO_RESULT;
  public static final com.telsis.jocp.OCPMessageTypes TELSIS_HANDLER_RESULT;
  public static final com.telsis.jocp.OCPMessageTypes DELIVER_TO;
  public static final com.telsis.jocp.OCPMessageTypes REQUEST_CLEARDOWN;
  public static final com.telsis.jocp.OCPMessageTypes ANSWER_CALL;
  public static final com.telsis.jocp.OCPMessageTypes TELSIS_HANDLER;
  public static final com.telsis.jocp.OCPMessageTypes INAP_CONTINUE;
  public static final com.telsis.jocp.OCPMessageTypes TASK_ACTIVE;
  public static final com.telsis.jocp.OCPMessageTypes TASK_ACTIVE_RESULT;
  public static final com.telsis.jocp.OCPMessageTypes INSUFFICIENT_RESOURCES;
  public static final com.telsis.jocp.OCPMessageTypes ABORT;
  public static final com.telsis.jocp.OCPMessageTypes CALL_COMMAND_UNSUPPORTED;
  public static final com.telsis.jocp.OCPMessageTypes INITIAL_DP_RESPONSE;
  public static final com.telsis.jocp.OCPMessageTypes ANSWER_RESULT;
  public static final com.telsis.jocp.OCPMessageTypes SET_CDR_EXTENDED_FIELD_DATA;
  public static final com.telsis.jocp.OCPMessageTypes SET_CDR_EXTENDED_FIELD_DATA_RESULT;
  public static final com.telsis.jocp.OCPMessageTypes CONNECT_TO_RESOURCE;
  public static final com.telsis.jocp.OCPMessageTypes CONNECT_TO_RESOURCE_ACK;
  public static final com.telsis.jocp.OCPMessageTypes DISCONNECT_FROM_RESOURCE;
  public static final com.telsis.jocp.OCPMessageTypes DISCONNECT_FROM_RESOURCE_ACK;
  public static final com.telsis.jocp.OCPMessageTypes TELSIS_HANDLER_WITH_PARTY;
  public static final com.telsis.jocp.OCPMessageTypes DELIVER_TO_WITH_FLAGS;
  public static com.telsis.jocp.OCPMessageTypes[] values();
  public static com.telsis.jocp.OCPMessageTypes valueOf(java.lang.String);
  static {};
}
Compiled from "OCPSystemManager.java"
public class com.telsis.jocp.OCPSystemManager implements com.telsis.jutils.interfaces.ServerEventNotifier,com.telsis.jocp.OCPClient {
  public com.telsis.jocp.OCPSystemManager();
  public com.telsis.jocp.OCPSystemManager(java.util.Properties);
  protected final void finalize() throws java.lang.Throwable;
  public final synchronized void connect();
  public final synchronized void connect(com.telsis.jutils.watchdog.GenericWatchdog);
  public final synchronized void disconnect();
  public final void reloadProperties();
  public final void reloadProperties(java.util.Properties);
  public final com.telsis.jocp.OCPLink getLink(java.util.List<com.telsis.jocp.OCPLink>);
  public final com.telsis.jocp.OCPSystemManager$SystemState getState();
  public final com.telsis.jocp.OCPSystemManager$Link getPreferredLink();
  public final void registerManagementTidHandler(com.telsis.jocp.OCPMessageHandler);
  public final void deregisterManagementTidHandler();
  public void congestionEvent(java.util.EnumMap<com.telsis.jutils.enums.CongestionType, java.lang.Integer>);
  public void reloadConfiguration();
  public void stateEvent(com.telsis.jutils.enums.ActiveStates);
  static org.apache.log4j.Logger access$500();
  static com.telsis.jutils.interfaces.AlarmInterface access$600();
  static com.telsis.jocp.OCPSystemManager$SystemThread access$700(com.telsis.jocp.OCPSystemManager);
  static com.telsis.jutils.watchdog.GenericWatchdog access$800(com.telsis.jocp.OCPSystemManager);
  static com.telsis.jocp.OCPSystemManager$SystemState access$902(com.telsis.jocp.OCPSystemManager, com.telsis.jocp.OCPSystemManager$SystemState);
  static com.telsis.jocp.OCPSystemManager$SystemState access$1000(com.telsis.jocp.OCPSystemManager);
  static java.util.concurrent.CopyOnWriteArrayList access$1100(com.telsis.jocp.OCPSystemManager);
  static int access$1400(com.telsis.jocp.OCPSystemManager);
  static void access$1600(com.telsis.jocp.OCPSystemManager, com.telsis.jocp.OCPSystemManager$SystemState);
  static com.telsis.jocp.OCPSystemManager$SystemState access$900(com.telsis.jocp.OCPSystemManager);
  static long access$1700(com.telsis.jocp.OCPSystemManager);
  static int access$1800(com.telsis.jocp.OCPSystemManager);
  static long access$1702(com.telsis.jocp.OCPSystemManager, long);
  static {};
}
Compiled from "OCPSystemManager.java"
class com.telsis.jocp.OCPSystemManager$1 {
  static final int[] $SwitchMap$com$telsis$jocp$OCPSystemManager$SystemState;
  static final int[] $SwitchMap$com$telsis$jocp$OCPLinkManager$LinkStates;
  static {};
}
Compiled from "OCPSystemManager.java"
class com.telsis.jocp.OCPSystemManager$Link implements com.telsis.jocp.OCPLinkManager$OCPLinkStateHandler, java.lang.Comparable<com.telsis.jocp.OCPSystemManager$Link>, com.telsis.jocp.OCPMessageHandler, com.telsis.jocp.OCPLink, com.telsis.jutils.interfaces.ServerEventNotifier {
  final com.telsis.jocp.OCPSystemManager this$0;
  public com.telsis.jocp.OCPSystemManager$Link(com.telsis.jocp.OCPSystemManager, java.util.Properties, int);
  public void cleanup();
  public boolean isUnitActive();
  public int getLinkID();
  public void linkStateChanged(com.telsis.jocp.OCPLinkManager$LinkStates);
  public void receivedCallGap(short);
  public void receivedPreferredUnit(java.net.InetAddress, java.net.InetAddress);
  public void unitEnabledChanged(boolean);
  public int compareTo(com.telsis.jocp.OCPSystemManager$Link);
  public void queueMessage(com.telsis.jocp.OCPMessage, com.telsis.jocp.OCPLink);
  public void deregisterTidHandler(int);
  public void registerTidHandler(com.telsis.jocp.OCPMessageHandler, int);
  public void deregisterManagementTidHandler();
  public void registerManagementTidHandler(com.telsis.jocp.OCPMessageHandler);
  public boolean reloadConfiguration(java.util.Properties);
  public synchronized void raiseLinkAlarm();
  public java.lang.String toString();
  public void congestionEvent(java.util.EnumMap<com.telsis.jutils.enums.CongestionType, java.lang.Integer>);
  public void reloadConfiguration();
  public void stateEvent(com.telsis.jutils.enums.ActiveStates);
  public int compareTo(java.lang.Object);
  static com.telsis.jocp.OCPLinkManager access$000(com.telsis.jocp.OCPSystemManager$Link);
  static com.telsis.jocp.OCPLinkManager$LinkStates access$200(com.telsis.jocp.OCPSystemManager$Link);
  static java.net.InetAddress access$300(com.telsis.jocp.OCPSystemManager$Link);
  static java.net.InetAddress access$400(com.telsis.jocp.OCPSystemManager$Link);
  static boolean access$1200(com.telsis.jocp.OCPSystemManager$Link);
  static long access$1300(com.telsis.jocp.OCPSystemManager$Link);
  static boolean access$1202(com.telsis.jocp.OCPSystemManager$Link, boolean);
  static boolean access$1502(com.telsis.jocp.OCPSystemManager$Link, boolean);
}
Compiled from "OCPSystemManager.java"
public final class com.telsis.jocp.OCPSystemManager$SystemState extends java.lang.Enum<com.telsis.jocp.OCPSystemManager$SystemState> {
  public static final com.telsis.jocp.OCPSystemManager$SystemState STOPPED;
  public static final com.telsis.jocp.OCPSystemManager$SystemState CONNECTING;
  public static final com.telsis.jocp.OCPSystemManager$SystemState INCONSISTENT;
  public static final com.telsis.jocp.OCPSystemManager$SystemState MISSING_MASTER;
  public static final com.telsis.jocp.OCPSystemManager$SystemState MASTER_SLAVE;
  public static final com.telsis.jocp.OCPSystemManager$SystemState LOADSHARING;
  public static final com.telsis.jocp.OCPSystemManager$SystemState NO_LINKS;
  public static com.telsis.jocp.OCPSystemManager$SystemState[] values();
  public static com.telsis.jocp.OCPSystemManager$SystemState valueOf(java.lang.String);
  static {};
}
Compiled from "OCPSystemManager.java"
class com.telsis.jocp.OCPSystemManager$SystemThread implements java.lang.Runnable {
  final com.telsis.jocp.OCPSystemManager this$0;
  public com.telsis.jocp.OCPSystemManager$SystemThread(com.telsis.jocp.OCPSystemManager);
  public void run();
  public void shutdownThread();
  static java.lang.Thread access$100(com.telsis.jocp.OCPSystemManager$SystemThread);
}
Compiled from "OCPTelno.java"
public class com.telsis.jocp.OCPTelno {
  public static final byte MAX_TELNO_LENGTH;
  public static final int TELNO_BYTES_LENGTH;
  public com.telsis.jocp.OCPTelno(byte, byte[]);
  public com.telsis.jocp.OCPTelno(byte, byte, byte[]);
  public com.telsis.jocp.OCPTelno(byte[]);
  public final byte getTypePlan();
  public final void setTypePlan(byte);
  public final byte[] getTelno();
  public final void setTelno(byte, byte[]);
  public final byte getLength();
  public final byte[] getPackedDigits();
  public final byte[] getUnpackedDigits();
  public final int hashCode();
  public final boolean equals(java.lang.Object);
}
Compiled from "OCPUtil.java"
public final class com.telsis.jocp.OCPUtil {
  public static com.telsis.jocp.OCPTelno convertStringToOCPTelno(java.lang.String, com.telsis.jutils.signalling.TelnoType, boolean) throws java.lang.IllegalArgumentException;
  public static com.telsis.jocp.OCPTelno convertGenericTelnoToOCPTelno(com.telsis.jutils.signalling.GenericTelno);
  public static java.lang.String convertOCPTelnoToString(com.telsis.jocp.OCPTelno, boolean);
  public static com.telsis.jutils.signalling.GenericTelno convertOCPTelnoToGenericTelno(com.telsis.jocp.OCPTelno);
}
Compiled from "UnknownMessageTypeException.java"
public class com.telsis.jocp.UnknownMessageTypeException extends com.telsis.jocp.OCPException {
  public com.telsis.jocp.UnknownMessageTypeException();
}
Compiled from "Version.java"
public final class com.telsis.jocp.Version {
  public static final java.lang.String LIBRARY_NAME;
  public static final java.lang.String LIBRARY_VERSION;
  public com.telsis.jocp.Version();
  static {};
}
Compiled from "Abort.java"
public class com.telsis.jocp.messages.Abort extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short TASK_NOT_RUNNING;
  public com.telsis.jocp.messages.Abort(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.Abort();
  public com.telsis.jocp.messages.Abort(short);
  protected final void encode(java.nio.ByteBuffer);
  public final void setInvalidLegID(short);
  public final short getInvalidLegID();
  public final java.lang.String toString();
  static {};
}
Compiled from "AnswerCall.java"
public class com.telsis.jocp.messages.AnswerCall extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.AnswerCall(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.AnswerCall();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final short getAnsMode();
  public final void setAnsMode(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "AnswerResult.java"
public class com.telsis.jocp.messages.AnswerResult extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.AnswerResult(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.AnswerResult();
  protected final void encode(java.nio.ByteBuffer);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "AreYouMaster.java"
public class com.telsis.jocp.messages.AreYouMaster extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.AreYouMaster(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.AreYouMaster();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "AreYouMasterReply.java"
public class com.telsis.jocp.messages.AreYouMasterReply extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.AreYouMasterReply(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.AreYouMasterReply();
  protected final void encode(java.nio.ByteBuffer);
  public final int getScpID();
  public final void setScpID(int);
  public final short getMasterFlag();
  public final void setMasterFlag(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "BecomeMaster.java"
public class com.telsis.jocp.messages.BecomeMaster extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.BecomeMaster(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.BecomeMaster();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "CallCleardown.java"
public class com.telsis.jocp.messages.CallCleardown extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.CallCleardown(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.CallCleardown();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getRawCause();
  public final void setRawCause(byte);
  public final byte getCause();
  public final void setCause(byte);
  public final int getAnswerTime();
  public final void setAnswerTime(int);
  public final int getClearTime();
  public final void setClearTime(int);
  public final java.lang.String toString();
  static {};
}
Compiled from "CallCommandUnsupported.java"
public class com.telsis.jocp.messages.CallCommandUnsupported extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short REASON_COMMAND_CODE_UNSUPPORTED;
  public static final short REASON_LENGTH_UNSUPPORTED;
  public static final short REASON_ILLEGAL_COMMAND_USE;
  public static final short REASON_UNSUPPORTED_COMMAND_MODE;
  public static final short REASON_UNSUPPORTED_COMMAND_OPERATION;
  public static final short REASON_INVALID_FIELD_VALUE;
  public static final short REASON_UNEXPECTED_COMMAND_RECEIVED;
  public static final short REASON_CUSTOM_DATA_INVALID;
  public static final short REASON_CUSTOM_DATA_FIELD_OUT_OF_RANGE;
  public com.telsis.jocp.messages.CallCommandUnsupported(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.CallCommandUnsupported();
  protected final void encode(java.nio.ByteBuffer);
  public final short getReason();
  public final void setReason(short);
  public final int getValue();
  public final void setValue(int);
  public final short getNestedCommandCode();
  public final void setNestedCommandCode(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "CallControlMessage.java"
public abstract class com.telsis.jocp.messages.CallControlMessage extends com.telsis.jocp.LegacyOCPMessage {
  protected com.telsis.jocp.messages.CallControlMessage(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.messages.CallControlMessage(short);
}
Compiled from "CallGap.java"
public class com.telsis.jocp.messages.CallGap extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short DURATION_NETWORK_SPECIFIC;
  public static final short DURATION_INDEFINITE;
  public static final short DURATION_DISABLED;
  public com.telsis.jocp.messages.CallGap(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.CallGap();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDuration();
  public final void setDuration(short);
  public final short getInterval();
  public final void setInterval(short);
  public final int getMessageID();
  public final void setMessageID(int);
  public final short getReleaseCause();
  public final void setReleaseCause(short);
  public final byte getControlType();
  public final void setControlType(byte);
  public final byte getCriteriaType();
  public final void setCriteriaType(byte);
  public final byte[] getCriteria();
  public final void setCriteria(byte[]);
  public final java.lang.String toString();
  static {};
}
Compiled from "ChangeActiveLink.java"
public class com.telsis.jocp.messages.ChangeActiveLink extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.ChangeActiveLink(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.ChangeActiveLink();
  protected final void encode(java.nio.ByteBuffer);
  public final short getThisLink();
  public final void setThisLink(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "ChangeActiveLinkAck.java"
public class com.telsis.jocp.messages.ChangeActiveLinkAck extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.ChangeActiveLinkAck(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.ChangeActiveLinkAck();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "ConnectToResource.java"
public class com.telsis.jocp.messages.ConnectToResource extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.ConnectToResource(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.ConnectToResource();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final short getOrigLegID();
  public final void setOrigLegID(short);
  public final byte getFlags();
  public final void setFlags(byte);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final byte[] getRoutingPrefix();
  public final void setRoutingPrefix(byte[]);
  public final byte[] getCorrelationInfo();
  public final void setCorrelationInfo(byte[]);
  public final byte[] getClusterID();
  public final void setClusterID(byte[]);
  public final byte[] getPostFix();
  public final void setPostFix(byte[]);
  public final java.lang.String toString();
  static {};
}
Compiled from "ConnectToResourceAck.java"
public class com.telsis.jocp.messages.ConnectToResourceAck extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.ConnectToResourceAck(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.ConnectToResourceAck();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final byte getResult();
  public final void setResult(byte);
  public final byte getReason();
  public final void setReason(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "DeliverTo.java"
public class com.telsis.jocp.messages.DeliverTo extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short CLI_MODE_USE_NONE;
  public static final short CLI_MODE_USE_A_PARTY;
  public static final short CLI_MODE_USE_SPECIFIED;
  protected com.telsis.jocp.messages.DeliverTo(java.nio.ByteBuffer, int, int, boolean) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.DeliverTo(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.messages.DeliverTo(short);
  public com.telsis.jocp.messages.DeliverTo();
  protected void encode(java.nio.ByteBuffer, boolean);
  protected void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final short getOrigLegID();
  public final void setOrigLegID(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final short getCliMode();
  public final void setCliMode(short);
  public final short getTimeout();
  public final void setTimeout(short);
  public final byte getOutdialNoTypePlan();
  public final void setOutdialNoTypePlan(byte);
  public final byte[] getOutdialNo();
  public final void setOutdialNo(byte[]);
  public final com.telsis.jocp.OCPTelno getOutdialTelno();
  public final void setOutdialTelno(com.telsis.jocp.OCPTelno);
  public final byte getCliPresScreen();
  public final void setCliPresScreen(byte);
  public final byte getCliTypePlan();
  public final void setCliTypePlan(byte);
  public final byte[] getCliNo();
  public final void setCliNo(byte[]);
  public final com.telsis.jocp.OCPTelno getCLITelno();
  public final void setCLITelno(com.telsis.jocp.OCPTelno);
  public java.lang.String toString();
  static {};
}
Compiled from "DeliverToResult.java"
public class com.telsis.jocp.messages.DeliverToResult extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final byte FLAG_OUTDIAL_SUCCEEDED;
  public com.telsis.jocp.messages.DeliverToResult(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.DeliverToResult();
  protected final void encode(java.nio.ByteBuffer);
  public final short getOrigLegID();
  public final void setOrigLegID(short);
  public final byte getFlags();
  public final void setFlags(byte);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final byte getRawFailureReason();
  public final void setRawFailureReason(byte);
  public final byte getOutdialFailureReason();
  public final void setOutdialFailureReason(byte);
  public final int getTime();
  public final void setTime(int);
  public final java.lang.String toString();
  static {};
}
Compiled from "DeliverToWithFlags.java"
public class com.telsis.jocp.messages.DeliverToWithFlags extends com.telsis.jocp.messages.DeliverTo {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short CLI_MODE_USE_NONE;
  public static final short CLI_MODE_USE_A_PARTY;
  public static final short CLI_MODE_USE_SPECIFIED;
  public com.telsis.jocp.messages.DeliverToWithFlags(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.DeliverToWithFlags();
  protected final void encode(java.nio.ByteBuffer);
  public final int getOutdialFlags();
  public final void setOutdialFlags(int);
  public final java.lang.String toString();
  static {};
}
Compiled from "DisconnectFromResource.java"
public class com.telsis.jocp.messages.DisconnectFromResource extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.DisconnectFromResource(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.DisconnectFromResource();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final byte getFlags();
  public final void setFlags(byte);
  public final byte getReason();
  public final void setReason(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "DisconnectFromResourceAck.java"
public class com.telsis.jocp.messages.DisconnectFromResourceAck extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.DisconnectFromResourceAck(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.DisconnectFromResourceAck();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final byte getResult();
  public final void setResult(byte);
  public final byte getReason();
  public final void setReason(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "Heartbeat.java"
public class com.telsis.jocp.messages.Heartbeat extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.Heartbeat(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.Heartbeat();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "INAPContinue.java"
public class com.telsis.jocp.messages.INAPContinue extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.INAPContinue(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.INAPContinue();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "InitialDP.java"
public class com.telsis.jocp.messages.InitialDP extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  protected static final int MIN_LENGTH;
  protected static final int MAX_LENGTH;
  protected static final int OPT_LENGTH;
  protected static final int FIN_LENGTH;
  protected static final int CLI_LENGTH;
  protected static final int REDIR_LENGTH;
  public static final short CPC_UNUSED;
  protected short origLegID;
  protected short cpc;
  protected byte finTypePlan;
  protected byte[] fin;
  protected byte cliPresScreen;
  protected byte cliTypePlan;
  protected byte[] cli;
  protected int time;
  protected byte redirPresScreen;
  protected byte redirTypePlan;
  protected byte[] redir;
  protected com.telsis.jocp.messages.InitialDP(java.nio.ByteBuffer, int, int, int, boolean) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.InitialDP(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.messages.InitialDP(short);
  public com.telsis.jocp.messages.InitialDP();
  public com.telsis.jocp.messages.InitialDP(com.telsis.jocp.messages.InitialDP);
  protected com.telsis.jocp.messages.InitialDP(short, com.telsis.jocp.messages.InitialDP);
  protected void encode(java.nio.ByteBuffer, boolean);
  protected void encode(java.nio.ByteBuffer);
  protected void decodeMain(java.nio.ByteBuffer);
  protected void decodeRedir(java.nio.ByteBuffer);
  protected void encodeMain(java.nio.ByteBuffer);
  protected void encodeRedir(java.nio.ByteBuffer);
  public final short getOrigLegID();
  public final void setOrigLegID(short);
  public final short getCPC();
  public final void setCPC(short);
  public final byte getFINTypePlan();
  public final void setFINTypePlan(byte);
  public final byte[] getFIN();
  public final void setFIN(byte[]);
  public final com.telsis.jocp.OCPTelno getFINTelno();
  public final void setFINTelno(com.telsis.jocp.OCPTelno);
  public final byte getCLIPresScreen();
  public final void setCLIPresScreen(byte);
  public final byte getCLITypePlan();
  public final void setCLITypePlan(byte);
  public final byte[] getCLI();
  public final void setCLI(byte[]);
  public final com.telsis.jocp.OCPTelno getCLITelno();
  public final void setCLITelno(com.telsis.jocp.OCPTelno);
  public final int getOceanTime();
  public final void setOceanTime(int);
  public final boolean hasRedirectingNumber();
  public final byte getRedirectingPresScreen();
  public final void setRedirectingPresScreen(byte);
  public final byte getRedirectingTypePlan();
  public final void setRedirectingTypePlan(byte);
  public final byte[] getRedirectingNumber();
  public final void setRedirectingNumber(byte[]);
  public final com.telsis.jocp.OCPTelno getRedirectingTelno();
  public final void setRedirectingTelno(com.telsis.jocp.OCPTelno);
  public java.lang.String toString();
  static {};
}
Compiled from "InitialDPResponse.java"
public class com.telsis.jocp.messages.InitialDPResponse extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short FLAG_CLEARDOWN_NOTIFICATION;
  public com.telsis.jocp.messages.InitialDPResponse(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.InitialDPResponse();
  protected final void encode(java.nio.ByteBuffer);
  public final short getOrigLegID();
  public final void setOrigLegID(short);
  public final short getFlags();
  public final void setFlags(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "InitialDPServiceKey.java"
public class com.telsis.jocp.messages.InitialDPServiceKey extends com.telsis.jocp.messages.InitialDP {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  protected static final int MIN_LENGTH;
  protected static final int MAX_LENGTH;
  public static final short CPC_UNUSED;
  public com.telsis.jocp.messages.InitialDPServiceKey(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.InitialDPServiceKey();
  public com.telsis.jocp.messages.InitialDPServiceKey(com.telsis.jocp.messages.InitialDP);
  protected final void encode(java.nio.ByteBuffer);
  protected void decodeMain(java.nio.ByteBuffer);
  protected void encodeMain(java.nio.ByteBuffer);
  public final byte getMobileLocationTypePlan();
  public final void setMobileLocationTypePlan(byte);
  public final byte[] getMobileLocation();
  public final void setMobileLocation(byte[]);
  public final com.telsis.jocp.OCPTelno getMobileLocationTelno();
  public final void setMobileLocationTelno(com.telsis.jocp.OCPTelno);
  public final int getServiceKey();
  public final void setServiceKey(int);
  public final int getTime();
  public final void setTime(int);
  public final java.lang.String toString();
  static {};
}
Compiled from "InsufficientResources.java"
public class com.telsis.jocp.messages.InsufficientResources extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.InsufficientResources(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.InsufficientResources();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String toString();
  static {};
}
Compiled from "LinkCommandUnsupported.java"
public class com.telsis.jocp.messages.LinkCommandUnsupported extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final short REASON_COMMAND_CODE_UNSUPPORTED;
  public static final short REASON_LENGTH_UNSUPPORTED;
  public static final short REASON_ILLEGAL_COMMAND_USE;
  public static final short REASON_UNSUPPORTED_COMMAND_MODE;
  public static final short REASON_UNSUPPORTED_COMMAND_OPERATION;
  public static final short REASON_INVALID_FIELD_VALUE;
  public static final short REASON_UNEXPECTED_COMMAND_RECEIVED;
  public com.telsis.jocp.messages.LinkCommandUnsupported(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.LinkCommandUnsupported();
  public com.telsis.jocp.messages.LinkCommandUnsupported(short, short, int);
  protected final void encode(java.nio.ByteBuffer);
  public final short getReason();
  public final void setReason(short);
  public final int getValue();
  public final void setValue(int);
  public final short getNestedCommandCode();
  public final void setNestedCommandCode(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "LinkMessage.java"
public abstract class com.telsis.jocp.messages.LinkMessage extends com.telsis.jocp.LegacyOCPMessage {
  protected com.telsis.jocp.messages.LinkMessage(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.messages.LinkMessage(short);
}
Compiled from "PreferredUnit.java"
public class com.telsis.jocp.messages.PreferredUnit extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.PreferredUnit(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.PreferredUnit();
  protected final void encode(java.nio.ByteBuffer);
  public final short getFlags();
  public final void setFlags(short);
  public final byte[] getPreferredSCP();
  public final void setPreferredSCP(byte[]);
  public final byte[] getSecondarySCP();
  public final void setSecondarySCP(byte[]);
  public final java.lang.String toString();
  static {};
}
Compiled from "RequestCleardown.java"
public class com.telsis.jocp.messages.RequestCleardown extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final byte FLAG_NATIVE_REASON;
  public static final short LEG_ID_CLEAR_ALL;
  public com.telsis.jocp.messages.RequestCleardown(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.RequestCleardown();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getFlags();
  public final void setFlags(byte);
  public final byte getReason();
  public final void setReason(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "SetCDRExtendedFieldData.java"
public class com.telsis.jocp.messages.SetCDRExtendedFieldData extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final int DATA_LENGTH;
  public com.telsis.jocp.messages.SetCDRExtendedFieldData(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.SetCDRExtendedFieldData();
  protected final void encode(java.nio.ByteBuffer);
  public final short getDestLegID();
  public final void setDestLegID(short);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final short getRawDataLength();
  public final void setRawDataLength(short);
  public final byte[] getRawData();
  public final void setRawData(byte[]);
  public final byte[] getData();
  public final void setData(byte[]);
  public final java.lang.String toString();
  static {};
}
Compiled from "SetCDRExtendedFieldDataResult.java"
public class com.telsis.jocp.messages.SetCDRExtendedFieldDataResult extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.SetCDRExtendedFieldDataResult(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.SetCDRExtendedFieldDataResult();
  protected final void encode(java.nio.ByteBuffer);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final short getResult();
  public final void setResult(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "StatusRequest.java"
public class com.telsis.jocp.messages.StatusRequest extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public static final byte FLAG_UNIT_ENABLED;
  public static final byte FLAG_SET_TIME;
  public static final byte FLAG_MASTER;
  public static final byte CLUSTERID_MASTERSLAVE;
  public com.telsis.jocp.messages.StatusRequest(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.StatusRequest();
  protected final void encode(java.nio.ByteBuffer);
  public final short getYear();
  public final void setYear(short);
  public final short getMonth();
  public final void setMonth(short);
  public final short getDay();
  public final void setDay(short);
  public final short getHour();
  public final void setHour(short);
  public final short getMinute();
  public final void setMinute(short);
  public final short getSecond();
  public final void setSecond(short);
  public final int getUnitID();
  public final void setUnitID(int);
  public final byte getClusterID();
  public final void setClusterID(byte);
  public final byte getFlags();
  public final void setFlags(byte);
  public final java.lang.String toString();
  static {};
}
Compiled from "StatusResponse.java"
public class com.telsis.jocp.messages.StatusResponse extends com.telsis.jocp.messages.LinkMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.StatusResponse(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.StatusResponse();
  protected final void encode(java.nio.ByteBuffer);
  public final java.lang.String getUnitName();
  public final void setUnitName(java.lang.String);
  public final short getFlags();
  public final void setFlags(short);
  public final short getActiveCalls();
  public final void setActiveCalls(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "TaskActive.java"
public class com.telsis.jocp.messages.TaskActive extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.TaskActive(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.TaskActive();
  protected final void encode(java.nio.ByteBuffer);
  public final int getTaskIDToCheck();
  public final void setTaskIDToCheck(int);
  public final int getAssociatedTaskID();
  public final void setAssociatedTaskID(int);
  public final java.lang.String toString();
  static {};
}
Compiled from "TaskActiveResult.java"
public class com.telsis.jocp.messages.TaskActiveResult extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.TaskActiveResult(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.TaskActiveResult();
  protected final void encode(java.nio.ByteBuffer);
  public final int getTaskID();
  public final void setTaskID(int);
  public final short getResult();
  public final void setResult(short);
  public final java.lang.String toString();
  static {};
}
Compiled from "TelsisHandler.java"
public class com.telsis.jocp.messages.TelsisHandler extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  protected com.telsis.jocp.messages.TelsisHandler(java.nio.ByteBuffer, int, int, boolean) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.TelsisHandler(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected com.telsis.jocp.messages.TelsisHandler(short);
  public com.telsis.jocp.messages.TelsisHandler();
  protected final void decodePayload(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  protected void encode(java.nio.ByteBuffer, boolean);
  protected void encode(java.nio.ByteBuffer);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber getHandlerNumber();
  public final void setHandlerNumber(com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber);
  public final com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload getPayload();
  public final void setPayload(com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload);
  protected int getMaximumPayloadLength();
  public java.lang.String toString();
  static {};
}
Compiled from "TelsisHandlerResult.java"
public class com.telsis.jocp.messages.TelsisHandlerResult extends com.telsis.jocp.messages.CallControlMessage {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.TelsisHandlerResult(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.TelsisHandlerResult();
  protected final void encode(java.nio.ByteBuffer);
  public final byte getZipNumber();
  public final void setZipNumber(byte);
  public final <T extends com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload> T getPayload(java.lang.Class<T>);
  public final void setPayload(com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload);
  public final java.lang.String toString();
  static {};
}
Compiled from "TelsisHandlerWithParty.java"
public class com.telsis.jocp.messages.TelsisHandlerWithParty extends com.telsis.jocp.messages.TelsisHandler {
  public static final com.telsis.jocp.LegacyOCPMessageTypes TYPE;
  public com.telsis.jocp.messages.TelsisHandlerWithParty(java.nio.ByteBuffer) throws com.telsis.jocp.OCPException;
  public com.telsis.jocp.messages.TelsisHandlerWithParty();
  protected final void encode(java.nio.ByteBuffer);
  public final short getFwdLegID();
  public final void setFwdLegID(short);
  protected final int getMaximumPayloadLength();
  public final java.lang.String toString();
  static {};
}
Compiled from "GetUpdatedDigitsResultPayload.java"
public class com.telsis.jocp.messages.telsishandler.GetUpdatedDigitsResultPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public static final int SUCCESS;
  public static final int TIMEOUT;
  public com.telsis.jocp.messages.telsishandler.GetUpdatedDigitsResultPayload();
  public final int getResult();
  public final void setResult(int);
  public final byte[] getUpdatedDigits();
  public final void setUpdatedDigits(byte[]);
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
}
Compiled from "NumberPortabilityPayload.java"
public class com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload();
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
  public final boolean isNPDI();
  public final void setNPDI(boolean);
  public final boolean isRNGlobal();
  public final void setRNGlobal(boolean);
  public final java.lang.String getRN();
  public final void setRN(java.lang.String);
  public final java.lang.String getRNContext();
  public final void setRNContext(java.lang.String);
  public final boolean isCICGlobal();
  public final void setCICGlobal(boolean);
  public final java.lang.String getCIC();
  public final void setCIC(java.lang.String);
  public final java.lang.String getCICContext();
  public final void setCICContext(java.lang.String);
  static {};
}
Compiled from "NumberPortabilityPayload.java"
final class com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag extends java.lang.Enum<com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag> {
  public static final com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag NPDI;
  public static final com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag GLOBAL_RN;
  public static final com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag GLOBAL_CIC;
  public static com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag[] values();
  public static com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag valueOf(java.lang.String);
  static short access$000(com.telsis.jocp.messages.telsishandler.NumberPortabilityPayload$Flag);
  static {};
}
Compiled from "RunMapFromKeyPayload.java"
public class com.telsis.jocp.messages.telsishandler.RunMapFromKeyPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public com.telsis.jocp.messages.telsishandler.RunMapFromKeyPayload();
  public final int getServiceKey();
  public final void setServiceKey(int);
  public final short getNotifiedLength();
  public final void setNotifiedLength(short);
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
}
Compiled from "SetNumberPortabilityResultPayload.java"
public class com.telsis.jocp.messages.telsishandler.SetNumberPortabilityResultPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public static final int SUCCESS;
  public static final int INVALID_PARAMETERS;
  public com.telsis.jocp.messages.telsishandler.SetNumberPortabilityResultPayload();
  public final int getResult();
  public final void setResult(int);
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
}
Compiled from "TelsisHandlerNumber.java"
public final class com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber extends java.lang.Enum<com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber> {
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber GET_UPDATED_DIGITS;
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber RUN_MAP_FROM_KEY;
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber UPDATE_MATCHED_DIGITS;
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber FURNISH_CHARGING_INFORMATION;
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber GET_NP_PARAMETERS;
  public static final com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber SET_NP_PARAMETERS;
  public static com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber[] values();
  public static com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber valueOf(java.lang.String);
  public short getNumber();
  public java.lang.Class<? extends com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload> getPayloadClass();
  public static com.telsis.jocp.messages.telsishandler.TelsisHandlerNumber fromShort(short);
  static {};
}
Compiled from "TelsisHandlerPayload.java"
public interface com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public abstract short getLength();
  public abstract void encode(java.nio.ByteBuffer);
  public abstract void decode(java.nio.ByteBuffer);
}
Compiled from "UpdateMatchedDigitsPayload.java"
public class com.telsis.jocp.messages.telsishandler.UpdateMatchedDigitsPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public com.telsis.jocp.messages.telsishandler.UpdateMatchedDigitsPayload();
  public final int getMatchedDigits();
  public final void setMatchedDigits(int);
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
}
Compiled from "UpdateMatchedDigitsResultPayload.java"
public class com.telsis.jocp.messages.telsishandler.UpdateMatchedDigitsResultPayload implements com.telsis.jocp.messages.telsishandler.TelsisHandlerPayload {
  public static final int SUCCESS;
  public static final int ERROR;
  public com.telsis.jocp.messages.telsishandler.UpdateMatchedDigitsResultPayload();
  public final int getResult();
  public final void setResult(int);
  public final short getLength();
  public final void encode(java.nio.ByteBuffer);
  public final void decode(java.nio.ByteBuffer);
}
Compiled from "BasicOCPApp.java"
public final class com.telsis.jocp.sampleApp.BasicOCPApp {
  public static void main(java.lang.String[]);
  static org.apache.log4j.Logger access$000();
  static void access$100(com.telsis.jocp.OCPMessage);
  static {};
}
Compiled from "BasicOCPApp.java"
final class com.telsis.jocp.sampleApp.BasicOCPApp$1 implements com.telsis.jocp.OCPMessageHandler {
  com.telsis.jocp.sampleApp.BasicOCPApp$1();
  public void queueMessage(com.telsis.jocp.OCPMessage, com.telsis.jocp.OCPLink);
}
Compiled from "BasicOCPApp.java"
class com.telsis.jocp.sampleApp.BasicOCPApp$2 {
  static final int[] $SwitchMap$com$telsis$jocp$OCPMessageTypes;
  static {};
}
Compiled from "UtilitiesFactory.java"
public final class com.telsis.jutils.UtilitiesFactory {
  public static com.telsis.jutils.interfaces.UtilInterface getUtilInterface();
  static {};
}
Compiled from "ActiveStates.java"
public final class com.telsis.jutils.enums.ActiveStates extends java.lang.Enum<com.telsis.jutils.enums.ActiveStates> {
  public static final com.telsis.jutils.enums.ActiveStates ACTIVE;
  public static final com.telsis.jutils.enums.ActiveStates INACTIVE;
  public static final com.telsis.jutils.enums.ActiveStates GOING_INACTIVE_FORCED;
  public static final com.telsis.jutils.enums.ActiveStates GOING_INACTIVE_UNFORCED;
  public static com.telsis.jutils.enums.ActiveStates[] values();
  public static com.telsis.jutils.enums.ActiveStates valueOf(java.lang.String);
  static {};
}
Compiled from "CongestionType.java"
public final class com.telsis.jutils.enums.CongestionType extends java.lang.Enum<com.telsis.jutils.enums.CongestionType> {
  public static final com.telsis.jutils.enums.CongestionType OUT_OF_MEMORY;
  public static final com.telsis.jutils.enums.CongestionType HIGH_CPU_LOAD;
  public static final com.telsis.jutils.enums.CongestionType LICENCE_LIMIT_EXCEEDED;
  public static final com.telsis.jutils.enums.CongestionType BUFFERS_ALMOST_FULL;
  public static final com.telsis.jutils.enums.CongestionType BUFFERS_FULL;
  public static final com.telsis.jutils.enums.CongestionType BUFFER_OVERFLOW;
  public static final com.telsis.jutils.enums.CongestionType ALL_AVAILABLE_PORTS_IN_USE;
  public static final com.telsis.jutils.enums.CongestionType INCOMING_CALL_RATE_TOO_HIGH;
  public static final com.telsis.jutils.enums.CongestionType UNABLE_TO_PROCESS_NEW_MESSAGES;
  public static com.telsis.jutils.enums.CongestionType[] values();
  public static com.telsis.jutils.enums.CongestionType valueOf(java.lang.String);
  static {};
}
Compiled from "AlarmInterface.java"
public final class com.telsis.jutils.interfaces.AlarmInterface {
  public com.telsis.jutils.interfaces.AlarmInterface();
  public void registerAlarm(java.lang.String, java.lang.Class<?>, int, int);
  public void clearAllAlarms(com.telsis.jutils.interfaces.ServerEventNotifier);
  public void raiseAlarm(java.lang.String, java.lang.Object, int, java.lang.String[]);
  public void clearAlarm(java.lang.String, java.lang.Object);
  public void raiseAlarm(java.lang.String, com.telsis.jutils.interfaces.ServerEventNotifier, java.lang.String[]);
}
Compiled from "ServerEventNotifier.java"
public interface com.telsis.jutils.interfaces.ServerEventNotifier {
  public abstract void congestionEvent(java.util.EnumMap<com.telsis.jutils.enums.CongestionType, java.lang.Integer>);
  public abstract void reloadConfiguration();
  public abstract void stateEvent(com.telsis.jutils.enums.ActiveStates);
}
Compiled from "StatsInterface.java"
public final class com.telsis.jutils.interfaces.StatsInterface {
  public com.telsis.jutils.interfaces.StatsInterface();
  public void unregisterStat(java.lang.String);
  public void registerStat(java.lang.String, boolean);
  public void incrementStat(java.lang.String);
  public void decrementStat(java.lang.String);
}
Compiled from "UtilInterface.java"
public class com.telsis.jutils.interfaces.UtilInterface {
  public com.telsis.jutils.interfaces.UtilInterface();
  public final com.telsis.jutils.interfaces.StatsInterface getStatsInterface();
  public final com.telsis.jutils.interfaces.AlarmInterface getAlarmInterface();
  public final void register(com.telsis.jutils.interfaces.ServerEventNotifier, boolean);
  public final void setLibraryVersion(java.lang.String, java.lang.String);
}
Compiled from "GenericTelno.java"
public class com.telsis.jutils.signalling.GenericTelno {
  public com.telsis.jutils.signalling.GenericTelno();
  public com.telsis.jutils.signalling.GenericTelno(com.telsis.jutils.signalling.TelnoType, byte[]);
  public final com.telsis.jutils.signalling.TelnoType getType();
  public final void setType(com.telsis.jutils.signalling.TelnoType);
  public final byte[] getDigits();
  public final void setDigits(byte[]);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
Compiled from "SignallingUtil.java"
public final class com.telsis.jutils.signalling.SignallingUtil {
  public static final short Q763_ODD_EVEN_MASK;
  public static final short Q763_NATURE_OF_ADDRESS_MASK;
  public static final short Q763_NUMBER_INCOMPLETE_MASK;
  public static final short Q763_NUMBERING_PLAN_MASK;
  public static final short Q763_PRESENTATION_MASK;
  public static final short Q763_SCREENING_MASK;
  public static final short Q763_LENGTH_EVEN;
  public static final short Q763_LENGTH_ODD;
  public static final short Q763_NAI_SUBSCRIBER_NUMBER;
  public static final short Q763_NAI_UNKNOWN;
  public static final short Q763_NAI_NATIONAL;
  public static final short Q763_NAI_INTERNATIONAL;
  public static final short Q763_NAI_PISN_SPECIFIC;
  public static final short Q763_NUMBER_COMPLETE;
  public static final short Q763_NUMBER_INCOMPLETE;
  public static final short Q763_NUM_PLAN_UNKNOWN;
  public static final short Q763_NUM_PLAN_E164;
  public static final short Q763_NUM_PLAN_X121;
  public static final short Q763_NUM_PLAN_F69;
  public static final short Q763_NUM_PLAN_PRIVATE;
  public static final short Q763_NUM_PLAN_NATIONAL;
  public static final short Q763_PRESENTATION_ALLOWED;
  public static final short Q763_PRESENTATION_RESTRICTED;
  public static final short Q763_PRESENTATION_ADDRESS_UNAVAILABLE;
  public static final short Q763_SCREENING_USER_NOT_VERIFIED;
  public static final short Q763_SCREENING_USER_VERIFIED_PASSED;
  public static final short Q763_SCREENING_USER_VERIFIED_FAILED;
  public static final short Q763_SCREENING_NETWORK;
  public static final byte Q850_LOCATION_U;
  public static final byte Q850_LOCATION_LPN;
  public static final byte Q850_LOCATION_LN;
  public static final byte Q850_LOCATION_TN;
  public static final byte Q850_LOCATION_RLN;
  public static final byte Q850_LOCATION_RPN;
  public static final byte Q850_LOCATION_INTL;
  public static final byte Q850_LOCATION_BI;
  public static final byte Q850_CAUSE_UNALLOCATED_NUMBER;
  public static final byte Q850_CAUSE_NO_ROUTE_TO_SPECIFIED_TRANSIT_NETWORK;
  public static final byte Q850_CAUSE_NO_ROUTE_TO_DESTINATION;
  public static final byte Q850_CAUSE_SEND_SPECIAL_INFORMATION_TONE;
  public static final byte Q850_CAUSE_MISDIALLED_TRUNK_PREFIX;
  public static final byte Q850_CAUSE_CHANNEL_UNACCEPTABLE;
  public static final byte Q850_CAUSE_CALL_AWARDED_AND_DELIVERED_IN_ESTABLISHED_CHANNEL;
  public static final byte Q850_CAUSE_PREEMPTION;
  public static final byte Q850_CAUSE_PREEMPTION_CIRCUIT_RESERVED_FOR_REUSE;
  public static final byte Q850_CAUSE_QOR_PORTED_NUMBER;
  public static final byte Q850_CAUSE_NORMAL_CALL_CLEARING;
  public static final byte Q850_CAUSE_USER_BUSY;
  public static final byte Q850_CAUSE_NO_USER_RESPONDING;
  public static final byte Q850_CAUSE_NO_ANSWER_FROM_USER_USER_ALERTED;
  public static final byte Q850_CAUSE_SUBSCRIBER_ABSENT;
  public static final byte Q850_CAUSE_CALL_REJECTED;
  public static final byte Q850_CAUSE_NUMBER_CHANGED;
  public static final byte Q850_CAUSE_REDIRECTION_TO_NEW_DESTINATION;
  public static final byte Q850_CAUSE_CALL_REJECTED_DUE_TO_FEATURE_AT_DESTINATION;
  public static final byte Q850_CAUSE_EXCHANGE_ROUTING_ERROR;
  public static final byte Q850_CAUSE_NONSELECTED_USER_CLEARING;
  public static final byte Q850_CAUSE_DESTINATION_OUT_OF_ORDER;
  public static final byte Q850_CAUSE_INVALID_NUMBER_FORMAT_ADDRESS_INCOMPLETE;
  public static final byte Q850_CAUSE_FACILITY_REJECTED;
  public static final byte Q850_CAUSE_RESPONSE_TO_STATUS_ENQUIRY;
  public static final byte Q850_CAUSE_NORMAL_UNSPECIFIED;
  public static final byte Q850_CAUSE_NO_CIRCUIT_CHANNEL_AVAILABLE;
  public static final byte Q850_CAUSE_NETWORK_OUT_OF_ORDER;
  public static final byte Q850_CAUSE_PERMANENT_FRAME_MODE_CONNECTION_OUT_OF_SERVICE;
  public static final byte Q850_CAUSE_PERMANENT_FRAME_MODE_CONNECTION_OPERATIONAL;
  public static final byte Q850_CAUSE_TEMPORARY_FAILURE;
  public static final byte Q850_CAUSE_SWITCHING_EQUIPMENT_CONGESTION;
  public static final byte Q850_CAUSE_ACCESS_INFORMATION_DISCARDED;
  public static final byte Q850_CAUSE_REQUESTED_CIRCUIT_CHANNEL_NOT_AVAILABLE;
  public static final byte Q850_CAUSE_PRECEDENCE_CALL_BLOCKED;
  public static final byte Q850_CAUSE_RESOURCE_UNAVAILABLE_UNSPECIFIED;
  public static final byte Q850_CAUSE_QUALITY_OF_SERVICE_NOT_AVAILABLE;
  public static final byte Q850_CAUSE_REQUESTED_FACILITY_NOT_SUBSCRIBED;
  public static final byte Q850_CAUSE_OUTGOING_CALLS_BARRED_WITHIN_CUG;
  public static final byte Q850_CAUSE_INCOMING_CALLS_BARRED_WITHIN_CUG;
  public static final byte Q850_CAUSE_BEARER_CAPABILITY_NOT_AUTHORIZED;
  public static final byte Q850_CAUSE_BEARER_CAPABILITY_NOT_PRESENTLY_AVAILABLE;
  public static final byte Q850_CAUSE_INCONSISTENCY_IN_OUTGOING_INFORMATION_AND_CLASS;
  public static final byte Q850_CAUSE_SERVICE_OR_OPTION_NOT_AVAILABLE_UNSPECIFIED;
  public static final byte Q850_CAUSE_BEARER_CAPABILITY_NOT_IMPLEMENTED;
  public static final byte Q850_CAUSE_CHANNEL_TYPE_NOT_IMPLEMENTED;
  public static final byte Q850_CAUSE_REQUESTED_FACILITY_NOT_IMPLEMENTED;
  public static final byte Q850_CAUSE_ONLY_RESTRICTED_BEARER_CAPABILITY_AVAILABLE;
  public static final byte Q850_CAUSE_SERVICE_OR_OPTION_NOT_IMPLEMENTED_UNSPECIFIED;
  public static final byte Q850_CAUSE_INVALID_CALL_REFERENCE_VALUE;
  public static final byte Q850_CAUSE_IDENTIFIED_CHANNEL_DOES_NOT_EXIST;
  public static final byte Q850_CAUSE_SUSPENDED_CALL_EXISTS_BUT_THIS_IDENTITY_DOES_NOT;
  public static final byte Q850_CAUSE_CALL_IDENTITY_IN_USE;
  public static final byte Q850_CAUSE_NO_CALL_SUSPENDED;
  public static final byte Q850_CAUSE_THE_REQUESTED_CALL_IDENTITY_HAS_BEEN_CLEARED;
  public static final byte Q850_CAUSE_USER_NOT_MEMBER_OF_CUG;
  public static final byte Q850_CAUSE_INCOMPATIBLE_DESTINATION;
  public static final byte Q850_CAUSE_NON_EXISTENT_CUG;
  public static final byte Q850_CAUSE_INVALID_TRANSIT_NETWORK_SELECTION;
  public static final byte Q850_CAUSE_INVALID_MESSAGE_UNSPECIFIED;
  public static final byte Q850_CAUSE_MANDATORY_INFORMATION_ELEMENT_IS_MISSING;
  public static final byte Q850_CAUSE_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED;
  public static final byte Q850_CAUSE_MESSAGE_INCOMPATIBLE_OR_NONEXISTENT_OR_UNIMPLEMENTED;
  public static final byte Q850_CAUSE_INFORMATION_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED;
  public static final byte Q850_CAUSE_INVALID_INFORMATION_ELEMENT_CONTENTS;
  public static final byte Q850_CAUSE_MESSAGE_NOT_COMPATIBLE_WITH_CALL_STATE;
  public static final byte Q850_CAUSE_RECOVERY_ON_TIMER_EXPIRY;
  public static final byte Q850_CAUSE_PARAMETER_NON_EXISTENT_OR_NOT_IMPLEMENTED_PASSED_ON;
  public static final byte Q850_CAUSE_MESSAGE_WITH_UNRECOGNIZED_PARAMETER_DISCARDED;
  public static final byte Q850_CAUSE_PROTOCOL_ERROR_UNSPECIFIED;
  public static final byte Q850_CAUSE_INTERWORKING_UNSPECIFIED;
  public static final byte Q931_NUM_TYPE_MASK;
  public static final byte Q931_NUM_PLAN_MASK;
  public static final byte Q931_CLI_PRESENTATION_MASK;
  public static final byte Q931_CLI_SCREENING_MASK;
  public static final byte Q931_NUM_TYPE_UNKNOWN;
  public static final byte Q931_NUM_TYPE_INTERNATIONAL;
  public static final byte Q931_NUM_TYPE_NATIONAL;
  public static final byte Q931_NUM_TYPE_NETWORK_SPECIFIC;
  public static final byte Q931_NUM_TYPE_SUBSCRIBER;
  public static final byte Q931_NUM_TYPE_ABBREVIATED;
  public static final byte Q931_NUM_PLAN_UNKNOWN;
  public static final byte Q931_NUM_PLAN_E164;
  public static final byte Q931_NUM_PLAN_DATA;
  public static final byte Q931_NUM_PLAN_TELEX;
  public static final byte Q931_NUM_PLAN_NAT_STD;
  public static final byte Q931_NUM_PLAN_PRIVATE;
  public static final byte Q931_CLI_PRESENTATION_ALLOWED;
  public static final byte Q931_CLI_PRESENTATION_RESTRICTED;
  public static final byte Q931_CLI_NOT_AVAILABLE;
  public static final byte Q931_CLI_PRESENTATION_UNAVAIL_NETWORK;
  public static final byte Q931_CLI_USER_UNSCREENED;
  public static final byte Q931_CLI_USER_VERIFIED_PASS;
  public static final byte Q931_CLI_USER_VERIFIED_FAIL;
  public static final byte Q931_CLI_NETWORK;
  public static final int NO_SECONDS_1970_1980;
  public static com.telsis.jutils.signalling.GenericTelno convertStringToGenericTelno(java.lang.String, com.telsis.jutils.signalling.TelnoType, boolean);
  public static java.lang.String convertStringToTelephoneSubscriber(java.lang.String, com.telsis.jutils.signalling.TelnoType, java.lang.String, char, java.lang.String);
  public static java.lang.String convertStringToTelephoneSubscriber(java.lang.String, com.telsis.jutils.signalling.TelnoType, java.lang.String, char, java.lang.String, boolean);
  public static java.lang.String convertGenericTelnoToString(com.telsis.jutils.signalling.GenericTelno, boolean);
  public static java.lang.String convertGenericTelnoToTelephoneSubscriber(com.telsis.jutils.signalling.GenericTelno, boolean, java.lang.String, char, java.lang.String);
  public static java.lang.String convertGenericTelnoToTelephoneSubscriber(com.telsis.jutils.signalling.GenericTelno, boolean, java.lang.String, char, java.lang.String, boolean);
  public static byte convertTelnoTypeToQ931(com.telsis.jutils.signalling.TelnoType);
  public static short convertTelnoTypeToQ763(com.telsis.jutils.signalling.TelnoType);
  public static com.telsis.jutils.signalling.TelnoType convertQ931ToTelnoType(short);
  public static com.telsis.jutils.signalling.TelnoType convertQ763ToTelnoType(short);
  public static int getOceanTime();
  public static int getOceanTime(java.util.Date);
  public static java.util.Date getDate(int);
  static {};
}
Compiled from "SignallingUtil.java"
class com.telsis.jutils.signalling.SignallingUtil$1 {
  static final int[] $SwitchMap$com$telsis$jutils$signalling$TelnoType;
  static {};
}
Compiled from "TelnoType.java"
public final class com.telsis.jutils.signalling.TelnoType extends java.lang.Enum<com.telsis.jutils.signalling.TelnoType> {
  public static final com.telsis.jutils.signalling.TelnoType UNKNOWN;
  public static final com.telsis.jutils.signalling.TelnoType INTERNATIONAL;
  public static final com.telsis.jutils.signalling.TelnoType PRIVATE;
  public static final com.telsis.jutils.signalling.TelnoType UNKNOWN_TELEPHONY;
  public static com.telsis.jutils.signalling.TelnoType[] values();
  public static com.telsis.jutils.signalling.TelnoType valueOf(java.lang.String);
  static {};
}
Compiled from "GenericWatchdog.java"
public interface com.telsis.jutils.watchdog.GenericWatchdog {
  public abstract void start();
  public abstract void stop();
  public abstract void pat();
}
Compiled from "NullGenericWatchdog.java"
public class com.telsis.jutils.watchdog.NullGenericWatchdog implements com.telsis.jutils.watchdog.GenericWatchdog {
  public com.telsis.jutils.watchdog.NullGenericWatchdog();
  public void start();
  public void stop();
  public void pat();
}
